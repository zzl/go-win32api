package win32

import "unsafe"
import "syscall"

type HPROPSHEETPAGE = uintptr
type HIMAGELIST = uintptr
type HSYNTHETICPOINTERDEVICE = uintptr
type HTREEITEM = uintptr
type HDSA = uintptr
type HDPA = uintptr

const (
	TVI_ROOT HTREEITEM = ^HTREEITEM(65535)
	TVI_FIRST HTREEITEM = ^HTREEITEM(65534)
	TVI_LAST HTREEITEM = ^HTREEITEM(65533)
	TVI_SORT HTREEITEM = ^HTREEITEM(65532)
	BCN_FIRST uint32 = 4294966046
	EM_SCROLLCARET uint32 = 183
	EM_SETLIMITTEXT uint32 = 197
	EM_GETLIMITTEXT uint32 = 213
	EM_POSFROMCHAR uint32 = 214
	EM_CHARFROMPOS uint32 = 215
	CtlFirst uint32 = 1024
	CtlLast uint32 = 1279
	Psh1 uint32 = 1024
	Psh2 uint32 = 1025
	Psh3 uint32 = 1026
	Psh4 uint32 = 1027
	Psh5 uint32 = 1028
	Psh6 uint32 = 1029
	Psh7 uint32 = 1030
	Psh8 uint32 = 1031
	Psh9 uint32 = 1032
	Psh10 uint32 = 1033
	Psh11 uint32 = 1034
	Psh12 uint32 = 1035
	Psh13 uint32 = 1036
	Psh14 uint32 = 1037
	Psh15 uint32 = 1038
	PshHelp uint32 = 1038
	Psh16 uint32 = 1039
	Chx1 uint32 = 1040
	Chx2 uint32 = 1041
	Chx3 uint32 = 1042
	Chx4 uint32 = 1043
	Chx5 uint32 = 1044
	Chx6 uint32 = 1045
	Chx7 uint32 = 1046
	Chx8 uint32 = 1047
	Chx9 uint32 = 1048
	Chx10 uint32 = 1049
	Chx11 uint32 = 1050
	Chx12 uint32 = 1051
	Chx13 uint32 = 1052
	Chx14 uint32 = 1053
	Chx15 uint32 = 1054
	Chx16 uint32 = 1055
	Rad1 uint32 = 1056
	Rad2 uint32 = 1057
	Rad3 uint32 = 1058
	Rad4 uint32 = 1059
	Rad5 uint32 = 1060
	Rad6 uint32 = 1061
	Rad7 uint32 = 1062
	Rad8 uint32 = 1063
	Rad9 uint32 = 1064
	Rad10 uint32 = 1065
	Rad11 uint32 = 1066
	Rad12 uint32 = 1067
	Rad13 uint32 = 1068
	Rad14 uint32 = 1069
	Rad15 uint32 = 1070
	Rad16 uint32 = 1071
	Grp1 uint32 = 1072
	Grp2 uint32 = 1073
	Grp3 uint32 = 1074
	Grp4 uint32 = 1075
	Frm1 uint32 = 1076
	Frm2 uint32 = 1077
	Frm3 uint32 = 1078
	Frm4 uint32 = 1079
	Rct1 uint32 = 1080
	Rct2 uint32 = 1081
	Rct3 uint32 = 1082
	Rct4 uint32 = 1083
	Ico1 uint32 = 1084
	Ico2 uint32 = 1085
	Ico3 uint32 = 1086
	Ico4 uint32 = 1087
	Stc1 uint32 = 1088
	Stc2 uint32 = 1089
	Stc3 uint32 = 1090
	Stc4 uint32 = 1091
	Stc5 uint32 = 1092
	Stc6 uint32 = 1093
	Stc7 uint32 = 1094
	Stc8 uint32 = 1095
	Stc9 uint32 = 1096
	Stc10 uint32 = 1097
	Stc11 uint32 = 1098
	Stc12 uint32 = 1099
	Stc13 uint32 = 1100
	Stc14 uint32 = 1101
	Stc15 uint32 = 1102
	Stc16 uint32 = 1103
	Stc17 uint32 = 1104
	Stc18 uint32 = 1105
	Stc19 uint32 = 1106
	Stc20 uint32 = 1107
	Stc21 uint32 = 1108
	Stc22 uint32 = 1109
	Stc23 uint32 = 1110
	Stc24 uint32 = 1111
	Stc25 uint32 = 1112
	Stc26 uint32 = 1113
	Stc27 uint32 = 1114
	Stc28 uint32 = 1115
	Stc29 uint32 = 1116
	Stc30 uint32 = 1117
	Stc31 uint32 = 1118
	Stc32 uint32 = 1119
	Lst1 uint32 = 1120
	Lst2 uint32 = 1121
	Lst3 uint32 = 1122
	Lst4 uint32 = 1123
	Lst5 uint32 = 1124
	Lst6 uint32 = 1125
	Lst7 uint32 = 1126
	Lst8 uint32 = 1127
	Lst9 uint32 = 1128
	Lst10 uint32 = 1129
	Lst11 uint32 = 1130
	Lst12 uint32 = 1131
	Lst13 uint32 = 1132
	Lst14 uint32 = 1133
	Lst15 uint32 = 1134
	Lst16 uint32 = 1135
	Cmb1 uint32 = 1136
	Cmb2 uint32 = 1137
	Cmb3 uint32 = 1138
	Cmb4 uint32 = 1139
	Cmb5 uint32 = 1140
	Cmb6 uint32 = 1141
	Cmb7 uint32 = 1142
	Cmb8 uint32 = 1143
	Cmb9 uint32 = 1144
	Cmb10 uint32 = 1145
	Cmb11 uint32 = 1146
	Cmb12 uint32 = 1147
	Cmb13 uint32 = 1148
	Cmb14 uint32 = 1149
	Cmb15 uint32 = 1150
	Cmb16 uint32 = 1151
	Edt1 uint32 = 1152
	Edt2 uint32 = 1153
	Edt3 uint32 = 1154
	Edt4 uint32 = 1155
	Edt5 uint32 = 1156
	Edt6 uint32 = 1157
	Edt7 uint32 = 1158
	Edt8 uint32 = 1159
	Edt9 uint32 = 1160
	Edt10 uint32 = 1161
	Edt11 uint32 = 1162
	Edt12 uint32 = 1163
	Edt13 uint32 = 1164
	Edt14 uint32 = 1165
	Edt15 uint32 = 1166
	Edt16 uint32 = 1167
	Scr1 uint32 = 1168
	Scr2 uint32 = 1169
	Scr3 uint32 = 1170
	Scr4 uint32 = 1171
	Scr5 uint32 = 1172
	Scr6 uint32 = 1173
	Scr7 uint32 = 1174
	Scr8 uint32 = 1175
	Ctl1 uint32 = 1184
	FILEOPENORD uint32 = 1536
	MULTIFILEOPENORD uint32 = 1537
	PRINTDLGORD uint32 = 1538
	PRNSETUPDLGORD uint32 = 1539
	FINDDLGORD uint32 = 1540
	REPLACEDLGORD uint32 = 1541
	FONTDLGORD uint32 = 1542
	FORMATDLGORD31 uint32 = 1543
	FORMATDLGORD30 uint32 = 1544
	RUNDLGORD uint32 = 1545
	PAGESETUPDLGORD uint32 = 1546
	NEWFILEOPENORD uint32 = 1547
	PRINTDLGEXORD uint32 = 1549
	PAGESETUPDLGORDMOTIF uint32 = 1550
	COLORMGMTDLGORD uint32 = 1551
	NEWFILEOPENV2ORD uint32 = 1552
	NEWFILEOPENV3ORD uint32 = 1553
	NEWFORMATDLGWITHLINK uint32 = 1591
	IDC_MANAGE_LINK uint32 = 1592
	WM_CTLCOLOR uint32 = 25
	ILDRF_IMAGELOWQUALITY uint32 = 1
	ILDRF_OVERLAYLOWQUALITY uint32 = 16
	ILR_DEFAULT uint32 = 0
	ILR_HORIZONTAL_LEFT uint32 = 0
	ILR_HORIZONTAL_CENTER uint32 = 1
	ILR_HORIZONTAL_RIGHT uint32 = 2
	ILR_VERTICAL_TOP uint32 = 0
	ILR_VERTICAL_CENTER uint32 = 16
	ILR_VERTICAL_BOTTOM uint32 = 32
	ILR_SCALE_CLIP uint32 = 0
	ILR_SCALE_ASPECTRATIO uint32 = 256
	ILGOS_ALWAYS uint32 = 0
	ILGOS_FROMSTANDBY uint32 = 1
	ILFIP_ALWAYS uint32 = 0
	ILFIP_FROMSTANDBY uint32 = 1
	ILDI_PURGE uint32 = 1
	ILDI_STANDBY uint32 = 2
	ILDI_RESETACCESS uint32 = 4
	ILDI_QUERYACCESS uint32 = 8
	MAXPROPPAGES uint32 = 100
	PSP_DEFAULT uint32 = 0
	PSP_DLGINDIRECT uint32 = 1
	PSP_USEHICON uint32 = 2
	PSP_USEICONID uint32 = 4
	PSP_USETITLE uint32 = 8
	PSP_RTLREADING uint32 = 16
	PSP_HASHELP uint32 = 32
	PSP_USEREFPARENT uint32 = 64
	PSP_USECALLBACK uint32 = 128
	PSP_PREMATURE uint32 = 1024
	PSP_HIDEHEADER uint32 = 2048
	PSP_USEHEADERTITLE uint32 = 4096
	PSP_USEHEADERSUBTITLE uint32 = 8192
	PSP_USEFUSIONCONTEXT uint32 = 16384
	PSH_DEFAULT uint32 = 0
	PSH_PROPTITLE uint32 = 1
	PSH_USEHICON uint32 = 2
	PSH_USEICONID uint32 = 4
	PSH_PROPSHEETPAGE uint32 = 8
	PSH_WIZARDHASFINISH uint32 = 16
	PSH_WIZARD uint32 = 32
	PSH_USEPSTARTPAGE uint32 = 64
	PSH_NOAPPLYNOW uint32 = 128
	PSH_USECALLBACK uint32 = 256
	PSH_HASHELP uint32 = 512
	PSH_MODELESS uint32 = 1024
	PSH_RTLREADING uint32 = 2048
	PSH_WIZARDCONTEXTHELP uint32 = 4096
	PSH_WIZARD97 uint32 = 8192
	PSH_WATERMARK uint32 = 32768
	PSH_USEHBMWATERMARK uint32 = 65536
	PSH_USEHPLWATERMARK uint32 = 131072
	PSH_STRETCHWATERMARK uint32 = 262144
	PSH_HEADER uint32 = 524288
	PSH_USEHBMHEADER uint32 = 1048576
	PSH_USEPAGELANG uint32 = 2097152
	PSH_WIZARD_LITE uint32 = 4194304
	PSH_NOCONTEXTHELP uint32 = 33554432
	PSH_AEROWIZARD uint32 = 16384
	PSH_RESIZABLE uint32 = 67108864
	PSH_HEADERBITMAP uint32 = 134217728
	PSH_NOMARGIN uint32 = 268435456
	PSCB_INITIALIZED uint32 = 1
	PSCB_PRECREATE uint32 = 2
	PSCB_BUTTONPRESSED uint32 = 3
	PSNRET_NOERROR uint32 = 0
	PSNRET_INVALID uint32 = 1
	PSNRET_INVALID_NOCHANGEPAGE uint32 = 2
	PSNRET_MESSAGEHANDLED uint32 = 3
	PSM_SETCURSEL uint32 = 1125
	PSM_REMOVEPAGE uint32 = 1126
	PSM_ADDPAGE uint32 = 1127
	PSM_CHANGED uint32 = 1128
	PSM_RESTARTWINDOWS uint32 = 1129
	PSM_REBOOTSYSTEM uint32 = 1130
	PSM_CANCELTOCLOSE uint32 = 1131
	PSM_QUERYSIBLINGS uint32 = 1132
	PSM_UNCHANGED uint32 = 1133
	PSM_APPLY uint32 = 1134
	PSM_SETTITLEA uint32 = 1135
	PSM_SETTITLEW uint32 = 1144
	PSM_SETTITLE uint32 = 1144
	PSM_SETWIZBUTTONS uint32 = 1136
	PSWIZB_BACK uint32 = 1
	PSWIZB_NEXT uint32 = 2
	PSWIZB_FINISH uint32 = 4
	PSWIZB_DISABLEDFINISH uint32 = 8
	PSWIZBF_ELEVATIONREQUIRED uint32 = 1
	PSWIZB_CANCEL uint32 = 16
	PSM_PRESSBUTTON uint32 = 1137
	PSBTN_BACK uint32 = 0
	PSBTN_NEXT uint32 = 1
	PSBTN_FINISH uint32 = 2
	PSBTN_OK uint32 = 3
	PSBTN_APPLYNOW uint32 = 4
	PSBTN_CANCEL uint32 = 5
	PSBTN_HELP uint32 = 6
	PSBTN_MAX uint32 = 6
	PSM_SETCURSELID uint32 = 1138
	PSM_SETFINISHTEXTA uint32 = 1139
	PSM_SETFINISHTEXTW uint32 = 1145
	PSM_SETFINISHTEXT uint32 = 1145
	PSM_GETTABCONTROL uint32 = 1140
	PSM_ISDIALOGMESSAGE uint32 = 1141
	PSM_GETCURRENTPAGEHWND uint32 = 1142
	PSM_INSERTPAGE uint32 = 1143
	PSM_SETHEADERTITLEA uint32 = 1149
	PSM_SETHEADERTITLEW uint32 = 1150
	PSM_SETHEADERTITLE uint32 = 1150
	PSM_SETHEADERSUBTITLEA uint32 = 1151
	PSM_SETHEADERSUBTITLEW uint32 = 1152
	PSM_SETHEADERSUBTITLE uint32 = 1152
	PSM_HWNDTOINDEX uint32 = 1153
	PSM_INDEXTOHWND uint32 = 1154
	PSM_PAGETOINDEX uint32 = 1155
	PSM_INDEXTOPAGE uint32 = 1156
	PSM_IDTOINDEX uint32 = 1157
	PSM_INDEXTOID uint32 = 1158
	PSM_GETRESULT uint32 = 1159
	PSM_RECALCPAGESIZES uint32 = 1160
	PSM_SETNEXTTEXTW uint32 = 1161
	PSM_SETNEXTTEXT uint32 = 1161
	PSWIZB_SHOW uint32 = 0
	PSWIZB_RESTORE uint32 = 1
	PSM_SHOWWIZBUTTONS uint32 = 1162
	PSM_ENABLEWIZBUTTONS uint32 = 1163
	PSM_SETBUTTONTEXTW uint32 = 1164
	PSM_SETBUTTONTEXT uint32 = 1164
	ID_PSRESTARTWINDOWS uint32 = 2
	WIZ_CXDLG uint32 = 276
	WIZ_CYDLG uint32 = 140
	WIZ_CXBMP uint32 = 80
	WIZ_BODYX uint32 = 92
	WIZ_BODYCX uint32 = 184
	PROP_SM_CXDLG uint32 = 212
	PROP_SM_CYDLG uint32 = 188
	PROP_MED_CXDLG uint32 = 227
	PROP_MED_CYDLG uint32 = 215
	PROP_LG_CXDLG uint32 = 252
	PROP_LG_CYDLG uint32 = 218
	DA_LAST uint32 = 2147483647
	DA_ERR int32 = -1
	DSA_APPEND uint32 = 2147483647
	DSA_ERR int32 = -1
	DPAM_SORTED uint32 = 1
	DPAM_NORMAL uint32 = 2
	DPAM_UNION uint32 = 4
	DPAM_INTERSECT uint32 = 8
	DPAS_SORTED uint32 = 1
	DPAS_INSERTBEFORE uint32 = 2
	DPAS_INSERTAFTER uint32 = 4
	DPA_APPEND uint32 = 2147483647
	DPA_ERR int32 = -1
	MAX_THEMECOLOR uint32 = 64
	MAX_THEMESIZE uint32 = 64
	DTBG_CLIPRECT uint32 = 1
	DTBG_DRAWSOLID uint32 = 2
	DTBG_OMITBORDER uint32 = 4
	DTBG_OMITCONTENT uint32 = 8
	DTBG_COMPUTINGREGION uint32 = 16
	DTBG_MIRRORDC uint32 = 32
	DTBG_NOMIRROR uint32 = 64
	DTT_GRAYED uint32 = 1
	DTT_FLAGS2VALIDBITS uint32 = 1
	HTTB_BACKGROUNDSEG uint32 = 0
	HTTB_FIXEDBORDER uint32 = 2
	HTTB_CAPTION uint32 = 4
	HTTB_RESIZINGBORDER_LEFT uint32 = 16
	HTTB_RESIZINGBORDER_TOP uint32 = 32
	HTTB_RESIZINGBORDER_RIGHT uint32 = 64
	HTTB_RESIZINGBORDER_BOTTOM uint32 = 128
	HTTB_SIZINGTEMPLATE uint32 = 256
	HTTB_SYSTEMSIZINGMARGINS uint32 = 512
	MAX_INTLIST_COUNT uint32 = 402
	ETDT_DISABLE uint32 = 1
	ETDT_ENABLE uint32 = 2
	ETDT_USETABTEXTURE uint32 = 4
	ETDT_USEAEROWIZARDTABTEXTURE uint32 = 8
	SZ_THDOCPROP_DISPLAYNAME string = "DisplayName"
	SZ_THDOCPROP_CANONICALNAME string = "ThemeName"
	SZ_THDOCPROP_TOOLTIP string = "ToolTip"
	SZ_THDOCPROP_AUTHOR string = "author"
	WTNCA_NODRAWCAPTION uint32 = 1
	WTNCA_NODRAWICON uint32 = 2
	WTNCA_NOSYSMENU uint32 = 4
	WTNCA_NOMIRRORHELP uint32 = 8
	ODT_HEADER uint32 = 100
	LVM_FIRST uint32 = 4096
	TV_FIRST uint32 = 4352
	HDM_FIRST uint32 = 4608
	TCM_FIRST uint32 = 4864
	PGM_FIRST uint32 = 5120
	ECM_FIRST uint32 = 5376
	BCM_FIRST uint32 = 5632
	CBM_FIRST uint32 = 5888
	CCM_FIRST uint32 = 8192
	CCM_LAST uint32 = 8704
	CCM_SETBKCOLOR uint32 = 8193
	CCM_SETCOLORSCHEME uint32 = 8194
	CCM_GETCOLORSCHEME uint32 = 8195
	CCM_GETDROPTARGET uint32 = 8196
	CCM_SETUNICODEFORMAT uint32 = 8197
	CCM_GETUNICODEFORMAT uint32 = 8198
	COMCTL32_VERSION uint32 = 6
	CCM_SETVERSION uint32 = 8199
	CCM_GETVERSION uint32 = 8200
	CCM_SETNOTIFYWINDOW uint32 = 8201
	CCM_SETWINDOWTHEME uint32 = 8203
	CCM_DPISCALE uint32 = 8204
	INFOTIPSIZE uint32 = 1024
	MSGF_COMMCTRL_BEGINDRAG uint32 = 16896
	MSGF_COMMCTRL_SIZEHEADER uint32 = 16897
	MSGF_COMMCTRL_DRAGSELECT uint32 = 16898
	MSGF_COMMCTRL_TOOLBARCUST uint32 = 16899
	CDRF_DODEFAULT uint32 = 0
	CDRF_NEWFONT uint32 = 2
	CDRF_SKIPDEFAULT uint32 = 4
	CDRF_DOERASE uint32 = 8
	CDRF_SKIPPOSTPAINT uint32 = 256
	CDRF_NOTIFYPOSTPAINT uint32 = 16
	CDRF_NOTIFYITEMDRAW uint32 = 32
	CDRF_NOTIFYSUBITEMDRAW uint32 = 32
	CDRF_NOTIFYPOSTERASE uint32 = 64
	CDDS_POSTERASE uint32 = 4
	CDDS_ITEM uint32 = 65536
	CDIS_SELECTED uint32 = 1
	CDIS_GRAYED uint32 = 2
	CDIS_DISABLED uint32 = 4
	CDIS_CHECKED uint32 = 8
	CDIS_FOCUS uint32 = 16
	CDIS_DEFAULT uint32 = 32
	CDIS_HOT uint32 = 64
	CDIS_MARKED uint32 = 128
	CDIS_INDETERMINATE uint32 = 256
	CDIS_SHOWKEYBOARDCUES uint32 = 512
	CDIS_NEARHOT uint32 = 1024
	CDIS_OTHERSIDEHOT uint32 = 2048
	CDIS_DROPHILITED uint32 = 4096
	NM_GETCUSTOMSPLITRECT uint32 = 4294966049
	CLR_NONE int32 = -1
	CLR_DEFAULT int32 = -16777216
	ILD_TRANSPARENT uint32 = 1
	ILD_IMAGE uint32 = 32
	ILD_ROP uint32 = 64
	ILD_BLEND25 uint32 = 2
	ILD_OVERLAYMASK uint32 = 3840
	ILD_PRESERVEALPHA uint32 = 4096
	ILD_SCALE uint32 = 8192
	ILD_DPISCALE uint32 = 16384
	ILD_ASYNC uint32 = 32768
	CLR_HILIGHT int32 = -16777216
	ILS_NORMAL uint32 = 0
	ILS_GLOW uint32 = 1
	ILS_SHADOW uint32 = 2
	ILS_SATURATE uint32 = 4
	ILS_ALPHA uint32 = 8
	ILGT_NORMAL uint32 = 0
	ILGT_ASYNC uint32 = 1
	ILP_NORMAL uint32 = 0
	ILP_DOWNLEVEL uint32 = 1
	WC_HEADERA string = "SysHeader32"
	WC_HEADERW string = "SysHeader32"
	WC_HEADER string = "SysHeader32"
	HDS_HORZ uint32 = 0
	HDS_BUTTONS uint32 = 2
	HDS_HOTTRACK uint32 = 4
	HDS_HIDDEN uint32 = 8
	HDS_DRAGDROP uint32 = 64
	HDS_FULLDRAG uint32 = 128
	HDS_FILTERBAR uint32 = 256
	HDS_FLAT uint32 = 512
	HDS_CHECKBOXES uint32 = 1024
	HDS_NOSIZING uint32 = 2048
	HDS_OVERFLOW uint32 = 4096
	HDFT_ISSTRING uint32 = 0
	HDFT_ISNUMBER uint32 = 1
	HDFT_ISDATE uint32 = 2
	HDFT_HASNOVALUE uint32 = 32768
	HDF_LEFT uint32 = 0
	HDF_RIGHT uint32 = 1
	HDF_CENTER uint32 = 2
	HDF_JUSTIFYMASK uint32 = 3
	HDF_RTLREADING uint32 = 4
	HDF_BITMAP uint32 = 8192
	HDF_STRING uint32 = 16384
	HDF_OWNERDRAW uint32 = 32768
	HDF_IMAGE uint32 = 2048
	HDF_BITMAP_ON_RIGHT uint32 = 4096
	HDF_SORTUP uint32 = 1024
	HDF_SORTDOWN uint32 = 512
	HDF_CHECKBOX uint32 = 64
	HDF_CHECKED uint32 = 128
	HDF_FIXEDWIDTH uint32 = 256
	HDF_SPLITBUTTON uint32 = 16777216
	HDIS_FOCUSED uint32 = 1
	HDM_GETITEMCOUNT uint32 = 4608
	HDM_INSERTITEMA uint32 = 4609
	HDM_INSERTITEMW uint32 = 4618
	HDM_INSERTITEM uint32 = 4618
	HDM_DELETEITEM uint32 = 4610
	HDM_GETITEMA uint32 = 4611
	HDM_GETITEMW uint32 = 4619
	HDM_GETITEM uint32 = 4619
	HDM_SETITEMA uint32 = 4612
	HDM_SETITEMW uint32 = 4620
	HDM_SETITEM uint32 = 4620
	HDM_LAYOUT uint32 = 4613
	HHT_NOWHERE uint32 = 1
	HHT_ONHEADER uint32 = 2
	HHT_ONDIVIDER uint32 = 4
	HHT_ONDIVOPEN uint32 = 8
	HHT_ONFILTER uint32 = 16
	HHT_ONFILTERBUTTON uint32 = 32
	HHT_ABOVE uint32 = 256
	HHT_BELOW uint32 = 512
	HHT_TORIGHT uint32 = 1024
	HHT_TOLEFT uint32 = 2048
	HHT_ONITEMSTATEICON uint32 = 4096
	HHT_ONDROPDOWN uint32 = 8192
	HHT_ONOVERFLOW uint32 = 16384
	HDSIL_NORMAL uint32 = 0
	HDSIL_STATE uint32 = 1
	HDM_HITTEST uint32 = 4614
	HDM_GETITEMRECT uint32 = 4615
	HDM_SETIMAGELIST uint32 = 4616
	HDM_GETIMAGELIST uint32 = 4617
	HDM_ORDERTOINDEX uint32 = 4623
	HDM_CREATEDRAGIMAGE uint32 = 4624
	HDM_GETORDERARRAY uint32 = 4625
	HDM_SETORDERARRAY uint32 = 4626
	HDM_SETHOTDIVIDER uint32 = 4627
	HDM_SETBITMAPMARGIN uint32 = 4628
	HDM_GETBITMAPMARGIN uint32 = 4629
	HDM_SETUNICODEFORMAT uint32 = 8197
	HDM_GETUNICODEFORMAT uint32 = 8198
	HDM_SETFILTERCHANGETIMEOUT uint32 = 4630
	HDM_EDITFILTER uint32 = 4631
	HDM_CLEARFILTER uint32 = 4632
	HDM_GETITEMDROPDOWNRECT uint32 = 4633
	HDM_GETOVERFLOWRECT uint32 = 4634
	HDM_GETFOCUSEDITEM uint32 = 4635
	HDM_SETFOCUSEDITEM uint32 = 4636
	TOOLBARCLASSNAMEW string = "ToolbarWindow32"
	TOOLBARCLASSNAMEA string = "ToolbarWindow32"
	TOOLBARCLASSNAME string = "ToolbarWindow32"
	CMB_MASKED uint32 = 2
	TBSTATE_CHECKED uint32 = 1
	TBSTATE_PRESSED uint32 = 2
	TBSTATE_ENABLED uint32 = 4
	TBSTATE_HIDDEN uint32 = 8
	TBSTATE_INDETERMINATE uint32 = 16
	TBSTATE_WRAP uint32 = 32
	TBSTATE_ELLIPSES uint32 = 64
	TBSTATE_MARKED uint32 = 128
	TBSTYLE_BUTTON uint32 = 0
	TBSTYLE_SEP uint32 = 1
	TBSTYLE_CHECK uint32 = 2
	TBSTYLE_GROUP uint32 = 4
	TBSTYLE_DROPDOWN uint32 = 8
	TBSTYLE_AUTOSIZE uint32 = 16
	TBSTYLE_NOPREFIX uint32 = 32
	TBSTYLE_TOOLTIPS uint32 = 256
	TBSTYLE_WRAPABLE uint32 = 512
	TBSTYLE_ALTDRAG uint32 = 1024
	TBSTYLE_FLAT uint32 = 2048
	TBSTYLE_LIST uint32 = 4096
	TBSTYLE_CUSTOMERASE uint32 = 8192
	TBSTYLE_REGISTERDROP uint32 = 16384
	TBSTYLE_TRANSPARENT uint32 = 32768
	TBSTYLE_EX_DRAWDDARROWS uint32 = 1
	BTNS_BUTTON uint32 = 0
	BTNS_SEP uint32 = 1
	BTNS_CHECK uint32 = 2
	BTNS_GROUP uint32 = 4
	BTNS_DROPDOWN uint32 = 8
	BTNS_AUTOSIZE uint32 = 16
	BTNS_NOPREFIX uint32 = 32
	BTNS_SHOWTEXT uint32 = 64
	BTNS_WHOLEDROPDOWN uint32 = 128
	TBSTYLE_EX_MIXEDBUTTONS uint32 = 8
	TBSTYLE_EX_HIDECLIPPEDBUTTONS uint32 = 16
	TBSTYLE_EX_MULTICOLUMN uint32 = 2
	TBSTYLE_EX_VERTICAL uint32 = 4
	TBSTYLE_EX_DOUBLEBUFFER uint32 = 128
	TBCDRF_NOEDGES uint32 = 65536
	TBCDRF_HILITEHOTTRACK uint32 = 131072
	TBCDRF_NOOFFSET uint32 = 262144
	TBCDRF_NOMARK uint32 = 524288
	TBCDRF_NOETCHEDEFFECT uint32 = 1048576
	TBCDRF_BLENDICON uint32 = 2097152
	TBCDRF_NOBACKGROUND uint32 = 4194304
	TBCDRF_USECDCOLORS uint32 = 8388608
	TB_ENABLEBUTTON uint32 = 1025
	TB_CHECKBUTTON uint32 = 1026
	TB_PRESSBUTTON uint32 = 1027
	TB_HIDEBUTTON uint32 = 1028
	TB_INDETERMINATE uint32 = 1029
	TB_MARKBUTTON uint32 = 1030
	TB_ISBUTTONENABLED uint32 = 1033
	TB_ISBUTTONCHECKED uint32 = 1034
	TB_ISBUTTONPRESSED uint32 = 1035
	TB_ISBUTTONHIDDEN uint32 = 1036
	TB_ISBUTTONINDETERMINATE uint32 = 1037
	TB_ISBUTTONHIGHLIGHTED uint32 = 1038
	TB_SETSTATE uint32 = 1041
	TB_GETSTATE uint32 = 1042
	TB_ADDBITMAP uint32 = 1043
	IDB_STD_SMALL_COLOR uint32 = 0
	IDB_STD_LARGE_COLOR uint32 = 1
	IDB_VIEW_SMALL_COLOR uint32 = 4
	IDB_VIEW_LARGE_COLOR uint32 = 5
	IDB_HIST_SMALL_COLOR uint32 = 8
	IDB_HIST_LARGE_COLOR uint32 = 9
	IDB_HIST_NORMAL uint32 = 12
	IDB_HIST_HOT uint32 = 13
	IDB_HIST_DISABLED uint32 = 14
	IDB_HIST_PRESSED uint32 = 15
	STD_CUT uint32 = 0
	STD_COPY uint32 = 1
	STD_PASTE uint32 = 2
	STD_UNDO uint32 = 3
	STD_REDOW uint32 = 4
	STD_DELETE uint32 = 5
	STD_FILENEW uint32 = 6
	STD_FILEOPEN uint32 = 7
	STD_FILESAVE uint32 = 8
	STD_PRINTPRE uint32 = 9
	STD_PROPERTIES uint32 = 10
	STD_HELP uint32 = 11
	STD_FIND uint32 = 12
	STD_REPLACE uint32 = 13
	STD_PRINT uint32 = 14
	VIEW_LARGEICONS uint32 = 0
	VIEW_SMALLICONS uint32 = 1
	VIEW_LIST uint32 = 2
	VIEW_DETAILS uint32 = 3
	VIEW_SORTNAME uint32 = 4
	VIEW_SORTSIZE uint32 = 5
	VIEW_SORTDATE uint32 = 6
	VIEW_SORTTYPE uint32 = 7
	VIEW_PARENTFOLDER uint32 = 8
	VIEW_NETCONNECT uint32 = 9
	VIEW_NETDISCONNECT uint32 = 10
	VIEW_NEWFOLDER uint32 = 11
	VIEW_VIEWMENU uint32 = 12
	HIST_BACK uint32 = 0
	HIST_FORWARD uint32 = 1
	HIST_FAVORITES uint32 = 2
	HIST_ADDTOFAVORITES uint32 = 3
	HIST_VIEWTREE uint32 = 4
	TB_ADDBUTTONSA uint32 = 1044
	TB_INSERTBUTTONA uint32 = 1045
	TB_DELETEBUTTON uint32 = 1046
	TB_GETBUTTON uint32 = 1047
	TB_BUTTONCOUNT uint32 = 1048
	TB_COMMANDTOINDEX uint32 = 1049
	TB_SAVERESTOREA uint32 = 1050
	TB_SAVERESTOREW uint32 = 1100
	TB_CUSTOMIZE uint32 = 1051
	TB_ADDSTRINGA uint32 = 1052
	TB_ADDSTRINGW uint32 = 1101
	TB_GETITEMRECT uint32 = 1053
	TB_BUTTONSTRUCTSIZE uint32 = 1054
	TB_SETBUTTONSIZE uint32 = 1055
	TB_SETBITMAPSIZE uint32 = 1056
	TB_AUTOSIZE uint32 = 1057
	TB_GETTOOLTIPS uint32 = 1059
	TB_SETTOOLTIPS uint32 = 1060
	TB_SETPARENT uint32 = 1061
	TB_SETROWS uint32 = 1063
	TB_GETROWS uint32 = 1064
	TB_SETCMDID uint32 = 1066
	TB_CHANGEBITMAP uint32 = 1067
	TB_GETBITMAP uint32 = 1068
	TB_GETBUTTONTEXTA uint32 = 1069
	TB_GETBUTTONTEXTW uint32 = 1099
	TB_REPLACEBITMAP uint32 = 1070
	TB_SETINDENT uint32 = 1071
	TB_SETIMAGELIST uint32 = 1072
	TB_GETIMAGELIST uint32 = 1073
	TB_LOADIMAGES uint32 = 1074
	TB_GETRECT uint32 = 1075
	TB_SETHOTIMAGELIST uint32 = 1076
	TB_GETHOTIMAGELIST uint32 = 1077
	TB_SETDISABLEDIMAGELIST uint32 = 1078
	TB_GETDISABLEDIMAGELIST uint32 = 1079
	TB_SETSTYLE uint32 = 1080
	TB_GETSTYLE uint32 = 1081
	TB_GETBUTTONSIZE uint32 = 1082
	TB_SETBUTTONWIDTH uint32 = 1083
	TB_SETMAXTEXTROWS uint32 = 1084
	TB_GETTEXTROWS uint32 = 1085
	TB_GETBUTTONTEXT uint32 = 1099
	TB_SAVERESTORE uint32 = 1100
	TB_ADDSTRING uint32 = 1101
	TB_GETOBJECT uint32 = 1086
	TB_GETHOTITEM uint32 = 1095
	TB_SETHOTITEM uint32 = 1096
	TB_SETANCHORHIGHLIGHT uint32 = 1097
	TB_GETANCHORHIGHLIGHT uint32 = 1098
	TB_MAPACCELERATORA uint32 = 1102
	TB_GETINSERTMARK uint32 = 1103
	TB_SETINSERTMARK uint32 = 1104
	TB_INSERTMARKHITTEST uint32 = 1105
	TB_MOVEBUTTON uint32 = 1106
	TB_GETMAXSIZE uint32 = 1107
	TB_SETEXTENDEDSTYLE uint32 = 1108
	TB_GETEXTENDEDSTYLE uint32 = 1109
	TB_GETPADDING uint32 = 1110
	TB_SETPADDING uint32 = 1111
	TB_SETINSERTMARKCOLOR uint32 = 1112
	TB_GETINSERTMARKCOLOR uint32 = 1113
	TB_SETCOLORSCHEME uint32 = 8194
	TB_GETCOLORSCHEME uint32 = 8195
	TB_SETUNICODEFORMAT uint32 = 8197
	TB_GETUNICODEFORMAT uint32 = 8198
	TB_MAPACCELERATORW uint32 = 1114
	TB_MAPACCELERATOR uint32 = 1114
	TBBF_LARGE uint32 = 1
	TB_GETBITMAPFLAGS uint32 = 1065
	TB_GETBUTTONINFOW uint32 = 1087
	TB_SETBUTTONINFOW uint32 = 1088
	TB_GETBUTTONINFOA uint32 = 1089
	TB_SETBUTTONINFOA uint32 = 1090
	TB_GETBUTTONINFO uint32 = 1087
	TB_SETBUTTONINFO uint32 = 1088
	TB_INSERTBUTTONW uint32 = 1091
	TB_ADDBUTTONSW uint32 = 1092
	TB_HITTEST uint32 = 1093
	TB_INSERTBUTTON uint32 = 1091
	TB_ADDBUTTONS uint32 = 1092
	TB_SETDRAWTEXTFLAGS uint32 = 1094
	TB_GETSTRINGW uint32 = 1115
	TB_GETSTRINGA uint32 = 1116
	TB_GETSTRING uint32 = 1115
	TB_SETBOUNDINGSIZE uint32 = 1117
	TB_SETHOTITEM2 uint32 = 1118
	TB_HASACCELERATOR uint32 = 1119
	TB_SETLISTGAP uint32 = 1120
	TB_GETIMAGELISTCOUNT uint32 = 1122
	TB_GETIDEALSIZE uint32 = 1123
	TBMF_PAD uint32 = 1
	TBMF_BARPAD uint32 = 2
	TBMF_BUTTONSPACING uint32 = 4
	TB_GETMETRICS uint32 = 1125
	TB_SETMETRICS uint32 = 1126
	TB_GETITEMDROPDOWNRECT uint32 = 1127
	TB_SETPRESSEDIMAGELIST uint32 = 1128
	TB_GETPRESSEDIMAGELIST uint32 = 1129
	TB_SETWINDOWTHEME uint32 = 8203
	TBNRF_HIDEHELP uint32 = 1
	TBNRF_ENDCUSTOMIZE uint32 = 2
	TBDDRET_DEFAULT uint32 = 0
	TBDDRET_NODEFAULT uint32 = 1
	TBDDRET_TREATPRESSED uint32 = 2
	REBARCLASSNAMEW string = "ReBarWindow32"
	REBARCLASSNAMEA string = "ReBarWindow32"
	REBARCLASSNAME string = "ReBarWindow32"
	RBIM_IMAGELIST uint32 = 1
	RBS_TOOLTIPS uint32 = 256
	RBS_VARHEIGHT uint32 = 512
	RBS_BANDBORDERS uint32 = 1024
	RBS_FIXEDORDER uint32 = 2048
	RBS_REGISTERDROP uint32 = 4096
	RBS_AUTOSIZE uint32 = 8192
	RBS_VERTICALGRIPPER uint32 = 16384
	RBS_DBLCLKTOGGLE uint32 = 32768
	RBBS_BREAK uint32 = 1
	RBBS_FIXEDSIZE uint32 = 2
	RBBS_CHILDEDGE uint32 = 4
	RBBS_HIDDEN uint32 = 8
	RBBS_NOVERT uint32 = 16
	RBBS_FIXEDBMP uint32 = 32
	RBBS_VARIABLEHEIGHT uint32 = 64
	RBBS_GRIPPERALWAYS uint32 = 128
	RBBS_NOGRIPPER uint32 = 256
	RBBS_USECHEVRON uint32 = 512
	RBBS_HIDETITLE uint32 = 1024
	RBBS_TOPALIGN uint32 = 2048
	RBBIM_STYLE uint32 = 1
	RBBIM_COLORS uint32 = 2
	RBBIM_TEXT uint32 = 4
	RBBIM_IMAGE uint32 = 8
	RBBIM_CHILD uint32 = 16
	RBBIM_CHILDSIZE uint32 = 32
	RBBIM_SIZE uint32 = 64
	RBBIM_BACKGROUND uint32 = 128
	RBBIM_ID uint32 = 256
	RBBIM_IDEALSIZE uint32 = 512
	RBBIM_LPARAM uint32 = 1024
	RBBIM_HEADERSIZE uint32 = 2048
	RBBIM_CHEVRONLOCATION uint32 = 4096
	RBBIM_CHEVRONSTATE uint32 = 8192
	RB_INSERTBANDA uint32 = 1025
	RB_DELETEBAND uint32 = 1026
	RB_GETBARINFO uint32 = 1027
	RB_SETBARINFO uint32 = 1028
	RB_SETBANDINFOA uint32 = 1030
	RB_SETPARENT uint32 = 1031
	RB_HITTEST uint32 = 1032
	RB_GETRECT uint32 = 1033
	RB_INSERTBANDW uint32 = 1034
	RB_SETBANDINFOW uint32 = 1035
	RB_GETBANDCOUNT uint32 = 1036
	RB_GETROWCOUNT uint32 = 1037
	RB_GETROWHEIGHT uint32 = 1038
	RB_IDTOINDEX uint32 = 1040
	RB_GETTOOLTIPS uint32 = 1041
	RB_SETTOOLTIPS uint32 = 1042
	RB_SETBKCOLOR uint32 = 1043
	RB_GETBKCOLOR uint32 = 1044
	RB_SETTEXTCOLOR uint32 = 1045
	RB_GETTEXTCOLOR uint32 = 1046
	RBSTR_CHANGERECT uint32 = 1
	RB_SIZETORECT uint32 = 1047
	RB_SETCOLORSCHEME uint32 = 8194
	RB_GETCOLORSCHEME uint32 = 8195
	RB_INSERTBAND uint32 = 1034
	RB_SETBANDINFO uint32 = 1035
	RB_BEGINDRAG uint32 = 1048
	RB_ENDDRAG uint32 = 1049
	RB_DRAGMOVE uint32 = 1050
	RB_GETBARHEIGHT uint32 = 1051
	RB_GETBANDINFOW uint32 = 1052
	RB_GETBANDINFOA uint32 = 1053
	RB_GETBANDINFO uint32 = 1052
	RB_MINIMIZEBAND uint32 = 1054
	RB_MAXIMIZEBAND uint32 = 1055
	RB_GETDROPTARGET uint32 = 8196
	RB_GETBANDBORDERS uint32 = 1058
	RB_SHOWBAND uint32 = 1059
	RB_SETPALETTE uint32 = 1061
	RB_GETPALETTE uint32 = 1062
	RB_MOVEBAND uint32 = 1063
	RB_SETUNICODEFORMAT uint32 = 8197
	RB_GETUNICODEFORMAT uint32 = 8198
	RB_GETBANDMARGINS uint32 = 1064
	RB_SETWINDOWTHEME uint32 = 8203
	RB_SETEXTENDEDSTYLE uint32 = 1065
	RB_GETEXTENDEDSTYLE uint32 = 1066
	RB_PUSHCHEVRON uint32 = 1067
	RB_SETBANDWIDTH uint32 = 1068
	RBAB_AUTOSIZE uint32 = 1
	RBAB_ADDBAND uint32 = 2
	RBHT_NOWHERE uint32 = 1
	RBHT_CAPTION uint32 = 2
	RBHT_CLIENT uint32 = 3
	RBHT_GRABBER uint32 = 4
	RBHT_CHEVRON uint32 = 8
	RBHT_SPLITTER uint32 = 16
	TOOLTIPS_CLASSW string = "tooltips_class32"
	TOOLTIPS_CLASSA string = "tooltips_class32"
	TOOLTIPS_CLASS string = "tooltips_class32"
	TTS_ALWAYSTIP uint32 = 1
	TTS_NOPREFIX uint32 = 2
	TTS_NOANIMATE uint32 = 16
	TTS_NOFADE uint32 = 32
	TTS_BALLOON uint32 = 64
	TTS_CLOSE uint32 = 128
	TTS_USEVISUALSTYLE uint32 = 256
	TTF_DI_SETITEM uint32 = 32768
	TTDT_AUTOMATIC uint32 = 0
	TTDT_RESHOW uint32 = 1
	TTDT_AUTOPOP uint32 = 2
	TTDT_INITIAL uint32 = 3
	TTM_ACTIVATE uint32 = 1025
	TTM_SETDELAYTIME uint32 = 1027
	TTM_ADDTOOLA uint32 = 1028
	TTM_ADDTOOLW uint32 = 1074
	TTM_DELTOOLA uint32 = 1029
	TTM_DELTOOLW uint32 = 1075
	TTM_NEWTOOLRECTA uint32 = 1030
	TTM_NEWTOOLRECTW uint32 = 1076
	TTM_RELAYEVENT uint32 = 1031
	TTM_GETTOOLINFOA uint32 = 1032
	TTM_GETTOOLINFOW uint32 = 1077
	TTM_SETTOOLINFOA uint32 = 1033
	TTM_SETTOOLINFOW uint32 = 1078
	TTM_HITTESTA uint32 = 1034
	TTM_HITTESTW uint32 = 1079
	TTM_GETTEXTA uint32 = 1035
	TTM_GETTEXTW uint32 = 1080
	TTM_UPDATETIPTEXTA uint32 = 1036
	TTM_UPDATETIPTEXTW uint32 = 1081
	TTM_GETTOOLCOUNT uint32 = 1037
	TTM_ENUMTOOLSA uint32 = 1038
	TTM_ENUMTOOLSW uint32 = 1082
	TTM_GETCURRENTTOOLA uint32 = 1039
	TTM_GETCURRENTTOOLW uint32 = 1083
	TTM_WINDOWFROMPOINT uint32 = 1040
	TTM_TRACKACTIVATE uint32 = 1041
	TTM_TRACKPOSITION uint32 = 1042
	TTM_SETTIPBKCOLOR uint32 = 1043
	TTM_SETTIPTEXTCOLOR uint32 = 1044
	TTM_GETDELAYTIME uint32 = 1045
	TTM_GETTIPBKCOLOR uint32 = 1046
	TTM_GETTIPTEXTCOLOR uint32 = 1047
	TTM_SETMAXTIPWIDTH uint32 = 1048
	TTM_GETMAXTIPWIDTH uint32 = 1049
	TTM_SETMARGIN uint32 = 1050
	TTM_GETMARGIN uint32 = 1051
	TTM_POP uint32 = 1052
	TTM_UPDATE uint32 = 1053
	TTM_GETBUBBLESIZE uint32 = 1054
	TTM_ADJUSTRECT uint32 = 1055
	TTM_SETTITLEA uint32 = 1056
	TTM_SETTITLEW uint32 = 1057
	TTM_POPUP uint32 = 1058
	TTM_GETTITLE uint32 = 1059
	TTM_ADDTOOL uint32 = 1074
	TTM_DELTOOL uint32 = 1075
	TTM_NEWTOOLRECT uint32 = 1076
	TTM_GETTOOLINFO uint32 = 1077
	TTM_SETTOOLINFO uint32 = 1078
	TTM_HITTEST uint32 = 1079
	TTM_GETTEXT uint32 = 1080
	TTM_UPDATETIPTEXT uint32 = 1081
	TTM_ENUMTOOLS uint32 = 1082
	TTM_GETCURRENTTOOL uint32 = 1083
	TTM_SETTITLE uint32 = 1057
	TTM_SETWINDOWTHEME uint32 = 8203
	SBARS_SIZEGRIP uint32 = 256
	SBARS_TOOLTIPS uint32 = 2048
	SBT_TOOLTIPS uint32 = 2048
	STATUSCLASSNAMEW string = "msctls_statusbar32"
	STATUSCLASSNAMEA string = "msctls_statusbar32"
	STATUSCLASSNAME string = "msctls_statusbar32"
	SB_SETTEXTA uint32 = 1025
	SB_SETTEXTW uint32 = 1035
	SB_GETTEXTA uint32 = 1026
	SB_GETTEXTW uint32 = 1037
	SB_GETTEXTLENGTHA uint32 = 1027
	SB_GETTEXTLENGTHW uint32 = 1036
	SB_GETTEXT uint32 = 1037
	SB_SETTEXT uint32 = 1035
	SB_GETTEXTLENGTH uint32 = 1036
	SB_SETPARTS uint32 = 1028
	SB_GETPARTS uint32 = 1030
	SB_GETBORDERS uint32 = 1031
	SB_SETMINHEIGHT uint32 = 1032
	SB_SIMPLE uint32 = 1033
	SB_GETRECT uint32 = 1034
	SB_ISSIMPLE uint32 = 1038
	SB_SETICON uint32 = 1039
	SB_SETTIPTEXTA uint32 = 1040
	SB_SETTIPTEXTW uint32 = 1041
	SB_GETTIPTEXTA uint32 = 1042
	SB_GETTIPTEXTW uint32 = 1043
	SB_GETICON uint32 = 1044
	SB_SETUNICODEFORMAT uint32 = 8197
	SB_GETUNICODEFORMAT uint32 = 8198
	SBT_OWNERDRAW uint32 = 4096
	SBT_NOBORDERS uint32 = 256
	SBT_POPOUT uint32 = 512
	SBT_RTLREADING uint32 = 1024
	SBT_NOTABPARSING uint32 = 2048
	SB_SETBKCOLOR uint32 = 8193
	SB_SIMPLEID uint32 = 255
	TRACKBAR_CLASSA string = "msctls_trackbar32"
	TRACKBAR_CLASSW string = "msctls_trackbar32"
	TRACKBAR_CLASS string = "msctls_trackbar32"
	TBS_AUTOTICKS uint32 = 1
	TBS_VERT uint32 = 2
	TBS_HORZ uint32 = 0
	TBS_TOP uint32 = 4
	TBS_BOTTOM uint32 = 0
	TBS_LEFT uint32 = 4
	TBS_RIGHT uint32 = 0
	TBS_BOTH uint32 = 8
	TBS_NOTICKS uint32 = 16
	TBS_ENABLESELRANGE uint32 = 32
	TBS_FIXEDLENGTH uint32 = 64
	TBS_NOTHUMB uint32 = 128
	TBS_TOOLTIPS uint32 = 256
	TBS_REVERSED uint32 = 512
	TBS_DOWNISLEFT uint32 = 1024
	TBS_NOTIFYBEFOREMOVE uint32 = 2048
	TBS_TRANSPARENTBKGND uint32 = 4096
	TBM_GETRANGEMIN uint32 = 1025
	TBM_GETRANGEMAX uint32 = 1026
	TBM_GETTIC uint32 = 1027
	TBM_SETTIC uint32 = 1028
	TBM_SETPOS uint32 = 1029
	TBM_SETRANGE uint32 = 1030
	TBM_SETRANGEMIN uint32 = 1031
	TBM_SETRANGEMAX uint32 = 1032
	TBM_CLEARTICS uint32 = 1033
	TBM_SETSEL uint32 = 1034
	TBM_SETSELSTART uint32 = 1035
	TBM_SETSELEND uint32 = 1036
	TBM_GETPTICS uint32 = 1038
	TBM_GETTICPOS uint32 = 1039
	TBM_GETNUMTICS uint32 = 1040
	TBM_GETSELSTART uint32 = 1041
	TBM_GETSELEND uint32 = 1042
	TBM_CLEARSEL uint32 = 1043
	TBM_SETTICFREQ uint32 = 1044
	TBM_SETPAGESIZE uint32 = 1045
	TBM_GETPAGESIZE uint32 = 1046
	TBM_SETLINESIZE uint32 = 1047
	TBM_GETLINESIZE uint32 = 1048
	TBM_GETTHUMBRECT uint32 = 1049
	TBM_GETCHANNELRECT uint32 = 1050
	TBM_SETTHUMBLENGTH uint32 = 1051
	TBM_GETTHUMBLENGTH uint32 = 1052
	TBM_SETTOOLTIPS uint32 = 1053
	TBM_GETTOOLTIPS uint32 = 1054
	TBM_SETTIPSIDE uint32 = 1055
	TBTS_TOP uint32 = 0
	TBTS_LEFT uint32 = 1
	TBTS_BOTTOM uint32 = 2
	TBTS_RIGHT uint32 = 3
	TBM_SETBUDDY uint32 = 1056
	TBM_GETBUDDY uint32 = 1057
	TBM_SETPOSNOTIFY uint32 = 1058
	TBM_SETUNICODEFORMAT uint32 = 8197
	TBM_GETUNICODEFORMAT uint32 = 8198
	TB_LINEUP uint32 = 0
	TB_LINEDOWN uint32 = 1
	TB_PAGEUP uint32 = 2
	TB_PAGEDOWN uint32 = 3
	TB_THUMBPOSITION uint32 = 4
	TB_THUMBTRACK uint32 = 5
	TB_TOP uint32 = 6
	TB_BOTTOM uint32 = 7
	TB_ENDTRACK uint32 = 8
	TBCD_TICS uint32 = 1
	TBCD_THUMB uint32 = 2
	TBCD_CHANNEL uint32 = 3
	DL_CURSORSET uint32 = 0
	DL_STOPCURSOR uint32 = 1
	DL_COPYCURSOR uint32 = 2
	DL_MOVECURSOR uint32 = 3
	DRAGLISTMSGSTRING string = "commctrl_DragListMsg"
	UPDOWN_CLASSA string = "msctls_updown32"
	UPDOWN_CLASSW string = "msctls_updown32"
	UPDOWN_CLASS string = "msctls_updown32"
	UD_MAXVAL uint32 = 32767
	UDS_WRAP uint32 = 1
	UDS_SETBUDDYINT uint32 = 2
	UDS_ALIGNRIGHT uint32 = 4
	UDS_ALIGNLEFT uint32 = 8
	UDS_AUTOBUDDY uint32 = 16
	UDS_ARROWKEYS uint32 = 32
	UDS_HORZ uint32 = 64
	UDS_NOTHOUSANDS uint32 = 128
	UDS_HOTTRACK uint32 = 256
	UDM_SETRANGE uint32 = 1125
	UDM_GETRANGE uint32 = 1126
	UDM_SETPOS uint32 = 1127
	UDM_GETPOS uint32 = 1128
	UDM_SETBUDDY uint32 = 1129
	UDM_GETBUDDY uint32 = 1130
	UDM_SETACCEL uint32 = 1131
	UDM_GETACCEL uint32 = 1132
	UDM_SETBASE uint32 = 1133
	UDM_GETBASE uint32 = 1134
	UDM_SETRANGE32 uint32 = 1135
	UDM_GETRANGE32 uint32 = 1136
	UDM_SETUNICODEFORMAT uint32 = 8197
	UDM_GETUNICODEFORMAT uint32 = 8198
	UDM_SETPOS32 uint32 = 1137
	UDM_GETPOS32 uint32 = 1138
	PROGRESS_CLASSA string = "msctls_progress32"
	PROGRESS_CLASSW string = "msctls_progress32"
	PROGRESS_CLASS string = "msctls_progress32"
	PBS_SMOOTH uint32 = 1
	PBS_VERTICAL uint32 = 4
	PBM_SETRANGE uint32 = 1025
	PBM_SETPOS uint32 = 1026
	PBM_DELTAPOS uint32 = 1027
	PBM_SETSTEP uint32 = 1028
	PBM_STEPIT uint32 = 1029
	PBM_SETRANGE32 uint32 = 1030
	PBM_GETRANGE uint32 = 1031
	PBM_GETPOS uint32 = 1032
	PBM_SETBARCOLOR uint32 = 1033
	PBM_SETBKCOLOR uint32 = 8193
	PBS_MARQUEE uint32 = 8
	PBM_SETMARQUEE uint32 = 1034
	PBS_SMOOTHREVERSE uint32 = 16
	PBM_GETSTEP uint32 = 1037
	PBM_GETBKCOLOR uint32 = 1038
	PBM_GETBARCOLOR uint32 = 1039
	PBM_SETSTATE uint32 = 1040
	PBM_GETSTATE uint32 = 1041
	PBST_NORMAL uint32 = 1
	PBST_ERROR uint32 = 2
	PBST_PAUSED uint32 = 3
	HOTKEYF_SHIFT uint32 = 1
	HOTKEYF_CONTROL uint32 = 2
	HOTKEYF_ALT uint32 = 4
	HOTKEYF_EXT uint32 = 128
	HKCOMB_NONE uint32 = 1
	HKCOMB_S uint32 = 2
	HKCOMB_C uint32 = 4
	HKCOMB_A uint32 = 8
	HKCOMB_SC uint32 = 16
	HKCOMB_SA uint32 = 32
	HKCOMB_CA uint32 = 64
	HKCOMB_SCA uint32 = 128
	HKM_SETHOTKEY uint32 = 1025
	HKM_GETHOTKEY uint32 = 1026
	HKM_SETRULES uint32 = 1027
	HOTKEY_CLASSA string = "msctls_hotkey32"
	HOTKEY_CLASSW string = "msctls_hotkey32"
	HOTKEY_CLASS string = "msctls_hotkey32"
	CCS_TOP int32 = 1
	CCS_NOMOVEY int32 = 2
	CCS_BOTTOM int32 = 3
	CCS_NORESIZE int32 = 4
	CCS_NOPARENTALIGN int32 = 8
	CCS_ADJUSTABLE int32 = 32
	CCS_NODIVIDER int32 = 64
	CCS_VERT int32 = 128
	INVALID_LINK_INDEX int32 = -1
	MAX_LINKID_TEXT uint32 = 48
	WC_LINK string = "SysLink"
	LWS_TRANSPARENT uint32 = 1
	LWS_IGNORERETURN uint32 = 2
	LWS_NOPREFIX uint32 = 4
	LWS_USEVISUALSTYLE uint32 = 8
	LWS_USECUSTOMTEXT uint32 = 16
	LWS_RIGHT uint32 = 32
	LIF_ITEMINDEX uint32 = 1
	LIF_STATE uint32 = 2
	LIF_ITEMID uint32 = 4
	LIF_URL uint32 = 8
	LIS_FOCUSED uint32 = 1
	LIS_ENABLED uint32 = 2
	LIS_VISITED uint32 = 4
	LIS_HOTTRACK uint32 = 8
	LIS_DEFAULTCOLORS uint32 = 16
	LM_HITTEST uint32 = 1792
	LM_GETIDEALHEIGHT uint32 = 1793
	LM_SETITEM uint32 = 1794
	LM_GETITEM uint32 = 1795
	LM_GETIDEALSIZE uint32 = 1793
	WC_LISTVIEWA string = "SysListView32"
	WC_LISTVIEWW string = "SysListView32"
	WC_LISTVIEW string = "SysListView32"
	LVS_ICON uint32 = 0
	LVS_REPORT uint32 = 1
	LVS_SMALLICON uint32 = 2
	LVS_LIST uint32 = 3
	LVS_TYPEMASK uint32 = 3
	LVS_SINGLESEL uint32 = 4
	LVS_SHOWSELALWAYS uint32 = 8
	LVS_SORTASCENDING uint32 = 16
	LVS_SORTDESCENDING uint32 = 32
	LVS_SHAREIMAGELISTS uint32 = 64
	LVS_NOLABELWRAP uint32 = 128
	LVS_AUTOARRANGE uint32 = 256
	LVS_EDITLABELS uint32 = 512
	LVS_OWNERDATA uint32 = 4096
	LVS_NOSCROLL uint32 = 8192
	LVS_TYPESTYLEMASK uint32 = 64512
	LVS_ALIGNTOP uint32 = 0
	LVS_ALIGNLEFT uint32 = 2048
	LVS_ALIGNMASK uint32 = 3072
	LVS_OWNERDRAWFIXED uint32 = 1024
	LVS_NOCOLUMNHEADER uint32 = 16384
	LVS_NOSORTHEADER uint32 = 32768
	LVM_SETUNICODEFORMAT uint32 = 8197
	LVM_GETUNICODEFORMAT uint32 = 8198
	LVM_GETBKCOLOR uint32 = 4096
	LVM_SETBKCOLOR uint32 = 4097
	LVM_GETIMAGELIST uint32 = 4098
	LVSIL_NORMAL uint32 = 0
	LVSIL_SMALL uint32 = 1
	LVSIL_STATE uint32 = 2
	LVSIL_GROUPHEADER uint32 = 3
	LVM_SETIMAGELIST uint32 = 4099
	LVM_GETITEMCOUNT uint32 = 4100
	LVIF_TEXT uint32 = 1
	LVIF_IMAGE uint32 = 2
	LVIF_PARAM uint32 = 4
	LVIF_STATE uint32 = 8
	LVIF_INDENT uint32 = 16
	LVIF_NORECOMPUTE uint32 = 2048
	LVIF_GROUPID uint32 = 256
	LVIF_COLUMNS uint32 = 512
	LVIF_COLFMT uint32 = 65536
	LVIS_FOCUSED uint32 = 1
	LVIS_SELECTED uint32 = 2
	LVIS_CUT uint32 = 4
	LVIS_DROPHILITED uint32 = 8
	LVIS_GLOW uint32 = 16
	LVIS_ACTIVATING uint32 = 32
	LVIS_OVERLAYMASK uint32 = 3840
	LVIS_STATEIMAGEMASK uint32 = 61440
	I_INDENTCALLBACK int32 = -1
	I_IMAGECALLBACK int32 = -1
	I_IMAGENONE int32 = -2
	LVM_GETITEMA uint32 = 4101
	LVM_GETITEMW uint32 = 4171
	LVM_GETITEM uint32 = 4171
	LVM_SETITEMA uint32 = 4102
	LVM_SETITEMW uint32 = 4172
	LVM_SETITEM uint32 = 4172
	LVM_INSERTITEMA uint32 = 4103
	LVM_INSERTITEMW uint32 = 4173
	LVM_INSERTITEM uint32 = 4173
	LVM_DELETEITEM uint32 = 4104
	LVM_DELETEALLITEMS uint32 = 4105
	LVM_GETCALLBACKMASK uint32 = 4106
	LVM_SETCALLBACKMASK uint32 = 4107
	LVNI_ALL uint32 = 0
	LVNI_FOCUSED uint32 = 1
	LVNI_SELECTED uint32 = 2
	LVNI_CUT uint32 = 4
	LVNI_DROPHILITED uint32 = 8
	LVNI_VISIBLEORDER uint32 = 16
	LVNI_PREVIOUS uint32 = 32
	LVNI_VISIBLEONLY uint32 = 64
	LVNI_SAMEGROUPONLY uint32 = 128
	LVNI_ABOVE uint32 = 256
	LVNI_BELOW uint32 = 512
	LVNI_TOLEFT uint32 = 1024
	LVNI_TORIGHT uint32 = 2048
	LVM_GETNEXTITEM uint32 = 4108
	LVM_FINDITEMA uint32 = 4109
	LVM_FINDITEMW uint32 = 4179
	LVM_FINDITEM uint32 = 4179
	LVIR_BOUNDS uint32 = 0
	LVIR_ICON uint32 = 1
	LVIR_LABEL uint32 = 2
	LVIR_SELECTBOUNDS uint32 = 3
	LVM_GETITEMRECT uint32 = 4110
	LVM_SETITEMPOSITION uint32 = 4111
	LVM_GETITEMPOSITION uint32 = 4112
	LVM_GETSTRINGWIDTHA uint32 = 4113
	LVM_GETSTRINGWIDTHW uint32 = 4183
	LVM_GETSTRINGWIDTH uint32 = 4183
	LVM_HITTEST uint32 = 4114
	LVM_ENSUREVISIBLE uint32 = 4115
	LVM_SCROLL uint32 = 4116
	LVM_REDRAWITEMS uint32 = 4117
	LVA_DEFAULT uint32 = 0
	LVA_ALIGNLEFT uint32 = 1
	LVA_ALIGNTOP uint32 = 2
	LVA_SNAPTOGRID uint32 = 5
	LVM_ARRANGE uint32 = 4118
	LVM_EDITLABELA uint32 = 4119
	LVM_EDITLABELW uint32 = 4214
	LVM_EDITLABEL uint32 = 4214
	LVM_GETEDITCONTROL uint32 = 4120
	LVCFMT_LINE_BREAK uint32 = 1048576
	LVCFMT_FILL uint32 = 2097152
	LVCFMT_WRAP uint32 = 4194304
	LVCFMT_NO_TITLE uint32 = 8388608
	LVM_GETCOLUMNA uint32 = 4121
	LVM_GETCOLUMNW uint32 = 4191
	LVM_GETCOLUMN uint32 = 4191
	LVM_SETCOLUMNA uint32 = 4122
	LVM_SETCOLUMNW uint32 = 4192
	LVM_SETCOLUMN uint32 = 4192
	LVM_INSERTCOLUMNA uint32 = 4123
	LVM_INSERTCOLUMNW uint32 = 4193
	LVM_INSERTCOLUMN uint32 = 4193
	LVM_DELETECOLUMN uint32 = 4124
	LVM_GETCOLUMNWIDTH uint32 = 4125
	LVSCW_AUTOSIZE int32 = -1
	LVSCW_AUTOSIZE_USEHEADER int32 = -2
	LVM_SETCOLUMNWIDTH uint32 = 4126
	LVM_GETHEADER uint32 = 4127
	LVM_CREATEDRAGIMAGE uint32 = 4129
	LVM_GETVIEWRECT uint32 = 4130
	LVM_GETTEXTCOLOR uint32 = 4131
	LVM_SETTEXTCOLOR uint32 = 4132
	LVM_GETTEXTBKCOLOR uint32 = 4133
	LVM_SETTEXTBKCOLOR uint32 = 4134
	LVM_GETTOPINDEX uint32 = 4135
	LVM_GETCOUNTPERPAGE uint32 = 4136
	LVM_GETORIGIN uint32 = 4137
	LVM_UPDATE uint32 = 4138
	LVM_SETITEMSTATE uint32 = 4139
	LVM_GETITEMSTATE uint32 = 4140
	LVM_GETITEMTEXTA uint32 = 4141
	LVM_GETITEMTEXTW uint32 = 4211
	LVM_GETITEMTEXT uint32 = 4211
	LVM_SETITEMTEXTA uint32 = 4142
	LVM_SETITEMTEXTW uint32 = 4212
	LVM_SETITEMTEXT uint32 = 4212
	LVSICF_NOINVALIDATEALL uint32 = 1
	LVSICF_NOSCROLL uint32 = 2
	LVM_SETITEMCOUNT uint32 = 4143
	LVM_SORTITEMS uint32 = 4144
	LVM_SETITEMPOSITION32 uint32 = 4145
	LVM_GETSELECTEDCOUNT uint32 = 4146
	LVM_GETITEMSPACING uint32 = 4147
	LVM_GETISEARCHSTRINGA uint32 = 4148
	LVM_GETISEARCHSTRINGW uint32 = 4213
	LVM_GETISEARCHSTRING uint32 = 4213
	LVM_SETICONSPACING uint32 = 4149
	LVM_SETEXTENDEDLISTVIEWSTYLE uint32 = 4150
	LVM_GETEXTENDEDLISTVIEWSTYLE uint32 = 4151
	LVS_EX_GRIDLINES uint32 = 1
	LVS_EX_SUBITEMIMAGES uint32 = 2
	LVS_EX_CHECKBOXES uint32 = 4
	LVS_EX_TRACKSELECT uint32 = 8
	LVS_EX_HEADERDRAGDROP uint32 = 16
	LVS_EX_FULLROWSELECT uint32 = 32
	LVS_EX_ONECLICKACTIVATE uint32 = 64
	LVS_EX_TWOCLICKACTIVATE uint32 = 128
	LVS_EX_FLATSB uint32 = 256
	LVS_EX_REGIONAL uint32 = 512
	LVS_EX_INFOTIP uint32 = 1024
	LVS_EX_UNDERLINEHOT uint32 = 2048
	LVS_EX_UNDERLINECOLD uint32 = 4096
	LVS_EX_MULTIWORKAREAS uint32 = 8192
	LVS_EX_LABELTIP uint32 = 16384
	LVS_EX_BORDERSELECT uint32 = 32768
	LVS_EX_DOUBLEBUFFER uint32 = 65536
	LVS_EX_HIDELABELS uint32 = 131072
	LVS_EX_SINGLEROW uint32 = 262144
	LVS_EX_SNAPTOGRID uint32 = 524288
	LVS_EX_SIMPLESELECT uint32 = 1048576
	LVS_EX_JUSTIFYCOLUMNS uint32 = 2097152
	LVS_EX_TRANSPARENTBKGND uint32 = 4194304
	LVS_EX_TRANSPARENTSHADOWTEXT uint32 = 8388608
	LVS_EX_AUTOAUTOARRANGE uint32 = 16777216
	LVS_EX_HEADERINALLVIEWS uint32 = 33554432
	LVS_EX_AUTOCHECKSELECT uint32 = 134217728
	LVS_EX_AUTOSIZECOLUMNS uint32 = 268435456
	LVS_EX_COLUMNSNAPPOINTS uint32 = 1073741824
	LVS_EX_COLUMNOVERFLOW uint32 = 2147483648
	LVM_GETSUBITEMRECT uint32 = 4152
	LVM_SUBITEMHITTEST uint32 = 4153
	LVM_SETCOLUMNORDERARRAY uint32 = 4154
	LVM_GETCOLUMNORDERARRAY uint32 = 4155
	LVM_SETHOTITEM uint32 = 4156
	LVM_GETHOTITEM uint32 = 4157
	LVM_SETHOTCURSOR uint32 = 4158
	LVM_GETHOTCURSOR uint32 = 4159
	LVM_APPROXIMATEVIEWRECT uint32 = 4160
	LV_MAX_WORKAREAS uint32 = 16
	LVM_SETWORKAREAS uint32 = 4161
	LVM_GETWORKAREAS uint32 = 4166
	LVM_GETNUMBEROFWORKAREAS uint32 = 4169
	LVM_GETSELECTIONMARK uint32 = 4162
	LVM_SETSELECTIONMARK uint32 = 4163
	LVM_SETHOVERTIME uint32 = 4167
	LVM_GETHOVERTIME uint32 = 4168
	LVM_SETTOOLTIPS uint32 = 4170
	LVM_GETTOOLTIPS uint32 = 4174
	LVM_SORTITEMSEX uint32 = 4177
	LVBKIF_SOURCE_NONE uint32 = 0
	LVBKIF_SOURCE_HBITMAP uint32 = 1
	LVBKIF_SOURCE_URL uint32 = 2
	LVBKIF_SOURCE_MASK uint32 = 3
	LVBKIF_STYLE_NORMAL uint32 = 0
	LVBKIF_STYLE_TILE uint32 = 16
	LVBKIF_STYLE_MASK uint32 = 16
	LVBKIF_FLAG_TILEOFFSET uint32 = 256
	LVBKIF_TYPE_WATERMARK uint32 = 268435456
	LVBKIF_FLAG_ALPHABLEND uint32 = 536870912
	LVM_SETBKIMAGEA uint32 = 4164
	LVM_SETBKIMAGEW uint32 = 4234
	LVM_GETBKIMAGEA uint32 = 4165
	LVM_GETBKIMAGEW uint32 = 4235
	LVM_SETSELECTEDCOLUMN uint32 = 4236
	LV_VIEW_ICON uint32 = 0
	LV_VIEW_DETAILS uint32 = 1
	LV_VIEW_SMALLICON uint32 = 2
	LV_VIEW_LIST uint32 = 3
	LV_VIEW_TILE uint32 = 4
	LV_VIEW_MAX uint32 = 4
	LVM_SETVIEW uint32 = 4238
	LVM_GETVIEW uint32 = 4239
	LVGF_ALIGN uint32 = 8
	LVGF_GROUPID uint32 = 16
	LVGF_SUBTITLE uint32 = 256
	LVGF_TASK uint32 = 512
	LVGF_DESCRIPTIONTOP uint32 = 1024
	LVGF_DESCRIPTIONBOTTOM uint32 = 2048
	LVGF_TITLEIMAGE uint32 = 4096
	LVGF_EXTENDEDIMAGE uint32 = 8192
	LVGF_ITEMS uint32 = 16384
	LVGF_SUBSET uint32 = 32768
	LVGF_SUBSETITEMS uint32 = 65536
	LVGS_NORMAL uint32 = 0
	LVGS_COLLAPSED uint32 = 1
	LVGS_HIDDEN uint32 = 2
	LVGS_NOHEADER uint32 = 4
	LVGS_COLLAPSIBLE uint32 = 8
	LVGS_FOCUSED uint32 = 16
	LVGS_SELECTED uint32 = 32
	LVGS_SUBSETED uint32 = 64
	LVGS_SUBSETLINKFOCUSED uint32 = 128
	LVGA_FOOTER_LEFT uint32 = 8
	LVGA_FOOTER_CENTER uint32 = 16
	LVGA_FOOTER_RIGHT uint32 = 32
	LVM_INSERTGROUP uint32 = 4241
	LVM_SETGROUPINFO uint32 = 4243
	LVM_GETGROUPINFO uint32 = 4245
	LVM_REMOVEGROUP uint32 = 4246
	LVM_MOVEGROUP uint32 = 4247
	LVM_GETGROUPCOUNT uint32 = 4248
	LVM_GETGROUPINFOBYINDEX uint32 = 4249
	LVM_MOVEITEMTOGROUP uint32 = 4250
	LVGGR_GROUP uint32 = 0
	LVGGR_HEADER uint32 = 1
	LVGGR_LABEL uint32 = 2
	LVGGR_SUBSETLINK uint32 = 3
	LVM_GETGROUPRECT uint32 = 4194
	LVGMF_NONE uint32 = 0
	LVGMF_BORDERSIZE uint32 = 1
	LVGMF_BORDERCOLOR uint32 = 2
	LVGMF_TEXTCOLOR uint32 = 4
	LVM_SETGROUPMETRICS uint32 = 4251
	LVM_GETGROUPMETRICS uint32 = 4252
	LVM_ENABLEGROUPVIEW uint32 = 4253
	LVM_SORTGROUPS uint32 = 4254
	LVM_INSERTGROUPSORTED uint32 = 4255
	LVM_REMOVEALLGROUPS uint32 = 4256
	LVM_HASGROUP uint32 = 4257
	LVM_GETGROUPSTATE uint32 = 4188
	LVM_GETFOCUSEDGROUP uint32 = 4189
	LVTVIF_AUTOSIZE uint32 = 0
	LVTVIF_FIXEDWIDTH uint32 = 1
	LVTVIF_FIXEDHEIGHT uint32 = 2
	LVTVIF_FIXEDSIZE uint32 = 3
	LVTVIM_TILESIZE uint32 = 1
	LVTVIM_COLUMNS uint32 = 2
	LVTVIM_LABELMARGIN uint32 = 4
	LVM_SETTILEVIEWINFO uint32 = 4258
	LVM_GETTILEVIEWINFO uint32 = 4259
	LVM_SETTILEINFO uint32 = 4260
	LVM_GETTILEINFO uint32 = 4261
	LVIM_AFTER uint32 = 1
	LVM_SETINSERTMARK uint32 = 4262
	LVM_GETINSERTMARK uint32 = 4263
	LVM_INSERTMARKHITTEST uint32 = 4264
	LVM_GETINSERTMARKRECT uint32 = 4265
	LVM_SETINSERTMARKCOLOR uint32 = 4266
	LVM_GETINSERTMARKCOLOR uint32 = 4267
	LVM_SETINFOTIP uint32 = 4269
	LVM_GETSELECTEDCOLUMN uint32 = 4270
	LVM_ISGROUPVIEWENABLED uint32 = 4271
	LVM_GETOUTLINECOLOR uint32 = 4272
	LVM_SETOUTLINECOLOR uint32 = 4273
	LVM_CANCELEDITLABEL uint32 = 4275
	LVM_MAPINDEXTOID uint32 = 4276
	LVM_MAPIDTOINDEX uint32 = 4277
	LVM_ISITEMVISIBLE uint32 = 4278
	LVM_GETEMPTYTEXT uint32 = 4300
	LVM_GETFOOTERRECT uint32 = 4301
	LVFF_ITEMCOUNT uint32 = 1
	LVM_GETFOOTERINFO uint32 = 4302
	LVM_GETFOOTERITEMRECT uint32 = 4303
	LVFIS_FOCUSED uint32 = 1
	LVM_GETFOOTERITEM uint32 = 4304
	LVM_GETITEMINDEXRECT uint32 = 4305
	LVM_SETITEMINDEXSTATE uint32 = 4306
	LVM_GETNEXTITEMINDEX uint32 = 4307
	LVM_SETBKIMAGE uint32 = 4234
	LVM_GETBKIMAGE uint32 = 4235
	LVKF_ALT uint32 = 1
	LVKF_CONTROL uint32 = 2
	LVKF_SHIFT uint32 = 4
	LVCDRF_NOSELECT uint32 = 65536
	LVCDRF_NOGROUPFRAME uint32 = 131072
	LVIF_DI_SETITEM uint32 = 4096
	LVGIT_UNFOLDED uint32 = 1
	LVNSCH_DEFAULT int32 = -1
	LVNSCH_ERROR int32 = -2
	LVNSCH_IGNORE int32 = -3
	WC_TREEVIEWA string = "SysTreeView32"
	WC_TREEVIEWW string = "SysTreeView32"
	WC_TREEVIEW string = "SysTreeView32"
	TVS_HASBUTTONS uint32 = 1
	TVS_HASLINES uint32 = 2
	TVS_LINESATROOT uint32 = 4
	TVS_EDITLABELS uint32 = 8
	TVS_DISABLEDRAGDROP uint32 = 16
	TVS_SHOWSELALWAYS uint32 = 32
	TVS_RTLREADING uint32 = 64
	TVS_NOTOOLTIPS uint32 = 128
	TVS_CHECKBOXES uint32 = 256
	TVS_TRACKSELECT uint32 = 512
	TVS_SINGLEEXPAND uint32 = 1024
	TVS_INFOTIP uint32 = 2048
	TVS_FULLROWSELECT uint32 = 4096
	TVS_NOSCROLL uint32 = 8192
	TVS_NONEVENHEIGHT uint32 = 16384
	TVS_NOHSCROLL uint32 = 32768
	TVS_EX_NOSINGLECOLLAPSE uint32 = 1
	TVS_EX_MULTISELECT uint32 = 2
	TVS_EX_DOUBLEBUFFER uint32 = 4
	TVS_EX_NOINDENTSTATE uint32 = 8
	TVS_EX_RICHTOOLTIP uint32 = 16
	TVS_EX_AUTOHSCROLL uint32 = 32
	TVS_EX_FADEINOUTEXPANDOS uint32 = 64
	TVS_EX_PARTIALCHECKBOXES uint32 = 128
	TVS_EX_EXCLUSIONCHECKBOXES uint32 = 256
	TVS_EX_DIMMEDCHECKBOXES uint32 = 512
	TVS_EX_DRAWIMAGEASYNC uint32 = 1024
	TVIS_SELECTED uint32 = 2
	TVIS_CUT uint32 = 4
	TVIS_DROPHILITED uint32 = 8
	TVIS_BOLD uint32 = 16
	TVIS_EXPANDED uint32 = 32
	TVIS_EXPANDEDONCE uint32 = 64
	TVIS_EXPANDPARTIAL uint32 = 128
	TVIS_OVERLAYMASK uint32 = 3840
	TVIS_STATEIMAGEMASK uint32 = 61440
	TVIS_USERMASK uint32 = 61440
	TVIS_EX_FLAT uint32 = 1
	TVIS_EX_DISABLED uint32 = 2
	TVIS_EX_ALL uint32 = 2
	TVM_INSERTITEMA uint32 = 4352
	TVM_INSERTITEMW uint32 = 4402
	TVM_INSERTITEM uint32 = 4402
	TVM_DELETEITEM uint32 = 4353
	TVM_EXPAND uint32 = 4354
	TVE_COLLAPSE uint32 = 1
	TVE_EXPAND uint32 = 2
	TVE_TOGGLE uint32 = 3
	TVE_EXPANDPARTIAL uint32 = 16384
	TVE_COLLAPSERESET uint32 = 32768
	TVM_GETITEMRECT uint32 = 4356
	TVM_GETCOUNT uint32 = 4357
	TVM_GETINDENT uint32 = 4358
	TVM_SETINDENT uint32 = 4359
	TVM_GETIMAGELIST uint32 = 4360
	TVSIL_NORMAL uint32 = 0
	TVSIL_STATE uint32 = 2
	TVM_SETIMAGELIST uint32 = 4361
	TVM_GETNEXTITEM uint32 = 4362
	TVGN_ROOT uint32 = 0
	TVGN_NEXT uint32 = 1
	TVGN_PREVIOUS uint32 = 2
	TVGN_PARENT uint32 = 3
	TVGN_CHILD uint32 = 4
	TVGN_FIRSTVISIBLE uint32 = 5
	TVGN_NEXTVISIBLE uint32 = 6
	TVGN_PREVIOUSVISIBLE uint32 = 7
	TVGN_DROPHILITE uint32 = 8
	TVGN_CARET uint32 = 9
	TVGN_LASTVISIBLE uint32 = 10
	TVGN_NEXTSELECTED uint32 = 11
	TVSI_NOSINGLEEXPAND uint32 = 32768
	TVM_SELECTITEM uint32 = 4363
	TVM_GETITEMA uint32 = 4364
	TVM_GETITEMW uint32 = 4414
	TVM_GETITEM uint32 = 4414
	TVM_SETITEMA uint32 = 4365
	TVM_SETITEMW uint32 = 4415
	TVM_SETITEM uint32 = 4415
	TVM_EDITLABELA uint32 = 4366
	TVM_EDITLABELW uint32 = 4417
	TVM_EDITLABEL uint32 = 4417
	TVM_GETEDITCONTROL uint32 = 4367
	TVM_GETVISIBLECOUNT uint32 = 4368
	TVM_HITTEST uint32 = 4369
	TVM_CREATEDRAGIMAGE uint32 = 4370
	TVM_SORTCHILDREN uint32 = 4371
	TVM_ENSUREVISIBLE uint32 = 4372
	TVM_SORTCHILDRENCB uint32 = 4373
	TVM_ENDEDITLABELNOW uint32 = 4374
	TVM_GETISEARCHSTRINGA uint32 = 4375
	TVM_GETISEARCHSTRINGW uint32 = 4416
	TVM_GETISEARCHSTRING uint32 = 4416
	TVM_SETTOOLTIPS uint32 = 4376
	TVM_GETTOOLTIPS uint32 = 4377
	TVM_SETINSERTMARK uint32 = 4378
	TVM_SETUNICODEFORMAT uint32 = 8197
	TVM_GETUNICODEFORMAT uint32 = 8198
	TVM_SETITEMHEIGHT uint32 = 4379
	TVM_GETITEMHEIGHT uint32 = 4380
	TVM_SETBKCOLOR uint32 = 4381
	TVM_SETTEXTCOLOR uint32 = 4382
	TVM_GETBKCOLOR uint32 = 4383
	TVM_GETTEXTCOLOR uint32 = 4384
	TVM_SETSCROLLTIME uint32 = 4385
	TVM_GETSCROLLTIME uint32 = 4386
	TVM_SETINSERTMARKCOLOR uint32 = 4389
	TVM_GETINSERTMARKCOLOR uint32 = 4390
	TVM_SETBORDER uint32 = 4387
	TVSBF_XBORDER uint32 = 1
	TVSBF_YBORDER uint32 = 2
	TVM_GETITEMSTATE uint32 = 4391
	TVM_SETLINECOLOR uint32 = 4392
	TVM_GETLINECOLOR uint32 = 4393
	TVM_MAPACCIDTOHTREEITEM uint32 = 4394
	TVM_MAPHTREEITEMTOACCID uint32 = 4395
	TVM_SETEXTENDEDSTYLE uint32 = 4396
	TVM_GETEXTENDEDSTYLE uint32 = 4397
	TVM_SETAUTOSCROLLINFO uint32 = 4411
	TVM_SETHOT uint32 = 4410
	TVM_GETSELECTEDCOUNT uint32 = 4422
	TVM_SHOWINFOTIP uint32 = 4423
	TVM_GETITEMPARTRECT uint32 = 4424
	TVC_UNKNOWN uint32 = 0
	TVC_BYMOUSE uint32 = 1
	TVC_BYKEYBOARD uint32 = 2
	TVNRET_DEFAULT uint32 = 0
	TVNRET_SKIPOLD uint32 = 1
	TVNRET_SKIPNEW uint32 = 2
	TVCDRF_NOIMAGES uint32 = 65536
	WC_COMBOBOXEXW string = "ComboBoxEx32"
	WC_COMBOBOXEXA string = "ComboBoxEx32"
	WC_COMBOBOXEX string = "ComboBoxEx32"
	CBEM_INSERTITEMA uint32 = 1025
	CBEM_SETIMAGELIST uint32 = 1026
	CBEM_GETIMAGELIST uint32 = 1027
	CBEM_GETITEMA uint32 = 1028
	CBEM_SETITEMA uint32 = 1029
	CBEM_GETCOMBOCONTROL uint32 = 1030
	CBEM_GETEDITCONTROL uint32 = 1031
	CBEM_SETEXSTYLE uint32 = 1032
	CBEM_SETEXTENDEDSTYLE uint32 = 1038
	CBEM_GETEXSTYLE uint32 = 1033
	CBEM_GETEXTENDEDSTYLE uint32 = 1033
	CBEM_SETUNICODEFORMAT uint32 = 8197
	CBEM_GETUNICODEFORMAT uint32 = 8198
	CBEM_HASEDITCHANGED uint32 = 1034
	CBEM_INSERTITEMW uint32 = 1035
	CBEM_SETITEMW uint32 = 1036
	CBEM_GETITEMW uint32 = 1037
	CBEM_INSERTITEM uint32 = 1035
	CBEM_SETITEM uint32 = 1036
	CBEM_GETITEM uint32 = 1037
	CBEM_SETWINDOWTHEME uint32 = 8203
	CBES_EX_NOEDITIMAGE uint32 = 1
	CBES_EX_NOEDITIMAGEINDENT uint32 = 2
	CBES_EX_PATHWORDBREAKPROC uint32 = 4
	CBES_EX_NOSIZELIMIT uint32 = 8
	CBES_EX_CASESENSITIVE uint32 = 16
	CBES_EX_TEXTENDELLIPSIS uint32 = 32
	CBENF_KILLFOCUS uint32 = 1
	CBENF_RETURN uint32 = 2
	CBENF_ESCAPE uint32 = 3
	CBENF_DROPDOWN uint32 = 4
	CBEMAXSTRLEN uint32 = 260
	WC_TABCONTROLA string = "SysTabControl32"
	WC_TABCONTROLW string = "SysTabControl32"
	WC_TABCONTROL string = "SysTabControl32"
	TCS_SCROLLOPPOSITE uint32 = 1
	TCS_BOTTOM uint32 = 2
	TCS_RIGHT uint32 = 2
	TCS_MULTISELECT uint32 = 4
	TCS_FLATBUTTONS uint32 = 8
	TCS_FORCEICONLEFT uint32 = 16
	TCS_FORCELABELLEFT uint32 = 32
	TCS_HOTTRACK uint32 = 64
	TCS_VERTICAL uint32 = 128
	TCS_TABS uint32 = 0
	TCS_BUTTONS uint32 = 256
	TCS_SINGLELINE uint32 = 0
	TCS_MULTILINE uint32 = 512
	TCS_RIGHTJUSTIFY uint32 = 0
	TCS_FIXEDWIDTH uint32 = 1024
	TCS_RAGGEDRIGHT uint32 = 2048
	TCS_FOCUSONBUTTONDOWN uint32 = 4096
	TCS_OWNERDRAWFIXED uint32 = 8192
	TCS_TOOLTIPS uint32 = 16384
	TCS_FOCUSNEVER uint32 = 32768
	TCS_EX_FLATSEPARATORS uint32 = 1
	TCS_EX_REGISTERDROP uint32 = 2
	TCM_GETIMAGELIST uint32 = 4866
	TCM_SETIMAGELIST uint32 = 4867
	TCM_GETITEMCOUNT uint32 = 4868
	TCIS_BUTTONPRESSED uint32 = 1
	TCIS_HIGHLIGHTED uint32 = 2
	TCM_GETITEMA uint32 = 4869
	TCM_GETITEMW uint32 = 4924
	TCM_GETITEM uint32 = 4924
	TCM_SETITEMA uint32 = 4870
	TCM_SETITEMW uint32 = 4925
	TCM_SETITEM uint32 = 4925
	TCM_INSERTITEMA uint32 = 4871
	TCM_INSERTITEMW uint32 = 4926
	TCM_INSERTITEM uint32 = 4926
	TCM_DELETEITEM uint32 = 4872
	TCM_DELETEALLITEMS uint32 = 4873
	TCM_GETITEMRECT uint32 = 4874
	TCM_GETCURSEL uint32 = 4875
	TCM_SETCURSEL uint32 = 4876
	TCM_HITTEST uint32 = 4877
	TCM_SETITEMEXTRA uint32 = 4878
	TCM_ADJUSTRECT uint32 = 4904
	TCM_SETITEMSIZE uint32 = 4905
	TCM_REMOVEIMAGE uint32 = 4906
	TCM_SETPADDING uint32 = 4907
	TCM_GETROWCOUNT uint32 = 4908
	TCM_GETTOOLTIPS uint32 = 4909
	TCM_SETTOOLTIPS uint32 = 4910
	TCM_GETCURFOCUS uint32 = 4911
	TCM_SETCURFOCUS uint32 = 4912
	TCM_SETMINTABWIDTH uint32 = 4913
	TCM_DESELECTALL uint32 = 4914
	TCM_HIGHLIGHTITEM uint32 = 4915
	TCM_SETEXTENDEDSTYLE uint32 = 4916
	TCM_GETEXTENDEDSTYLE uint32 = 4917
	TCM_SETUNICODEFORMAT uint32 = 8197
	TCM_GETUNICODEFORMAT uint32 = 8198
	ANIMATE_CLASSW string = "SysAnimate32"
	ANIMATE_CLASSA string = "SysAnimate32"
	ANIMATE_CLASS string = "SysAnimate32"
	ACS_CENTER uint32 = 1
	ACS_TRANSPARENT uint32 = 2
	ACS_AUTOPLAY uint32 = 4
	ACS_TIMER uint32 = 8
	ACM_OPENA uint32 = 1124
	ACM_OPENW uint32 = 1127
	ACM_OPEN uint32 = 1127
	ACM_PLAY uint32 = 1125
	ACM_STOP uint32 = 1126
	ACM_ISPLAYING uint32 = 1128
	ACN_START uint32 = 1
	ACN_STOP uint32 = 2
	MONTHCAL_CLASSW string = "SysMonthCal32"
	MONTHCAL_CLASSA string = "SysMonthCal32"
	MONTHCAL_CLASS string = "SysMonthCal32"
	MCM_FIRST uint32 = 4096
	MCM_GETCURSEL uint32 = 4097
	MCM_SETCURSEL uint32 = 4098
	MCM_GETMAXSELCOUNT uint32 = 4099
	MCM_SETMAXSELCOUNT uint32 = 4100
	MCM_GETSELRANGE uint32 = 4101
	MCM_SETSELRANGE uint32 = 4102
	MCM_GETMONTHRANGE uint32 = 4103
	MCM_SETDAYSTATE uint32 = 4104
	MCM_GETMINREQRECT uint32 = 4105
	MCM_SETCOLOR uint32 = 4106
	MCM_GETCOLOR uint32 = 4107
	MCSC_BACKGROUND uint32 = 0
	MCSC_TEXT uint32 = 1
	MCSC_TITLEBK uint32 = 2
	MCSC_TITLETEXT uint32 = 3
	MCSC_MONTHBK uint32 = 4
	MCSC_TRAILINGTEXT uint32 = 5
	MCM_SETTODAY uint32 = 4108
	MCM_GETTODAY uint32 = 4109
	MCM_HITTEST uint32 = 4110
	MCHT_TITLE uint32 = 65536
	MCHT_CALENDAR uint32 = 131072
	MCHT_TODAYLINK uint32 = 196608
	MCHT_CALENDARCONTROL uint32 = 1048576
	MCHT_NEXT uint32 = 16777216
	MCHT_PREV uint32 = 33554432
	MCHT_NOWHERE uint32 = 0
	MCHT_TITLEBK uint32 = 65536
	MCHT_CALENDARBK uint32 = 131072
	MCM_SETFIRSTDAYOFWEEK uint32 = 4111
	MCM_GETFIRSTDAYOFWEEK uint32 = 4112
	MCM_GETRANGE uint32 = 4113
	MCM_SETRANGE uint32 = 4114
	MCM_GETMONTHDELTA uint32 = 4115
	MCM_SETMONTHDELTA uint32 = 4116
	MCM_GETMAXTODAYWIDTH uint32 = 4117
	MCM_SETUNICODEFORMAT uint32 = 8197
	MCM_GETUNICODEFORMAT uint32 = 8198
	MCMV_MONTH uint32 = 0
	MCMV_YEAR uint32 = 1
	MCMV_DECADE uint32 = 2
	MCMV_CENTURY uint32 = 3
	MCMV_MAX uint32 = 3
	MCM_GETCURRENTVIEW uint32 = 4118
	MCM_GETCALENDARCOUNT uint32 = 4119
	MCM_GETCALENDARGRIDINFO uint32 = 4120
	MCM_GETCALID uint32 = 4123
	MCM_SETCALID uint32 = 4124
	MCM_SIZERECTTOMIN uint32 = 4125
	MCM_SETCALENDARBORDER uint32 = 4126
	MCM_GETCALENDARBORDER uint32 = 4127
	MCM_SETCURRENTVIEW uint32 = 4128
	MCS_DAYSTATE uint32 = 1
	MCS_MULTISELECT uint32 = 2
	MCS_WEEKNUMBERS uint32 = 4
	MCS_NOTODAYCIRCLE uint32 = 8
	MCS_NOTODAY uint32 = 16
	MCS_NOTRAILINGDATES uint32 = 64
	MCS_SHORTDAYSOFWEEK uint32 = 128
	MCS_NOSELCHANGEONNAV uint32 = 256
	GMR_VISIBLE uint32 = 0
	GMR_DAYSTATE uint32 = 1
	DATETIMEPICK_CLASSW string = "SysDateTimePick32"
	DATETIMEPICK_CLASSA string = "SysDateTimePick32"
	DATETIMEPICK_CLASS string = "SysDateTimePick32"
	DTM_FIRST uint32 = 4096
	DTM_GETSYSTEMTIME uint32 = 4097
	DTM_SETSYSTEMTIME uint32 = 4098
	DTM_GETRANGE uint32 = 4099
	DTM_SETRANGE uint32 = 4100
	DTM_SETFORMATA uint32 = 4101
	DTM_SETFORMATW uint32 = 4146
	DTM_SETFORMAT uint32 = 4146
	DTM_SETMCCOLOR uint32 = 4102
	DTM_GETMCCOLOR uint32 = 4103
	DTM_GETMONTHCAL uint32 = 4104
	DTM_SETMCFONT uint32 = 4105
	DTM_GETMCFONT uint32 = 4106
	DTM_SETMCSTYLE uint32 = 4107
	DTM_GETMCSTYLE uint32 = 4108
	DTM_CLOSEMONTHCAL uint32 = 4109
	DTM_GETDATETIMEPICKERINFO uint32 = 4110
	DTM_GETIDEALSIZE uint32 = 4111
	DTS_UPDOWN uint32 = 1
	DTS_SHOWNONE uint32 = 2
	DTS_SHORTDATEFORMAT uint32 = 0
	DTS_LONGDATEFORMAT uint32 = 4
	DTS_SHORTDATECENTURYFORMAT uint32 = 12
	DTS_TIMEFORMAT uint32 = 9
	DTS_APPCANPARSE uint32 = 16
	DTS_RIGHTALIGN uint32 = 32
	GDTR_MIN uint32 = 1
	GDTR_MAX uint32 = 2
	GDT_ERROR int32 = -1
	GDT_VALID uint32 = 0
	GDT_NONE uint32 = 1
	IPM_CLEARADDRESS uint32 = 1124
	IPM_SETADDRESS uint32 = 1125
	IPM_GETADDRESS uint32 = 1126
	IPM_SETRANGE uint32 = 1127
	IPM_SETFOCUS uint32 = 1128
	IPM_ISBLANK uint32 = 1129
	WC_IPADDRESSW string = "SysIPAddress32"
	WC_IPADDRESSA string = "SysIPAddress32"
	WC_IPADDRESS string = "SysIPAddress32"
	WC_PAGESCROLLERW string = "SysPager"
	WC_PAGESCROLLERA string = "SysPager"
	WC_PAGESCROLLER string = "SysPager"
	PGS_VERT uint32 = 0
	PGS_HORZ uint32 = 1
	PGS_AUTOSCROLL uint32 = 2
	PGS_DRAGNDROP uint32 = 4
	PGF_INVISIBLE uint32 = 0
	PGF_NORMAL uint32 = 1
	PGF_GRAYED uint32 = 2
	PGF_DEPRESSED uint32 = 4
	PGF_HOT uint32 = 8
	PGB_TOPORLEFT uint32 = 0
	PGB_BOTTOMORRIGHT uint32 = 1
	PGM_SETCHILD uint32 = 5121
	PGM_RECALCSIZE uint32 = 5122
	PGM_FORWARDMOUSE uint32 = 5123
	PGM_SETBKCOLOR uint32 = 5124
	PGM_GETBKCOLOR uint32 = 5125
	PGM_SETBORDER uint32 = 5126
	PGM_GETBORDER uint32 = 5127
	PGM_SETPOS uint32 = 5128
	PGM_GETPOS uint32 = 5129
	PGM_SETBUTTONSIZE uint32 = 5130
	PGM_GETBUTTONSIZE uint32 = 5131
	PGM_GETBUTTONSTATE uint32 = 5132
	PGM_GETDROPTARGET uint32 = 8196
	PGM_SETSCROLLINFO uint32 = 5133
	WC_NATIVEFONTCTLW string = "NativeFontCtl"
	WC_NATIVEFONTCTLA string = "NativeFontCtl"
	WC_NATIVEFONTCTL string = "NativeFontCtl"
	NFS_EDIT uint32 = 1
	NFS_STATIC uint32 = 2
	NFS_LISTCOMBO uint32 = 4
	NFS_BUTTON uint32 = 8
	NFS_ALL uint32 = 16
	NFS_USEFONTASSOC uint32 = 32
	WC_BUTTONA string = "Button"
	WC_BUTTONW string = "Button"
	WC_BUTTON string = "Button"
	BCM_GETIDEALSIZE uint32 = 5633
	BCM_SETIMAGELIST uint32 = 5634
	BCM_GETIMAGELIST uint32 = 5635
	BCM_SETTEXTMARGIN uint32 = 5636
	BCM_GETTEXTMARGIN uint32 = 5637
	BCN_HOTITEMCHANGE uint32 = 4294966047
	BST_HOT uint32 = 512
	BST_DROPDOWNPUSHED uint32 = 1024
	BS_SPLITBUTTON int32 = 12
	BS_DEFSPLITBUTTON int32 = 13
	BS_COMMANDLINK int32 = 14
	BS_DEFCOMMANDLINK int32 = 15
	BCSIF_GLYPH uint32 = 1
	BCSIF_IMAGE uint32 = 2
	BCSIF_STYLE uint32 = 4
	BCSIF_SIZE uint32 = 8
	BCSS_NOSPLIT uint32 = 1
	BCSS_STRETCH uint32 = 2
	BCSS_ALIGNLEFT uint32 = 4
	BCSS_IMAGE uint32 = 8
	BCM_SETDROPDOWNSTATE uint32 = 5638
	BCM_SETSPLITINFO uint32 = 5639
	BCM_GETSPLITINFO uint32 = 5640
	BCM_SETNOTE uint32 = 5641
	BCM_GETNOTE uint32 = 5642
	BCM_GETNOTELENGTH uint32 = 5643
	BCM_SETSHIELD uint32 = 5644
	BCN_DROPDOWN uint32 = 4294966048
	WC_STATICA string = "Static"
	WC_STATICW string = "Static"
	WC_STATIC string = "Static"
	WC_EDITA string = "Edit"
	WC_EDITW string = "Edit"
	WC_EDIT string = "Edit"
	ES_EX_ALLOWEOL_CR int32 = 1
	ES_EX_ALLOWEOL_LF int32 = 2
	ES_EX_CONVERT_EOL_ON_PASTE int32 = 4
	ES_EX_ZOOMABLE int32 = 16
	EM_SETCUEBANNER uint32 = 5377
	EM_GETCUEBANNER uint32 = 5378
	EM_SHOWBALLOONTIP uint32 = 5379
	EM_HIDEBALLOONTIP uint32 = 5380
	EM_SETHILITE uint32 = 5381
	EM_GETHILITE uint32 = 5382
	EM_NOSETFOCUS uint32 = 5383
	EM_TAKEFOCUS uint32 = 5384
	EM_SETEXTENDEDSTYLE uint32 = 5386
	EM_GETEXTENDEDSTYLE uint32 = 5387
	EM_SETENDOFLINE uint32 = 5388
	EM_GETENDOFLINE uint32 = 5389
	EM_ENABLESEARCHWEB uint32 = 5390
	EM_SEARCHWEB uint32 = 5391
	EM_SETCARETINDEX uint32 = 5393
	EM_GETCARETINDEX uint32 = 5394
	EM_FILELINEFROMCHAR uint32 = 5395
	EM_FILELINEINDEX uint32 = 5396
	EM_FILELINELENGTH uint32 = 5397
	EM_GETFILELINE uint32 = 5398
	EM_GETFILELINECOUNT uint32 = 5399
	WC_LISTBOXA string = "ListBox"
	WC_LISTBOXW string = "ListBox"
	WC_LISTBOX string = "ListBox"
	WC_COMBOBOXA string = "ComboBox"
	WC_COMBOBOXW string = "ComboBox"
	WC_COMBOBOX string = "ComboBox"
	CB_SETMINVISIBLE uint32 = 5889
	CB_GETMINVISIBLE uint32 = 5890
	CB_SETCUEBANNER uint32 = 5891
	CB_GETCUEBANNER uint32 = 5892
	WC_SCROLLBARA string = "ScrollBar"
	WC_SCROLLBARW string = "ScrollBar"
	WC_SCROLLBAR string = "ScrollBar"
	WM_MOUSEHOVER uint32 = 673
	WM_MOUSELEAVE uint32 = 675
	HOVER_DEFAULT uint32 = 4294967295
	WSB_PROP_MASK int32 = 4095
	FSB_FLAT_MODE uint32 = 2
	FSB_ENCARTA_MODE uint32 = 1
	FSB_REGULAR_MODE uint32 = 0
	VSCLASS_LINK string = "LINK"
	VSCLASS_EMPTYMARKUP string = "EMPTYMARKUP"
	VSCLASS_STATIC string = "STATIC"
	VSCLASS_PAGE string = "PAGE"
	VSCLASS_MONTHCAL string = "MONTHCAL"
	VSCLASS_CLOCK string = "CLOCK"
	VSCLASS_TRAYNOTIFY string = "TRAYNOTIFY"
	VSCLASS_TASKBAR string = "TASKBAR"
	VSCLASS_TASKBAND string = "TASKBAND"
	VSCLASS_STARTPANEL string = "STARTPANEL"
	VSCLASS_MENUBAND string = "MENUBAND"
	CCHCCCLASS uint32 = 32
	CCHCCDESC uint32 = 32
	CCHCCTEXT uint32 = 256
	CCF_NOTEXT uint32 = 1
	EM_GETSEL uint32 = 176
	EM_SETSEL uint32 = 177
	EM_GETRECT uint32 = 178
	EM_SETRECT uint32 = 179
	EM_SETRECTNP uint32 = 180
	EM_SCROLL uint32 = 181
	EM_LINESCROLL uint32 = 182
	EM_GETMODIFY uint32 = 184
	EM_SETMODIFY uint32 = 185
	EM_GETLINECOUNT uint32 = 186
	EM_LINEINDEX uint32 = 187
	EM_SETHANDLE uint32 = 188
	EM_GETHANDLE uint32 = 189
	EM_GETTHUMB uint32 = 190
	EM_LINELENGTH uint32 = 193
	EM_REPLACESEL uint32 = 194
	EM_GETLINE uint32 = 196
	EM_LIMITTEXT uint32 = 197
	EM_CANUNDO uint32 = 198
	EM_UNDO uint32 = 199
	EM_FMTLINES uint32 = 200
	EM_LINEFROMCHAR uint32 = 201
	EM_SETTABSTOPS uint32 = 203
	EM_SETPASSWORDCHAR uint32 = 204
	EM_EMPTYUNDOBUFFER uint32 = 205
	EM_GETFIRSTVISIBLELINE uint32 = 206
	EM_SETREADONLY uint32 = 207
	EM_SETWORDBREAKPROC uint32 = 208
	EM_GETWORDBREAKPROC uint32 = 209
	EM_GETPASSWORDCHAR uint32 = 210
	EM_SETMARGINS uint32 = 211
	EM_GETMARGINS uint32 = 212
	EM_SETIMESTATUS uint32 = 216
	EM_GETIMESTATUS uint32 = 217
	EM_ENABLEFEATURE uint32 = 218
)

// enums

// enum THEME_PROPERTY_SYMBOL_ID
type THEME_PROPERTY_SYMBOL_ID uint32
const (
	TMT_RESERVEDLOW THEME_PROPERTY_SYMBOL_ID = 0
	TMT_RESERVEDHIGH THEME_PROPERTY_SYMBOL_ID = 7999
	TMT_DIBDATA THEME_PROPERTY_SYMBOL_ID = 2
	TMT_GLYPHDIBDATA THEME_PROPERTY_SYMBOL_ID = 8
	TMT_ENUM THEME_PROPERTY_SYMBOL_ID = 200
	TMT_STRING THEME_PROPERTY_SYMBOL_ID = 201
	TMT_INT THEME_PROPERTY_SYMBOL_ID = 202
	TMT_BOOL THEME_PROPERTY_SYMBOL_ID = 203
	TMT_COLOR THEME_PROPERTY_SYMBOL_ID = 204
	TMT_MARGINS THEME_PROPERTY_SYMBOL_ID = 205
	TMT_FILENAME THEME_PROPERTY_SYMBOL_ID = 206
	TMT_SIZE THEME_PROPERTY_SYMBOL_ID = 207
	TMT_POSITION THEME_PROPERTY_SYMBOL_ID = 208
	TMT_RECT THEME_PROPERTY_SYMBOL_ID = 209
	TMT_FONT THEME_PROPERTY_SYMBOL_ID = 210
	TMT_INTLIST THEME_PROPERTY_SYMBOL_ID = 211
	TMT_HBITMAP THEME_PROPERTY_SYMBOL_ID = 212
	TMT_DISKSTREAM THEME_PROPERTY_SYMBOL_ID = 213
	TMT_STREAM THEME_PROPERTY_SYMBOL_ID = 214
	TMT_BITMAPREF THEME_PROPERTY_SYMBOL_ID = 215
	TMT_FLOAT THEME_PROPERTY_SYMBOL_ID = 216
	TMT_FLOATLIST THEME_PROPERTY_SYMBOL_ID = 217
	TMT_COLORSCHEMES THEME_PROPERTY_SYMBOL_ID = 401
	TMT_SIZES THEME_PROPERTY_SYMBOL_ID = 402
	TMT_CHARSET THEME_PROPERTY_SYMBOL_ID = 403
	TMT_NAME THEME_PROPERTY_SYMBOL_ID = 600
	TMT_DISPLAYNAME THEME_PROPERTY_SYMBOL_ID = 601
	TMT_TOOLTIP THEME_PROPERTY_SYMBOL_ID = 602
	TMT_COMPANY THEME_PROPERTY_SYMBOL_ID = 603
	TMT_AUTHOR THEME_PROPERTY_SYMBOL_ID = 604
	TMT_COPYRIGHT THEME_PROPERTY_SYMBOL_ID = 605
	TMT_URL THEME_PROPERTY_SYMBOL_ID = 606
	TMT_VERSION THEME_PROPERTY_SYMBOL_ID = 607
	TMT_DESCRIPTION THEME_PROPERTY_SYMBOL_ID = 608
	TMT_FIRST_RCSTRING_NAME THEME_PROPERTY_SYMBOL_ID = 601
	TMT_LAST_RCSTRING_NAME THEME_PROPERTY_SYMBOL_ID = 608
	TMT_CAPTIONFONT THEME_PROPERTY_SYMBOL_ID = 801
	TMT_SMALLCAPTIONFONT THEME_PROPERTY_SYMBOL_ID = 802
	TMT_MENUFONT THEME_PROPERTY_SYMBOL_ID = 803
	TMT_STATUSFONT THEME_PROPERTY_SYMBOL_ID = 804
	TMT_MSGBOXFONT THEME_PROPERTY_SYMBOL_ID = 805
	TMT_ICONTITLEFONT THEME_PROPERTY_SYMBOL_ID = 806
	TMT_HEADING1FONT THEME_PROPERTY_SYMBOL_ID = 807
	TMT_HEADING2FONT THEME_PROPERTY_SYMBOL_ID = 808
	TMT_BODYFONT THEME_PROPERTY_SYMBOL_ID = 809
	TMT_FIRSTFONT THEME_PROPERTY_SYMBOL_ID = 801
	TMT_LASTFONT THEME_PROPERTY_SYMBOL_ID = 809
	TMT_FLATMENUS THEME_PROPERTY_SYMBOL_ID = 1001
	TMT_FIRSTBOOL THEME_PROPERTY_SYMBOL_ID = 1001
	TMT_LASTBOOL THEME_PROPERTY_SYMBOL_ID = 1001
	TMT_SIZINGBORDERWIDTH THEME_PROPERTY_SYMBOL_ID = 1201
	TMT_SCROLLBARWIDTH THEME_PROPERTY_SYMBOL_ID = 1202
	TMT_SCROLLBARHEIGHT THEME_PROPERTY_SYMBOL_ID = 1203
	TMT_CAPTIONBARWIDTH THEME_PROPERTY_SYMBOL_ID = 1204
	TMT_CAPTIONBARHEIGHT THEME_PROPERTY_SYMBOL_ID = 1205
	TMT_SMCAPTIONBARWIDTH THEME_PROPERTY_SYMBOL_ID = 1206
	TMT_SMCAPTIONBARHEIGHT THEME_PROPERTY_SYMBOL_ID = 1207
	TMT_MENUBARWIDTH THEME_PROPERTY_SYMBOL_ID = 1208
	TMT_MENUBARHEIGHT THEME_PROPERTY_SYMBOL_ID = 1209
	TMT_PADDEDBORDERWIDTH THEME_PROPERTY_SYMBOL_ID = 1210
	TMT_FIRSTSIZE THEME_PROPERTY_SYMBOL_ID = 1201
	TMT_LASTSIZE THEME_PROPERTY_SYMBOL_ID = 1210
	TMT_MINCOLORDEPTH THEME_PROPERTY_SYMBOL_ID = 1301
	TMT_FIRSTINT THEME_PROPERTY_SYMBOL_ID = 1301
	TMT_LASTINT THEME_PROPERTY_SYMBOL_ID = 1301
	TMT_CSSNAME THEME_PROPERTY_SYMBOL_ID = 1401
	TMT_XMLNAME THEME_PROPERTY_SYMBOL_ID = 1402
	TMT_LASTUPDATED THEME_PROPERTY_SYMBOL_ID = 1403
	TMT_ALIAS THEME_PROPERTY_SYMBOL_ID = 1404
	TMT_FIRSTSTRING THEME_PROPERTY_SYMBOL_ID = 1401
	TMT_LASTSTRING THEME_PROPERTY_SYMBOL_ID = 1404
	TMT_SCROLLBAR THEME_PROPERTY_SYMBOL_ID = 1601
	TMT_BACKGROUND THEME_PROPERTY_SYMBOL_ID = 1602
	TMT_ACTIVECAPTION THEME_PROPERTY_SYMBOL_ID = 1603
	TMT_INACTIVECAPTION THEME_PROPERTY_SYMBOL_ID = 1604
	TMT_MENU THEME_PROPERTY_SYMBOL_ID = 1605
	TMT_WINDOW THEME_PROPERTY_SYMBOL_ID = 1606
	TMT_WINDOWFRAME THEME_PROPERTY_SYMBOL_ID = 1607
	TMT_MENUTEXT THEME_PROPERTY_SYMBOL_ID = 1608
	TMT_WINDOWTEXT THEME_PROPERTY_SYMBOL_ID = 1609
	TMT_CAPTIONTEXT THEME_PROPERTY_SYMBOL_ID = 1610
	TMT_ACTIVEBORDER THEME_PROPERTY_SYMBOL_ID = 1611
	TMT_INACTIVEBORDER THEME_PROPERTY_SYMBOL_ID = 1612
	TMT_APPWORKSPACE THEME_PROPERTY_SYMBOL_ID = 1613
	TMT_HIGHLIGHT THEME_PROPERTY_SYMBOL_ID = 1614
	TMT_HIGHLIGHTTEXT THEME_PROPERTY_SYMBOL_ID = 1615
	TMT_BTNFACE THEME_PROPERTY_SYMBOL_ID = 1616
	TMT_BTNSHADOW THEME_PROPERTY_SYMBOL_ID = 1617
	TMT_GRAYTEXT THEME_PROPERTY_SYMBOL_ID = 1618
	TMT_BTNTEXT THEME_PROPERTY_SYMBOL_ID = 1619
	TMT_INACTIVECAPTIONTEXT THEME_PROPERTY_SYMBOL_ID = 1620
	TMT_BTNHIGHLIGHT THEME_PROPERTY_SYMBOL_ID = 1621
	TMT_DKSHADOW3D THEME_PROPERTY_SYMBOL_ID = 1622
	TMT_LIGHT3D THEME_PROPERTY_SYMBOL_ID = 1623
	TMT_INFOTEXT THEME_PROPERTY_SYMBOL_ID = 1624
	TMT_INFOBK THEME_PROPERTY_SYMBOL_ID = 1625
	TMT_BUTTONALTERNATEFACE THEME_PROPERTY_SYMBOL_ID = 1626
	TMT_HOTTRACKING THEME_PROPERTY_SYMBOL_ID = 1627
	TMT_GRADIENTACTIVECAPTION THEME_PROPERTY_SYMBOL_ID = 1628
	TMT_GRADIENTINACTIVECAPTION THEME_PROPERTY_SYMBOL_ID = 1629
	TMT_MENUHILIGHT THEME_PROPERTY_SYMBOL_ID = 1630
	TMT_MENUBAR THEME_PROPERTY_SYMBOL_ID = 1631
	TMT_FIRSTCOLOR THEME_PROPERTY_SYMBOL_ID = 1601
	TMT_LASTCOLOR THEME_PROPERTY_SYMBOL_ID = 1631
	TMT_FROMHUE1 THEME_PROPERTY_SYMBOL_ID = 1801
	TMT_FROMHUE2 THEME_PROPERTY_SYMBOL_ID = 1802
	TMT_FROMHUE3 THEME_PROPERTY_SYMBOL_ID = 1803
	TMT_FROMHUE4 THEME_PROPERTY_SYMBOL_ID = 1804
	TMT_FROMHUE5 THEME_PROPERTY_SYMBOL_ID = 1805
	TMT_TOHUE1 THEME_PROPERTY_SYMBOL_ID = 1806
	TMT_TOHUE2 THEME_PROPERTY_SYMBOL_ID = 1807
	TMT_TOHUE3 THEME_PROPERTY_SYMBOL_ID = 1808
	TMT_TOHUE4 THEME_PROPERTY_SYMBOL_ID = 1809
	TMT_TOHUE5 THEME_PROPERTY_SYMBOL_ID = 1810
	TMT_FROMCOLOR1 THEME_PROPERTY_SYMBOL_ID = 2001
	TMT_FROMCOLOR2 THEME_PROPERTY_SYMBOL_ID = 2002
	TMT_FROMCOLOR3 THEME_PROPERTY_SYMBOL_ID = 2003
	TMT_FROMCOLOR4 THEME_PROPERTY_SYMBOL_ID = 2004
	TMT_FROMCOLOR5 THEME_PROPERTY_SYMBOL_ID = 2005
	TMT_TOCOLOR1 THEME_PROPERTY_SYMBOL_ID = 2006
	TMT_TOCOLOR2 THEME_PROPERTY_SYMBOL_ID = 2007
	TMT_TOCOLOR3 THEME_PROPERTY_SYMBOL_ID = 2008
	TMT_TOCOLOR4 THEME_PROPERTY_SYMBOL_ID = 2009
	TMT_TOCOLOR5 THEME_PROPERTY_SYMBOL_ID = 2010
	TMT_TRANSPARENT THEME_PROPERTY_SYMBOL_ID = 2201
	TMT_AUTOSIZE THEME_PROPERTY_SYMBOL_ID = 2202
	TMT_BORDERONLY THEME_PROPERTY_SYMBOL_ID = 2203
	TMT_COMPOSITED THEME_PROPERTY_SYMBOL_ID = 2204
	TMT_BGFILL THEME_PROPERTY_SYMBOL_ID = 2205
	TMT_GLYPHTRANSPARENT THEME_PROPERTY_SYMBOL_ID = 2206
	TMT_GLYPHONLY THEME_PROPERTY_SYMBOL_ID = 2207
	TMT_ALWAYSSHOWSIZINGBAR THEME_PROPERTY_SYMBOL_ID = 2208
	TMT_MIRRORIMAGE THEME_PROPERTY_SYMBOL_ID = 2209
	TMT_UNIFORMSIZING THEME_PROPERTY_SYMBOL_ID = 2210
	TMT_INTEGRALSIZING THEME_PROPERTY_SYMBOL_ID = 2211
	TMT_SOURCEGROW THEME_PROPERTY_SYMBOL_ID = 2212
	TMT_SOURCESHRINK THEME_PROPERTY_SYMBOL_ID = 2213
	TMT_DRAWBORDERS THEME_PROPERTY_SYMBOL_ID = 2214
	TMT_NOETCHEDEFFECT THEME_PROPERTY_SYMBOL_ID = 2215
	TMT_TEXTAPPLYOVERLAY THEME_PROPERTY_SYMBOL_ID = 2216
	TMT_TEXTGLOW THEME_PROPERTY_SYMBOL_ID = 2217
	TMT_TEXTITALIC THEME_PROPERTY_SYMBOL_ID = 2218
	TMT_COMPOSITEDOPAQUE THEME_PROPERTY_SYMBOL_ID = 2219
	TMT_LOCALIZEDMIRRORIMAGE THEME_PROPERTY_SYMBOL_ID = 2220
	TMT_IMAGECOUNT THEME_PROPERTY_SYMBOL_ID = 2401
	TMT_ALPHALEVEL THEME_PROPERTY_SYMBOL_ID = 2402
	TMT_BORDERSIZE THEME_PROPERTY_SYMBOL_ID = 2403
	TMT_ROUNDCORNERWIDTH THEME_PROPERTY_SYMBOL_ID = 2404
	TMT_ROUNDCORNERHEIGHT THEME_PROPERTY_SYMBOL_ID = 2405
	TMT_GRADIENTRATIO1 THEME_PROPERTY_SYMBOL_ID = 2406
	TMT_GRADIENTRATIO2 THEME_PROPERTY_SYMBOL_ID = 2407
	TMT_GRADIENTRATIO3 THEME_PROPERTY_SYMBOL_ID = 2408
	TMT_GRADIENTRATIO4 THEME_PROPERTY_SYMBOL_ID = 2409
	TMT_GRADIENTRATIO5 THEME_PROPERTY_SYMBOL_ID = 2410
	TMT_PROGRESSCHUNKSIZE THEME_PROPERTY_SYMBOL_ID = 2411
	TMT_PROGRESSSPACESIZE THEME_PROPERTY_SYMBOL_ID = 2412
	TMT_SATURATION THEME_PROPERTY_SYMBOL_ID = 2413
	TMT_TEXTBORDERSIZE THEME_PROPERTY_SYMBOL_ID = 2414
	TMT_ALPHATHRESHOLD THEME_PROPERTY_SYMBOL_ID = 2415
	TMT_WIDTH THEME_PROPERTY_SYMBOL_ID = 2416
	TMT_HEIGHT THEME_PROPERTY_SYMBOL_ID = 2417
	TMT_GLYPHINDEX THEME_PROPERTY_SYMBOL_ID = 2418
	TMT_TRUESIZESTRETCHMARK THEME_PROPERTY_SYMBOL_ID = 2419
	TMT_MINDPI1 THEME_PROPERTY_SYMBOL_ID = 2420
	TMT_MINDPI2 THEME_PROPERTY_SYMBOL_ID = 2421
	TMT_MINDPI3 THEME_PROPERTY_SYMBOL_ID = 2422
	TMT_MINDPI4 THEME_PROPERTY_SYMBOL_ID = 2423
	TMT_MINDPI5 THEME_PROPERTY_SYMBOL_ID = 2424
	TMT_TEXTGLOWSIZE THEME_PROPERTY_SYMBOL_ID = 2425
	TMT_FRAMESPERSECOND THEME_PROPERTY_SYMBOL_ID = 2426
	TMT_PIXELSPERFRAME THEME_PROPERTY_SYMBOL_ID = 2427
	TMT_ANIMATIONDELAY THEME_PROPERTY_SYMBOL_ID = 2428
	TMT_GLOWINTENSITY THEME_PROPERTY_SYMBOL_ID = 2429
	TMT_OPACITY THEME_PROPERTY_SYMBOL_ID = 2430
	TMT_COLORIZATIONCOLOR THEME_PROPERTY_SYMBOL_ID = 2431
	TMT_COLORIZATIONOPACITY THEME_PROPERTY_SYMBOL_ID = 2432
	TMT_MINDPI6 THEME_PROPERTY_SYMBOL_ID = 2433
	TMT_MINDPI7 THEME_PROPERTY_SYMBOL_ID = 2434
	TMT_GLYPHFONT THEME_PROPERTY_SYMBOL_ID = 2601
	TMT_IMAGEFILE THEME_PROPERTY_SYMBOL_ID = 3001
	TMT_IMAGEFILE1 THEME_PROPERTY_SYMBOL_ID = 3002
	TMT_IMAGEFILE2 THEME_PROPERTY_SYMBOL_ID = 3003
	TMT_IMAGEFILE3 THEME_PROPERTY_SYMBOL_ID = 3004
	TMT_IMAGEFILE4 THEME_PROPERTY_SYMBOL_ID = 3005
	TMT_IMAGEFILE5 THEME_PROPERTY_SYMBOL_ID = 3006
	TMT_GLYPHIMAGEFILE THEME_PROPERTY_SYMBOL_ID = 3008
	TMT_IMAGEFILE6 THEME_PROPERTY_SYMBOL_ID = 3009
	TMT_IMAGEFILE7 THEME_PROPERTY_SYMBOL_ID = 3010
	TMT_TEXT THEME_PROPERTY_SYMBOL_ID = 3201
	TMT_CLASSICVALUE THEME_PROPERTY_SYMBOL_ID = 3202
	TMT_OFFSET THEME_PROPERTY_SYMBOL_ID = 3401
	TMT_TEXTSHADOWOFFSET THEME_PROPERTY_SYMBOL_ID = 3402
	TMT_MINSIZE THEME_PROPERTY_SYMBOL_ID = 3403
	TMT_MINSIZE1 THEME_PROPERTY_SYMBOL_ID = 3404
	TMT_MINSIZE2 THEME_PROPERTY_SYMBOL_ID = 3405
	TMT_MINSIZE3 THEME_PROPERTY_SYMBOL_ID = 3406
	TMT_MINSIZE4 THEME_PROPERTY_SYMBOL_ID = 3407
	TMT_MINSIZE5 THEME_PROPERTY_SYMBOL_ID = 3408
	TMT_NORMALSIZE THEME_PROPERTY_SYMBOL_ID = 3409
	TMT_MINSIZE6 THEME_PROPERTY_SYMBOL_ID = 3410
	TMT_MINSIZE7 THEME_PROPERTY_SYMBOL_ID = 3411
	TMT_SIZINGMARGINS THEME_PROPERTY_SYMBOL_ID = 3601
	TMT_CONTENTMARGINS THEME_PROPERTY_SYMBOL_ID = 3602
	TMT_CAPTIONMARGINS THEME_PROPERTY_SYMBOL_ID = 3603
	TMT_BORDERCOLOR THEME_PROPERTY_SYMBOL_ID = 3801
	TMT_FILLCOLOR THEME_PROPERTY_SYMBOL_ID = 3802
	TMT_TEXTCOLOR THEME_PROPERTY_SYMBOL_ID = 3803
	TMT_EDGELIGHTCOLOR THEME_PROPERTY_SYMBOL_ID = 3804
	TMT_EDGEHIGHLIGHTCOLOR THEME_PROPERTY_SYMBOL_ID = 3805
	TMT_EDGESHADOWCOLOR THEME_PROPERTY_SYMBOL_ID = 3806
	TMT_EDGEDKSHADOWCOLOR THEME_PROPERTY_SYMBOL_ID = 3807
	TMT_EDGEFILLCOLOR THEME_PROPERTY_SYMBOL_ID = 3808
	TMT_TRANSPARENTCOLOR THEME_PROPERTY_SYMBOL_ID = 3809
	TMT_GRADIENTCOLOR1 THEME_PROPERTY_SYMBOL_ID = 3810
	TMT_GRADIENTCOLOR2 THEME_PROPERTY_SYMBOL_ID = 3811
	TMT_GRADIENTCOLOR3 THEME_PROPERTY_SYMBOL_ID = 3812
	TMT_GRADIENTCOLOR4 THEME_PROPERTY_SYMBOL_ID = 3813
	TMT_GRADIENTCOLOR5 THEME_PROPERTY_SYMBOL_ID = 3814
	TMT_SHADOWCOLOR THEME_PROPERTY_SYMBOL_ID = 3815
	TMT_GLOWCOLOR THEME_PROPERTY_SYMBOL_ID = 3816
	TMT_TEXTBORDERCOLOR THEME_PROPERTY_SYMBOL_ID = 3817
	TMT_TEXTSHADOWCOLOR THEME_PROPERTY_SYMBOL_ID = 3818
	TMT_GLYPHTEXTCOLOR THEME_PROPERTY_SYMBOL_ID = 3819
	TMT_GLYPHTRANSPARENTCOLOR THEME_PROPERTY_SYMBOL_ID = 3820
	TMT_FILLCOLORHINT THEME_PROPERTY_SYMBOL_ID = 3821
	TMT_BORDERCOLORHINT THEME_PROPERTY_SYMBOL_ID = 3822
	TMT_ACCENTCOLORHINT THEME_PROPERTY_SYMBOL_ID = 3823
	TMT_TEXTCOLORHINT THEME_PROPERTY_SYMBOL_ID = 3824
	TMT_HEADING1TEXTCOLOR THEME_PROPERTY_SYMBOL_ID = 3825
	TMT_HEADING2TEXTCOLOR THEME_PROPERTY_SYMBOL_ID = 3826
	TMT_BODYTEXTCOLOR THEME_PROPERTY_SYMBOL_ID = 3827
	TMT_BGTYPE THEME_PROPERTY_SYMBOL_ID = 4001
	TMT_BORDERTYPE THEME_PROPERTY_SYMBOL_ID = 4002
	TMT_FILLTYPE THEME_PROPERTY_SYMBOL_ID = 4003
	TMT_SIZINGTYPE THEME_PROPERTY_SYMBOL_ID = 4004
	TMT_HALIGN THEME_PROPERTY_SYMBOL_ID = 4005
	TMT_CONTENTALIGNMENT THEME_PROPERTY_SYMBOL_ID = 4006
	TMT_VALIGN THEME_PROPERTY_SYMBOL_ID = 4007
	TMT_OFFSETTYPE THEME_PROPERTY_SYMBOL_ID = 4008
	TMT_ICONEFFECT THEME_PROPERTY_SYMBOL_ID = 4009
	TMT_TEXTSHADOWTYPE THEME_PROPERTY_SYMBOL_ID = 4010
	TMT_IMAGELAYOUT THEME_PROPERTY_SYMBOL_ID = 4011
	TMT_GLYPHTYPE THEME_PROPERTY_SYMBOL_ID = 4012
	TMT_IMAGESELECTTYPE THEME_PROPERTY_SYMBOL_ID = 4013
	TMT_GLYPHFONTSIZINGTYPE THEME_PROPERTY_SYMBOL_ID = 4014
	TMT_TRUESIZESCALINGTYPE THEME_PROPERTY_SYMBOL_ID = 4015
	TMT_USERPICTURE THEME_PROPERTY_SYMBOL_ID = 5001
	TMT_DEFAULTPANESIZE THEME_PROPERTY_SYMBOL_ID = 5002
	TMT_BLENDCOLOR THEME_PROPERTY_SYMBOL_ID = 5003
	TMT_CUSTOMSPLITRECT THEME_PROPERTY_SYMBOL_ID = 5004
	TMT_ANIMATIONBUTTONRECT THEME_PROPERTY_SYMBOL_ID = 5005
	TMT_ANIMATIONDURATION THEME_PROPERTY_SYMBOL_ID = 5006
	TMT_TRANSITIONDURATIONS THEME_PROPERTY_SYMBOL_ID = 6000
	TMT_SCALEDBACKGROUND THEME_PROPERTY_SYMBOL_ID = 7001
	TMT_ATLASIMAGE THEME_PROPERTY_SYMBOL_ID = 8000
	TMT_ATLASINPUTIMAGE THEME_PROPERTY_SYMBOL_ID = 8001
	TMT_ATLASRECT THEME_PROPERTY_SYMBOL_ID = 8002
)

// enum DRAGLISTINFO_NOTIFICATION_FLAGS
type DRAGLISTINFO_NOTIFICATION_FLAGS uint32
const (
	DL_BEGINDRAG DRAGLISTINFO_NOTIFICATION_FLAGS = 1157
	DL_CANCELDRAG DRAGLISTINFO_NOTIFICATION_FLAGS = 1160
	DL_DRAGGING DRAGLISTINFO_NOTIFICATION_FLAGS = 1158
	DL_DROPPED DRAGLISTINFO_NOTIFICATION_FLAGS = 1159
)

// enum WORD_BREAK_ACTION
type WORD_BREAK_ACTION uint32
const (
	WB_CLASSIFY WORD_BREAK_ACTION = 3
	WB_ISDELIMITER WORD_BREAK_ACTION = 2
	WB_LEFT WORD_BREAK_ACTION = 0
	WB_LEFTBREAK WORD_BREAK_ACTION = 6
	WB_MOVEWORDLEFT WORD_BREAK_ACTION = 4
	WB_MOVEWORDRIGHT WORD_BREAK_ACTION = 5
	WB_RIGHT WORD_BREAK_ACTION = 1
	WB_RIGHTBREAK WORD_BREAK_ACTION = 7
)

// enum DPAMM_MESSAGE
type DPAMM_MESSAGE uint32
const (
	DPAMM_MERGE DPAMM_MESSAGE = 1
	DPAMM_DELETE DPAMM_MESSAGE = 2
	DPAMM_INSERT DPAMM_MESSAGE = 3
)

// enum DLG_DIR_LIST_FILE_TYPE
// flags
type DLG_DIR_LIST_FILE_TYPE uint32
const (
	DDL_ARCHIVE DLG_DIR_LIST_FILE_TYPE = 32
	DDL_DIRECTORY DLG_DIR_LIST_FILE_TYPE = 16
	DDL_DRIVES DLG_DIR_LIST_FILE_TYPE = 16384
	DDL_EXCLUSIVE DLG_DIR_LIST_FILE_TYPE = 32768
	DDL_HIDDEN DLG_DIR_LIST_FILE_TYPE = 2
	DDL_READONLY DLG_DIR_LIST_FILE_TYPE = 1
	DDL_READWRITE DLG_DIR_LIST_FILE_TYPE = 0
	DDL_SYSTEM DLG_DIR_LIST_FILE_TYPE = 4
	DDL_POSTMSGS DLG_DIR_LIST_FILE_TYPE = 8192
)

// enum OPEN_THEME_DATA_FLAGS
// flags
type OPEN_THEME_DATA_FLAGS uint32
const (
	OTD_FORCE_RECT_SIZING OPEN_THEME_DATA_FLAGS = 1
	OTD_NONCLIENT OPEN_THEME_DATA_FLAGS = 2
)

// enum GET_THEME_BITMAP_FLAGS
type GET_THEME_BITMAP_FLAGS uint32
const (
	GBF_DIRECT GET_THEME_BITMAP_FLAGS = 1
	GBF_COPY GET_THEME_BITMAP_FLAGS = 2
	GBF_VALIDBITS GET_THEME_BITMAP_FLAGS = 3
)

// enum ENABLE_SCROLL_BAR_ARROWS
type ENABLE_SCROLL_BAR_ARROWS uint32
const (
	ESB_DISABLE_BOTH ENABLE_SCROLL_BAR_ARROWS = 3
	ESB_DISABLE_DOWN ENABLE_SCROLL_BAR_ARROWS = 2
	ESB_DISABLE_LEFT ENABLE_SCROLL_BAR_ARROWS = 1
	ESB_DISABLE_LTUP ENABLE_SCROLL_BAR_ARROWS = 1
	ESB_DISABLE_RIGHT ENABLE_SCROLL_BAR_ARROWS = 2
	ESB_DISABLE_RTDN ENABLE_SCROLL_BAR_ARROWS = 2
	ESB_DISABLE_UP ENABLE_SCROLL_BAR_ARROWS = 1
	ESB_ENABLE_BOTH ENABLE_SCROLL_BAR_ARROWS = 0
)

// enum IMAGE_LIST_DRAW_STYLE
// flags
type IMAGE_LIST_DRAW_STYLE uint32
const (
	ILD_BLEND IMAGE_LIST_DRAW_STYLE = 4
	ILD_BLEND50 IMAGE_LIST_DRAW_STYLE = 4
	ILD_FOCUS IMAGE_LIST_DRAW_STYLE = 2
	ILD_MASK IMAGE_LIST_DRAW_STYLE = 16
	ILD_NORMAL IMAGE_LIST_DRAW_STYLE = 0
	ILD_SELECTED IMAGE_LIST_DRAW_STYLE = 4
)

// enum WSB_PROP
type WSB_PROP int32
const (
	WSB_PROP_CXHSCROLL WSB_PROP = 2
	WSB_PROP_CXHTHUMB WSB_PROP = 16
	WSB_PROP_CXVSCROLL WSB_PROP = 8
	WSB_PROP_CYHSCROLL WSB_PROP = 4
	WSB_PROP_CYVSCROLL WSB_PROP = 1
	WSB_PROP_CYVTHUMB WSB_PROP = 32
	WSB_PROP_HBKGCOLOR WSB_PROP = 128
	WSB_PROP_HSTYLE WSB_PROP = 512
	WSB_PROP_PALETTE WSB_PROP = 2048
	WSB_PROP_VBKGCOLOR WSB_PROP = 64
	WSB_PROP_VSTYLE WSB_PROP = 256
	WSB_PROP_WINSTYLE WSB_PROP = 1024
)

// enum PSPCB_MESSAGE
type PSPCB_MESSAGE uint32
const (
	PSPCB_ADDREF PSPCB_MESSAGE = 0
	PSPCB_CREATE PSPCB_MESSAGE = 2
	PSPCB_RELEASE PSPCB_MESSAGE = 1
	PSPCB_SI_INITDIALOG PSPCB_MESSAGE = 1025
)

// enum HEADER_CONTROL_NOTIFICATION_BUTTON
type HEADER_CONTROL_NOTIFICATION_BUTTON uint32
const (
	HEADER_CONTROL_NOTIFICATION_BUTTON_LEFT HEADER_CONTROL_NOTIFICATION_BUTTON = 0
	HEADER_CONTROL_NOTIFICATION_BUTTON_RIGHT HEADER_CONTROL_NOTIFICATION_BUTTON = 1
	HEADER_CONTROL_NOTIFICATION_BUTTON_MIDDLE HEADER_CONTROL_NOTIFICATION_BUTTON = 2
)

// enum IMAGE_LIST_COPY_FLAGS
type IMAGE_LIST_COPY_FLAGS uint32
const (
	ILCF_MOVE IMAGE_LIST_COPY_FLAGS = 0
	ILCF_SWAP IMAGE_LIST_COPY_FLAGS = 1
)

// enum DLG_BUTTON_CHECK_STATE
type DLG_BUTTON_CHECK_STATE uint32
const (
	BST_CHECKED DLG_BUTTON_CHECK_STATE = 1
	BST_INDETERMINATE DLG_BUTTON_CHECK_STATE = 2
	BST_UNCHECKED DLG_BUTTON_CHECK_STATE = 0
)

// enum DRAW_THEME_PARENT_BACKGROUND_FLAGS
// flags
type DRAW_THEME_PARENT_BACKGROUND_FLAGS uint32
const (
	DTPB_WINDOWDC DRAW_THEME_PARENT_BACKGROUND_FLAGS = 1
	DTPB_USECTLCOLORSTATIC DRAW_THEME_PARENT_BACKGROUND_FLAGS = 2
	DTPB_USEERASEBKGND DRAW_THEME_PARENT_BACKGROUND_FLAGS = 4
)

// enum IMAGE_LIST_ITEM_FLAGS
type IMAGE_LIST_ITEM_FLAGS uint32
const (
	ILIF_ALPHA IMAGE_LIST_ITEM_FLAGS = 1
	ILIF_LOWQUALITY IMAGE_LIST_ITEM_FLAGS = 2
)

// enum HDI_MASK
// flags
type HDI_MASK uint32
const (
	HDI_WIDTH HDI_MASK = 1
	HDI_HEIGHT HDI_MASK = 1
	HDI_TEXT HDI_MASK = 2
	HDI_FORMAT HDI_MASK = 4
	HDI_LPARAM HDI_MASK = 8
	HDI_BITMAP HDI_MASK = 16
	HDI_IMAGE HDI_MASK = 32
	HDI_DI_SETITEM HDI_MASK = 64
	HDI_ORDER HDI_MASK = 128
	HDI_FILTER HDI_MASK = 256
	HDI_STATE HDI_MASK = 512
)

// enum NMREBAR_MASK_FLAGS
// flags
type NMREBAR_MASK_FLAGS uint32
const (
	RBNM_ID NMREBAR_MASK_FLAGS = 1
	RBNM_LPARAM NMREBAR_MASK_FLAGS = 4
	RBNM_STYLE NMREBAR_MASK_FLAGS = 2
)

// enum EDITBALLOONTIP_ICON
type EDITBALLOONTIP_ICON uint32
const (
	TTI_ERROR EDITBALLOONTIP_ICON = 3
	TTI_INFO EDITBALLOONTIP_ICON = 1
	TTI_NONE EDITBALLOONTIP_ICON = 0
	TTI_WARNING EDITBALLOONTIP_ICON = 2
	TTI_INFO_LARGE EDITBALLOONTIP_ICON = 4
	TTI_WARNING_LARGE EDITBALLOONTIP_ICON = 5
	TTI_ERROR_LARGE EDITBALLOONTIP_ICON = 6
)

// enum LVCOLUMNW_FORMAT
// flags
type LVCOLUMNW_FORMAT uint32
const (
	LVCFMT_LEFT LVCOLUMNW_FORMAT = 0
	LVCFMT_RIGHT LVCOLUMNW_FORMAT = 1
	LVCFMT_CENTER LVCOLUMNW_FORMAT = 2
	LVCFMT_JUSTIFYMASK LVCOLUMNW_FORMAT = 3
	LVCFMT_IMAGE LVCOLUMNW_FORMAT = 2048
	LVCFMT_BITMAP_ON_RIGHT LVCOLUMNW_FORMAT = 4096
	LVCFMT_COL_HAS_IMAGES LVCOLUMNW_FORMAT = 32768
	LVCFMT_FIXED_WIDTH LVCOLUMNW_FORMAT = 256
	LVCFMT_NO_DPI_SCALE LVCOLUMNW_FORMAT = 262144
	LVCFMT_FIXED_RATIO LVCOLUMNW_FORMAT = 524288
	LVCFMT_SPLITBUTTON LVCOLUMNW_FORMAT = 16777216
)

// enum NMPGSCROLL_KEYS
// flags
type NMPGSCROLL_KEYS uint16
const (
	PGK_NONE NMPGSCROLL_KEYS = 0
	PGK_SHIFT NMPGSCROLL_KEYS = 1
	PGK_CONTROL NMPGSCROLL_KEYS = 2
	PGK_MENU NMPGSCROLL_KEYS = 4
)

// enum COMBOBOX_EX_ITEM_FLAGS
// flags
type COMBOBOX_EX_ITEM_FLAGS uint32
const (
	CBEIF_DI_SETITEM COMBOBOX_EX_ITEM_FLAGS = 268435456
	CBEIF_IMAGE COMBOBOX_EX_ITEM_FLAGS = 2
	CBEIF_INDENT COMBOBOX_EX_ITEM_FLAGS = 16
	CBEIF_LPARAM COMBOBOX_EX_ITEM_FLAGS = 32
	CBEIF_OVERLAY COMBOBOX_EX_ITEM_FLAGS = 8
	CBEIF_SELECTEDIMAGE COMBOBOX_EX_ITEM_FLAGS = 4
	CBEIF_TEXT COMBOBOX_EX_ITEM_FLAGS = 1
)

// enum TVITEMEXW_CHILDREN
type TVITEMEXW_CHILDREN int32
const (
	I_ZERO TVITEMEXW_CHILDREN = 0
	I_ONE_OR_MORE TVITEMEXW_CHILDREN = 1
	I_CHILDRENCALLBACK TVITEMEXW_CHILDREN = -1
	I_CHILDRENAUTO TVITEMEXW_CHILDREN = -2
)

// enum TVITEM_MASK
// flags
type TVITEM_MASK uint32
const (
	TVIF_CHILDREN TVITEM_MASK = 64
	TVIF_DI_SETITEM TVITEM_MASK = 4096
	TVIF_HANDLE TVITEM_MASK = 16
	TVIF_IMAGE TVITEM_MASK = 2
	TVIF_PARAM TVITEM_MASK = 4
	TVIF_SELECTEDIMAGE TVITEM_MASK = 32
	TVIF_STATE TVITEM_MASK = 8
	TVIF_TEXT TVITEM_MASK = 1
	TVIF_EXPANDEDIMAGE TVITEM_MASK = 512
	TVIF_INTEGRAL TVITEM_MASK = 128
	TVIF_STATEEX TVITEM_MASK = 256
)

// enum TCITEMHEADERA_MASK
// flags
type TCITEMHEADERA_MASK uint32
const (
	TCIF_IMAGE TCITEMHEADERA_MASK = 2
	TCIF_RTLREADING TCITEMHEADERA_MASK = 4
	TCIF_TEXT TCITEMHEADERA_MASK = 1
	TCIF_PARAM TCITEMHEADERA_MASK = 8
	TCIF_STATE TCITEMHEADERA_MASK = 16
)

// enum TCHITTESTINFO_FLAGS
type TCHITTESTINFO_FLAGS uint32
const (
	TCHT_NOWHERE TCHITTESTINFO_FLAGS = 1
	TCHT_ONITEM TCHITTESTINFO_FLAGS = 6
	TCHT_ONITEMICON TCHITTESTINFO_FLAGS = 2
	TCHT_ONITEMLABEL TCHITTESTINFO_FLAGS = 4
)

// enum COMBOBOXINFO_BUTTON_STATE
type COMBOBOXINFO_BUTTON_STATE uint32
const (
	STATE_SYSTEM_INVISIBLE COMBOBOXINFO_BUTTON_STATE = 32768
	STATE_SYSTEM_PRESSED COMBOBOXINFO_BUTTON_STATE = 8
	STATE_SYSTEM_FOCUSABLE COMBOBOXINFO_BUTTON_STATE = 1048576
	STATE_SYSTEM_OFFSCREEN COMBOBOXINFO_BUTTON_STATE = 65536
	STATE_SYSTEM_UNAVAILABLE COMBOBOXINFO_BUTTON_STATE = 1
)

// enum NMCUSTOMDRAW_DRAW_STAGE
type NMCUSTOMDRAW_DRAW_STAGE uint32
const (
	CDDS_POSTPAINT NMCUSTOMDRAW_DRAW_STAGE = 2
	CDDS_PREERASE NMCUSTOMDRAW_DRAW_STAGE = 3
	CDDS_PREPAINT NMCUSTOMDRAW_DRAW_STAGE = 1
	CDDS_ITEMPOSTERASE NMCUSTOMDRAW_DRAW_STAGE = 65540
	CDDS_ITEMPOSTPAINT NMCUSTOMDRAW_DRAW_STAGE = 65538
	CDDS_ITEMPREERASE NMCUSTOMDRAW_DRAW_STAGE = 65539
	CDDS_ITEMPREPAINT NMCUSTOMDRAW_DRAW_STAGE = 65537
	CDDS_SUBITEM NMCUSTOMDRAW_DRAW_STAGE = 131072
)

// enum MCGRIDINFO_PART
type MCGRIDINFO_PART uint32
const (
	MCGIP_CALENDARCONTROL MCGRIDINFO_PART = 0
	MCGIP_NEXT MCGRIDINFO_PART = 1
	MCGIP_PREV MCGRIDINFO_PART = 2
	MCGIP_FOOTER MCGRIDINFO_PART = 3
	MCGIP_CALENDAR MCGRIDINFO_PART = 4
	MCGIP_CALENDARHEADER MCGRIDINFO_PART = 5
	MCGIP_CALENDARBODY MCGRIDINFO_PART = 6
	MCGIP_CALENDARROW MCGRIDINFO_PART = 7
	MCGIP_CALENDARCELL MCGRIDINFO_PART = 8
)

// enum LVITEMA_GROUP_ID
type LVITEMA_GROUP_ID int32
const (
	I_GROUPIDCALLBACK LVITEMA_GROUP_ID = -1
	I_GROUPIDNONE LVITEMA_GROUP_ID = -2
)

// enum NMTBHOTITEM_FLAGS
// flags
type NMTBHOTITEM_FLAGS uint32
const (
	HICF_ACCELERATOR NMTBHOTITEM_FLAGS = 4
	HICF_ARROWKEYS NMTBHOTITEM_FLAGS = 2
	HICF_DUPACCEL NMTBHOTITEM_FLAGS = 8
	HICF_ENTERING NMTBHOTITEM_FLAGS = 16
	HICF_LEAVING NMTBHOTITEM_FLAGS = 32
	HICF_LMOUSE NMTBHOTITEM_FLAGS = 128
	HICF_MOUSE NMTBHOTITEM_FLAGS = 1
	HICF_OTHER NMTBHOTITEM_FLAGS = 0
	HICF_RESELECT NMTBHOTITEM_FLAGS = 64
	HICF_TOGGLEDROPDOWN NMTBHOTITEM_FLAGS = 256
)

// enum TTTOOLINFO_FLAGS
// flags
type TTTOOLINFO_FLAGS uint32
const (
	TTF_ABSOLUTE TTTOOLINFO_FLAGS = 128
	TTF_CENTERTIP TTTOOLINFO_FLAGS = 2
	TTF_IDISHWND TTTOOLINFO_FLAGS = 1
	TTF_PARSELINKS TTTOOLINFO_FLAGS = 4096
	TTF_RTLREADING TTTOOLINFO_FLAGS = 4
	TTF_SUBCLASS TTTOOLINFO_FLAGS = 16
	TTF_TRACK TTTOOLINFO_FLAGS = 32
	TTF_TRANSPARENT TTTOOLINFO_FLAGS = 256
)

// enum LVTILEVIEWINFO_FLAGS
type LVTILEVIEWINFO_FLAGS uint32
const (
	LVTVIF_EXTENDED LVTILEVIEWINFO_FLAGS = 4
)

// enum NMPGSCROLL_DIR
type NMPGSCROLL_DIR uint32
const (
	PGF_SCROLLDOWN NMPGSCROLL_DIR = 2
	PGF_SCROLLLEFT NMPGSCROLL_DIR = 4
	PGF_SCROLLRIGHT NMPGSCROLL_DIR = 8
	PGF_SCROLLUP NMPGSCROLL_DIR = 1
)

// enum LVCOLUMNW_MASK
// flags
type LVCOLUMNW_MASK uint32
const (
	LVCF_FMT LVCOLUMNW_MASK = 1
	LVCF_WIDTH LVCOLUMNW_MASK = 2
	LVCF_TEXT LVCOLUMNW_MASK = 4
	LVCF_SUBITEM LVCOLUMNW_MASK = 8
	LVCF_IMAGE LVCOLUMNW_MASK = 16
	LVCF_ORDER LVCOLUMNW_MASK = 32
	LVCF_MINWIDTH LVCOLUMNW_MASK = 64
	LVCF_DEFAULTWIDTH LVCOLUMNW_MASK = 128
	LVCF_IDEALWIDTH LVCOLUMNW_MASK = 256
)

// enum LVFINDINFOW_FLAGS
// flags
type LVFINDINFOW_FLAGS uint32
const (
	LVFI_PARAM LVFINDINFOW_FLAGS = 1
	LVFI_PARTIAL LVFINDINFOW_FLAGS = 8
	LVFI_STRING LVFINDINFOW_FLAGS = 2
	LVFI_SUBSTRING LVFINDINFOW_FLAGS = 4
	LVFI_WRAP LVFINDINFOW_FLAGS = 32
	LVFI_NEARESTXY LVFINDINFOW_FLAGS = 64
)

// enum BUTTON_IMAGELIST_ALIGN
type BUTTON_IMAGELIST_ALIGN uint32
const (
	BUTTON_IMAGELIST_ALIGN_LEFT BUTTON_IMAGELIST_ALIGN = 0
	BUTTON_IMAGELIST_ALIGN_RIGHT BUTTON_IMAGELIST_ALIGN = 1
	BUTTON_IMAGELIST_ALIGN_TOP BUTTON_IMAGELIST_ALIGN = 2
	BUTTON_IMAGELIST_ALIGN_BOTTOM BUTTON_IMAGELIST_ALIGN = 3
	BUTTON_IMAGELIST_ALIGN_CENTER BUTTON_IMAGELIST_ALIGN = 4
)

// enum TBBUTTONINFOW_MASK
// flags
type TBBUTTONINFOW_MASK uint32
const (
	TBIF_BYINDEX TBBUTTONINFOW_MASK = 2147483648
	TBIF_COMMAND TBBUTTONINFOW_MASK = 32
	TBIF_IMAGE TBBUTTONINFOW_MASK = 1
	TBIF_LPARAM TBBUTTONINFOW_MASK = 16
	TBIF_SIZE TBBUTTONINFOW_MASK = 64
	TBIF_STATE TBBUTTONINFOW_MASK = 4
	TBIF_STYLE TBBUTTONINFOW_MASK = 8
	TBIF_TEXT TBBUTTONINFOW_MASK = 2
)

// enum TBINSERTMARK_FLAGS
type TBINSERTMARK_FLAGS uint32
const (
	TBIMHT_NONE TBINSERTMARK_FLAGS = 0
	TBIMHT_AFTER TBINSERTMARK_FLAGS = 1
	TBIMHT_BACKGROUND TBINSERTMARK_FLAGS = 2
)

// enum LVGROUP_MASK
// flags
type LVGROUP_MASK uint32
const (
	LVGF_NONE LVGROUP_MASK = 0
	LVGF_HEADER LVGROUP_MASK = 1
	LVGF_FOOTER LVGROUP_MASK = 2
	LVGF_STATE LVGROUP_MASK = 4
)

// enum BP_PAINTPARAMS_FLAGS
// flags
type BP_PAINTPARAMS_FLAGS uint32
const (
	BPPF_ERASE BP_PAINTPARAMS_FLAGS = 1
	BPPF_NOCLIP BP_PAINTPARAMS_FLAGS = 2
	BPPF_NONCLIENT BP_PAINTPARAMS_FLAGS = 4
)

// enum TVHITTESTINFO_FLAGS
// flags
type TVHITTESTINFO_FLAGS uint32
const (
	TVHT_ABOVE TVHITTESTINFO_FLAGS = 256
	TVHT_BELOW TVHITTESTINFO_FLAGS = 512
	TVHT_NOWHERE TVHITTESTINFO_FLAGS = 1
	TVHT_ONITEM TVHITTESTINFO_FLAGS = 70
	TVHT_ONITEMBUTTON TVHITTESTINFO_FLAGS = 16
	TVHT_ONITEMICON TVHITTESTINFO_FLAGS = 2
	TVHT_ONITEMINDENT TVHITTESTINFO_FLAGS = 8
	TVHT_ONITEMLABEL TVHITTESTINFO_FLAGS = 4
	TVHT_ONITEMRIGHT TVHITTESTINFO_FLAGS = 32
	TVHT_ONITEMSTATEICON TVHITTESTINFO_FLAGS = 64
	TVHT_TOLEFT TVHITTESTINFO_FLAGS = 2048
	TVHT_TORIGHT TVHITTESTINFO_FLAGS = 1024
)

// enum DRAWITEMSTRUCT_CTL_TYPE
type DRAWITEMSTRUCT_CTL_TYPE uint32
const (
	ODT_BUTTON DRAWITEMSTRUCT_CTL_TYPE = 4
	ODT_COMBOBOX DRAWITEMSTRUCT_CTL_TYPE = 3
	ODT_LISTBOX DRAWITEMSTRUCT_CTL_TYPE = 2
	ODT_LISTVIEW DRAWITEMSTRUCT_CTL_TYPE = 102
	ODT_MENU DRAWITEMSTRUCT_CTL_TYPE = 1
	ODT_STATIC DRAWITEMSTRUCT_CTL_TYPE = 5
	ODT_TAB DRAWITEMSTRUCT_CTL_TYPE = 101
)

// enum NMPGCALCSIZE_FLAGS
type NMPGCALCSIZE_FLAGS uint32
const (
	PGF_CALCHEIGHT NMPGCALCSIZE_FLAGS = 2
	PGF_CALCWIDTH NMPGCALCSIZE_FLAGS = 1
)

// enum NMLVCUSTOMDRAW_ALIGN
type NMLVCUSTOMDRAW_ALIGN uint32
const (
	LVGA_HEADER_CENTER NMLVCUSTOMDRAW_ALIGN = 2
	LVGA_HEADER_LEFT NMLVCUSTOMDRAW_ALIGN = 1
	LVGA_HEADER_RIGHT NMLVCUSTOMDRAW_ALIGN = 4
)

// enum MCGRIDINFO_FLAGS
// flags
type MCGRIDINFO_FLAGS uint32
const (
	MCGIF_DATE MCGRIDINFO_FLAGS = 1
	MCGIF_RECT MCGRIDINFO_FLAGS = 2
	MCGIF_NAME MCGRIDINFO_FLAGS = 4
)

// enum LVHITTESTINFO_FLAGS
// flags
type LVHITTESTINFO_FLAGS uint32
const (
	LVHT_ABOVE LVHITTESTINFO_FLAGS = 8
	LVHT_BELOW LVHITTESTINFO_FLAGS = 16
	LVHT_NOWHERE LVHITTESTINFO_FLAGS = 1
	LVHT_ONITEMICON LVHITTESTINFO_FLAGS = 2
	LVHT_ONITEMLABEL LVHITTESTINFO_FLAGS = 4
	LVHT_ONITEMSTATEICON LVHITTESTINFO_FLAGS = 8
	LVHT_TOLEFT LVHITTESTINFO_FLAGS = 64
	LVHT_TORIGHT LVHITTESTINFO_FLAGS = 32
	LVHT_EX_GROUP_HEADER LVHITTESTINFO_FLAGS = 268435456
	LVHT_EX_GROUP_FOOTER LVHITTESTINFO_FLAGS = 536870912
	LVHT_EX_GROUP_COLLAPSE LVHITTESTINFO_FLAGS = 1073741824
	LVHT_EX_GROUP_BACKGROUND LVHITTESTINFO_FLAGS = 2147483648
	LVHT_EX_GROUP_STATEICON LVHITTESTINFO_FLAGS = 16777216
	LVHT_EX_GROUP_SUBSETLINK LVHITTESTINFO_FLAGS = 33554432
	LVHT_EX_GROUP LVHITTESTINFO_FLAGS = 4076863488
	LVHT_EX_ONCONTENTS LVHITTESTINFO_FLAGS = 67108864
	LVHT_EX_FOOTER LVHITTESTINFO_FLAGS = 134217728
)

// enum INITCOMMONCONTROLSEX_ICC
// flags
type INITCOMMONCONTROLSEX_ICC uint32
const (
	ICC_ANIMATE_CLASS INITCOMMONCONTROLSEX_ICC = 128
	ICC_BAR_CLASSES INITCOMMONCONTROLSEX_ICC = 4
	ICC_COOL_CLASSES INITCOMMONCONTROLSEX_ICC = 1024
	ICC_DATE_CLASSES INITCOMMONCONTROLSEX_ICC = 256
	ICC_HOTKEY_CLASS INITCOMMONCONTROLSEX_ICC = 64
	ICC_INTERNET_CLASSES INITCOMMONCONTROLSEX_ICC = 2048
	ICC_LINK_CLASS INITCOMMONCONTROLSEX_ICC = 32768
	ICC_LISTVIEW_CLASSES INITCOMMONCONTROLSEX_ICC = 1
	ICC_NATIVEFNTCTL_CLASS INITCOMMONCONTROLSEX_ICC = 8192
	ICC_PAGESCROLLER_CLASS INITCOMMONCONTROLSEX_ICC = 4096
	ICC_PROGRESS_CLASS INITCOMMONCONTROLSEX_ICC = 32
	ICC_STANDARD_CLASSES INITCOMMONCONTROLSEX_ICC = 16384
	ICC_TAB_CLASSES INITCOMMONCONTROLSEX_ICC = 8
	ICC_TREEVIEW_CLASSES INITCOMMONCONTROLSEX_ICC = 2
	ICC_UPDOWN_CLASS INITCOMMONCONTROLSEX_ICC = 16
	ICC_USEREX_CLASSES INITCOMMONCONTROLSEX_ICC = 512
	ICC_WIN95_CLASSES INITCOMMONCONTROLSEX_ICC = 255
)

// enum NMLVCUSTOMDRAW_ITEM_TYPE
type NMLVCUSTOMDRAW_ITEM_TYPE uint32
const (
	LVCDI_ITEM NMLVCUSTOMDRAW_ITEM_TYPE = 0
	LVCDI_GROUP NMLVCUSTOMDRAW_ITEM_TYPE = 1
	LVCDI_ITEMSLIST NMLVCUSTOMDRAW_ITEM_TYPE = 2
)

// enum NMTBDISPINFOW_MASK
// flags
type NMTBDISPINFOW_MASK uint32
const (
	TBNF_IMAGE NMTBDISPINFOW_MASK = 1
	TBNF_TEXT NMTBDISPINFOW_MASK = 2
	TBNF_DI_SETITEM NMTBDISPINFOW_MASK = 268435456
)

// enum NMLVEMPTYMARKUP_FLAGS
type NMLVEMPTYMARKUP_FLAGS uint32
const (
	EMF_CENTERED NMLVEMPTYMARKUP_FLAGS = 1
)

// enum LVFOOTERITEM_MASK
type LVFOOTERITEM_MASK uint32
const (
	LVFIF_TEXT LVFOOTERITEM_MASK = 1
	LVFIF_STATE LVFOOTERITEM_MASK = 2
)

// enum IMAGELIST_CREATION_FLAGS
// flags
type IMAGELIST_CREATION_FLAGS uint32
const (
	ILC_MASK IMAGELIST_CREATION_FLAGS = 1
	ILC_COLOR IMAGELIST_CREATION_FLAGS = 0
	ILC_COLORDDB IMAGELIST_CREATION_FLAGS = 254
	ILC_COLOR4 IMAGELIST_CREATION_FLAGS = 4
	ILC_COLOR8 IMAGELIST_CREATION_FLAGS = 8
	ILC_COLOR16 IMAGELIST_CREATION_FLAGS = 16
	ILC_COLOR24 IMAGELIST_CREATION_FLAGS = 24
	ILC_COLOR32 IMAGELIST_CREATION_FLAGS = 32
	ILC_PALETTE IMAGELIST_CREATION_FLAGS = 2048
	ILC_MIRROR IMAGELIST_CREATION_FLAGS = 8192
	ILC_PERITEMMIRROR IMAGELIST_CREATION_FLAGS = 32768
	ILC_ORIGINALSIZE IMAGELIST_CREATION_FLAGS = 65536
	ILC_HIGHQUALITYSCALE IMAGELIST_CREATION_FLAGS = 131072
)

// enum TVITEMPART
type TVITEMPART int32
const (
	TVGIPR_BUTTON TVITEMPART = 1
)

// enum EC_ENDOFLINE
type EC_ENDOFLINE int32
const (
	EC_ENDOFLINE_DETECTFROMCONTENT EC_ENDOFLINE = 0
	EC_ENDOFLINE_CRLF EC_ENDOFLINE = 1
	EC_ENDOFLINE_CR EC_ENDOFLINE = 2
	EC_ENDOFLINE_LF EC_ENDOFLINE = 3
)

// enum EC_SEARCHWEB_ENTRYPOINT
type EC_SEARCHWEB_ENTRYPOINT int32
const (
	EC_SEARCHWEB_ENTRYPOINT_EXTERNAL EC_SEARCHWEB_ENTRYPOINT = 0
	EC_SEARCHWEB_ENTRYPOINT_CONTEXTMENU EC_SEARCHWEB_ENTRYPOINT = 1
)

// enum TASKDIALOG_FLAGS
type TASKDIALOG_FLAGS int32
const (
	TDF_ENABLE_HYPERLINKS TASKDIALOG_FLAGS = 1
	TDF_USE_HICON_MAIN TASKDIALOG_FLAGS = 2
	TDF_USE_HICON_FOOTER TASKDIALOG_FLAGS = 4
	TDF_ALLOW_DIALOG_CANCELLATION TASKDIALOG_FLAGS = 8
	TDF_USE_COMMAND_LINKS TASKDIALOG_FLAGS = 16
	TDF_USE_COMMAND_LINKS_NO_ICON TASKDIALOG_FLAGS = 32
	TDF_EXPAND_FOOTER_AREA TASKDIALOG_FLAGS = 64
	TDF_EXPANDED_BY_DEFAULT TASKDIALOG_FLAGS = 128
	TDF_VERIFICATION_FLAG_CHECKED TASKDIALOG_FLAGS = 256
	TDF_SHOW_PROGRESS_BAR TASKDIALOG_FLAGS = 512
	TDF_SHOW_MARQUEE_PROGRESS_BAR TASKDIALOG_FLAGS = 1024
	TDF_CALLBACK_TIMER TASKDIALOG_FLAGS = 2048
	TDF_POSITION_RELATIVE_TO_WINDOW TASKDIALOG_FLAGS = 4096
	TDF_RTL_LAYOUT TASKDIALOG_FLAGS = 8192
	TDF_NO_DEFAULT_RADIO_BUTTON TASKDIALOG_FLAGS = 16384
	TDF_CAN_BE_MINIMIZED TASKDIALOG_FLAGS = 32768
	TDF_NO_SET_FOREGROUND TASKDIALOG_FLAGS = 65536
	TDF_SIZE_TO_CONTENT TASKDIALOG_FLAGS = 16777216
)

// enum TASKDIALOG_MESSAGES
type TASKDIALOG_MESSAGES int32
const (
	TDM_NAVIGATE_PAGE TASKDIALOG_MESSAGES = 1125
	TDM_CLICK_BUTTON TASKDIALOG_MESSAGES = 1126
	TDM_SET_MARQUEE_PROGRESS_BAR TASKDIALOG_MESSAGES = 1127
	TDM_SET_PROGRESS_BAR_STATE TASKDIALOG_MESSAGES = 1128
	TDM_SET_PROGRESS_BAR_RANGE TASKDIALOG_MESSAGES = 1129
	TDM_SET_PROGRESS_BAR_POS TASKDIALOG_MESSAGES = 1130
	TDM_SET_PROGRESS_BAR_MARQUEE TASKDIALOG_MESSAGES = 1131
	TDM_SET_ELEMENT_TEXT TASKDIALOG_MESSAGES = 1132
	TDM_CLICK_RADIO_BUTTON TASKDIALOG_MESSAGES = 1134
	TDM_ENABLE_BUTTON TASKDIALOG_MESSAGES = 1135
	TDM_ENABLE_RADIO_BUTTON TASKDIALOG_MESSAGES = 1136
	TDM_CLICK_VERIFICATION TASKDIALOG_MESSAGES = 1137
	TDM_UPDATE_ELEMENT_TEXT TASKDIALOG_MESSAGES = 1138
	TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE TASKDIALOG_MESSAGES = 1139
	TDM_UPDATE_ICON TASKDIALOG_MESSAGES = 1140
)

// enum TASKDIALOG_NOTIFICATIONS
type TASKDIALOG_NOTIFICATIONS int32
const (
	TDN_CREATED TASKDIALOG_NOTIFICATIONS = 0
	TDN_NAVIGATED TASKDIALOG_NOTIFICATIONS = 1
	TDN_BUTTON_CLICKED TASKDIALOG_NOTIFICATIONS = 2
	TDN_HYPERLINK_CLICKED TASKDIALOG_NOTIFICATIONS = 3
	TDN_TIMER TASKDIALOG_NOTIFICATIONS = 4
	TDN_DESTROYED TASKDIALOG_NOTIFICATIONS = 5
	TDN_RADIO_BUTTON_CLICKED TASKDIALOG_NOTIFICATIONS = 6
	TDN_DIALOG_CONSTRUCTED TASKDIALOG_NOTIFICATIONS = 7
	TDN_VERIFICATION_CLICKED TASKDIALOG_NOTIFICATIONS = 8
	TDN_HELP TASKDIALOG_NOTIFICATIONS = 9
	TDN_EXPANDO_BUTTON_CLICKED TASKDIALOG_NOTIFICATIONS = 10
)

// enum TASKDIALOG_ELEMENTS
type TASKDIALOG_ELEMENTS int32
const (
	TDE_CONTENT TASKDIALOG_ELEMENTS = 0
	TDE_EXPANDED_INFORMATION TASKDIALOG_ELEMENTS = 1
	TDE_FOOTER TASKDIALOG_ELEMENTS = 2
	TDE_MAIN_INSTRUCTION TASKDIALOG_ELEMENTS = 3
)

// enum TASKDIALOG_ICON_ELEMENTS
type TASKDIALOG_ICON_ELEMENTS int32
const (
	TDIE_ICON_MAIN TASKDIALOG_ICON_ELEMENTS = 0
	TDIE_ICON_FOOTER TASKDIALOG_ICON_ELEMENTS = 1
)

// enum TASKDIALOG_COMMON_BUTTON_FLAGS
type TASKDIALOG_COMMON_BUTTON_FLAGS int32
const (
	TDCBF_OK_BUTTON TASKDIALOG_COMMON_BUTTON_FLAGS = 1
	TDCBF_YES_BUTTON TASKDIALOG_COMMON_BUTTON_FLAGS = 2
	TDCBF_NO_BUTTON TASKDIALOG_COMMON_BUTTON_FLAGS = 4
	TDCBF_CANCEL_BUTTON TASKDIALOG_COMMON_BUTTON_FLAGS = 8
	TDCBF_RETRY_BUTTON TASKDIALOG_COMMON_BUTTON_FLAGS = 16
	TDCBF_CLOSE_BUTTON TASKDIALOG_COMMON_BUTTON_FLAGS = 32
)

// enum LI_METRIC_
type LI_METRIC_ int32
const (
	LIM_SMALL LI_METRIC_ = 0
	LIM_LARGE LI_METRIC_ = 1
)

// enum TA_PROPERTY
type TA_PROPERTY int32
const (
	TAP_FLAGS TA_PROPERTY = 0
	TAP_TRANSFORMCOUNT TA_PROPERTY = 1
	TAP_STAGGERDELAY TA_PROPERTY = 2
	TAP_STAGGERDELAYCAP TA_PROPERTY = 3
	TAP_STAGGERDELAYFACTOR TA_PROPERTY = 4
	TAP_ZORDER TA_PROPERTY = 5
)

// enum TA_PROPERTY_FLAG
// flags
type TA_PROPERTY_FLAG uint32
const (
	TAPF_NONE TA_PROPERTY_FLAG = 0
	TAPF_HASSTAGGER TA_PROPERTY_FLAG = 1
	TAPF_ISRTLAWARE TA_PROPERTY_FLAG = 2
	TAPF_ALLOWCOLLECTION TA_PROPERTY_FLAG = 4
	TAPF_HASBACKGROUND TA_PROPERTY_FLAG = 8
	TAPF_HASPERSPECTIVE TA_PROPERTY_FLAG = 16
)

// enum TA_TRANSFORM_TYPE
type TA_TRANSFORM_TYPE int32
const (
	TATT_TRANSLATE_2D TA_TRANSFORM_TYPE = 0
	TATT_SCALE_2D TA_TRANSFORM_TYPE = 1
	TATT_OPACITY TA_TRANSFORM_TYPE = 2
	TATT_CLIP TA_TRANSFORM_TYPE = 3
)

// enum TA_TRANSFORM_FLAG
type TA_TRANSFORM_FLAG int32
const (
	TATF_NONE TA_TRANSFORM_FLAG = 0
	TATF_TARGETVALUES_USER TA_TRANSFORM_FLAG = 1
	TATF_HASINITIALVALUES TA_TRANSFORM_FLAG = 2
	TATF_HASORIGINVALUES TA_TRANSFORM_FLAG = 4
)

// enum TA_TIMINGFUNCTION_TYPE
type TA_TIMINGFUNCTION_TYPE int32
const (
	TTFT_UNDEFINED TA_TIMINGFUNCTION_TYPE = 0
	TTFT_CUBIC_BEZIER TA_TIMINGFUNCTION_TYPE = 1
)

// enum THEMESIZE
type THEMESIZE int32
const (
	TS_MIN THEMESIZE = 0
	TS_TRUE THEMESIZE = 1
	TS_DRAW THEMESIZE = 2
)

// enum PROPERTYORIGIN
type PROPERTYORIGIN int32
const (
	PO_STATE PROPERTYORIGIN = 0
	PO_PART PROPERTYORIGIN = 1
	PO_CLASS PROPERTYORIGIN = 2
	PO_GLOBAL PROPERTYORIGIN = 3
	PO_NOTFOUND PROPERTYORIGIN = 4
)

// enum WINDOWTHEMEATTRIBUTETYPE
type WINDOWTHEMEATTRIBUTETYPE int32
const (
	WTA_NONCLIENT WINDOWTHEMEATTRIBUTETYPE = 1
)

// enum BP_BUFFERFORMAT
type BP_BUFFERFORMAT int32
const (
	BPBF_COMPATIBLEBITMAP BP_BUFFERFORMAT = 0
	BPBF_DIB BP_BUFFERFORMAT = 1
	BPBF_TOPDOWNDIB BP_BUFFERFORMAT = 2
	BPBF_TOPDOWNMONODIB BP_BUFFERFORMAT = 3
)

// enum BP_ANIMATIONSTYLE
type BP_ANIMATIONSTYLE int32
const (
	BPAS_NONE BP_ANIMATIONSTYLE = 0
	BPAS_LINEAR BP_ANIMATIONSTYLE = 1
	BPAS_CUBIC BP_ANIMATIONSTYLE = 2
	BPAS_SINE BP_ANIMATIONSTYLE = 3
)

// enum BGTYPE
type BGTYPE int32
const (
	BT_IMAGEFILE BGTYPE = 0
	BT_BORDERFILL BGTYPE = 1
	BT_NONE BGTYPE = 2
)

// enum IMAGELAYOUT
type IMAGELAYOUT int32
const (
	IL_VERTICAL IMAGELAYOUT = 0
	IL_HORIZONTAL IMAGELAYOUT = 1
)

// enum BORDERTYPE
type BORDERTYPE int32
const (
	BT_RECT BORDERTYPE = 0
	BT_ROUNDRECT BORDERTYPE = 1
	BT_ELLIPSE BORDERTYPE = 2
)

// enum FILLTYPE
type FILLTYPE int32
const (
	FT_SOLID FILLTYPE = 0
	FT_VERTGRADIENT FILLTYPE = 1
	FT_HORZGRADIENT FILLTYPE = 2
	FT_RADIALGRADIENT FILLTYPE = 3
	FT_TILEIMAGE FILLTYPE = 4
)

// enum SIZINGTYPE
type SIZINGTYPE int32
const (
	ST_TRUESIZE SIZINGTYPE = 0
	ST_STRETCH SIZINGTYPE = 1
	ST_TILE SIZINGTYPE = 2
)

// enum HALIGN
type HALIGN int32
const (
	HA_LEFT HALIGN = 0
	HA_CENTER HALIGN = 1
	HA_RIGHT HALIGN = 2
)

// enum CONTENTALIGNMENT
type CONTENTALIGNMENT int32
const (
	CA_LEFT CONTENTALIGNMENT = 0
	CA_CENTER CONTENTALIGNMENT = 1
	CA_RIGHT CONTENTALIGNMENT = 2
)

// enum VALIGN
type VALIGN int32
const (
	VA_TOP VALIGN = 0
	VA_CENTER VALIGN = 1
	VA_BOTTOM VALIGN = 2
)

// enum OFFSETTYPE
type OFFSETTYPE int32
const (
	OT_TOPLEFT OFFSETTYPE = 0
	OT_TOPRIGHT OFFSETTYPE = 1
	OT_TOPMIDDLE OFFSETTYPE = 2
	OT_BOTTOMLEFT OFFSETTYPE = 3
	OT_BOTTOMRIGHT OFFSETTYPE = 4
	OT_BOTTOMMIDDLE OFFSETTYPE = 5
	OT_MIDDLELEFT OFFSETTYPE = 6
	OT_MIDDLERIGHT OFFSETTYPE = 7
	OT_LEFTOFCAPTION OFFSETTYPE = 8
	OT_RIGHTOFCAPTION OFFSETTYPE = 9
	OT_LEFTOFLASTBUTTON OFFSETTYPE = 10
	OT_RIGHTOFLASTBUTTON OFFSETTYPE = 11
	OT_ABOVELASTBUTTON OFFSETTYPE = 12
	OT_BELOWLASTBUTTON OFFSETTYPE = 13
)

// enum ICONEFFECT
type ICONEFFECT int32
const (
	ICE_NONE ICONEFFECT = 0
	ICE_GLOW ICONEFFECT = 1
	ICE_SHADOW ICONEFFECT = 2
	ICE_PULSE ICONEFFECT = 3
	ICE_ALPHA ICONEFFECT = 4
)

// enum TEXTSHADOWTYPE
type TEXTSHADOWTYPE int32
const (
	TST_NONE TEXTSHADOWTYPE = 0
	TST_SINGLE TEXTSHADOWTYPE = 1
	TST_CONTINUOUS TEXTSHADOWTYPE = 2
)

// enum GLYPHTYPE
type GLYPHTYPE int32
const (
	GT_NONE GLYPHTYPE = 0
	GT_IMAGEGLYPH GLYPHTYPE = 1
	GT_FONTGLYPH GLYPHTYPE = 2
)

// enum IMAGESELECTTYPE
type IMAGESELECTTYPE int32
const (
	IST_NONE IMAGESELECTTYPE = 0
	IST_SIZE IMAGESELECTTYPE = 1
	IST_DPI IMAGESELECTTYPE = 2
)

// enum TRUESIZESCALINGTYPE
type TRUESIZESCALINGTYPE int32
const (
	TSST_NONE TRUESIZESCALINGTYPE = 0
	TSST_SIZE TRUESIZESCALINGTYPE = 1
	TSST_DPI TRUESIZESCALINGTYPE = 2
)

// enum GLYPHFONTSIZINGTYPE
type GLYPHFONTSIZINGTYPE int32
const (
	GFST_NONE GLYPHFONTSIZINGTYPE = 0
	GFST_SIZE GLYPHFONTSIZINGTYPE = 1
	GFST_DPI GLYPHFONTSIZINGTYPE = 2
)

// enum LINKPARTS
type LINKPARTS int32
const (
	LP_HYPERLINK LINKPARTS = 1
)

// enum HYPERLINKSTATES
type HYPERLINKSTATES int32
const (
	HLS_NORMALTEXT HYPERLINKSTATES = 1
	HLS_LINKTEXT HYPERLINKSTATES = 2
)

// enum EMPTYMARKUPPARTS
type EMPTYMARKUPPARTS int32
const (
	EMP_MARKUPTEXT EMPTYMARKUPPARTS = 1
)

// enum MARKUPTEXTSTATES
type MARKUPTEXTSTATES int32
const (
	EMT_NORMALTEXT MARKUPTEXTSTATES = 1
	EMT_LINKTEXT MARKUPTEXTSTATES = 2
)

// enum STATICPARTS
type STATICPARTS int32
const (
	STAT_TEXT STATICPARTS = 1
)

// enum PAGEPARTS
type PAGEPARTS int32
const (
	PGRP_UP PAGEPARTS = 1
	PGRP_DOWN PAGEPARTS = 2
	PGRP_UPHORZ PAGEPARTS = 3
	PGRP_DOWNHORZ PAGEPARTS = 4
)

// enum MONTHCALPARTS
type MONTHCALPARTS int32
const (
	MC_BACKGROUND MONTHCALPARTS = 1
	MC_BORDERS MONTHCALPARTS = 2
	MC_GRIDBACKGROUND MONTHCALPARTS = 3
	MC_COLHEADERSPLITTER MONTHCALPARTS = 4
	MC_GRIDCELLBACKGROUND MONTHCALPARTS = 5
	MC_GRIDCELL MONTHCALPARTS = 6
	MC_GRIDCELLUPPER MONTHCALPARTS = 7
	MC_TRAILINGGRIDCELL MONTHCALPARTS = 8
	MC_TRAILINGGRIDCELLUPPER MONTHCALPARTS = 9
	MC_NAVNEXT MONTHCALPARTS = 10
	MC_NAVPREV MONTHCALPARTS = 11
)

// enum GRIDCELLBACKGROUNDSTATES
type GRIDCELLBACKGROUNDSTATES int32
const (
	MCGCB_SELECTED GRIDCELLBACKGROUNDSTATES = 1
	MCGCB_HOT GRIDCELLBACKGROUNDSTATES = 2
	MCGCB_SELECTEDHOT GRIDCELLBACKGROUNDSTATES = 3
	MCGCB_SELECTEDNOTFOCUSED GRIDCELLBACKGROUNDSTATES = 4
	MCGCB_TODAY GRIDCELLBACKGROUNDSTATES = 5
	MCGCB_TODAYSELECTED GRIDCELLBACKGROUNDSTATES = 6
)

// enum GRIDCELLSTATES
type GRIDCELLSTATES int32
const (
	MCGC_HOT GRIDCELLSTATES = 1
	MCGC_HASSTATE GRIDCELLSTATES = 2
	MCGC_HASSTATEHOT GRIDCELLSTATES = 3
	MCGC_TODAY GRIDCELLSTATES = 4
	MCGC_TODAYSELECTED GRIDCELLSTATES = 5
	MCGC_SELECTED GRIDCELLSTATES = 6
	MCGC_SELECTEDHOT GRIDCELLSTATES = 7
)

// enum GRIDCELLUPPERSTATES
type GRIDCELLUPPERSTATES int32
const (
	MCGCU_HOT GRIDCELLUPPERSTATES = 1
	MCGCU_HASSTATE GRIDCELLUPPERSTATES = 2
	MCGCU_HASSTATEHOT GRIDCELLUPPERSTATES = 3
	MCGCU_SELECTED GRIDCELLUPPERSTATES = 4
	MCGCU_SELECTEDHOT GRIDCELLUPPERSTATES = 5
)

// enum TRAILINGGRIDCELLSTATES
type TRAILINGGRIDCELLSTATES int32
const (
	MCTGC_HOT TRAILINGGRIDCELLSTATES = 1
	MCTGC_HASSTATE TRAILINGGRIDCELLSTATES = 2
	MCTGC_HASSTATEHOT TRAILINGGRIDCELLSTATES = 3
	MCTGC_TODAY TRAILINGGRIDCELLSTATES = 4
	MCTGC_TODAYSELECTED TRAILINGGRIDCELLSTATES = 5
	MCTGC_SELECTED TRAILINGGRIDCELLSTATES = 6
	MCTGC_SELECTEDHOT TRAILINGGRIDCELLSTATES = 7
)

// enum TRAILINGGRIDCELLUPPERSTATES
type TRAILINGGRIDCELLUPPERSTATES int32
const (
	MCTGCU_HOT TRAILINGGRIDCELLUPPERSTATES = 1
	MCTGCU_HASSTATE TRAILINGGRIDCELLUPPERSTATES = 2
	MCTGCU_HASSTATEHOT TRAILINGGRIDCELLUPPERSTATES = 3
	MCTGCU_SELECTED TRAILINGGRIDCELLUPPERSTATES = 4
	MCTGCU_SELECTEDHOT TRAILINGGRIDCELLUPPERSTATES = 5
)

// enum NAVNEXTSTATES
type NAVNEXTSTATES int32
const (
	MCNN_NORMAL NAVNEXTSTATES = 1
	MCNN_HOT NAVNEXTSTATES = 2
	MCNN_PRESSED NAVNEXTSTATES = 3
	MCNN_DISABLED NAVNEXTSTATES = 4
)

// enum NAVPREVSTATES
type NAVPREVSTATES int32
const (
	MCNP_NORMAL NAVPREVSTATES = 1
	MCNP_HOT NAVPREVSTATES = 2
	MCNP_PRESSED NAVPREVSTATES = 3
	MCNP_DISABLED NAVPREVSTATES = 4
)

// enum CLOCKPARTS
type CLOCKPARTS int32
const (
	CLP_TIME CLOCKPARTS = 1
)

// enum CLOCKSTATES
type CLOCKSTATES int32
const (
	CLS_NORMAL CLOCKSTATES = 1
	CLS_HOT CLOCKSTATES = 2
	CLS_PRESSED CLOCKSTATES = 3
)

// enum TRAYNOTIFYPARTS
type TRAYNOTIFYPARTS int32
const (
	TNP_BACKGROUND TRAYNOTIFYPARTS = 1
	TNP_ANIMBACKGROUND TRAYNOTIFYPARTS = 2
)

// enum TASKBARPARTS
type TASKBARPARTS int32
const (
	TBP_BACKGROUNDBOTTOM TASKBARPARTS = 1
	TBP_BACKGROUNDRIGHT TASKBARPARTS = 2
	TBP_BACKGROUNDTOP TASKBARPARTS = 3
	TBP_BACKGROUNDLEFT TASKBARPARTS = 4
	TBP_SIZINGBARBOTTOM TASKBARPARTS = 5
	TBP_SIZINGBARRIGHT TASKBARPARTS = 6
	TBP_SIZINGBARTOP TASKBARPARTS = 7
	TBP_SIZINGBARLEFT TASKBARPARTS = 8
)

// enum TASKBANDPARTS
type TASKBANDPARTS int32
const (
	TDP_GROUPCOUNT TASKBANDPARTS = 1
	TDP_FLASHBUTTON TASKBANDPARTS = 2
	TDP_FLASHBUTTONGROUPMENU TASKBANDPARTS = 3
)

// enum STARTPANELPARTS
type STARTPANELPARTS int32
const (
	SPP_USERPANE STARTPANELPARTS = 1
	SPP_MOREPROGRAMS STARTPANELPARTS = 2
	SPP_MOREPROGRAMSARROW STARTPANELPARTS = 3
	SPP_PROGLIST STARTPANELPARTS = 4
	SPP_PROGLISTSEPARATOR STARTPANELPARTS = 5
	SPP_PLACESLIST STARTPANELPARTS = 6
	SPP_PLACESLISTSEPARATOR STARTPANELPARTS = 7
	SPP_LOGOFF STARTPANELPARTS = 8
	SPP_LOGOFFBUTTONS STARTPANELPARTS = 9
	SPP_USERPICTURE STARTPANELPARTS = 10
	SPP_PREVIEW STARTPANELPARTS = 11
	SPP_MOREPROGRAMSTAB STARTPANELPARTS = 12
	SPP_NSCHOST STARTPANELPARTS = 13
	SPP_SOFTWAREEXPLORER STARTPANELPARTS = 14
	SPP_OPENBOX STARTPANELPARTS = 15
	SPP_SEARCHVIEW STARTPANELPARTS = 16
	SPP_MOREPROGRAMSARROWBACK STARTPANELPARTS = 17
	SPP_TOPMATCH STARTPANELPARTS = 18
	SPP_LOGOFFSPLITBUTTONDROPDOWN STARTPANELPARTS = 19
)

// enum MOREPROGRAMSTABSTATES
type MOREPROGRAMSTABSTATES int32
const (
	SPMPT_NORMAL MOREPROGRAMSTABSTATES = 1
	SPMPT_HOT MOREPROGRAMSTABSTATES = 2
	SPMPT_SELECTED MOREPROGRAMSTABSTATES = 3
	SPMPT_DISABLED MOREPROGRAMSTABSTATES = 4
	SPMPT_FOCUSED MOREPROGRAMSTABSTATES = 5
)

// enum SOFTWAREEXPLORERSTATES
type SOFTWAREEXPLORERSTATES int32
const (
	SPSE_NORMAL SOFTWAREEXPLORERSTATES = 1
	SPSE_HOT SOFTWAREEXPLORERSTATES = 2
	SPSE_SELECTED SOFTWAREEXPLORERSTATES = 3
	SPSE_DISABLED SOFTWAREEXPLORERSTATES = 4
	SPSE_FOCUSED SOFTWAREEXPLORERSTATES = 5
)

// enum OPENBOXSTATES
type OPENBOXSTATES int32
const (
	SPOB_NORMAL OPENBOXSTATES = 1
	SPOB_HOT OPENBOXSTATES = 2
	SPOB_SELECTED OPENBOXSTATES = 3
	SPOB_DISABLED OPENBOXSTATES = 4
	SPOB_FOCUSED OPENBOXSTATES = 5
)

// enum MOREPROGRAMSARROWSTATES
type MOREPROGRAMSARROWSTATES int32
const (
	SPS_NORMAL MOREPROGRAMSARROWSTATES = 1
	SPS_HOT MOREPROGRAMSARROWSTATES = 2
	SPS_PRESSED MOREPROGRAMSARROWSTATES = 3
)

// enum MOREPROGRAMSARROWBACKSTATES
type MOREPROGRAMSARROWBACKSTATES int32
const (
	SPSB_NORMAL MOREPROGRAMSARROWBACKSTATES = 1
	SPSB_HOT MOREPROGRAMSARROWBACKSTATES = 2
	SPSB_PRESSED MOREPROGRAMSARROWBACKSTATES = 3
)

// enum LOGOFFBUTTONSSTATES
type LOGOFFBUTTONSSTATES int32
const (
	SPLS_NORMAL LOGOFFBUTTONSSTATES = 1
	SPLS_HOT LOGOFFBUTTONSSTATES = 2
	SPLS_PRESSED LOGOFFBUTTONSSTATES = 3
)

// enum MENUBANDPARTS
type MENUBANDPARTS int32
const (
	MDP_NEWAPPBUTTON MENUBANDPARTS = 1
	MDP_SEPERATOR MENUBANDPARTS = 2
)

// enum MENUBANDSTATES
type MENUBANDSTATES int32
const (
	MDS_NORMAL MENUBANDSTATES = 1
	MDS_HOT MENUBANDSTATES = 2
	MDS_PRESSED MENUBANDSTATES = 3
	MDS_DISABLED MENUBANDSTATES = 4
	MDS_CHECKED MENUBANDSTATES = 5
	MDS_HOTCHECKED MENUBANDSTATES = 6
)

// enum POINTER_FEEDBACK_MODE
type POINTER_FEEDBACK_MODE int32
const (
	POINTER_FEEDBACK_DEFAULT POINTER_FEEDBACK_MODE = 1
	POINTER_FEEDBACK_INDIRECT POINTER_FEEDBACK_MODE = 2
	POINTER_FEEDBACK_NONE POINTER_FEEDBACK_MODE = 3
)

// enum FEEDBACK_TYPE
type FEEDBACK_TYPE int32
const (
	FEEDBACK_TOUCH_CONTACTVISUALIZATION FEEDBACK_TYPE = 1
	FEEDBACK_PEN_BARRELVISUALIZATION FEEDBACK_TYPE = 2
	FEEDBACK_PEN_TAP FEEDBACK_TYPE = 3
	FEEDBACK_PEN_DOUBLETAP FEEDBACK_TYPE = 4
	FEEDBACK_PEN_PRESSANDHOLD FEEDBACK_TYPE = 5
	FEEDBACK_PEN_RIGHTTAP FEEDBACK_TYPE = 6
	FEEDBACK_TOUCH_TAP FEEDBACK_TYPE = 7
	FEEDBACK_TOUCH_DOUBLETAP FEEDBACK_TYPE = 8
	FEEDBACK_TOUCH_PRESSANDHOLD FEEDBACK_TYPE = 9
	FEEDBACK_TOUCH_RIGHTTAP FEEDBACK_TYPE = 10
	FEEDBACK_GESTURE_PRESSANDTAP FEEDBACK_TYPE = 11
	FEEDBACK_MAX FEEDBACK_TYPE = -1
)

// enum POINTER_DEVICE_TYPE
type POINTER_DEVICE_TYPE int32
const (
	POINTER_DEVICE_TYPE_INTEGRATED_PEN POINTER_DEVICE_TYPE = 1
	POINTER_DEVICE_TYPE_EXTERNAL_PEN POINTER_DEVICE_TYPE = 2
	POINTER_DEVICE_TYPE_TOUCH POINTER_DEVICE_TYPE = 3
	POINTER_DEVICE_TYPE_TOUCH_PAD POINTER_DEVICE_TYPE = 4
	POINTER_DEVICE_TYPE_MAX POINTER_DEVICE_TYPE = -1
)

// enum POINTER_DEVICE_CURSOR_TYPE
type POINTER_DEVICE_CURSOR_TYPE int32
const (
	POINTER_DEVICE_CURSOR_TYPE_UNKNOWN POINTER_DEVICE_CURSOR_TYPE = 0
	POINTER_DEVICE_CURSOR_TYPE_TIP POINTER_DEVICE_CURSOR_TYPE = 1
	POINTER_DEVICE_CURSOR_TYPE_ERASER POINTER_DEVICE_CURSOR_TYPE = 2
	POINTER_DEVICE_CURSOR_TYPE_MAX POINTER_DEVICE_CURSOR_TYPE = -1
)


// structs

type PROPSHEETPAGEA_V1_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEA_V1_Anonymous1_) PszTemplate() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V1_Anonymous1_) PszTemplateVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V1_Anonymous1_) PResource() **DLGTEMPLATE{
	return (**DLGTEMPLATE)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V1_Anonymous1_) PResourceVal() *DLGTEMPLATE{
	return *(**DLGTEMPLATE)(unsafe.Pointer(this))
}

type PROPSHEETPAGEA_V1_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEA_V1_Anonymous2_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V1_Anonymous2_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V1_Anonymous2_) PszIcon() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V1_Anonymous2_) PszIconVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGEA_V1 struct {
	DwSize uint32
	DwFlags uint32
	HInstance HINSTANCE
	PROPSHEETPAGEA_V1_Anonymous1_
	PROPSHEETPAGEA_V1_Anonymous2_
	PszTitle PSTR
	PfnDlgProc uintptr
	LParam LPARAM
	PfnCallback uintptr
	PcRefParent *uint32
}

type PROPSHEETPAGEA_V2_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEA_V2_Anonymous1_) PszTemplate() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V2_Anonymous1_) PszTemplateVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V2_Anonymous1_) PResource() **DLGTEMPLATE{
	return (**DLGTEMPLATE)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V2_Anonymous1_) PResourceVal() *DLGTEMPLATE{
	return *(**DLGTEMPLATE)(unsafe.Pointer(this))
}

type PROPSHEETPAGEA_V2_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEA_V2_Anonymous2_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V2_Anonymous2_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V2_Anonymous2_) PszIcon() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V2_Anonymous2_) PszIconVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGEA_V2 struct {
	DwSize uint32
	DwFlags uint32
	HInstance HINSTANCE
	PROPSHEETPAGEA_V2_Anonymous1_
	PROPSHEETPAGEA_V2_Anonymous2_
	PszTitle PSTR
	PfnDlgProc uintptr
	LParam LPARAM
	PfnCallback uintptr
	PcRefParent *uint32
	PszHeaderTitle PSTR
	PszHeaderSubTitle PSTR
}

type PROPSHEETPAGEA_V3_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEA_V3_Anonymous1_) PszTemplate() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V3_Anonymous1_) PszTemplateVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V3_Anonymous1_) PResource() **DLGTEMPLATE{
	return (**DLGTEMPLATE)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V3_Anonymous1_) PResourceVal() *DLGTEMPLATE{
	return *(**DLGTEMPLATE)(unsafe.Pointer(this))
}

type PROPSHEETPAGEA_V3_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEA_V3_Anonymous2_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V3_Anonymous2_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V3_Anonymous2_) PszIcon() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_V3_Anonymous2_) PszIconVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGEA_V3 struct {
	DwSize uint32
	DwFlags uint32
	HInstance HINSTANCE
	PROPSHEETPAGEA_V3_Anonymous1_
	PROPSHEETPAGEA_V3_Anonymous2_
	PszTitle PSTR
	PfnDlgProc uintptr
	LParam LPARAM
	PfnCallback uintptr
	PcRefParent *uint32
	PszHeaderTitle PSTR
	PszHeaderSubTitle PSTR
	HActCtx HANDLE
}

type PROPSHEETPAGEA_Anonymous3_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEA_Anonymous3_) HbmHeader() *HBITMAP{
	return (*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_Anonymous3_) HbmHeaderVal() HBITMAP{
	return *(*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_Anonymous3_) PszbmHeader() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_Anonymous3_) PszbmHeaderVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGEA_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEA_Anonymous1_) PszTemplate() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_Anonymous1_) PszTemplateVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_Anonymous1_) PResource() **DLGTEMPLATE{
	return (**DLGTEMPLATE)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_Anonymous1_) PResourceVal() *DLGTEMPLATE{
	return *(**DLGTEMPLATE)(unsafe.Pointer(this))
}

type PROPSHEETPAGEA_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEA_Anonymous2_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_Anonymous2_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_Anonymous2_) PszIcon() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEA_Anonymous2_) PszIconVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGEA struct {
	DwSize uint32
	DwFlags uint32
	HInstance HINSTANCE
	PROPSHEETPAGEA_Anonymous1_
	PROPSHEETPAGEA_Anonymous2_
	PszTitle PSTR
	PfnDlgProc uintptr
	LParam LPARAM
	PfnCallback uintptr
	PcRefParent *uint32
	PszHeaderTitle PSTR
	PszHeaderSubTitle PSTR
	HActCtx HANDLE
	PROPSHEETPAGEA_Anonymous3_
}

type PROPSHEETPAGEW_V1_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEW_V1_Anonymous2_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V1_Anonymous2_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V1_Anonymous2_) PszIcon() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V1_Anonymous2_) PszIconVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGEW_V1_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEW_V1_Anonymous1_) PszTemplate() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V1_Anonymous1_) PszTemplateVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V1_Anonymous1_) PResource() **DLGTEMPLATE{
	return (**DLGTEMPLATE)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V1_Anonymous1_) PResourceVal() *DLGTEMPLATE{
	return *(**DLGTEMPLATE)(unsafe.Pointer(this))
}

type PROPSHEETPAGEW_V1 struct {
	DwSize uint32
	DwFlags uint32
	HInstance HINSTANCE
	PROPSHEETPAGEW_V1_Anonymous1_
	PROPSHEETPAGEW_V1_Anonymous2_
	PszTitle PWSTR
	PfnDlgProc uintptr
	LParam LPARAM
	PfnCallback uintptr
	PcRefParent *uint32
}

type PROPSHEETPAGEW_V2_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEW_V2_Anonymous2_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V2_Anonymous2_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V2_Anonymous2_) PszIcon() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V2_Anonymous2_) PszIconVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGEW_V2_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEW_V2_Anonymous1_) PszTemplate() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V2_Anonymous1_) PszTemplateVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V2_Anonymous1_) PResource() **DLGTEMPLATE{
	return (**DLGTEMPLATE)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V2_Anonymous1_) PResourceVal() *DLGTEMPLATE{
	return *(**DLGTEMPLATE)(unsafe.Pointer(this))
}

type PROPSHEETPAGEW_V2 struct {
	DwSize uint32
	DwFlags uint32
	HInstance HINSTANCE
	PROPSHEETPAGEW_V2_Anonymous1_
	PROPSHEETPAGEW_V2_Anonymous2_
	PszTitle PWSTR
	PfnDlgProc uintptr
	LParam LPARAM
	PfnCallback uintptr
	PcRefParent *uint32
	PszHeaderTitle PWSTR
	PszHeaderSubTitle PWSTR
}

type PROPSHEETPAGEW_V3_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEW_V3_Anonymous2_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V3_Anonymous2_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V3_Anonymous2_) PszIcon() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V3_Anonymous2_) PszIconVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGEW_V3_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEW_V3_Anonymous1_) PszTemplate() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V3_Anonymous1_) PszTemplateVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V3_Anonymous1_) PResource() **DLGTEMPLATE{
	return (**DLGTEMPLATE)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_V3_Anonymous1_) PResourceVal() *DLGTEMPLATE{
	return *(**DLGTEMPLATE)(unsafe.Pointer(this))
}

type PROPSHEETPAGEW_V3 struct {
	DwSize uint32
	DwFlags uint32
	HInstance HINSTANCE
	PROPSHEETPAGEW_V3_Anonymous1_
	PROPSHEETPAGEW_V3_Anonymous2_
	PszTitle PWSTR
	PfnDlgProc uintptr
	LParam LPARAM
	PfnCallback uintptr
	PcRefParent *uint32
	PszHeaderTitle PWSTR
	PszHeaderSubTitle PWSTR
	HActCtx HANDLE
}

type PROPSHEETPAGEW_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEW_Anonymous2_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_Anonymous2_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_Anonymous2_) PszIcon() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_Anonymous2_) PszIconVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGEW_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEW_Anonymous1_) PszTemplate() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_Anonymous1_) PszTemplateVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_Anonymous1_) PResource() **DLGTEMPLATE{
	return (**DLGTEMPLATE)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_Anonymous1_) PResourceVal() *DLGTEMPLATE{
	return *(**DLGTEMPLATE)(unsafe.Pointer(this))
}

type PROPSHEETPAGEW_Anonymous3_ struct {
	Data [1]uint64
}

func (this *PROPSHEETPAGEW_Anonymous3_) HbmHeader() *HBITMAP{
	return (*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_Anonymous3_) HbmHeaderVal() HBITMAP{
	return *(*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_Anonymous3_) PszbmHeader() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETPAGEW_Anonymous3_) PszbmHeaderVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETPAGE = PROPSHEETPAGEW
type PROPSHEETPAGEW struct {
	DwSize uint32
	DwFlags uint32
	HInstance HINSTANCE
	PROPSHEETPAGEW_Anonymous1_
	PROPSHEETPAGEW_Anonymous2_
	PszTitle PWSTR
	PfnDlgProc uintptr
	LParam LPARAM
	PfnCallback uintptr
	PcRefParent *uint32
	PszHeaderTitle PWSTR
	PszHeaderSubTitle PWSTR
	HActCtx HANDLE
	PROPSHEETPAGEW_Anonymous3_
}

type PROPSHEETHEADERA_V1_Anonymous3_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERA_V1_Anonymous3_) Ppsp() **PROPSHEETPAGEA{
	return (**PROPSHEETPAGEA)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V1_Anonymous3_) PpspVal() *PROPSHEETPAGEA{
	return *(**PROPSHEETPAGEA)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V1_Anonymous3_) Phpage() **HPROPSHEETPAGE{
	return (**HPROPSHEETPAGE)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V1_Anonymous3_) PhpageVal() *HPROPSHEETPAGE{
	return *(**HPROPSHEETPAGE)(unsafe.Pointer(this))
}

type PROPSHEETHEADERA_V1_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERA_V1_Anonymous1_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V1_Anonymous1_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V1_Anonymous1_) PszIcon() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V1_Anonymous1_) PszIconVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERA_V1_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERA_V1_Anonymous2_) NStartPage() *uint32{
	return (*uint32)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V1_Anonymous2_) NStartPageVal() uint32{
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V1_Anonymous2_) PStartPage() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V1_Anonymous2_) PStartPageVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERA_V1 struct {
	DwSize uint32
	DwFlags uint32
	HwndParent HWND
	HInstance HINSTANCE
	PROPSHEETHEADERA_V1_Anonymous1_
	PszCaption PSTR
	NPages uint32
	PROPSHEETHEADERA_V1_Anonymous2_
	PROPSHEETHEADERA_V1_Anonymous3_
	PfnCallback uintptr
}

type PROPSHEETHEADERA_V2_Anonymous4_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERA_V2_Anonymous4_) HbmWatermark() *HBITMAP{
	return (*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous4_) HbmWatermarkVal() HBITMAP{
	return *(*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous4_) PszbmWatermark() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous4_) PszbmWatermarkVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERA_V2_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERA_V2_Anonymous2_) NStartPage() *uint32{
	return (*uint32)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous2_) NStartPageVal() uint32{
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous2_) PStartPage() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous2_) PStartPageVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERA_V2_Anonymous3_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERA_V2_Anonymous3_) Ppsp() **PROPSHEETPAGEA{
	return (**PROPSHEETPAGEA)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous3_) PpspVal() *PROPSHEETPAGEA{
	return *(**PROPSHEETPAGEA)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous3_) Phpage() **HPROPSHEETPAGE{
	return (**HPROPSHEETPAGE)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous3_) PhpageVal() *HPROPSHEETPAGE{
	return *(**HPROPSHEETPAGE)(unsafe.Pointer(this))
}

type PROPSHEETHEADERA_V2_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERA_V2_Anonymous1_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous1_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous1_) PszIcon() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous1_) PszIconVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERA_V2_Anonymous5_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERA_V2_Anonymous5_) HbmHeader() *HBITMAP{
	return (*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous5_) HbmHeaderVal() HBITMAP{
	return *(*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous5_) PszbmHeader() *PSTR{
	return (*PSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERA_V2_Anonymous5_) PszbmHeaderVal() PSTR{
	return *(*PSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERA_V2 struct {
	DwSize uint32
	DwFlags uint32
	HwndParent HWND
	HInstance HINSTANCE
	PROPSHEETHEADERA_V2_Anonymous1_
	PszCaption PSTR
	NPages uint32
	PROPSHEETHEADERA_V2_Anonymous2_
	PROPSHEETHEADERA_V2_Anonymous3_
	PfnCallback uintptr
	PROPSHEETHEADERA_V2_Anonymous4_
	HplWatermark HPALETTE
	PROPSHEETHEADERA_V2_Anonymous5_
}

type PROPSHEETHEADERW_V1_Anonymous3_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERW_V1_Anonymous3_) Ppsp() **PROPSHEETPAGEW{
	return (**PROPSHEETPAGEW)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V1_Anonymous3_) PpspVal() *PROPSHEETPAGEW{
	return *(**PROPSHEETPAGEW)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V1_Anonymous3_) Phpage() **HPROPSHEETPAGE{
	return (**HPROPSHEETPAGE)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V1_Anonymous3_) PhpageVal() *HPROPSHEETPAGE{
	return *(**HPROPSHEETPAGE)(unsafe.Pointer(this))
}

type PROPSHEETHEADERW_V1_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERW_V1_Anonymous1_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V1_Anonymous1_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V1_Anonymous1_) PszIcon() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V1_Anonymous1_) PszIconVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERW_V1_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERW_V1_Anonymous2_) NStartPage() *uint32{
	return (*uint32)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V1_Anonymous2_) NStartPageVal() uint32{
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V1_Anonymous2_) PStartPage() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V1_Anonymous2_) PStartPageVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERW_V1 struct {
	DwSize uint32
	DwFlags uint32
	HwndParent HWND
	HInstance HINSTANCE
	PROPSHEETHEADERW_V1_Anonymous1_
	PszCaption PWSTR
	NPages uint32
	PROPSHEETHEADERW_V1_Anonymous2_
	PROPSHEETHEADERW_V1_Anonymous3_
	PfnCallback uintptr
}

type PROPSHEETHEADERW_V2_Anonymous4_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERW_V2_Anonymous4_) HbmWatermark() *HBITMAP{
	return (*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous4_) HbmWatermarkVal() HBITMAP{
	return *(*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous4_) PszbmWatermark() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous4_) PszbmWatermarkVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERW_V2_Anonymous2_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERW_V2_Anonymous2_) NStartPage() *uint32{
	return (*uint32)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous2_) NStartPageVal() uint32{
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous2_) PStartPage() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous2_) PStartPageVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERW_V2_Anonymous3_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERW_V2_Anonymous3_) Ppsp() **PROPSHEETPAGEW{
	return (**PROPSHEETPAGEW)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous3_) PpspVal() *PROPSHEETPAGEW{
	return *(**PROPSHEETPAGEW)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous3_) Phpage() **HPROPSHEETPAGE{
	return (**HPROPSHEETPAGE)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous3_) PhpageVal() *HPROPSHEETPAGE{
	return *(**HPROPSHEETPAGE)(unsafe.Pointer(this))
}

type PROPSHEETHEADERW_V2_Anonymous1_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERW_V2_Anonymous1_) HIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous1_) HIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous1_) PszIcon() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous1_) PszIconVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERW_V2_Anonymous5_ struct {
	Data [1]uint64
}

func (this *PROPSHEETHEADERW_V2_Anonymous5_) HbmHeader() *HBITMAP{
	return (*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous5_) HbmHeaderVal() HBITMAP{
	return *(*HBITMAP)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous5_) PszbmHeader() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROPSHEETHEADERW_V2_Anonymous5_) PszbmHeaderVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type PROPSHEETHEADERW_V2 struct {
	DwSize uint32
	DwFlags uint32
	HwndParent HWND
	HInstance HINSTANCE
	PROPSHEETHEADERW_V2_Anonymous1_
	PszCaption PWSTR
	NPages uint32
	PROPSHEETHEADERW_V2_Anonymous2_
	PROPSHEETHEADERW_V2_Anonymous3_
	PfnCallback uintptr
	PROPSHEETHEADERW_V2_Anonymous4_
	HplWatermark HPALETTE
	PROPSHEETHEADERW_V2_Anonymous5_
}

type PSHNOTIFY struct {
	Hdr NMHDR
	LParam LPARAM
}

type INITCOMMONCONTROLSEX struct {
	DwSize uint32
	DwICC INITCOMMONCONTROLSEX_ICC
}

type COLORSCHEME struct {
	DwSize uint32
	ClrBtnHighlight uint32
	ClrBtnShadow uint32
}

type NMTOOLTIPSCREATED struct {
	Hdr NMHDR
	HwndToolTips HWND
}

type NMMOUSE struct {
	Hdr NMHDR
	DwItemSpec uintptr
	DwItemData uintptr
	Pt POINT
	DwHitInfo LPARAM
}

type NMOBJECTNOTIFY struct {
	Hdr NMHDR
	IItem int32
	Piid *syscall.GUID
	PObject unsafe.Pointer
	HResult HRESULT
	DwFlags uint32
}

type NMKEY struct {
	Hdr NMHDR
	NVKey uint32
	UFlags uint32
}

type NMCHAR struct {
	Hdr NMHDR
	Ch uint32
	DwItemPrev uint32
	DwItemNext uint32
}

type NMCUSTOMTEXT struct {
	Hdr NMHDR
	HDC HDC
	LpString PWSTR
	NCount int32
	LpRect *RECT
	UFormat uint32
	FLink BOOL
}

type NMCUSTOMDRAW struct {
	Hdr NMHDR
	DwDrawStage NMCUSTOMDRAW_DRAW_STAGE
	Hdc HDC
	Rc RECT
	DwItemSpec uintptr
	UItemState uint32
	LItemlParam LPARAM
}

type NMTTCUSTOMDRAW struct {
	Nmcd NMCUSTOMDRAW
	UDrawFlags uint32
}

type NMCUSTOMSPLITRECTINFO struct {
	Hdr NMHDR
	RcClient RECT
	RcButton RECT
	RcSplit RECT
}

type IMAGELISTDRAWPARAMS struct {
	CbSize uint32
	Himl HIMAGELIST
	I int32
	HdcDst HDC
	X int32
	Y int32
	Cx int32
	Cy int32
	XBitmap int32
	YBitmap int32
	RgbBk uint32
	RgbFg uint32
	FStyle uint32
	DwRop uint32
	FState uint32
	Frame uint32
	CrEffect uint32
}

type IMAGEINFO struct {
	HbmImage HBITMAP
	HbmMask HBITMAP
	Unused1 int32
	Unused2 int32
	RcImage RECT
}

type HD_TEXTFILTERA struct {
	PszText PSTR
	CchTextMax int32
}

type HD_TEXTFILTER = HD_TEXTFILTERW
type HD_TEXTFILTERW struct {
	PszText PWSTR
	CchTextMax int32
}

type HDITEMA struct {
	Mask HDI_MASK
	Cxy int32
	PszText PSTR
	Hbm HBITMAP
	CchTextMax int32
	Fmt int32
	LParam LPARAM
	IImage int32
	IOrder int32
	Type uint32
	PvFilter unsafe.Pointer
	State uint32
}

type HDITEM = HDITEMW
type HDITEMW struct {
	Mask HDI_MASK
	Cxy int32
	PszText PWSTR
	Hbm HBITMAP
	CchTextMax int32
	Fmt int32
	LParam LPARAM
	IImage int32
	IOrder int32
	Type uint32
	PvFilter unsafe.Pointer
	State uint32
}

type HDLAYOUT struct {
	Prc *RECT
	Pwpos *WINDOWPOS
}

type HDHITTESTINFO struct {
	Pt POINT
	Flags uint32
	IItem int32
}

type NMHEADERA struct {
	Hdr NMHDR
	IItem int32
	IButton HEADER_CONTROL_NOTIFICATION_BUTTON
	Pitem *HDITEMA
}

type NMHEADER = NMHEADERW
type NMHEADERW struct {
	Hdr NMHDR
	IItem int32
	IButton HEADER_CONTROL_NOTIFICATION_BUTTON
	Pitem *HDITEMW
}

type NMHDDISPINFO = NMHDDISPINFOW
type NMHDDISPINFOW struct {
	Hdr NMHDR
	IItem int32
	Mask HDI_MASK
	PszText PWSTR
	CchTextMax int32
	IImage int32
	LParam LPARAM
}

type NMHDDISPINFOA struct {
	Hdr NMHDR
	IItem int32
	Mask HDI_MASK
	PszText PSTR
	CchTextMax int32
	IImage int32
	LParam LPARAM
}

type NMHDFILTERBTNCLICK struct {
	Hdr NMHDR
	IItem int32
	Rc RECT
}

type TBBUTTON struct {
	IBitmap int32
	IdCommand int32
	FsState uint8
	FsStyle uint8
	BReserved [6]uint8
	DwData uintptr
	IString uintptr
}

type COLORMAP struct {
	From uint32
	To uint32
}

type NMTBCUSTOMDRAW struct {
	Nmcd NMCUSTOMDRAW
	HbrMonoDither HBRUSH
	HbrLines HBRUSH
	HpenLines HPEN
	ClrText uint32
	ClrMark uint32
	ClrTextHighlight uint32
	ClrBtnFace uint32
	ClrBtnHighlight uint32
	ClrHighlightHotTrack uint32
	RcText RECT
	NStringBkMode int32
	NHLStringBkMode int32
	IListGap int32
}

type TBADDBITMAP struct {
	HInst HINSTANCE
	NID uintptr
}

type TBSAVEPARAMSA struct {
	Hkr HKEY
	PszSubKey PSTR
	PszValueName PSTR
}

type TBSAVEPARAMS = TBSAVEPARAMSW
type TBSAVEPARAMSW struct {
	Hkr HKEY
	PszSubKey PWSTR
	PszValueName PWSTR
}

type TBINSERTMARK struct {
	IButton int32
	DwFlags TBINSERTMARK_FLAGS
}

type TBREPLACEBITMAP struct {
	HInstOld HINSTANCE
	NIDOld uintptr
	HInstNew HINSTANCE
	NIDNew uintptr
	NButtons int32
}

type TBBUTTONINFOA struct {
	CbSize uint32
	DwMask TBBUTTONINFOW_MASK
	IdCommand int32
	IImage int32
	FsState uint8
	FsStyle uint8
	Cx uint16
	LParam uintptr
	PszText PSTR
	CchText int32
}

type TBBUTTONINFO = TBBUTTONINFOW
type TBBUTTONINFOW struct {
	CbSize uint32
	DwMask TBBUTTONINFOW_MASK
	IdCommand int32
	IImage int32
	FsState uint8
	FsStyle uint8
	Cx uint16
	LParam uintptr
	PszText PWSTR
	CchText int32
}

type TBMETRICS struct {
	CbSize uint32
	DwMask uint32
	CxPad int32
	CyPad int32
	CxBarPad int32
	CyBarPad int32
	CxButtonSpacing int32
	CyButtonSpacing int32
}

type NMTBHOTITEM struct {
	Hdr NMHDR
	IdOld int32
	IdNew int32
	DwFlags NMTBHOTITEM_FLAGS
}

type NMTBSAVE struct {
	Hdr NMHDR
	PData *uint32
	PCurrent *uint32
	CbData uint32
	IItem int32
	CButtons int32
	TbButton TBBUTTON
}

type NMTBRESTORE struct {
	Hdr NMHDR
	PData *uint32
	PCurrent *uint32
	CbData uint32
	IItem int32
	CButtons int32
	CbBytesPerRecord int32
	TbButton TBBUTTON
}

type NMTBGETINFOTIPA struct {
	Hdr NMHDR
	PszText PSTR
	CchTextMax int32
	IItem int32
	LParam LPARAM
}

type NMTBGETINFOTIP = NMTBGETINFOTIPW
type NMTBGETINFOTIPW struct {
	Hdr NMHDR
	PszText PWSTR
	CchTextMax int32
	IItem int32
	LParam LPARAM
}

type NMTBDISPINFOA struct {
	Hdr NMHDR
	DwMask NMTBDISPINFOW_MASK
	IdCommand int32
	LParam uintptr
	IImage int32
	PszText PSTR
	CchText int32
}

type NMTBDISPINFO = NMTBDISPINFOW
type NMTBDISPINFOW struct {
	Hdr NMHDR
	DwMask NMTBDISPINFOW_MASK
	IdCommand int32
	LParam uintptr
	IImage int32
	PszText PWSTR
	CchText int32
}

type NMTOOLBARA struct {
	Hdr NMHDR
	IItem int32
	TbButton TBBUTTON
	CchText int32
	PszText PSTR
	RcButton RECT
}

type NMTOOLBAR = NMTOOLBARW
type NMTOOLBARW struct {
	Hdr NMHDR
	IItem int32
	TbButton TBBUTTON
	CchText int32
	PszText PWSTR
	RcButton RECT
}

type REBARINFO struct {
	CbSize uint32
	FMask uint32
	Himl HIMAGELIST
}

type REBARBANDINFOA struct {
	CbSize uint32
	FMask uint32
	FStyle uint32
	ClrFore uint32
	ClrBack uint32
	LpText PSTR
	Cch uint32
	IImage int32
	HwndChild HWND
	CxMinChild uint32
	CyMinChild uint32
	Cx uint32
	HbmBack HBITMAP
	WID uint32
	CyChild uint32
	CyMaxChild uint32
	CyIntegral uint32
	CxIdeal uint32
	LParam LPARAM
	CxHeader uint32
	RcChevronLocation RECT
	UChevronState uint32
}

type REBARBANDINFO = REBARBANDINFOW
type REBARBANDINFOW struct {
	CbSize uint32
	FMask uint32
	FStyle uint32
	ClrFore uint32
	ClrBack uint32
	LpText PWSTR
	Cch uint32
	IImage int32
	HwndChild HWND
	CxMinChild uint32
	CyMinChild uint32
	Cx uint32
	HbmBack HBITMAP
	WID uint32
	CyChild uint32
	CyMaxChild uint32
	CyIntegral uint32
	CxIdeal uint32
	LParam LPARAM
	CxHeader uint32
	RcChevronLocation RECT
	UChevronState uint32
}

type NMREBARCHILDSIZE struct {
	Hdr NMHDR
	UBand uint32
	WID uint32
	RcChild RECT
	RcBand RECT
}

type NMREBAR struct {
	Hdr NMHDR
	DwMask NMREBAR_MASK_FLAGS
	UBand uint32
	FStyle uint32
	WID uint32
	LParam LPARAM
}

type NMRBAUTOSIZE struct {
	Hdr NMHDR
	FChanged BOOL
	RcTarget RECT
	RcActual RECT
}

type NMREBARCHEVRON struct {
	Hdr NMHDR
	UBand uint32
	WID uint32
	LParam LPARAM
	Rc RECT
	LParamNM LPARAM
}

type NMREBARSPLITTER struct {
	Hdr NMHDR
	RcSizing RECT
}

type NMREBARAUTOBREAK struct {
	Hdr NMHDR
	UBand uint32
	WID uint32
	LParam LPARAM
	UMsg uint32
	FStyleCurrent uint32
	FAutoBreak BOOL
}

type RBHITTESTINFO struct {
	Pt POINT
	Flags uint32
	IBand int32
}

type TTTOOLINFOA struct {
	CbSize uint32
	UFlags TTTOOLINFO_FLAGS
	Hwnd HWND
	UId uintptr
	Rect RECT
	Hinst HINSTANCE
	LpszText PSTR
	LParam LPARAM
	LpReserved unsafe.Pointer
}

type TTTOOLINFO = TTTOOLINFOW
type TTTOOLINFOW struct {
	CbSize uint32
	UFlags TTTOOLINFO_FLAGS
	Hwnd HWND
	UId uintptr
	Rect RECT
	Hinst HINSTANCE
	LpszText PWSTR
	LParam LPARAM
	LpReserved unsafe.Pointer
}

type TTGETTITLE struct {
	DwSize uint32
	UTitleBitmap uint32
	Cch uint32
	PszTitle PWSTR
}

type TTHITTESTINFOA struct {
	Hwnd HWND
	Pt POINT
	Ti TTTOOLINFOA
}

type TTHITTESTINFO = TTHITTESTINFOW
type TTHITTESTINFOW struct {
	Hwnd HWND
	Pt POINT
	Ti TTTOOLINFOW
}

type NMTTDISPINFOA struct {
	Hdr NMHDR
	LpszText PSTR
	SzText [80]CHAR
	Hinst HINSTANCE
	UFlags uint32
	LParam LPARAM
}

type NMTTDISPINFO = NMTTDISPINFOW
type NMTTDISPINFOW struct {
	Hdr NMHDR
	LpszText PWSTR
	SzText [80]uint16
	Hinst HINSTANCE
	UFlags uint32
	LParam LPARAM
}

type NMTRBTHUMBPOSCHANGING struct {
	Hdr NMHDR
	DwPos uint32
	NReason int32
}

type DRAGLISTINFO struct {
	UNotification DRAGLISTINFO_NOTIFICATION_FLAGS
	HWnd HWND
	PtCursor POINT
}

type UDACCEL struct {
	NSec uint32
	NInc uint32
}

type NMUPDOWN struct {
	Hdr NMHDR
	IPos int32
	IDelta int32
}

type PBRANGE struct {
	ILow int32
	IHigh int32
}

type LITEM struct {
	Mask uint32
	ILink int32
	State uint32
	StateMask uint32
	SzID [48]uint16
	SzUrl [2084]uint16
}

type LHITTESTINFO struct {
	Pt POINT
	Item LITEM
}

type NMLINK struct {
	Hdr NMHDR
	Item LITEM
}

type LVITEMA struct {
	Mask uint32
	IItem int32
	ISubItem int32
	State uint32
	StateMask uint32
	PszText PSTR
	CchTextMax int32
	IImage int32
	LParam LPARAM
	IIndent int32
	IGroupId LVITEMA_GROUP_ID
	CColumns uint32
	PuColumns *uint32
	PiColFmt *int32
	IGroup int32
}

type LVITEM = LVITEMW
type LVITEMW struct {
	Mask uint32
	IItem int32
	ISubItem int32
	State uint32
	StateMask uint32
	PszText PWSTR
	CchTextMax int32
	IImage int32
	LParam LPARAM
	IIndent int32
	IGroupId LVITEMA_GROUP_ID
	CColumns uint32
	PuColumns *uint32
	PiColFmt *int32
	IGroup int32
}

type LVFINDINFOA struct {
	Flags LVFINDINFOW_FLAGS
	Psz PSTR
	LParam LPARAM
	Pt POINT
	VkDirection uint32
}

type LVFINDINFO = LVFINDINFOW
type LVFINDINFOW struct {
	Flags LVFINDINFOW_FLAGS
	Psz PWSTR
	LParam LPARAM
	Pt POINT
	VkDirection uint32
}

type LVHITTESTINFO struct {
	Pt POINT
	Flags LVHITTESTINFO_FLAGS
	IItem int32
	ISubItem int32
	IGroup int32
}

type LVCOLUMNA struct {
	Mask LVCOLUMNW_MASK
	Fmt LVCOLUMNW_FORMAT
	Cx int32
	PszText PSTR
	CchTextMax int32
	ISubItem int32
	IImage int32
	IOrder int32
	CxMin int32
	CxDefault int32
	CxIdeal int32
}

type LVCOLUMN = LVCOLUMNW
type LVCOLUMNW struct {
	Mask LVCOLUMNW_MASK
	Fmt LVCOLUMNW_FORMAT
	Cx int32
	PszText PWSTR
	CchTextMax int32
	ISubItem int32
	IImage int32
	IOrder int32
	CxMin int32
	CxDefault int32
	CxIdeal int32
}

type LVBKIMAGEA struct {
	UlFlags uint32
	Hbm HBITMAP
	PszImage PSTR
	CchImageMax uint32
	XOffsetPercent int32
	YOffsetPercent int32
}

type LVBKIMAGE = LVBKIMAGEW
type LVBKIMAGEW struct {
	UlFlags uint32
	Hbm HBITMAP
	PszImage PWSTR
	CchImageMax uint32
	XOffsetPercent int32
	YOffsetPercent int32
}

type LVGROUP struct {
	CbSize uint32
	Mask LVGROUP_MASK
	PszHeader PWSTR
	CchHeader int32
	PszFooter PWSTR
	CchFooter int32
	IGroupId int32
	StateMask uint32
	State uint32
	UAlign uint32
	PszSubtitle PWSTR
	CchSubtitle uint32
	PszTask PWSTR
	CchTask uint32
	PszDescriptionTop PWSTR
	CchDescriptionTop uint32
	PszDescriptionBottom PWSTR
	CchDescriptionBottom uint32
	ITitleImage int32
	IExtendedImage int32
	IFirstItem int32
	CItems uint32
	PszSubsetTitle PWSTR
	CchSubsetTitle uint32
}

type LVGROUPMETRICS struct {
	CbSize uint32
	Mask uint32
	Left uint32
	Top uint32
	Right uint32
	Bottom uint32
	CrLeft uint32
	CrTop uint32
	CrRight uint32
	CrBottom uint32
	CrHeader uint32
	CrFooter uint32
}

type LVINSERTGROUPSORTED struct {
	PfnGroupCompare uintptr
	PvData unsafe.Pointer
	LvGroup LVGROUP
}

type LVTILEVIEWINFO struct {
	CbSize uint32
	DwMask uint32
	DwFlags LVTILEVIEWINFO_FLAGS
	SizeTile SIZE
	CLines int32
	RcLabelMargin RECT
}

type LVTILEINFO struct {
	CbSize uint32
	IItem int32
	CColumns uint32
	PuColumns *uint32
	PiColFmt *int32
}

type LVINSERTMARK struct {
	CbSize uint32
	DwFlags uint32
	IItem int32
	DwReserved uint32
}

type LVSETINFOTIP struct {
	CbSize uint32
	DwFlags uint32
	PszText PWSTR
	IItem int32
	ISubItem int32
}

type LVFOOTERINFO struct {
	Mask uint32
	PszText PWSTR
	CchTextMax int32
	CItems uint32
}

type LVFOOTERITEM struct {
	Mask LVFOOTERITEM_MASK
	IItem int32
	PszText PWSTR
	CchTextMax int32
	State uint32
	StateMask uint32
}

type LVITEMINDEX struct {
	IItem int32
	IGroup int32
}

type NMLISTVIEW struct {
	Hdr NMHDR
	IItem int32
	ISubItem int32
	UNewState uint32
	UOldState uint32
	UChanged uint32
	PtAction POINT
	LParam LPARAM
}

type NMITEMACTIVATE struct {
	Hdr NMHDR
	IItem int32
	ISubItem int32
	UNewState uint32
	UOldState uint32
	UChanged uint32
	PtAction POINT
	LParam LPARAM
	UKeyFlags uint32
}

type NMLVCUSTOMDRAW struct {
	Nmcd NMCUSTOMDRAW
	ClrText uint32
	ClrTextBk uint32
	ISubItem int32
	DwItemType NMLVCUSTOMDRAW_ITEM_TYPE
	ClrFace uint32
	IIconEffect int32
	IIconPhase int32
	IPartId int32
	IStateId int32
	RcText RECT
	UAlign NMLVCUSTOMDRAW_ALIGN
}

type NMLVCACHEHINT struct {
	Hdr NMHDR
	IFrom int32
	ITo int32
}

type NMLVFINDITEMA struct {
	Hdr NMHDR
	IStart int32
	Lvfi LVFINDINFOA
}

type NMLVFINDITEM = NMLVFINDITEMW
type NMLVFINDITEMW struct {
	Hdr NMHDR
	IStart int32
	Lvfi LVFINDINFOW
}

type NMLVODSTATECHANGE struct {
	Hdr NMHDR
	IFrom int32
	ITo int32
	UNewState uint32
	UOldState uint32
}

type NMLVDISPINFOA struct {
	Hdr NMHDR
	Item LVITEMA
}

type NMLVDISPINFO = NMLVDISPINFOW
type NMLVDISPINFOW struct {
	Hdr NMHDR
	Item LVITEMW
}

type NMLVKEYDOWN struct {
	Hdr NMHDR
	WVKey uint16
	Flags uint32
}

type NMLVLINK struct {
	Hdr NMHDR
	Link LITEM
	IItem int32
	ISubItem int32
}

type NMLVGETINFOTIPA struct {
	Hdr NMHDR
	DwFlags uint32
	PszText PSTR
	CchTextMax int32
	IItem int32
	ISubItem int32
	LParam LPARAM
}

type NMLVGETINFOTIP = NMLVGETINFOTIPW
type NMLVGETINFOTIPW struct {
	Hdr NMHDR
	DwFlags uint32
	PszText PWSTR
	CchTextMax int32
	IItem int32
	ISubItem int32
	LParam LPARAM
}

type NMLVSCROLL struct {
	Hdr NMHDR
	Dx int32
	Dy int32
}

type NMLVEMPTYMARKUP struct {
	Hdr NMHDR
	DwFlags NMLVEMPTYMARKUP_FLAGS
	SzMarkup [2084]uint16
}

type NMTVSTATEIMAGECHANGING struct {
	Hdr NMHDR
	Hti HTREEITEM
	IOldStateImageIndex int32
	INewStateImageIndex int32
}

type TVITEMA struct {
	Mask TVITEM_MASK
	HItem HTREEITEM
	State uint32
	StateMask uint32
	PszText PSTR
	CchTextMax int32
	IImage int32
	ISelectedImage int32
	CChildren TVITEMEXW_CHILDREN
	LParam LPARAM
}

type TVITEM = TVITEMW
type TVITEMW struct {
	Mask TVITEM_MASK
	HItem HTREEITEM
	State uint32
	StateMask uint32
	PszText PWSTR
	CchTextMax int32
	IImage int32
	ISelectedImage int32
	CChildren TVITEMEXW_CHILDREN
	LParam LPARAM
}

type TVITEMEXA struct {
	Mask TVITEM_MASK
	HItem HTREEITEM
	State uint32
	StateMask uint32
	PszText PSTR
	CchTextMax int32
	IImage int32
	ISelectedImage int32
	CChildren TVITEMEXW_CHILDREN
	LParam LPARAM
	IIntegral int32
	UStateEx uint32
	Hwnd HWND
	IExpandedImage int32
	IReserved int32
}

type TVITEMEX = TVITEMEXW
type TVITEMEXW struct {
	Mask TVITEM_MASK
	HItem HTREEITEM
	State uint32
	StateMask uint32
	PszText PWSTR
	CchTextMax int32
	IImage int32
	ISelectedImage int32
	CChildren TVITEMEXW_CHILDREN
	LParam LPARAM
	IIntegral int32
	UStateEx uint32
	Hwnd HWND
	IExpandedImage int32
	IReserved int32
}

type TVINSERTSTRUCTA_Anonymous_ struct {
	Data [10]uint64
}

func (this *TVINSERTSTRUCTA_Anonymous_) Itemex() *TVITEMEXA{
	return (*TVITEMEXA)(unsafe.Pointer(this))
}

func (this *TVINSERTSTRUCTA_Anonymous_) ItemexVal() TVITEMEXA{
	return *(*TVITEMEXA)(unsafe.Pointer(this))
}

func (this *TVINSERTSTRUCTA_Anonymous_) Item() *TVITEMA{
	return (*TVITEMA)(unsafe.Pointer(this))
}

func (this *TVINSERTSTRUCTA_Anonymous_) ItemVal() TVITEMA{
	return *(*TVITEMA)(unsafe.Pointer(this))
}

type TVINSERTSTRUCTA struct {
	HParent HTREEITEM
	HInsertAfter HTREEITEM
	TVINSERTSTRUCTA_Anonymous_
}

type TVINSERTSTRUCTW_Anonymous_ struct {
	Data [10]uint64
}

func (this *TVINSERTSTRUCTW_Anonymous_) Itemex() *TVITEMEXW{
	return (*TVITEMEXW)(unsafe.Pointer(this))
}

func (this *TVINSERTSTRUCTW_Anonymous_) ItemexVal() TVITEMEXW{
	return *(*TVITEMEXW)(unsafe.Pointer(this))
}

func (this *TVINSERTSTRUCTW_Anonymous_) Item() *TVITEMW{
	return (*TVITEMW)(unsafe.Pointer(this))
}

func (this *TVINSERTSTRUCTW_Anonymous_) ItemVal() TVITEMW{
	return *(*TVITEMW)(unsafe.Pointer(this))
}

type TVINSERTSTRUCT = TVINSERTSTRUCTW
type TVINSERTSTRUCTW struct {
	HParent HTREEITEM
	HInsertAfter HTREEITEM
	TVINSERTSTRUCTW_Anonymous_
}

type TVHITTESTINFO struct {
	Pt POINT
	Flags TVHITTESTINFO_FLAGS
	HItem HTREEITEM
}

type TVGETITEMPARTRECTINFO struct {
	Hti HTREEITEM
	Prc *RECT
	PartID TVITEMPART
}

type TVSORTCB struct {
	HParent HTREEITEM
	LpfnCompare uintptr
	LParam LPARAM
}

type NMTREEVIEWA struct {
	Hdr NMHDR
	Action uint32
	ItemOld TVITEMA
	ItemNew TVITEMA
	PtDrag POINT
}

type NMTREEVIEW = NMTREEVIEWW
type NMTREEVIEWW struct {
	Hdr NMHDR
	Action uint32
	ItemOld TVITEMW
	ItemNew TVITEMW
	PtDrag POINT
}

type NMTVDISPINFOA struct {
	Hdr NMHDR
	Item TVITEMA
}

type NMTVDISPINFO = NMTVDISPINFOW
type NMTVDISPINFOW struct {
	Hdr NMHDR
	Item TVITEMW
}

type NMTVDISPINFOEXA struct {
	Hdr NMHDR
	Item TVITEMEXA
}

type NMTVDISPINFOEX = NMTVDISPINFOEXW
type NMTVDISPINFOEXW struct {
	Hdr NMHDR
	Item TVITEMEXW
}

type NMTVKEYDOWN struct {
	Hdr NMHDR
	WVKey uint16
	Flags uint32
}

type NMTVCUSTOMDRAW struct {
	Nmcd NMCUSTOMDRAW
	ClrText uint32
	ClrTextBk uint32
	ILevel int32
}

type NMTVGETINFOTIPA struct {
	Hdr NMHDR
	PszText PSTR
	CchTextMax int32
	HItem HTREEITEM
	LParam LPARAM
}

type NMTVGETINFOTIP = NMTVGETINFOTIPW
type NMTVGETINFOTIPW struct {
	Hdr NMHDR
	PszText PWSTR
	CchTextMax int32
	HItem HTREEITEM
	LParam LPARAM
}

type NMTVITEMCHANGE struct {
	Hdr NMHDR
	UChanged uint32
	HItem HTREEITEM
	UStateNew uint32
	UStateOld uint32
	LParam LPARAM
}

type NMTVASYNCDRAW struct {
	Hdr NMHDR
	Pimldp *IMAGELISTDRAWPARAMS
	Hr HRESULT
	HItem HTREEITEM
	LParam LPARAM
	DwRetFlags uint32
	IRetImageIndex int32
}

type COMBOBOXEXITEMA struct {
	Mask COMBOBOX_EX_ITEM_FLAGS
	IItem uintptr
	PszText PSTR
	CchTextMax int32
	IImage int32
	ISelectedImage int32
	IOverlay int32
	IIndent int32
	LParam LPARAM
}

type COMBOBOXEXITEM = COMBOBOXEXITEMW
type COMBOBOXEXITEMW struct {
	Mask COMBOBOX_EX_ITEM_FLAGS
	IItem uintptr
	PszText PWSTR
	CchTextMax int32
	IImage int32
	ISelectedImage int32
	IOverlay int32
	IIndent int32
	LParam LPARAM
}

type NMCOMBOBOXEXA struct {
	Hdr NMHDR
	CeItem COMBOBOXEXITEMA
}

type NMCOMBOBOXEX = NMCOMBOBOXEXW
type NMCOMBOBOXEXW struct {
	Hdr NMHDR
	CeItem COMBOBOXEXITEMW
}

type NMCBEDRAGBEGIN = NMCBEDRAGBEGINW
type NMCBEDRAGBEGINW struct {
	Hdr NMHDR
	IItemid int32
	SzText [260]uint16
}

type NMCBEDRAGBEGINA struct {
	Hdr NMHDR
	IItemid int32
	SzText [260]CHAR
}

type NMCBEENDEDIT = NMCBEENDEDITW
type NMCBEENDEDITW struct {
	Hdr NMHDR
	FChanged BOOL
	INewSelection int32
	SzText [260]uint16
	IWhy int32
}

type NMCBEENDEDITA struct {
	Hdr NMHDR
	FChanged BOOL
	INewSelection int32
	SzText [260]CHAR
	IWhy int32
}

type TCITEMHEADERA struct {
	Mask TCITEMHEADERA_MASK
	LpReserved1 uint32
	LpReserved2 uint32
	PszText PSTR
	CchTextMax int32
	IImage int32
}

type TCITEMHEADER = TCITEMHEADERW
type TCITEMHEADERW struct {
	Mask TCITEMHEADERA_MASK
	LpReserved1 uint32
	LpReserved2 uint32
	PszText PWSTR
	CchTextMax int32
	IImage int32
}

type TCITEMA struct {
	Mask TCITEMHEADERA_MASK
	DwState uint32
	DwStateMask uint32
	PszText PSTR
	CchTextMax int32
	IImage int32
	LParam LPARAM
}

type TCITEM = TCITEMW
type TCITEMW struct {
	Mask TCITEMHEADERA_MASK
	DwState uint32
	DwStateMask uint32
	PszText PWSTR
	CchTextMax int32
	IImage int32
	LParam LPARAM
}

type TCHITTESTINFO struct {
	Pt POINT
	Flags TCHITTESTINFO_FLAGS
}

type NMTCKEYDOWN struct {
	Hdr NMHDR
	WVKey uint16
	Flags uint32
}

type MCHITTESTINFO struct {
	CbSize uint32
	Pt POINT
	UHit uint32
	St SYSTEMTIME
	Rc RECT
	IOffset int32
	IRow int32
	ICol int32
}

type MCGRIDINFO struct {
	CbSize uint32
	DwPart MCGRIDINFO_PART
	DwFlags MCGRIDINFO_FLAGS
	ICalendar int32
	IRow int32
	ICol int32
	BSelected BOOL
	StStart SYSTEMTIME
	StEnd SYSTEMTIME
	Rc RECT
	PszName PWSTR
	CchName uintptr
}

type NMSELCHANGE struct {
	Nmhdr NMHDR
	StSelStart SYSTEMTIME
	StSelEnd SYSTEMTIME
}

type NMDAYSTATE struct {
	Nmhdr NMHDR
	StStart SYSTEMTIME
	CDayState int32
	PrgDayState *uint32
}

type NMVIEWCHANGE struct {
	Nmhdr NMHDR
	DwOldView uint32
	DwNewView uint32
}

type DATETIMEPICKERINFO struct {
	CbSize uint32
	RcCheck RECT
	StateCheck uint32
	RcButton RECT
	StateButton uint32
	HwndEdit HWND
	HwndUD HWND
	HwndDropDown HWND
}

type NMDATETIMECHANGE struct {
	Nmhdr NMHDR
	DwFlags uint32
	St SYSTEMTIME
}

type NMDATETIMESTRINGA struct {
	Nmhdr NMHDR
	PszUserString PSTR
	St SYSTEMTIME
	DwFlags uint32
}

type NMDATETIMESTRING = NMDATETIMESTRINGW
type NMDATETIMESTRINGW struct {
	Nmhdr NMHDR
	PszUserString PWSTR
	St SYSTEMTIME
	DwFlags uint32
}

type NMDATETIMEWMKEYDOWNA struct {
	Nmhdr NMHDR
	NVirtKey int32
	PszFormat PSTR
	St SYSTEMTIME
}

type NMDATETIMEWMKEYDOWN = NMDATETIMEWMKEYDOWNW
type NMDATETIMEWMKEYDOWNW struct {
	Nmhdr NMHDR
	NVirtKey int32
	PszFormat PWSTR
	St SYSTEMTIME
}

type NMDATETIMEFORMATA struct {
	Nmhdr NMHDR
	PszFormat PSTR
	St SYSTEMTIME
	PszDisplay PSTR
	SzDisplay [64]CHAR
}

type NMDATETIMEFORMAT = NMDATETIMEFORMATW
type NMDATETIMEFORMATW struct {
	Nmhdr NMHDR
	PszFormat PWSTR
	St SYSTEMTIME
	PszDisplay PWSTR
	SzDisplay [64]uint16
}

type NMDATETIMEFORMATQUERYA struct {
	Nmhdr NMHDR
	PszFormat PSTR
	SzMax SIZE
}

type NMDATETIMEFORMATQUERY = NMDATETIMEFORMATQUERYW
type NMDATETIMEFORMATQUERYW struct {
	Nmhdr NMHDR
	PszFormat PWSTR
	SzMax SIZE
}

type NMIPADDRESS struct {
	Hdr NMHDR
	IField int32
	IValue int32
}

type NMPGSCROLL struct {
	Hdr NMHDR
	FwKeys NMPGSCROLL_KEYS
	RcParent RECT
	IDir NMPGSCROLL_DIR
	IXpos int32
	IYpos int32
	IScroll int32
}

type NMPGCALCSIZE struct {
	Hdr NMHDR
	DwFlag NMPGCALCSIZE_FLAGS
	IWidth int32
	IHeight int32
}

type NMPGHOTITEM struct {
	Hdr NMHDR
	IdOld int32
	IdNew int32
	DwFlags uint32
}

type BUTTON_IMAGELIST struct {
	Himl HIMAGELIST
	Margin RECT
	UAlign BUTTON_IMAGELIST_ALIGN
}

type NMBCHOTITEM struct {
	Hdr NMHDR
	DwFlags NMTBHOTITEM_FLAGS
}

type BUTTON_SPLITINFO struct {
	Mask uint32
	HimlGlyph HIMAGELIST
	USplitStyle uint32
	Size SIZE
}

type NMBCDROPDOWN struct {
	Hdr NMHDR
	RcButton RECT
}

type EDITBALLOONTIP struct {
	CbStruct uint32
	PszTitle PWSTR
	PszText PWSTR
	TtiIcon EDITBALLOONTIP_ICON
}

type NMSEARCHWEB struct {
	Hdr NMHDR
	Entrypoint EC_SEARCHWEB_ENTRYPOINT
	HasQueryText BOOL
	InvokeSucceeded BOOL
}

type TASKDIALOG_BUTTON struct {
	NButtonID int32
	PszButtonText PWSTR
}

type TASKDIALOGCONFIG_Anonymous1_ struct {
	Data [1]uint64
}

func (this *TASKDIALOGCONFIG_Anonymous1_) HMainIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *TASKDIALOGCONFIG_Anonymous1_) HMainIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *TASKDIALOGCONFIG_Anonymous1_) PszMainIcon() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *TASKDIALOGCONFIG_Anonymous1_) PszMainIconVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type TASKDIALOGCONFIG_Anonymous2_ struct {
	Data [1]uint64
}

func (this *TASKDIALOGCONFIG_Anonymous2_) HFooterIcon() *HICON{
	return (*HICON)(unsafe.Pointer(this))
}

func (this *TASKDIALOGCONFIG_Anonymous2_) HFooterIconVal() HICON{
	return *(*HICON)(unsafe.Pointer(this))
}

func (this *TASKDIALOGCONFIG_Anonymous2_) PszFooterIcon() *PWSTR{
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *TASKDIALOGCONFIG_Anonymous2_) PszFooterIconVal() PWSTR{
	return *(*PWSTR)(unsafe.Pointer(this))
}

type TASKDIALOGCONFIG struct {
	CbSize uint32
	HwndParent HWND
	HInstance HINSTANCE
	DwFlags TASKDIALOG_FLAGS
	DwCommonButtons TASKDIALOG_COMMON_BUTTON_FLAGS
	PszWindowTitle PWSTR
	TASKDIALOGCONFIG_Anonymous1_
	PszMainInstruction PWSTR
	PszContent PWSTR
	CButtons uint32
	PButtons *TASKDIALOG_BUTTON
	NDefaultButton int32
	CRadioButtons uint32
	PRadioButtons *TASKDIALOG_BUTTON
	NDefaultRadioButton int32
	PszVerificationText PWSTR
	PszExpandedInformation PWSTR
	PszExpandedControlText PWSTR
	PszCollapsedControlText PWSTR
	TASKDIALOGCONFIG_Anonymous2_
	PszFooter PWSTR
	PfCallback uintptr
	LpCallbackData uintptr
	CxWidth uint32
}

type DPASTREAMINFO struct {
	IPos int32
	PvItem unsafe.Pointer
}

type IMAGELISTSTATS struct {
	CbSize uint32
	CAlloc int32
	CUsed int32
	CStandby int32
}

type TA_TRANSFORM struct {
	ETransformType TA_TRANSFORM_TYPE
	DwTimingFunctionId uint32
	DwStartTime uint32
	DwDurationTime uint32
	EFlags TA_TRANSFORM_FLAG
}

type TA_TRANSFORM_2D struct {
	Header TA_TRANSFORM
	RX float32
	RY float32
	RInitialX float32
	RInitialY float32
	ROriginX float32
	ROriginY float32
}

type TA_TRANSFORM_OPACITY struct {
	Header TA_TRANSFORM
	ROpacity float32
	RInitialOpacity float32
}

type TA_TRANSFORM_CLIP struct {
	Header TA_TRANSFORM
	RLeft float32
	RTop float32
	RRight float32
	RBottom float32
	RInitialLeft float32
	RInitialTop float32
	RInitialRight float32
	RInitialBottom float32
}

type TA_TIMINGFUNCTION struct {
	ETimingFunctionType TA_TIMINGFUNCTION_TYPE
}

type TA_CUBIC_BEZIER struct {
	Header TA_TIMINGFUNCTION
	RX0 float32
	RY0 float32
	RX1 float32
	RY1 float32
}

type DTBGOPTS struct {
	DwSize uint32
	DwFlags uint32
	RcClip RECT
}

type MARGINS struct {
	CxLeftWidth int32
	CxRightWidth int32
	CyTopHeight int32
	CyBottomHeight int32
}

type INTLIST struct {
	IValueCount int32
	IValues [402]int32
}

type WTA_OPTIONS struct {
	DwFlags uint32
	DwMask uint32
}

type DTTOPTS struct {
	DwSize uint32
	DwFlags uint32
	CrText uint32
	CrBorder uint32
	CrShadow uint32
	ITextShadowType int32
	PtShadowOffset POINT
	IBorderSize int32
	IFontPropId int32
	IColorPropId int32
	IStateId int32
	FApplyOverlay BOOL
	IGlowSize int32
	PfnDrawTextCallback uintptr
	LParam LPARAM
}

type BP_ANIMATIONPARAMS struct {
	CbSize uint32
	DwFlags uint32
	Style BP_ANIMATIONSTYLE
	DwDuration uint32
}

type BP_PAINTPARAMS struct {
	CbSize uint32
	DwFlags BP_PAINTPARAMS_FLAGS
	PrcExclude *RECT
	PBlendFunction *BLENDFUNCTION
}

type CCSTYLEA struct {
	FlStyle uint32
	FlExtStyle uint32
	SzText [256]CHAR
	Lgid uint16
	WReserved1 uint16
}

type CCSTYLE = CCSTYLEW
type CCSTYLEW struct {
	FlStyle uint32
	FlExtStyle uint32
	SzText [256]uint16
	Lgid uint16
	WReserved1 uint16
}

type CCSTYLEFLAGA struct {
	FlStyle uint32
	FlStyleMask uint32
	PszStyle PSTR
}

type CCSTYLEFLAG = CCSTYLEFLAGW
type CCSTYLEFLAGW struct {
	FlStyle uint32
	FlStyleMask uint32
	PszStyle PWSTR
}

type CCINFOA struct {
	SzClass [32]CHAR
	FlOptions uint32
	SzDesc [32]CHAR
	CxDefault uint32
	CyDefault uint32
	FlStyleDefault uint32
	FlExtStyleDefault uint32
	FlCtrlTypeMask uint32
	SzTextDefault [256]CHAR
	CStyleFlags int32
	AStyleFlags *CCSTYLEFLAGA
	LpfnStyle uintptr
	LpfnSizeToText uintptr
	DwReserved1 uint32
	DwReserved2 uint32
}

type CCINFO = CCINFOW
type CCINFOW struct {
	SzClass [32]uint16
	FlOptions uint32
	SzDesc [32]uint16
	CxDefault uint32
	CyDefault uint32
	FlStyleDefault uint32
	FlExtStyleDefault uint32
	FlCtrlTypeMask uint32
	CStyleFlags int32
	AStyleFlags *CCSTYLEFLAGW
	SzTextDefault [256]uint16
	LpfnStyle uintptr
	LpfnSizeToText uintptr
	DwReserved1 uint32
	DwReserved2 uint32
}

type NMHDR struct {
	HwndFrom HWND
	IdFrom uintptr
	Code uint32
}

type MEASUREITEMSTRUCT struct {
	CtlType uint32
	CtlID uint32
	ItemID uint32
	ItemWidth uint32
	ItemHeight uint32
	ItemData uintptr
}

type DRAWITEMSTRUCT struct {
	CtlType DRAWITEMSTRUCT_CTL_TYPE
	CtlID uint32
	ItemID uint32
	ItemAction uint32
	ItemState uint32
	HwndItem HWND
	HDC HDC
	RcItem RECT
	ItemData uintptr
}

type DELETEITEMSTRUCT struct {
	CtlType DRAWITEMSTRUCT_CTL_TYPE
	CtlID uint32
	ItemID uint32
	HwndItem HWND
	ItemData uintptr
}

type COMPAREITEMSTRUCT struct {
	CtlType uint32
	CtlID uint32
	HwndItem HWND
	ItemID1 uint32
	ItemData1 uintptr
	ItemID2 uint32
	ItemData2 uintptr
	DwLocaleId uint32
}

type USAGE_PROPERTIES struct {
	Level uint16
	Page uint16
	Usage uint16
	LogicalMinimum int32
	LogicalMaximum int32
	Unit uint16
	Exponent uint16
	Count uint8
	PhysicalMinimum int32
	PhysicalMaximum int32
}

type POINTER_TYPE_INFO_Anonymous_ struct {
	Data [18]uint64
}

func (this *POINTER_TYPE_INFO_Anonymous_) TouchInfo() *POINTER_TOUCH_INFO{
	return (*POINTER_TOUCH_INFO)(unsafe.Pointer(this))
}

func (this *POINTER_TYPE_INFO_Anonymous_) TouchInfoVal() POINTER_TOUCH_INFO{
	return *(*POINTER_TOUCH_INFO)(unsafe.Pointer(this))
}

func (this *POINTER_TYPE_INFO_Anonymous_) PenInfo() *POINTER_PEN_INFO{
	return (*POINTER_PEN_INFO)(unsafe.Pointer(this))
}

func (this *POINTER_TYPE_INFO_Anonymous_) PenInfoVal() POINTER_PEN_INFO{
	return *(*POINTER_PEN_INFO)(unsafe.Pointer(this))
}

type POINTER_TYPE_INFO struct {
	Type POINTER_INPUT_TYPE
	POINTER_TYPE_INFO_Anonymous_
}

type TOUCH_HIT_TESTING_PROXIMITY_EVALUATION struct {
	Score uint16
	AdjustedPoint POINT
}

type TOUCH_HIT_TESTING_INPUT struct {
	PointerId uint32
	Point POINT
	BoundingBox RECT
	NonOccludedBoundingBox RECT
	Orientation uint32
}

type COMBOBOXINFO struct {
	CbSize uint32
	RcItem RECT
	RcButton RECT
	StateButton COMBOBOXINFO_BUTTON_STATE
	HwndCombo HWND
	HwndItem HWND
	HwndList HWND
}

type POINTER_DEVICE_INFO struct {
	DisplayOrientation uint32
	Device HANDLE
	PointerDeviceType POINTER_DEVICE_TYPE
	Monitor HMONITOR
	StartingCursorId uint32
	MaxActiveContacts uint16
	ProductString [520]uint16
}

type POINTER_DEVICE_PROPERTY struct {
	LogicalMin int32
	LogicalMax int32
	PhysicalMin int32
	PhysicalMax int32
	Unit uint32
	UnitExponent uint32
	UsagePageId uint16
	UsageId uint16
}

type POINTER_DEVICE_CURSOR_INFO struct {
	CursorId uint32
	Cursor POINTER_DEVICE_CURSOR_TYPE
}


// func types

type LPFNPSPCALLBACKA func(hwnd HWND, uMsg PSPCB_MESSAGE, ppsp *PROPSHEETPAGEA) uint32

type LPFNPSPCALLBACKW func(hwnd HWND, uMsg PSPCB_MESSAGE, ppsp *PROPSHEETPAGEW) uint32

type PFNPROPSHEETCALLBACK func(param0 HWND, param1 uint32, param2 LPARAM) int32

type LPFNSVADDPROPSHEETPAGE func(param0 HPROPSHEETPAGE, param1 LPARAM) BOOL

type LPFNADDPROPSHEETPAGES func(param0 unsafe.Pointer, param1 LPFNSVADDPROPSHEETPAGE, param2 LPARAM) BOOL

type PFNLVCOMPARE func(param0 LPARAM, param1 LPARAM, param2 LPARAM) int32

type PFNLVGROUPCOMPARE func(param0 int32, param1 int32, param2 unsafe.Pointer) int32

type PFNTVCOMPARE func(lParam1 LPARAM, lParam2 LPARAM, lParamSort LPARAM) int32

type PFTASKDIALOGCALLBACK func(hwnd HWND, msg uint32, wParam WPARAM, lParam LPARAM, lpRefData uintptr) HRESULT

type PFNDAENUMCALLBACK func(p unsafe.Pointer, pData unsafe.Pointer) int32

type PFNDAENUMCALLBACKCONST func(p unsafe.Pointer, pData unsafe.Pointer) int32

type PFNDACOMPARE func(p1 unsafe.Pointer, p2 unsafe.Pointer, lParam LPARAM) int32

type PFNDACOMPARECONST func(p1 unsafe.Pointer, p2 unsafe.Pointer, lParam LPARAM) int32

type PFNDPASTREAM func(pinfo *DPASTREAMINFO, pstream *IStream, pvInstData unsafe.Pointer) HRESULT

type PFNDPAMERGE func(uMsg DPAMM_MESSAGE, pvDest unsafe.Pointer, pvSrc unsafe.Pointer, lParam LPARAM) unsafe.Pointer

type PFNDPAMERGECONST func(uMsg DPAMM_MESSAGE, pvDest unsafe.Pointer, pvSrc unsafe.Pointer, lParam LPARAM) unsafe.Pointer

type DTT_CALLBACK_PROC func(hdc HDC, pszText *uint16, cchText int32, prc *RECT, dwFlags uint32, lParam LPARAM) int32

type LPFNCCSTYLEA func(hwndParent HWND, pccs *CCSTYLEA) BOOL

type LPFNCCSTYLEW func(hwndParent HWND, pccs *CCSTYLEW) BOOL

type LPFNCCSIZETOTEXTA func(flStyle uint32, flExtStyle uint32, hfont HFONT, pszText PSTR) int32

type LPFNCCSIZETOTEXTW func(flStyle uint32, flExtStyle uint32, hfont HFONT, pszText PWSTR) int32

type LPFNCCINFOA func(acci *CCINFOA) uint32

type LPFNCCINFOW func(acci *CCINFOW) uint32

type EDITWORDBREAKPROCA func(lpch PSTR, ichCurrent int32, cch int32, code WORD_BREAK_ACTION) int32

type EDITWORDBREAKPROCW func(lpch PWSTR, ichCurrent int32, cch int32, code WORD_BREAK_ACTION) int32


// coms

// 46eb5926-582e-4017-9fdf-e8998daa0950
var IID_IImageList = syscall.GUID{0x46eb5926, 0x582e, 0x4017, 
	[8]byte{0x9f, 0xdf, 0xe8, 0x99, 0x8d, 0xaa, 0x09, 0x50}}

type IImageListInterface interface {
	IUnknownInterface
	Add(hbmImage HBITMAP, hbmMask HBITMAP, pi *int32) HRESULT
	ReplaceIcon(i int32, hicon HICON, pi *int32) HRESULT
	SetOverlayImage(iImage int32, iOverlay int32) HRESULT
	Replace(i int32, hbmImage HBITMAP, hbmMask HBITMAP) HRESULT
	AddMasked(hbmImage HBITMAP, crMask uint32, pi *int32) HRESULT
	Draw(pimldp *IMAGELISTDRAWPARAMS) HRESULT
	Remove(i int32) HRESULT
	GetIcon(i int32, flags uint32, picon *HICON) HRESULT
	GetImageInfo(i int32, pImageInfo *IMAGEINFO) HRESULT
	Copy(iDst int32, punkSrc *IUnknown, iSrc int32, uFlags uint32) HRESULT
	Merge(i1 int32, punk2 *IUnknown, i2 int32, dx int32, dy int32, riid *syscall.GUID, ppv unsafe.Pointer) HRESULT
	Clone(riid *syscall.GUID, ppv unsafe.Pointer) HRESULT
	GetImageRect(i int32, prc *RECT) HRESULT
	GetIconSize(cx *int32, cy *int32) HRESULT
	SetIconSize(cx int32, cy int32) HRESULT
	GetImageCount(pi *int32) HRESULT
	SetImageCount(uNewCount uint32) HRESULT
	SetBkColor(clrBk uint32, pclr *uint32) HRESULT
	GetBkColor(pclr *uint32) HRESULT
	BeginDrag(iTrack int32, dxHotspot int32, dyHotspot int32) HRESULT
	EndDrag() HRESULT
	DragEnter(hwndLock HWND, x int32, y int32) HRESULT
	DragLeave(hwndLock HWND) HRESULT
	DragMove(x int32, y int32) HRESULT
	SetDragCursorImage(punk *IUnknown, iDrag int32, dxHotspot int32, dyHotspot int32) HRESULT
	DragShowNolock(fShow BOOL) HRESULT
	GetDragImage(ppt *POINT, pptHotspot *POINT, riid *syscall.GUID, ppv unsafe.Pointer) HRESULT
	GetItemFlags(i int32, dwFlags *IMAGE_LIST_ITEM_FLAGS) HRESULT
	GetOverlayImage(iOverlay int32, piIndex *int32) HRESULT
}

type IImageListVtbl struct {
	IUnknownVtbl
	Add uintptr
	ReplaceIcon uintptr
	SetOverlayImage uintptr
	Replace uintptr
	AddMasked uintptr
	Draw uintptr
	Remove uintptr
	GetIcon uintptr
	GetImageInfo uintptr
	Copy uintptr
	Merge uintptr
	Clone uintptr
	GetImageRect uintptr
	GetIconSize uintptr
	SetIconSize uintptr
	GetImageCount uintptr
	SetImageCount uintptr
	SetBkColor uintptr
	GetBkColor uintptr
	BeginDrag uintptr
	EndDrag uintptr
	DragEnter uintptr
	DragLeave uintptr
	DragMove uintptr
	SetDragCursorImage uintptr
	DragShowNolock uintptr
	GetDragImage uintptr
	GetItemFlags uintptr
	GetOverlayImage uintptr
}

type IImageList struct {
	IUnknown
}

func (this *IImageList) Vtbl() *IImageListVtbl {
	return (*IImageListVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IImageList) Add(hbmImage HBITMAP, hbmMask HBITMAP, pi *int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Add, uintptr(unsafe.Pointer(this)), uintptr(hbmImage), uintptr(hbmMask), uintptr(unsafe.Pointer(pi)))
	return HRESULT(ret)
}

func (this *IImageList) ReplaceIcon(i int32, hicon HICON, pi *int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReplaceIcon, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(hicon), uintptr(unsafe.Pointer(pi)))
	return HRESULT(ret)
}

func (this *IImageList) SetOverlayImage(iImage int32, iOverlay int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOverlayImage, uintptr(unsafe.Pointer(this)), uintptr(iImage), uintptr(iOverlay))
	return HRESULT(ret)
}

func (this *IImageList) Replace(i int32, hbmImage HBITMAP, hbmMask HBITMAP) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Replace, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(hbmImage), uintptr(hbmMask))
	return HRESULT(ret)
}

func (this *IImageList) AddMasked(hbmImage HBITMAP, crMask uint32, pi *int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddMasked, uintptr(unsafe.Pointer(this)), uintptr(hbmImage), uintptr(crMask), uintptr(unsafe.Pointer(pi)))
	return HRESULT(ret)
}

func (this *IImageList) Draw(pimldp *IMAGELISTDRAWPARAMS) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Draw, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pimldp)))
	return HRESULT(ret)
}

func (this *IImageList) Remove(i int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Remove, uintptr(unsafe.Pointer(this)), uintptr(i))
	return HRESULT(ret)
}

func (this *IImageList) GetIcon(i int32, flags uint32, picon *HICON) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIcon, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(flags), uintptr(unsafe.Pointer(picon)))
	return HRESULT(ret)
}

func (this *IImageList) GetImageInfo(i int32, pImageInfo *IMAGEINFO) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImageInfo, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(unsafe.Pointer(pImageInfo)))
	return HRESULT(ret)
}

func (this *IImageList) Copy(iDst int32, punkSrc *IUnknown, iSrc int32, uFlags uint32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Copy, uintptr(unsafe.Pointer(this)), uintptr(iDst), uintptr(unsafe.Pointer(punkSrc)), uintptr(iSrc), uintptr(uFlags))
	return HRESULT(ret)
}

func (this *IImageList) Merge(i1 int32, punk2 *IUnknown, i2 int32, dx int32, dy int32, riid *syscall.GUID, ppv unsafe.Pointer) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Merge, uintptr(unsafe.Pointer(this)), uintptr(i1), uintptr(unsafe.Pointer(punk2)), uintptr(i2), uintptr(dx), uintptr(dy), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(ppv)))
	return HRESULT(ret)
}

func (this *IImageList) Clone(riid *syscall.GUID, ppv unsafe.Pointer) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(ppv)))
	return HRESULT(ret)
}

func (this *IImageList) GetImageRect(i int32, prc *RECT) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImageRect, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(unsafe.Pointer(prc)))
	return HRESULT(ret)
}

func (this *IImageList) GetIconSize(cx *int32, cy *int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIconSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(cx)), uintptr(unsafe.Pointer(cy)))
	return HRESULT(ret)
}

func (this *IImageList) SetIconSize(cx int32, cy int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetIconSize, uintptr(unsafe.Pointer(this)), uintptr(cx), uintptr(cy))
	return HRESULT(ret)
}

func (this *IImageList) GetImageCount(pi *int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImageCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pi)))
	return HRESULT(ret)
}

func (this *IImageList) SetImageCount(uNewCount uint32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImageCount, uintptr(unsafe.Pointer(this)), uintptr(uNewCount))
	return HRESULT(ret)
}

func (this *IImageList) SetBkColor(clrBk uint32, pclr *uint32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetBkColor, uintptr(unsafe.Pointer(this)), uintptr(clrBk), uintptr(unsafe.Pointer(pclr)))
	return HRESULT(ret)
}

func (this *IImageList) GetBkColor(pclr *uint32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBkColor, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pclr)))
	return HRESULT(ret)
}

func (this *IImageList) BeginDrag(iTrack int32, dxHotspot int32, dyHotspot int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().BeginDrag, uintptr(unsafe.Pointer(this)), uintptr(iTrack), uintptr(dxHotspot), uintptr(dyHotspot))
	return HRESULT(ret)
}

func (this *IImageList) EndDrag() HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndDrag, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IImageList) DragEnter(hwndLock HWND, x int32, y int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().DragEnter, uintptr(unsafe.Pointer(this)), uintptr(hwndLock), uintptr(x), uintptr(y))
	return HRESULT(ret)
}

func (this *IImageList) DragLeave(hwndLock HWND) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().DragLeave, uintptr(unsafe.Pointer(this)), uintptr(hwndLock))
	return HRESULT(ret)
}

func (this *IImageList) DragMove(x int32, y int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().DragMove, uintptr(unsafe.Pointer(this)), uintptr(x), uintptr(y))
	return HRESULT(ret)
}

func (this *IImageList) SetDragCursorImage(punk *IUnknown, iDrag int32, dxHotspot int32, dyHotspot int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDragCursorImage, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(punk)), uintptr(iDrag), uintptr(dxHotspot), uintptr(dyHotspot))
	return HRESULT(ret)
}

func (this *IImageList) DragShowNolock(fShow BOOL) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().DragShowNolock, uintptr(unsafe.Pointer(this)), uintptr(fShow))
	return HRESULT(ret)
}

func (this *IImageList) GetDragImage(ppt *POINT, pptHotspot *POINT, riid *syscall.GUID, ppv unsafe.Pointer) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDragImage, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppt)), uintptr(unsafe.Pointer(pptHotspot)), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(ppv)))
	return HRESULT(ret)
}

func (this *IImageList) GetItemFlags(i int32, dwFlags *IMAGE_LIST_ITEM_FLAGS) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetItemFlags, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(unsafe.Pointer(dwFlags)))
	return HRESULT(ret)
}

func (this *IImageList) GetOverlayImage(iOverlay int32, piIndex *int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOverlayImage, uintptr(unsafe.Pointer(this)), uintptr(iOverlay), uintptr(unsafe.Pointer(piIndex)))
	return HRESULT(ret)
}

// 192b9d83-50fc-457b-90a0-2b82a8b5dae1
var IID_IImageList2 = syscall.GUID{0x192b9d83, 0x50fc, 0x457b, 
	[8]byte{0x90, 0xa0, 0x2b, 0x82, 0xa8, 0xb5, 0xda, 0xe1}}

type IImageList2Interface interface {
	IImageListInterface
	Resize(cxNewIconSize int32, cyNewIconSize int32) HRESULT
	GetOriginalSize(iImage int32, dwFlags uint32, pcx *int32, pcy *int32) HRESULT
	SetOriginalSize(iImage int32, cx int32, cy int32) HRESULT
	SetCallback(punk *IUnknown) HRESULT
	GetCallback(riid *syscall.GUID, ppv unsafe.Pointer) HRESULT
	ForceImagePresent(iImage int32, dwFlags uint32) HRESULT
	DiscardImages(iFirstImage int32, iLastImage int32, dwFlags uint32) HRESULT
	PreloadImages(pimldp *IMAGELISTDRAWPARAMS) HRESULT
	GetStatistics(pils *IMAGELISTSTATS) HRESULT
	Initialize(cx int32, cy int32, flags IMAGELIST_CREATION_FLAGS, cInitial int32, cGrow int32) HRESULT
	Replace2(i int32, hbmImage HBITMAP, hbmMask HBITMAP, punk *IUnknown, dwFlags uint32) HRESULT
	ReplaceFromImageList(i int32, pil *IImageList, iSrc int32, punk *IUnknown, dwFlags uint32) HRESULT
}

type IImageList2Vtbl struct {
	IImageListVtbl
	Resize uintptr
	GetOriginalSize uintptr
	SetOriginalSize uintptr
	SetCallback uintptr
	GetCallback uintptr
	ForceImagePresent uintptr
	DiscardImages uintptr
	PreloadImages uintptr
	GetStatistics uintptr
	Initialize uintptr
	Replace2 uintptr
	ReplaceFromImageList uintptr
}

type IImageList2 struct {
	IImageList
}

func (this *IImageList2) Vtbl() *IImageList2Vtbl {
	return (*IImageList2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IImageList2) Resize(cxNewIconSize int32, cyNewIconSize int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Resize, uintptr(unsafe.Pointer(this)), uintptr(cxNewIconSize), uintptr(cyNewIconSize))
	return HRESULT(ret)
}

func (this *IImageList2) GetOriginalSize(iImage int32, dwFlags uint32, pcx *int32, pcy *int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOriginalSize, uintptr(unsafe.Pointer(this)), uintptr(iImage), uintptr(dwFlags), uintptr(unsafe.Pointer(pcx)), uintptr(unsafe.Pointer(pcy)))
	return HRESULT(ret)
}

func (this *IImageList2) SetOriginalSize(iImage int32, cx int32, cy int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOriginalSize, uintptr(unsafe.Pointer(this)), uintptr(iImage), uintptr(cx), uintptr(cy))
	return HRESULT(ret)
}

func (this *IImageList2) SetCallback(punk *IUnknown) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCallback, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(punk)))
	return HRESULT(ret)
}

func (this *IImageList2) GetCallback(riid *syscall.GUID, ppv unsafe.Pointer) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCallback, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(ppv)))
	return HRESULT(ret)
}

func (this *IImageList2) ForceImagePresent(iImage int32, dwFlags uint32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().ForceImagePresent, uintptr(unsafe.Pointer(this)), uintptr(iImage), uintptr(dwFlags))
	return HRESULT(ret)
}

func (this *IImageList2) DiscardImages(iFirstImage int32, iLastImage int32, dwFlags uint32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().DiscardImages, uintptr(unsafe.Pointer(this)), uintptr(iFirstImage), uintptr(iLastImage), uintptr(dwFlags))
	return HRESULT(ret)
}

func (this *IImageList2) PreloadImages(pimldp *IMAGELISTDRAWPARAMS) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().PreloadImages, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pimldp)))
	return HRESULT(ret)
}

func (this *IImageList2) GetStatistics(pils *IMAGELISTSTATS) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStatistics, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pils)))
	return HRESULT(ret)
}

func (this *IImageList2) Initialize(cx int32, cy int32, flags IMAGELIST_CREATION_FLAGS, cInitial int32, cGrow int32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Initialize, uintptr(unsafe.Pointer(this)), uintptr(cx), uintptr(cy), uintptr(flags), uintptr(cInitial), uintptr(cGrow))
	return HRESULT(ret)
}

func (this *IImageList2) Replace2(i int32, hbmImage HBITMAP, hbmMask HBITMAP, punk *IUnknown, dwFlags uint32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().Replace2, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(hbmImage), uintptr(hbmMask), uintptr(unsafe.Pointer(punk)), uintptr(dwFlags))
	return HRESULT(ret)
}

func (this *IImageList2) ReplaceFromImageList(i int32, pil *IImageList, iSrc int32, punk *IUnknown, dwFlags uint32) HRESULT{
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReplaceFromImageList, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(unsafe.Pointer(pil)), uintptr(iSrc), uintptr(unsafe.Pointer(punk)), uintptr(dwFlags))
	return HRESULT(ret)
}


var (
	pCreatePropertySheetPageA uintptr
	pCreatePropertySheetPageW uintptr
	pDestroyPropertySheetPage uintptr
	pPropertySheetA uintptr
	pPropertySheetW uintptr
	pInitCommonControls uintptr
	pInitCommonControlsEx uintptr
	pImageList_Create uintptr
	pImageList_Destroy uintptr
	pImageList_GetImageCount uintptr
	pImageList_SetImageCount uintptr
	pImageList_Add uintptr
	pImageList_ReplaceIcon uintptr
	pImageList_SetBkColor uintptr
	pImageList_GetBkColor uintptr
	pImageList_SetOverlayImage uintptr
	pImageList_Draw uintptr
	pImageList_Replace uintptr
	pImageList_AddMasked uintptr
	pImageList_DrawEx uintptr
	pImageList_DrawIndirect uintptr
	pImageList_Remove uintptr
	pImageList_GetIcon uintptr
	pImageList_LoadImageA uintptr
	pImageList_LoadImageW uintptr
	pImageList_Copy uintptr
	pImageList_BeginDrag uintptr
	pImageList_EndDrag uintptr
	pImageList_DragEnter uintptr
	pImageList_DragLeave uintptr
	pImageList_DragMove uintptr
	pImageList_SetDragCursorImage uintptr
	pImageList_DragShowNolock uintptr
	pImageList_GetDragImage uintptr
	pImageList_Read uintptr
	pImageList_Write uintptr
	pImageList_ReadEx uintptr
	pImageList_WriteEx uintptr
	pImageList_GetIconSize uintptr
	pImageList_SetIconSize uintptr
	pImageList_GetImageInfo uintptr
	pImageList_Merge uintptr
	pImageList_Duplicate uintptr
	pHIMAGELIST_QueryInterface uintptr
	pCreateToolbarEx uintptr
	pCreateMappedBitmap uintptr
	pDrawStatusTextA uintptr
	pDrawStatusTextW uintptr
	pCreateStatusWindowA uintptr
	pCreateStatusWindowW uintptr
	pMenuHelp uintptr
	pShowHideMenuCtl uintptr
	pGetEffectiveClientRect uintptr
	pMakeDragList uintptr
	pDrawInsert uintptr
	pLBItemFromPt uintptr
	pCreateUpDownControl uintptr
	pTaskDialogIndirect uintptr
	pTaskDialog uintptr
	pInitMUILanguage uintptr
	pGetMUILanguage uintptr
	pDSA_Create uintptr
	pDSA_Destroy uintptr
	pDSA_DestroyCallback uintptr
	pDSA_DeleteItem uintptr
	pDSA_DeleteAllItems uintptr
	pDSA_EnumCallback uintptr
	pDSA_InsertItem uintptr
	pDSA_GetItemPtr uintptr
	pDSA_GetItem uintptr
	pDSA_SetItem uintptr
	pDSA_Clone uintptr
	pDSA_GetSize uintptr
	pDSA_Sort uintptr
	pDPA_Create uintptr
	pDPA_CreateEx uintptr
	pDPA_Clone uintptr
	pDPA_Destroy uintptr
	pDPA_DestroyCallback uintptr
	pDPA_DeletePtr uintptr
	pDPA_DeleteAllPtrs uintptr
	pDPA_EnumCallback uintptr
	pDPA_Grow uintptr
	pDPA_InsertPtr uintptr
	pDPA_SetPtr uintptr
	pDPA_GetPtr uintptr
	pDPA_GetPtrIndex uintptr
	pDPA_GetSize uintptr
	pDPA_Sort uintptr
	pDPA_LoadStream uintptr
	pDPA_SaveStream uintptr
	pDPA_Merge uintptr
	pDPA_Search uintptr
	pStr_SetPtrW uintptr
	pFlatSB_EnableScrollBar uintptr
	pFlatSB_ShowScrollBar uintptr
	pFlatSB_GetScrollRange uintptr
	pFlatSB_GetScrollInfo uintptr
	pFlatSB_GetScrollPos uintptr
	pFlatSB_GetScrollProp uintptr
	pFlatSB_SetScrollPos uintptr
	pFlatSB_SetScrollInfo uintptr
	pFlatSB_SetScrollRange uintptr
	pFlatSB_SetScrollProp uintptr
	pInitializeFlatSB uintptr
	pUninitializeFlatSB uintptr
	pLoadIconMetric uintptr
	pLoadIconWithScaleDown uintptr
	pDrawShadowText uintptr
	pImageList_CoCreateInstance uintptr
	pBeginPanningFeedback uintptr
	pUpdatePanningFeedback uintptr
	pEndPanningFeedback uintptr
	pGetThemeAnimationProperty uintptr
	pGetThemeAnimationTransform uintptr
	pGetThemeTimingFunction uintptr
	pOpenThemeData uintptr
	pOpenThemeDataEx uintptr
	pCloseThemeData uintptr
	pDrawThemeBackground uintptr
	pDrawThemeBackgroundEx uintptr
	pDrawThemeText uintptr
	pGetThemeBackgroundContentRect uintptr
	pGetThemeBackgroundExtent uintptr
	pGetThemeBackgroundRegion uintptr
	pGetThemePartSize uintptr
	pGetThemeTextExtent uintptr
	pGetThemeTextMetrics uintptr
	pHitTestThemeBackground uintptr
	pDrawThemeEdge uintptr
	pDrawThemeIcon uintptr
	pIsThemePartDefined uintptr
	pIsThemeBackgroundPartiallyTransparent uintptr
	pGetThemeColor uintptr
	pGetThemeMetric uintptr
	pGetThemeString uintptr
	pGetThemeBool uintptr
	pGetThemeInt uintptr
	pGetThemeEnumValue uintptr
	pGetThemePosition uintptr
	pGetThemeFont uintptr
	pGetThemeRect uintptr
	pGetThemeMargins uintptr
	pGetThemeIntList uintptr
	pGetThemePropertyOrigin uintptr
	pSetWindowTheme uintptr
	pGetThemeFilename uintptr
	pGetThemeSysColor uintptr
	pGetThemeSysColorBrush uintptr
	pGetThemeSysBool uintptr
	pGetThemeSysSize uintptr
	pGetThemeSysFont uintptr
	pGetThemeSysString uintptr
	pGetThemeSysInt uintptr
	pIsThemeActive uintptr
	pIsAppThemed uintptr
	pGetWindowTheme uintptr
	pEnableThemeDialogTexture uintptr
	pIsThemeDialogTextureEnabled uintptr
	pGetThemeAppProperties uintptr
	pSetThemeAppProperties uintptr
	pGetCurrentThemeName uintptr
	pGetThemeDocumentationProperty uintptr
	pDrawThemeParentBackground uintptr
	pEnableTheming uintptr
	pDrawThemeParentBackgroundEx uintptr
	pSetWindowThemeAttribute uintptr
	pDrawThemeTextEx uintptr
	pGetThemeBitmap uintptr
	pGetThemeStream uintptr
	pBufferedPaintInit uintptr
	pBufferedPaintUnInit uintptr
	pBeginBufferedPaint uintptr
	pEndBufferedPaint uintptr
	pGetBufferedPaintTargetRect uintptr
	pGetBufferedPaintTargetDC uintptr
	pGetBufferedPaintDC uintptr
	pGetBufferedPaintBits uintptr
	pBufferedPaintClear uintptr
	pBufferedPaintSetAlpha uintptr
	pBufferedPaintStopAllAnimations uintptr
	pBeginBufferedAnimation uintptr
	pEndBufferedAnimation uintptr
	pBufferedPaintRenderAnimation uintptr
	pIsCompositionActive uintptr
	pGetThemeTransitionDuration uintptr
	pCheckDlgButton uintptr
	pCheckRadioButton uintptr
	pIsDlgButtonChecked uintptr
	pIsCharLowerW uintptr
	pCreateSyntheticPointerDevice uintptr
	pDestroySyntheticPointerDevice uintptr
	pRegisterTouchHitTestingWindow uintptr
	pEvaluateProximityToRect uintptr
	pEvaluateProximityToPolygon uintptr
	pPackTouchHitTestingProximityEvaluation uintptr
	pGetWindowFeedbackSetting uintptr
	pSetWindowFeedbackSetting uintptr
	pSetScrollPos uintptr
	pSetScrollRange uintptr
	pShowScrollBar uintptr
	pEnableScrollBar uintptr
	pDlgDirListA uintptr
	pDlgDirListW uintptr
	pDlgDirSelectExA uintptr
	pDlgDirSelectExW uintptr
	pDlgDirListComboBoxA uintptr
	pDlgDirListComboBoxW uintptr
	pDlgDirSelectComboBoxExA uintptr
	pDlgDirSelectComboBoxExW uintptr
	pSetScrollInfo uintptr
	pGetComboBoxInfo uintptr
	pGetListBoxInfo uintptr
	pRegisterPointerDeviceNotifications uintptr
)

func CreatePropertySheetPageA(constPropSheetPagePointer *PROPSHEETPAGEA) HPROPSHEETPAGE {
	addr := lazyAddr(&pCreatePropertySheetPageA, libComctl32, "CreatePropertySheetPageA")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(constPropSheetPagePointer)))
	return HPROPSHEETPAGE(ret)
}

var CreatePropertySheetPage = CreatePropertySheetPageW
func CreatePropertySheetPageW(constPropSheetPagePointer *PROPSHEETPAGEW) HPROPSHEETPAGE {
	addr := lazyAddr(&pCreatePropertySheetPageW, libComctl32, "CreatePropertySheetPageW")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(constPropSheetPagePointer)))
	return HPROPSHEETPAGE(ret)
}

func DestroyPropertySheetPage(param0 HPROPSHEETPAGE) BOOL {
	addr := lazyAddr(&pDestroyPropertySheetPage, libComctl32, "DestroyPropertySheetPage")
	ret, _,  _ := syscall.SyscallN(addr, param0)
	return BOOL(ret)
}

func PropertySheetA(param0 *PROPSHEETHEADERA_V2) (uintptr, WIN32_ERROR) {
	addr := lazyAddr(&pPropertySheetA, libComctl32, "PropertySheetA")
	ret, _,  err := syscall.SyscallN(addr, uintptr(unsafe.Pointer(param0)))
	return ret, WIN32_ERROR(err)
}

var PropertySheet = PropertySheetW
func PropertySheetW(param0 *PROPSHEETHEADERW_V2) (uintptr, WIN32_ERROR) {
	addr := lazyAddr(&pPropertySheetW, libComctl32, "PropertySheetW")
	ret, _,  err := syscall.SyscallN(addr, uintptr(unsafe.Pointer(param0)))
	return ret, WIN32_ERROR(err)
}

func InitCommonControls() {
	addr := lazyAddr(&pInitCommonControls, libComctl32, "InitCommonControls")
	_, _,  _ = syscall.SyscallN(addr)
}

func InitCommonControlsEx(picce *INITCOMMONCONTROLSEX) BOOL {
	addr := lazyAddr(&pInitCommonControlsEx, libComctl32, "InitCommonControlsEx")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(picce)))
	return BOOL(ret)
}

func ImageList_Create(cx int32, cy int32, flags IMAGELIST_CREATION_FLAGS, cInitial int32, cGrow int32) HIMAGELIST {
	addr := lazyAddr(&pImageList_Create, libComctl32, "ImageList_Create")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(cx), uintptr(cy), uintptr(flags), uintptr(cInitial), uintptr(cGrow))
	return HIMAGELIST(ret)
}

func ImageList_Destroy(himl HIMAGELIST) BOOL {
	addr := lazyAddr(&pImageList_Destroy, libComctl32, "ImageList_Destroy")
	ret, _,  _ := syscall.SyscallN(addr, himl)
	return BOOL(ret)
}

func ImageList_GetImageCount(himl HIMAGELIST) int32 {
	addr := lazyAddr(&pImageList_GetImageCount, libComctl32, "ImageList_GetImageCount")
	ret, _,  _ := syscall.SyscallN(addr, himl)
	return int32(ret)
}

func ImageList_SetImageCount(himl HIMAGELIST, uNewCount uint32) BOOL {
	addr := lazyAddr(&pImageList_SetImageCount, libComctl32, "ImageList_SetImageCount")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(uNewCount))
	return BOOL(ret)
}

func ImageList_Add(himl HIMAGELIST, hbmImage HBITMAP, hbmMask HBITMAP) int32 {
	addr := lazyAddr(&pImageList_Add, libComctl32, "ImageList_Add")
	ret, _,  _ := syscall.SyscallN(addr, himl, hbmImage, hbmMask)
	return int32(ret)
}

func ImageList_ReplaceIcon(himl HIMAGELIST, i int32, hicon HICON) int32 {
	addr := lazyAddr(&pImageList_ReplaceIcon, libComctl32, "ImageList_ReplaceIcon")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(i), hicon)
	return int32(ret)
}

func ImageList_SetBkColor(himl HIMAGELIST, clrBk uint32) uint32 {
	addr := lazyAddr(&pImageList_SetBkColor, libComctl32, "ImageList_SetBkColor")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(clrBk))
	return uint32(ret)
}

func ImageList_GetBkColor(himl HIMAGELIST) uint32 {
	addr := lazyAddr(&pImageList_GetBkColor, libComctl32, "ImageList_GetBkColor")
	ret, _,  _ := syscall.SyscallN(addr, himl)
	return uint32(ret)
}

func ImageList_SetOverlayImage(himl HIMAGELIST, iImage int32, iOverlay int32) BOOL {
	addr := lazyAddr(&pImageList_SetOverlayImage, libComctl32, "ImageList_SetOverlayImage")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(iImage), uintptr(iOverlay))
	return BOOL(ret)
}

func ImageList_Draw(himl HIMAGELIST, i int32, hdcDst HDC, x int32, y int32, fStyle IMAGE_LIST_DRAW_STYLE) BOOL {
	addr := lazyAddr(&pImageList_Draw, libComctl32, "ImageList_Draw")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(i), hdcDst, uintptr(x), uintptr(y), uintptr(fStyle))
	return BOOL(ret)
}

func ImageList_Replace(himl HIMAGELIST, i int32, hbmImage HBITMAP, hbmMask HBITMAP) BOOL {
	addr := lazyAddr(&pImageList_Replace, libComctl32, "ImageList_Replace")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(i), hbmImage, hbmMask)
	return BOOL(ret)
}

func ImageList_AddMasked(himl HIMAGELIST, hbmImage HBITMAP, crMask uint32) int32 {
	addr := lazyAddr(&pImageList_AddMasked, libComctl32, "ImageList_AddMasked")
	ret, _,  _ := syscall.SyscallN(addr, himl, hbmImage, uintptr(crMask))
	return int32(ret)
}

func ImageList_DrawEx(himl HIMAGELIST, i int32, hdcDst HDC, x int32, y int32, dx int32, dy int32, rgbBk uint32, rgbFg uint32, fStyle IMAGE_LIST_DRAW_STYLE) BOOL {
	addr := lazyAddr(&pImageList_DrawEx, libComctl32, "ImageList_DrawEx")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(i), hdcDst, uintptr(x), uintptr(y), uintptr(dx), uintptr(dy), uintptr(rgbBk), uintptr(rgbFg), uintptr(fStyle))
	return BOOL(ret)
}

func ImageList_DrawIndirect(pimldp *IMAGELISTDRAWPARAMS) BOOL {
	addr := lazyAddr(&pImageList_DrawIndirect, libComctl32, "ImageList_DrawIndirect")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(pimldp)))
	return BOOL(ret)
}

func ImageList_Remove(himl HIMAGELIST, i int32) BOOL {
	addr := lazyAddr(&pImageList_Remove, libComctl32, "ImageList_Remove")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(i))
	return BOOL(ret)
}

func ImageList_GetIcon(himl HIMAGELIST, i int32, flags uint32) HICON {
	addr := lazyAddr(&pImageList_GetIcon, libComctl32, "ImageList_GetIcon")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(i), uintptr(flags))
	return HICON(ret)
}

func ImageList_LoadImageA(hi HINSTANCE, lpbmp PSTR, cx int32, cGrow int32, crMask uint32, uType uint32, uFlags IMAGE_FLAGS) HIMAGELIST {
	addr := lazyAddr(&pImageList_LoadImageA, libComctl32, "ImageList_LoadImageA")
	ret, _,  _ := syscall.SyscallN(addr, hi, uintptr(unsafe.Pointer(lpbmp)), uintptr(cx), uintptr(cGrow), uintptr(crMask), uintptr(uType), uintptr(uFlags))
	return HIMAGELIST(ret)
}

var ImageList_LoadImage = ImageList_LoadImageW
func ImageList_LoadImageW(hi HINSTANCE, lpbmp PWSTR, cx int32, cGrow int32, crMask uint32, uType uint32, uFlags IMAGE_FLAGS) HIMAGELIST {
	addr := lazyAddr(&pImageList_LoadImageW, libComctl32, "ImageList_LoadImageW")
	ret, _,  _ := syscall.SyscallN(addr, hi, uintptr(unsafe.Pointer(lpbmp)), uintptr(cx), uintptr(cGrow), uintptr(crMask), uintptr(uType), uintptr(uFlags))
	return HIMAGELIST(ret)
}

func ImageList_Copy(himlDst HIMAGELIST, iDst int32, himlSrc HIMAGELIST, iSrc int32, uFlags IMAGE_LIST_COPY_FLAGS) BOOL {
	addr := lazyAddr(&pImageList_Copy, libComctl32, "ImageList_Copy")
	ret, _,  _ := syscall.SyscallN(addr, himlDst, uintptr(iDst), himlSrc, uintptr(iSrc), uintptr(uFlags))
	return BOOL(ret)
}

func ImageList_BeginDrag(himlTrack HIMAGELIST, iTrack int32, dxHotspot int32, dyHotspot int32) BOOL {
	addr := lazyAddr(&pImageList_BeginDrag, libComctl32, "ImageList_BeginDrag")
	ret, _,  _ := syscall.SyscallN(addr, himlTrack, uintptr(iTrack), uintptr(dxHotspot), uintptr(dyHotspot))
	return BOOL(ret)
}

func ImageList_EndDrag() {
	addr := lazyAddr(&pImageList_EndDrag, libComctl32, "ImageList_EndDrag")
	_, _,  _ = syscall.SyscallN(addr)
}

func ImageList_DragEnter(hwndLock HWND, x int32, y int32) BOOL {
	addr := lazyAddr(&pImageList_DragEnter, libComctl32, "ImageList_DragEnter")
	ret, _,  _ := syscall.SyscallN(addr, hwndLock, uintptr(x), uintptr(y))
	return BOOL(ret)
}

func ImageList_DragLeave(hwndLock HWND) BOOL {
	addr := lazyAddr(&pImageList_DragLeave, libComctl32, "ImageList_DragLeave")
	ret, _,  _ := syscall.SyscallN(addr, hwndLock)
	return BOOL(ret)
}

func ImageList_DragMove(x int32, y int32) BOOL {
	addr := lazyAddr(&pImageList_DragMove, libComctl32, "ImageList_DragMove")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(x), uintptr(y))
	return BOOL(ret)
}

func ImageList_SetDragCursorImage(himlDrag HIMAGELIST, iDrag int32, dxHotspot int32, dyHotspot int32) BOOL {
	addr := lazyAddr(&pImageList_SetDragCursorImage, libComctl32, "ImageList_SetDragCursorImage")
	ret, _,  _ := syscall.SyscallN(addr, himlDrag, uintptr(iDrag), uintptr(dxHotspot), uintptr(dyHotspot))
	return BOOL(ret)
}

func ImageList_DragShowNolock(fShow BOOL) BOOL {
	addr := lazyAddr(&pImageList_DragShowNolock, libComctl32, "ImageList_DragShowNolock")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(fShow))
	return BOOL(ret)
}

func ImageList_GetDragImage(ppt *POINT, pptHotspot *POINT) HIMAGELIST {
	addr := lazyAddr(&pImageList_GetDragImage, libComctl32, "ImageList_GetDragImage")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(ppt)), uintptr(unsafe.Pointer(pptHotspot)))
	return HIMAGELIST(ret)
}

func ImageList_Read(pstm *IStream) HIMAGELIST {
	addr := lazyAddr(&pImageList_Read, libComctl32, "ImageList_Read")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(pstm)))
	return HIMAGELIST(ret)
}

func ImageList_Write(himl HIMAGELIST, pstm *IStream) BOOL {
	addr := lazyAddr(&pImageList_Write, libComctl32, "ImageList_Write")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(unsafe.Pointer(pstm)))
	return BOOL(ret)
}

func ImageList_ReadEx(dwFlags uint32, pstm *IStream, riid *syscall.GUID, ppv unsafe.Pointer) HRESULT {
	addr := lazyAddr(&pImageList_ReadEx, libComctl32, "ImageList_ReadEx")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(dwFlags), uintptr(unsafe.Pointer(pstm)), uintptr(unsafe.Pointer(riid)), uintptr(ppv))
	return HRESULT(ret)
}

func ImageList_WriteEx(himl HIMAGELIST, dwFlags uint32, pstm *IStream) HRESULT {
	addr := lazyAddr(&pImageList_WriteEx, libComctl32, "ImageList_WriteEx")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(dwFlags), uintptr(unsafe.Pointer(pstm)))
	return HRESULT(ret)
}

func ImageList_GetIconSize(himl HIMAGELIST, cx *int32, cy *int32) BOOL {
	addr := lazyAddr(&pImageList_GetIconSize, libComctl32, "ImageList_GetIconSize")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(unsafe.Pointer(cx)), uintptr(unsafe.Pointer(cy)))
	return BOOL(ret)
}

func ImageList_SetIconSize(himl HIMAGELIST, cx int32, cy int32) BOOL {
	addr := lazyAddr(&pImageList_SetIconSize, libComctl32, "ImageList_SetIconSize")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(cx), uintptr(cy))
	return BOOL(ret)
}

func ImageList_GetImageInfo(himl HIMAGELIST, i int32, pImageInfo *IMAGEINFO) BOOL {
	addr := lazyAddr(&pImageList_GetImageInfo, libComctl32, "ImageList_GetImageInfo")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(i), uintptr(unsafe.Pointer(pImageInfo)))
	return BOOL(ret)
}

func ImageList_Merge(himl1 HIMAGELIST, i1 int32, himl2 HIMAGELIST, i2 int32, dx int32, dy int32) HIMAGELIST {
	addr := lazyAddr(&pImageList_Merge, libComctl32, "ImageList_Merge")
	ret, _,  _ := syscall.SyscallN(addr, himl1, uintptr(i1), himl2, uintptr(i2), uintptr(dx), uintptr(dy))
	return HIMAGELIST(ret)
}

func ImageList_Duplicate(himl HIMAGELIST) HIMAGELIST {
	addr := lazyAddr(&pImageList_Duplicate, libComctl32, "ImageList_Duplicate")
	ret, _,  _ := syscall.SyscallN(addr, himl)
	return HIMAGELIST(ret)
}

func HIMAGELIST_QueryInterface(himl HIMAGELIST, riid *syscall.GUID, ppv unsafe.Pointer) HRESULT {
	addr := lazyAddr(&pHIMAGELIST_QueryInterface, libComctl32, "HIMAGELIST_QueryInterface")
	ret, _,  _ := syscall.SyscallN(addr, himl, uintptr(unsafe.Pointer(riid)), uintptr(ppv))
	return HRESULT(ret)
}

func CreateToolbarEx(hwnd HWND, ws uint32, wID uint32, nBitmaps int32, hBMInst HINSTANCE, wBMID uintptr, lpButtons *TBBUTTON, iNumButtons int32, dxButton int32, dyButton int32, dxBitmap int32, dyBitmap int32, uStructSize uint32) (HWND, WIN32_ERROR) {
	addr := lazyAddr(&pCreateToolbarEx, libComctl32, "CreateToolbarEx")
	ret, _,  err := syscall.SyscallN(addr, hwnd, uintptr(ws), uintptr(wID), uintptr(nBitmaps), hBMInst, uintptr(wBMID), uintptr(unsafe.Pointer(lpButtons)), uintptr(iNumButtons), uintptr(dxButton), uintptr(dyButton), uintptr(dxBitmap), uintptr(dyBitmap), uintptr(uStructSize))
	return HWND(ret), WIN32_ERROR(err)
}

func CreateMappedBitmap(hInstance HINSTANCE, idBitmap uintptr, wFlags uint32, lpColorMap *COLORMAP, iNumMaps int32) (HBITMAP, WIN32_ERROR) {
	addr := lazyAddr(&pCreateMappedBitmap, libComctl32, "CreateMappedBitmap")
	ret, _,  err := syscall.SyscallN(addr, hInstance, uintptr(idBitmap), uintptr(wFlags), uintptr(unsafe.Pointer(lpColorMap)), uintptr(iNumMaps))
	return HBITMAP(ret), WIN32_ERROR(err)
}

func DrawStatusTextA(hDC HDC, lprc *RECT, pszText PSTR, uFlags uint32) {
	addr := lazyAddr(&pDrawStatusTextA, libComctl32, "DrawStatusTextA")
	_, _,  _ = syscall.SyscallN(addr, hDC, uintptr(unsafe.Pointer(lprc)), uintptr(unsafe.Pointer(pszText)), uintptr(uFlags))
}

var DrawStatusText = DrawStatusTextW
func DrawStatusTextW(hDC HDC, lprc *RECT, pszText PWSTR, uFlags uint32) {
	addr := lazyAddr(&pDrawStatusTextW, libComctl32, "DrawStatusTextW")
	_, _,  _ = syscall.SyscallN(addr, hDC, uintptr(unsafe.Pointer(lprc)), uintptr(unsafe.Pointer(pszText)), uintptr(uFlags))
}

func CreateStatusWindowA(style int32, lpszText PSTR, hwndParent HWND, wID uint32) (HWND, WIN32_ERROR) {
	addr := lazyAddr(&pCreateStatusWindowA, libComctl32, "CreateStatusWindowA")
	ret, _,  err := syscall.SyscallN(addr, uintptr(style), uintptr(unsafe.Pointer(lpszText)), hwndParent, uintptr(wID))
	return HWND(ret), WIN32_ERROR(err)
}

var CreateStatusWindow = CreateStatusWindowW
func CreateStatusWindowW(style int32, lpszText PWSTR, hwndParent HWND, wID uint32) (HWND, WIN32_ERROR) {
	addr := lazyAddr(&pCreateStatusWindowW, libComctl32, "CreateStatusWindowW")
	ret, _,  err := syscall.SyscallN(addr, uintptr(style), uintptr(unsafe.Pointer(lpszText)), hwndParent, uintptr(wID))
	return HWND(ret), WIN32_ERROR(err)
}

func MenuHelp(uMsg uint32, wParam WPARAM, lParam LPARAM, hMainMenu HMENU, hInst HINSTANCE, hwndStatus HWND, lpwIDs *uint32) {
	addr := lazyAddr(&pMenuHelp, libComctl32, "MenuHelp")
	_, _,  _ = syscall.SyscallN(addr, uintptr(uMsg), wParam, lParam, hMainMenu, hInst, hwndStatus, uintptr(unsafe.Pointer(lpwIDs)))
}

func ShowHideMenuCtl(hWnd HWND, uFlags uintptr, lpInfo *int32) BOOL {
	addr := lazyAddr(&pShowHideMenuCtl, libComctl32, "ShowHideMenuCtl")
	ret, _,  _ := syscall.SyscallN(addr, hWnd, uintptr(uFlags), uintptr(unsafe.Pointer(lpInfo)))
	return BOOL(ret)
}

func GetEffectiveClientRect(hWnd HWND, lprc *RECT, lpInfo *int32) {
	addr := lazyAddr(&pGetEffectiveClientRect, libComctl32, "GetEffectiveClientRect")
	_, _,  _ = syscall.SyscallN(addr, hWnd, uintptr(unsafe.Pointer(lprc)), uintptr(unsafe.Pointer(lpInfo)))
}

func MakeDragList(hLB HWND) BOOL {
	addr := lazyAddr(&pMakeDragList, libComctl32, "MakeDragList")
	ret, _,  _ := syscall.SyscallN(addr, hLB)
	return BOOL(ret)
}

func DrawInsert(handParent HWND, hLB HWND, nItem int32) {
	addr := lazyAddr(&pDrawInsert, libComctl32, "DrawInsert")
	_, _,  _ = syscall.SyscallN(addr, handParent, hLB, uintptr(nItem))
}

func LBItemFromPt(hLB HWND, pt POINT, bAutoScroll BOOL) int32 {
	addr := lazyAddr(&pLBItemFromPt, libComctl32, "LBItemFromPt")
	ret, _,  _ := syscall.SyscallN(addr, hLB, *(*uintptr)(unsafe.Pointer(&pt)), uintptr(bAutoScroll))
	return int32(ret)
}

func CreateUpDownControl(dwStyle uint32, x int32, y int32, cx int32, cy int32, hParent HWND, nID int32, hInst HINSTANCE, hBuddy HWND, nUpper int32, nLower int32, nPos int32) HWND {
	addr := lazyAddr(&pCreateUpDownControl, libComctl32, "CreateUpDownControl")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(dwStyle), uintptr(x), uintptr(y), uintptr(cx), uintptr(cy), hParent, uintptr(nID), hInst, hBuddy, uintptr(nUpper), uintptr(nLower), uintptr(nPos))
	return HWND(ret)
}

func TaskDialogIndirect(pTaskConfig *TASKDIALOGCONFIG, pnButton *int32, pnRadioButton *int32, pfVerificationFlagChecked *BOOL) HRESULT {
	addr := lazyAddr(&pTaskDialogIndirect, libComctl32, "TaskDialogIndirect")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(pTaskConfig)), uintptr(unsafe.Pointer(pnButton)), uintptr(unsafe.Pointer(pnRadioButton)), uintptr(unsafe.Pointer(pfVerificationFlagChecked)))
	return HRESULT(ret)
}

func TaskDialog(hwndOwner HWND, hInstance HINSTANCE, pszWindowTitle PWSTR, pszMainInstruction PWSTR, pszContent PWSTR, dwCommonButtons TASKDIALOG_COMMON_BUTTON_FLAGS, pszIcon PWSTR, pnButton *int32) HRESULT {
	addr := lazyAddr(&pTaskDialog, libComctl32, "TaskDialog")
	ret, _,  _ := syscall.SyscallN(addr, hwndOwner, hInstance, uintptr(unsafe.Pointer(pszWindowTitle)), uintptr(unsafe.Pointer(pszMainInstruction)), uintptr(unsafe.Pointer(pszContent)), uintptr(dwCommonButtons), uintptr(unsafe.Pointer(pszIcon)), uintptr(unsafe.Pointer(pnButton)))
	return HRESULT(ret)
}

func InitMUILanguage(uiLang uint16) {
	addr := lazyAddr(&pInitMUILanguage, libComctl32, "InitMUILanguage")
	_, _,  _ = syscall.SyscallN(addr, uintptr(uiLang))
}

func GetMUILanguage() uint16 {
	addr := lazyAddr(&pGetMUILanguage, libComctl32, "GetMUILanguage")
	ret, _,  _ := syscall.SyscallN(addr)
	return uint16(ret)
}

func DSA_Create(cbItem int32, cItemGrow int32) HDSA {
	addr := lazyAddr(&pDSA_Create, libComctl32, "DSA_Create")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(cbItem), uintptr(cItemGrow))
	return HDSA(ret)
}

func DSA_Destroy(hdsa HDSA) BOOL {
	addr := lazyAddr(&pDSA_Destroy, libComctl32, "DSA_Destroy")
	ret, _,  _ := syscall.SyscallN(addr, hdsa)
	return BOOL(ret)
}

func DSA_DestroyCallback(hdsa HDSA, pfnCB uintptr, pData unsafe.Pointer) {
	addr := lazyAddr(&pDSA_DestroyCallback, libComctl32, "DSA_DestroyCallback")
	_, _,  _ = syscall.SyscallN(addr, hdsa, uintptr(pfnCB), uintptr(pData))
}

func DSA_DeleteItem(hdsa HDSA, i int32) BOOL {
	addr := lazyAddr(&pDSA_DeleteItem, libComctl32, "DSA_DeleteItem")
	ret, _,  _ := syscall.SyscallN(addr, hdsa, uintptr(i))
	return BOOL(ret)
}

func DSA_DeleteAllItems(hdsa HDSA) BOOL {
	addr := lazyAddr(&pDSA_DeleteAllItems, libComctl32, "DSA_DeleteAllItems")
	ret, _,  _ := syscall.SyscallN(addr, hdsa)
	return BOOL(ret)
}

func DSA_EnumCallback(hdsa HDSA, pfnCB uintptr, pData unsafe.Pointer) {
	addr := lazyAddr(&pDSA_EnumCallback, libComctl32, "DSA_EnumCallback")
	_, _,  _ = syscall.SyscallN(addr, hdsa, uintptr(pfnCB), uintptr(pData))
}

func DSA_InsertItem(hdsa HDSA, i int32, pitem unsafe.Pointer) int32 {
	addr := lazyAddr(&pDSA_InsertItem, libComctl32, "DSA_InsertItem")
	ret, _,  _ := syscall.SyscallN(addr, hdsa, uintptr(i), uintptr(pitem))
	return int32(ret)
}

func DSA_GetItemPtr(hdsa HDSA, i int32) unsafe.Pointer {
	addr := lazyAddr(&pDSA_GetItemPtr, libComctl32, "DSA_GetItemPtr")
	ret, _,  _ := syscall.SyscallN(addr, hdsa, uintptr(i))
	return (unsafe.Pointer)(unsafe.Pointer(ret))
}

func DSA_GetItem(hdsa HDSA, i int32, pitem unsafe.Pointer) BOOL {
	addr := lazyAddr(&pDSA_GetItem, libComctl32, "DSA_GetItem")
	ret, _,  _ := syscall.SyscallN(addr, hdsa, uintptr(i), uintptr(pitem))
	return BOOL(ret)
}

func DSA_SetItem(hdsa HDSA, i int32, pitem unsafe.Pointer) BOOL {
	addr := lazyAddr(&pDSA_SetItem, libComctl32, "DSA_SetItem")
	ret, _,  _ := syscall.SyscallN(addr, hdsa, uintptr(i), uintptr(pitem))
	return BOOL(ret)
}

func DSA_Clone(hdsa HDSA) HDSA {
	addr := lazyAddr(&pDSA_Clone, libComctl32, "DSA_Clone")
	ret, _,  _ := syscall.SyscallN(addr, hdsa)
	return HDSA(ret)
}

func DSA_GetSize(hdsa HDSA) uint64 {
	addr := lazyAddr(&pDSA_GetSize, libComctl32, "DSA_GetSize")
	ret, _,  _ := syscall.SyscallN(addr, hdsa)
	return uint64(ret)
}

func DSA_Sort(pdsa HDSA, pfnCompare uintptr, lParam LPARAM) BOOL {
	addr := lazyAddr(&pDSA_Sort, libComctl32, "DSA_Sort")
	ret, _,  _ := syscall.SyscallN(addr, pdsa, uintptr(pfnCompare), lParam)
	return BOOL(ret)
}

func DPA_Create(cItemGrow int32) HDPA {
	addr := lazyAddr(&pDPA_Create, libComctl32, "DPA_Create")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(cItemGrow))
	return HDPA(ret)
}

func DPA_CreateEx(cpGrow int32, hheap HANDLE) HDPA {
	addr := lazyAddr(&pDPA_CreateEx, libComctl32, "DPA_CreateEx")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(cpGrow), hheap)
	return HDPA(ret)
}

func DPA_Clone(hdpa HDPA, hdpaNew HDPA) HDPA {
	addr := lazyAddr(&pDPA_Clone, libComctl32, "DPA_Clone")
	ret, _,  _ := syscall.SyscallN(addr, hdpa, hdpaNew)
	return HDPA(ret)
}

func DPA_Destroy(hdpa HDPA) BOOL {
	addr := lazyAddr(&pDPA_Destroy, libComctl32, "DPA_Destroy")
	ret, _,  _ := syscall.SyscallN(addr, hdpa)
	return BOOL(ret)
}

func DPA_DestroyCallback(hdpa HDPA, pfnCB uintptr, pData unsafe.Pointer) {
	addr := lazyAddr(&pDPA_DestroyCallback, libComctl32, "DPA_DestroyCallback")
	_, _,  _ = syscall.SyscallN(addr, hdpa, uintptr(pfnCB), uintptr(pData))
}

func DPA_DeletePtr(hdpa HDPA, i int32) unsafe.Pointer {
	addr := lazyAddr(&pDPA_DeletePtr, libComctl32, "DPA_DeletePtr")
	ret, _,  _ := syscall.SyscallN(addr, hdpa, uintptr(i))
	return (unsafe.Pointer)(unsafe.Pointer(ret))
}

func DPA_DeleteAllPtrs(hdpa HDPA) BOOL {
	addr := lazyAddr(&pDPA_DeleteAllPtrs, libComctl32, "DPA_DeleteAllPtrs")
	ret, _,  _ := syscall.SyscallN(addr, hdpa)
	return BOOL(ret)
}

func DPA_EnumCallback(hdpa HDPA, pfnCB uintptr, pData unsafe.Pointer) {
	addr := lazyAddr(&pDPA_EnumCallback, libComctl32, "DPA_EnumCallback")
	_, _,  _ = syscall.SyscallN(addr, hdpa, uintptr(pfnCB), uintptr(pData))
}

func DPA_Grow(pdpa HDPA, cp int32) BOOL {
	addr := lazyAddr(&pDPA_Grow, libComctl32, "DPA_Grow")
	ret, _,  _ := syscall.SyscallN(addr, pdpa, uintptr(cp))
	return BOOL(ret)
}

func DPA_InsertPtr(hdpa HDPA, i int32, p unsafe.Pointer) int32 {
	addr := lazyAddr(&pDPA_InsertPtr, libComctl32, "DPA_InsertPtr")
	ret, _,  _ := syscall.SyscallN(addr, hdpa, uintptr(i), uintptr(p))
	return int32(ret)
}

func DPA_SetPtr(hdpa HDPA, i int32, p unsafe.Pointer) BOOL {
	addr := lazyAddr(&pDPA_SetPtr, libComctl32, "DPA_SetPtr")
	ret, _,  _ := syscall.SyscallN(addr, hdpa, uintptr(i), uintptr(p))
	return BOOL(ret)
}

func DPA_GetPtr(hdpa HDPA, i uintptr) unsafe.Pointer {
	addr := lazyAddr(&pDPA_GetPtr, libComctl32, "DPA_GetPtr")
	ret, _,  _ := syscall.SyscallN(addr, hdpa, uintptr(i))
	return (unsafe.Pointer)(unsafe.Pointer(ret))
}

func DPA_GetPtrIndex(hdpa HDPA, p unsafe.Pointer) int32 {
	addr := lazyAddr(&pDPA_GetPtrIndex, libComctl32, "DPA_GetPtrIndex")
	ret, _,  _ := syscall.SyscallN(addr, hdpa, uintptr(p))
	return int32(ret)
}

func DPA_GetSize(hdpa HDPA) uint64 {
	addr := lazyAddr(&pDPA_GetSize, libComctl32, "DPA_GetSize")
	ret, _,  _ := syscall.SyscallN(addr, hdpa)
	return uint64(ret)
}

func DPA_Sort(hdpa HDPA, pfnCompare uintptr, lParam LPARAM) BOOL {
	addr := lazyAddr(&pDPA_Sort, libComctl32, "DPA_Sort")
	ret, _,  _ := syscall.SyscallN(addr, hdpa, uintptr(pfnCompare), lParam)
	return BOOL(ret)
}

func DPA_LoadStream(phdpa *HDPA, pfn uintptr, pstream *IStream, pvInstData unsafe.Pointer) HRESULT {
	addr := lazyAddr(&pDPA_LoadStream, libComctl32, "DPA_LoadStream")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(phdpa)), uintptr(pfn), uintptr(unsafe.Pointer(pstream)), uintptr(pvInstData))
	return HRESULT(ret)
}

func DPA_SaveStream(hdpa HDPA, pfn uintptr, pstream *IStream, pvInstData unsafe.Pointer) HRESULT {
	addr := lazyAddr(&pDPA_SaveStream, libComctl32, "DPA_SaveStream")
	ret, _,  _ := syscall.SyscallN(addr, hdpa, uintptr(pfn), uintptr(unsafe.Pointer(pstream)), uintptr(pvInstData))
	return HRESULT(ret)
}

func DPA_Merge(hdpaDest HDPA, hdpaSrc HDPA, dwFlags uint32, pfnCompare uintptr, pfnMerge uintptr, lParam LPARAM) BOOL {
	addr := lazyAddr(&pDPA_Merge, libComctl32, "DPA_Merge")
	ret, _,  _ := syscall.SyscallN(addr, hdpaDest, hdpaSrc, uintptr(dwFlags), uintptr(pfnCompare), uintptr(pfnMerge), lParam)
	return BOOL(ret)
}

func DPA_Search(hdpa HDPA, pFind unsafe.Pointer, iStart int32, pfnCompare uintptr, lParam LPARAM, options uint32) int32 {
	addr := lazyAddr(&pDPA_Search, libComctl32, "DPA_Search")
	ret, _,  _ := syscall.SyscallN(addr, hdpa, uintptr(pFind), uintptr(iStart), uintptr(pfnCompare), lParam, uintptr(options))
	return int32(ret)
}

func Str_SetPtrW(ppsz *PWSTR, psz PWSTR) BOOL {
	addr := lazyAddr(&pStr_SetPtrW, libComctl32, "Str_SetPtrW")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(ppsz)), uintptr(unsafe.Pointer(psz)))
	return BOOL(ret)
}

func FlatSB_EnableScrollBar(param0 HWND, param1 int32, param2 uint32) BOOL {
	addr := lazyAddr(&pFlatSB_EnableScrollBar, libComctl32, "FlatSB_EnableScrollBar")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(param1), uintptr(param2))
	return BOOL(ret)
}

func FlatSB_ShowScrollBar(param0 HWND, code SCROLLBAR_CONSTANTS, param2 BOOL) BOOL {
	addr := lazyAddr(&pFlatSB_ShowScrollBar, libComctl32, "FlatSB_ShowScrollBar")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(code), uintptr(param2))
	return BOOL(ret)
}

func FlatSB_GetScrollRange(param0 HWND, code SCROLLBAR_CONSTANTS, param2 *int32, param3 *int32) BOOL {
	addr := lazyAddr(&pFlatSB_GetScrollRange, libComctl32, "FlatSB_GetScrollRange")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(code), uintptr(unsafe.Pointer(param2)), uintptr(unsafe.Pointer(param3)))
	return BOOL(ret)
}

func FlatSB_GetScrollInfo(param0 HWND, code SCROLLBAR_CONSTANTS, param2 *SCROLLINFO) BOOL {
	addr := lazyAddr(&pFlatSB_GetScrollInfo, libComctl32, "FlatSB_GetScrollInfo")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(code), uintptr(unsafe.Pointer(param2)))
	return BOOL(ret)
}

func FlatSB_GetScrollPos(param0 HWND, code SCROLLBAR_CONSTANTS) int32 {
	addr := lazyAddr(&pFlatSB_GetScrollPos, libComctl32, "FlatSB_GetScrollPos")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(code))
	return int32(ret)
}

func FlatSB_GetScrollProp(param0 HWND, propIndex WSB_PROP, param2 *int32) BOOL {
	addr := lazyAddr(&pFlatSB_GetScrollProp, libComctl32, "FlatSB_GetScrollProp")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(propIndex), uintptr(unsafe.Pointer(param2)))
	return BOOL(ret)
}

func FlatSB_SetScrollPos(param0 HWND, code SCROLLBAR_CONSTANTS, pos int32, fRedraw BOOL) int32 {
	addr := lazyAddr(&pFlatSB_SetScrollPos, libComctl32, "FlatSB_SetScrollPos")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(code), uintptr(pos), uintptr(fRedraw))
	return int32(ret)
}

func FlatSB_SetScrollInfo(param0 HWND, code SCROLLBAR_CONSTANTS, psi *SCROLLINFO, fRedraw BOOL) int32 {
	addr := lazyAddr(&pFlatSB_SetScrollInfo, libComctl32, "FlatSB_SetScrollInfo")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(code), uintptr(unsafe.Pointer(psi)), uintptr(fRedraw))
	return int32(ret)
}

func FlatSB_SetScrollRange(param0 HWND, code SCROLLBAR_CONSTANTS, min int32, max int32, fRedraw BOOL) int32 {
	addr := lazyAddr(&pFlatSB_SetScrollRange, libComctl32, "FlatSB_SetScrollRange")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(code), uintptr(min), uintptr(max), uintptr(fRedraw))
	return int32(ret)
}

func FlatSB_SetScrollProp(param0 HWND, index WSB_PROP, newValue uintptr, param3 BOOL) BOOL {
	addr := lazyAddr(&pFlatSB_SetScrollProp, libComctl32, "FlatSB_SetScrollProp")
	ret, _,  _ := syscall.SyscallN(addr, param0, uintptr(index), uintptr(newValue), uintptr(param3))
	return BOOL(ret)
}

func InitializeFlatSB(param0 HWND) BOOL {
	addr := lazyAddr(&pInitializeFlatSB, libComctl32, "InitializeFlatSB")
	ret, _,  _ := syscall.SyscallN(addr, param0)
	return BOOL(ret)
}

func UninitializeFlatSB(param0 HWND) HRESULT {
	addr := lazyAddr(&pUninitializeFlatSB, libComctl32, "UninitializeFlatSB")
	ret, _,  _ := syscall.SyscallN(addr, param0)
	return HRESULT(ret)
}

func LoadIconMetric(hinst HINSTANCE, pszName PWSTR, lims LI_METRIC_, phico *HICON) HRESULT {
	addr := lazyAddr(&pLoadIconMetric, libComctl32, "LoadIconMetric")
	ret, _,  _ := syscall.SyscallN(addr, hinst, uintptr(unsafe.Pointer(pszName)), uintptr(lims), uintptr(unsafe.Pointer(phico)))
	return HRESULT(ret)
}

func LoadIconWithScaleDown(hinst HINSTANCE, pszName PWSTR, cx int32, cy int32, phico *HICON) HRESULT {
	addr := lazyAddr(&pLoadIconWithScaleDown, libComctl32, "LoadIconWithScaleDown")
	ret, _,  _ := syscall.SyscallN(addr, hinst, uintptr(unsafe.Pointer(pszName)), uintptr(cx), uintptr(cy), uintptr(unsafe.Pointer(phico)))
	return HRESULT(ret)
}

func DrawShadowText(hdc HDC, pszText *uint16, cch uint32, prc *RECT, dwFlags uint32, crText uint32, crShadow uint32, ixOffset int32, iyOffset int32) int32 {
	addr := lazyAddr(&pDrawShadowText, libComctl32, "DrawShadowText")
	ret, _,  _ := syscall.SyscallN(addr, hdc, uintptr(unsafe.Pointer(pszText)), uintptr(cch), uintptr(unsafe.Pointer(prc)), uintptr(dwFlags), uintptr(crText), uintptr(crShadow), uintptr(ixOffset), uintptr(iyOffset))
	return int32(ret)
}

func ImageList_CoCreateInstance(rclsid *syscall.GUID, punkOuter *IUnknown, riid *syscall.GUID, ppv unsafe.Pointer) HRESULT {
	addr := lazyAddr(&pImageList_CoCreateInstance, libComctl32, "ImageList_CoCreateInstance")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(rclsid)), uintptr(unsafe.Pointer(punkOuter)), uintptr(unsafe.Pointer(riid)), uintptr(ppv))
	return HRESULT(ret)
}

func BeginPanningFeedback(hwnd HWND) BOOL {
	addr := lazyAddr(&pBeginPanningFeedback, libUxtheme, "BeginPanningFeedback")
	ret, _,  _ := syscall.SyscallN(addr, hwnd)
	return BOOL(ret)
}

func UpdatePanningFeedback(hwnd HWND, lTotalOverpanOffsetX int32, lTotalOverpanOffsetY int32, fInInertia BOOL) BOOL {
	addr := lazyAddr(&pUpdatePanningFeedback, libUxtheme, "UpdatePanningFeedback")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(lTotalOverpanOffsetX), uintptr(lTotalOverpanOffsetY), uintptr(fInInertia))
	return BOOL(ret)
}

func EndPanningFeedback(hwnd HWND, fAnimateBack BOOL) BOOL {
	addr := lazyAddr(&pEndPanningFeedback, libUxtheme, "EndPanningFeedback")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(fAnimateBack))
	return BOOL(ret)
}

func GetThemeAnimationProperty(hTheme uintptr, iStoryboardId int32, iTargetId int32, eProperty TA_PROPERTY, pvProperty unsafe.Pointer, cbSize uint32, pcbSizeOut *uint32) HRESULT {
	addr := lazyAddr(&pGetThemeAnimationProperty, libUxtheme, "GetThemeAnimationProperty")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iStoryboardId), uintptr(iTargetId), uintptr(eProperty), uintptr(pvProperty), uintptr(cbSize), uintptr(unsafe.Pointer(pcbSizeOut)))
	return HRESULT(ret)
}

func GetThemeAnimationTransform(hTheme uintptr, iStoryboardId int32, iTargetId int32, dwTransformIndex uint32, pTransform *TA_TRANSFORM, cbSize uint32, pcbSizeOut *uint32) HRESULT {
	addr := lazyAddr(&pGetThemeAnimationTransform, libUxtheme, "GetThemeAnimationTransform")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iStoryboardId), uintptr(iTargetId), uintptr(dwTransformIndex), uintptr(unsafe.Pointer(pTransform)), uintptr(cbSize), uintptr(unsafe.Pointer(pcbSizeOut)))
	return HRESULT(ret)
}

func GetThemeTimingFunction(hTheme uintptr, iTimingFunctionId int32, pTimingFunction *TA_TIMINGFUNCTION, cbSize uint32, pcbSizeOut *uint32) HRESULT {
	addr := lazyAddr(&pGetThemeTimingFunction, libUxtheme, "GetThemeTimingFunction")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iTimingFunctionId), uintptr(unsafe.Pointer(pTimingFunction)), uintptr(cbSize), uintptr(unsafe.Pointer(pcbSizeOut)))
	return HRESULT(ret)
}

func OpenThemeData(hwnd HWND, pszClassList PWSTR) uintptr {
	addr := lazyAddr(&pOpenThemeData, libUxtheme, "OpenThemeData")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(unsafe.Pointer(pszClassList)))
	return ret
}

func OpenThemeDataEx(hwnd HWND, pszClassList PWSTR, dwFlags OPEN_THEME_DATA_FLAGS) uintptr {
	addr := lazyAddr(&pOpenThemeDataEx, libUxtheme, "OpenThemeDataEx")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(unsafe.Pointer(pszClassList)), uintptr(dwFlags))
	return ret
}

func CloseThemeData(hTheme uintptr) HRESULT {
	addr := lazyAddr(&pCloseThemeData, libUxtheme, "CloseThemeData")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme))
	return HRESULT(ret)
}

func DrawThemeBackground(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pRect *RECT, pClipRect *RECT) HRESULT {
	addr := lazyAddr(&pDrawThemeBackground, libUxtheme, "DrawThemeBackground")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pRect)), uintptr(unsafe.Pointer(pClipRect)))
	return HRESULT(ret)
}

func DrawThemeBackgroundEx(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pRect *RECT, pOptions *DTBGOPTS) HRESULT {
	addr := lazyAddr(&pDrawThemeBackgroundEx, libUxtheme, "DrawThemeBackgroundEx")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pRect)), uintptr(unsafe.Pointer(pOptions)))
	return HRESULT(ret)
}

func DrawThemeText(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pszText *uint16, cchText int32, dwTextFlags uint32, dwTextFlags2 uint32, pRect *RECT) HRESULT {
	addr := lazyAddr(&pDrawThemeText, libUxtheme, "DrawThemeText")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pszText)), uintptr(cchText), uintptr(dwTextFlags), uintptr(dwTextFlags2), uintptr(unsafe.Pointer(pRect)))
	return HRESULT(ret)
}

func GetThemeBackgroundContentRect(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pBoundingRect *RECT, pContentRect *RECT) HRESULT {
	addr := lazyAddr(&pGetThemeBackgroundContentRect, libUxtheme, "GetThemeBackgroundContentRect")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pBoundingRect)), uintptr(unsafe.Pointer(pContentRect)))
	return HRESULT(ret)
}

func GetThemeBackgroundExtent(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pContentRect *RECT, pExtentRect *RECT) HRESULT {
	addr := lazyAddr(&pGetThemeBackgroundExtent, libUxtheme, "GetThemeBackgroundExtent")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pContentRect)), uintptr(unsafe.Pointer(pExtentRect)))
	return HRESULT(ret)
}

func GetThemeBackgroundRegion(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pRect *RECT, pRegion *HRGN) HRESULT {
	addr := lazyAddr(&pGetThemeBackgroundRegion, libUxtheme, "GetThemeBackgroundRegion")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pRect)), uintptr(unsafe.Pointer(pRegion)))
	return HRESULT(ret)
}

func GetThemePartSize(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, prc *RECT, eSize THEMESIZE, psz *SIZE) HRESULT {
	addr := lazyAddr(&pGetThemePartSize, libUxtheme, "GetThemePartSize")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(prc)), uintptr(eSize), uintptr(unsafe.Pointer(psz)))
	return HRESULT(ret)
}

func GetThemeTextExtent(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pszText *uint16, cchCharCount int32, dwTextFlags uint32, pBoundingRect *RECT, pExtentRect *RECT) HRESULT {
	addr := lazyAddr(&pGetThemeTextExtent, libUxtheme, "GetThemeTextExtent")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pszText)), uintptr(cchCharCount), uintptr(dwTextFlags), uintptr(unsafe.Pointer(pBoundingRect)), uintptr(unsafe.Pointer(pExtentRect)))
	return HRESULT(ret)
}

func GetThemeTextMetrics(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, ptm *TEXTMETRICW) HRESULT {
	addr := lazyAddr(&pGetThemeTextMetrics, libUxtheme, "GetThemeTextMetrics")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(ptm)))
	return HRESULT(ret)
}

func HitTestThemeBackground(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, dwOptions uint32, pRect *RECT, hrgn HRGN, ptTest POINT, pwHitTestCode *uint16) HRESULT {
	addr := lazyAddr(&pHitTestThemeBackground, libUxtheme, "HitTestThemeBackground")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(dwOptions), uintptr(unsafe.Pointer(pRect)), hrgn, *(*uintptr)(unsafe.Pointer(&ptTest)), uintptr(unsafe.Pointer(pwHitTestCode)))
	return HRESULT(ret)
}

func DrawThemeEdge(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pDestRect *RECT, uEdge uint32, uFlags uint32, pContentRect *RECT) HRESULT {
	addr := lazyAddr(&pDrawThemeEdge, libUxtheme, "DrawThemeEdge")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pDestRect)), uintptr(uEdge), uintptr(uFlags), uintptr(unsafe.Pointer(pContentRect)))
	return HRESULT(ret)
}

func DrawThemeIcon(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pRect *RECT, himl HIMAGELIST, iImageIndex int32) HRESULT {
	addr := lazyAddr(&pDrawThemeIcon, libUxtheme, "DrawThemeIcon")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pRect)), himl, uintptr(iImageIndex))
	return HRESULT(ret)
}

func IsThemePartDefined(hTheme uintptr, iPartId int32, iStateId int32) BOOL {
	addr := lazyAddr(&pIsThemePartDefined, libUxtheme, "IsThemePartDefined")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId))
	return BOOL(ret)
}

func IsThemeBackgroundPartiallyTransparent(hTheme uintptr, iPartId int32, iStateId int32) BOOL {
	addr := lazyAddr(&pIsThemeBackgroundPartiallyTransparent, libUxtheme, "IsThemeBackgroundPartiallyTransparent")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId))
	return BOOL(ret)
}

func GetThemeColor(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, pColor *uint32) HRESULT {
	addr := lazyAddr(&pGetThemeColor, libUxtheme, "GetThemeColor")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(pColor)))
	return HRESULT(ret)
}

func GetThemeMetric(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, iPropId THEME_PROPERTY_SYMBOL_ID, piVal *int32) HRESULT {
	addr := lazyAddr(&pGetThemeMetric, libUxtheme, "GetThemeMetric")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(piVal)))
	return HRESULT(ret)
}

func GetThemeString(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, pszBuff *uint16, cchMaxBuffChars int32) HRESULT {
	addr := lazyAddr(&pGetThemeString, libUxtheme, "GetThemeString")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(pszBuff)), uintptr(cchMaxBuffChars))
	return HRESULT(ret)
}

func GetThemeBool(hTheme uintptr, iPartId int32, iStateId int32, iPropId THEME_PROPERTY_SYMBOL_ID, pfVal *BOOL) HRESULT {
	addr := lazyAddr(&pGetThemeBool, libUxtheme, "GetThemeBool")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(pfVal)))
	return HRESULT(ret)
}

func GetThemeInt(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, piVal *int32) HRESULT {
	addr := lazyAddr(&pGetThemeInt, libUxtheme, "GetThemeInt")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(piVal)))
	return HRESULT(ret)
}

func GetThemeEnumValue(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, piVal *int32) HRESULT {
	addr := lazyAddr(&pGetThemeEnumValue, libUxtheme, "GetThemeEnumValue")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(piVal)))
	return HRESULT(ret)
}

func GetThemePosition(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, pPoint *POINT) HRESULT {
	addr := lazyAddr(&pGetThemePosition, libUxtheme, "GetThemePosition")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(pPoint)))
	return HRESULT(ret)
}

func GetThemeFont(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, iPropId int32, pFont *LOGFONTW) HRESULT {
	addr := lazyAddr(&pGetThemeFont, libUxtheme, "GetThemeFont")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(pFont)))
	return HRESULT(ret)
}

func GetThemeRect(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, pRect *RECT) HRESULT {
	addr := lazyAddr(&pGetThemeRect, libUxtheme, "GetThemeRect")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(pRect)))
	return HRESULT(ret)
}

func GetThemeMargins(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, iPropId int32, prc *RECT, pMargins *MARGINS) HRESULT {
	addr := lazyAddr(&pGetThemeMargins, libUxtheme, "GetThemeMargins")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(prc)), uintptr(unsafe.Pointer(pMargins)))
	return HRESULT(ret)
}

func GetThemeIntList(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, pIntList *INTLIST) HRESULT {
	addr := lazyAddr(&pGetThemeIntList, libUxtheme, "GetThemeIntList")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(pIntList)))
	return HRESULT(ret)
}

func GetThemePropertyOrigin(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, pOrigin *PROPERTYORIGIN) HRESULT {
	addr := lazyAddr(&pGetThemePropertyOrigin, libUxtheme, "GetThemePropertyOrigin")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(pOrigin)))
	return HRESULT(ret)
}

func SetWindowTheme(hwnd HWND, pszSubAppName PWSTR, pszSubIdList PWSTR) HRESULT {
	addr := lazyAddr(&pSetWindowTheme, libUxtheme, "SetWindowTheme")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(unsafe.Pointer(pszSubAppName)), uintptr(unsafe.Pointer(pszSubIdList)))
	return HRESULT(ret)
}

func GetThemeFilename(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, pszThemeFileName *uint16, cchMaxBuffChars int32) HRESULT {
	addr := lazyAddr(&pGetThemeFilename, libUxtheme, "GetThemeFilename")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(unsafe.Pointer(pszThemeFileName)), uintptr(cchMaxBuffChars))
	return HRESULT(ret)
}

func GetThemeSysColor(hTheme uintptr, iColorId int32) uint32 {
	addr := lazyAddr(&pGetThemeSysColor, libUxtheme, "GetThemeSysColor")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iColorId))
	return uint32(ret)
}

func GetThemeSysColorBrush(hTheme uintptr, iColorId THEME_PROPERTY_SYMBOL_ID) HBRUSH {
	addr := lazyAddr(&pGetThemeSysColorBrush, libUxtheme, "GetThemeSysColorBrush")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iColorId))
	return HBRUSH(ret)
}

func GetThemeSysBool(hTheme uintptr, iBoolId int32) BOOL {
	addr := lazyAddr(&pGetThemeSysBool, libUxtheme, "GetThemeSysBool")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iBoolId))
	return BOOL(ret)
}

func GetThemeSysSize(hTheme uintptr, iSizeId int32) int32 {
	addr := lazyAddr(&pGetThemeSysSize, libUxtheme, "GetThemeSysSize")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iSizeId))
	return int32(ret)
}

func GetThemeSysFont(hTheme uintptr, iFontId THEME_PROPERTY_SYMBOL_ID, plf *LOGFONTW) HRESULT {
	addr := lazyAddr(&pGetThemeSysFont, libUxtheme, "GetThemeSysFont")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iFontId), uintptr(unsafe.Pointer(plf)))
	return HRESULT(ret)
}

func GetThemeSysString(hTheme uintptr, iStringId THEME_PROPERTY_SYMBOL_ID, pszStringBuff *uint16, cchMaxStringChars int32) HRESULT {
	addr := lazyAddr(&pGetThemeSysString, libUxtheme, "GetThemeSysString")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iStringId), uintptr(unsafe.Pointer(pszStringBuff)), uintptr(cchMaxStringChars))
	return HRESULT(ret)
}

func GetThemeSysInt(hTheme uintptr, iIntId int32, piValue *int32) HRESULT {
	addr := lazyAddr(&pGetThemeSysInt, libUxtheme, "GetThemeSysInt")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iIntId), uintptr(unsafe.Pointer(piValue)))
	return HRESULT(ret)
}

func IsThemeActive() BOOL {
	addr := lazyAddr(&pIsThemeActive, libUxtheme, "IsThemeActive")
	ret, _,  _ := syscall.SyscallN(addr)
	return BOOL(ret)
}

func IsAppThemed() BOOL {
	addr := lazyAddr(&pIsAppThemed, libUxtheme, "IsAppThemed")
	ret, _,  _ := syscall.SyscallN(addr)
	return BOOL(ret)
}

func GetWindowTheme(hwnd HWND) uintptr {
	addr := lazyAddr(&pGetWindowTheme, libUxtheme, "GetWindowTheme")
	ret, _,  _ := syscall.SyscallN(addr, hwnd)
	return ret
}

func EnableThemeDialogTexture(hwnd HWND, dwFlags uint32) HRESULT {
	addr := lazyAddr(&pEnableThemeDialogTexture, libUxtheme, "EnableThemeDialogTexture")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(dwFlags))
	return HRESULT(ret)
}

func IsThemeDialogTextureEnabled(hwnd HWND) BOOL {
	addr := lazyAddr(&pIsThemeDialogTextureEnabled, libUxtheme, "IsThemeDialogTextureEnabled")
	ret, _,  _ := syscall.SyscallN(addr, hwnd)
	return BOOL(ret)
}

func GetThemeAppProperties() uint32 {
	addr := lazyAddr(&pGetThemeAppProperties, libUxtheme, "GetThemeAppProperties")
	ret, _,  _ := syscall.SyscallN(addr)
	return uint32(ret)
}

func SetThemeAppProperties(dwFlags uint32) {
	addr := lazyAddr(&pSetThemeAppProperties, libUxtheme, "SetThemeAppProperties")
	_, _,  _ = syscall.SyscallN(addr, uintptr(dwFlags))
}

func GetCurrentThemeName(pszThemeFileName *uint16, cchMaxNameChars int32, pszColorBuff *uint16, cchMaxColorChars int32, pszSizeBuff *uint16, cchMaxSizeChars int32) HRESULT {
	addr := lazyAddr(&pGetCurrentThemeName, libUxtheme, "GetCurrentThemeName")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(pszThemeFileName)), uintptr(cchMaxNameChars), uintptr(unsafe.Pointer(pszColorBuff)), uintptr(cchMaxColorChars), uintptr(unsafe.Pointer(pszSizeBuff)), uintptr(cchMaxSizeChars))
	return HRESULT(ret)
}

func GetThemeDocumentationProperty(pszThemeName PWSTR, pszPropertyName PWSTR, pszValueBuff *uint16, cchMaxValChars int32) HRESULT {
	addr := lazyAddr(&pGetThemeDocumentationProperty, libUxtheme, "GetThemeDocumentationProperty")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(pszThemeName)), uintptr(unsafe.Pointer(pszPropertyName)), uintptr(unsafe.Pointer(pszValueBuff)), uintptr(cchMaxValChars))
	return HRESULT(ret)
}

func DrawThemeParentBackground(hwnd HWND, hdc HDC, prc *RECT) HRESULT {
	addr := lazyAddr(&pDrawThemeParentBackground, libUxtheme, "DrawThemeParentBackground")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, hdc, uintptr(unsafe.Pointer(prc)))
	return HRESULT(ret)
}

func EnableTheming(fEnable BOOL) HRESULT {
	addr := lazyAddr(&pEnableTheming, libUxtheme, "EnableTheming")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(fEnable))
	return HRESULT(ret)
}

func DrawThemeParentBackgroundEx(hwnd HWND, hdc HDC, dwFlags DRAW_THEME_PARENT_BACKGROUND_FLAGS, prc *RECT) HRESULT {
	addr := lazyAddr(&pDrawThemeParentBackgroundEx, libUxtheme, "DrawThemeParentBackgroundEx")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, hdc, uintptr(dwFlags), uintptr(unsafe.Pointer(prc)))
	return HRESULT(ret)
}

func SetWindowThemeAttribute(hwnd HWND, eAttribute WINDOWTHEMEATTRIBUTETYPE, pvAttribute unsafe.Pointer, cbAttribute uint32) HRESULT {
	addr := lazyAddr(&pSetWindowThemeAttribute, libUxtheme, "SetWindowThemeAttribute")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(eAttribute), uintptr(pvAttribute), uintptr(cbAttribute))
	return HRESULT(ret)
}

func DrawThemeTextEx(hTheme uintptr, hdc HDC, iPartId int32, iStateId int32, pszText *uint16, cchText int32, dwTextFlags uint32, pRect *RECT, pOptions *DTTOPTS) HRESULT {
	addr := lazyAddr(&pDrawThemeTextEx, libUxtheme, "DrawThemeTextEx")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), hdc, uintptr(iPartId), uintptr(iStateId), uintptr(unsafe.Pointer(pszText)), uintptr(cchText), uintptr(dwTextFlags), uintptr(unsafe.Pointer(pRect)), uintptr(unsafe.Pointer(pOptions)))
	return HRESULT(ret)
}

func GetThemeBitmap(hTheme uintptr, iPartId int32, iStateId int32, iPropId THEME_PROPERTY_SYMBOL_ID, dwFlags GET_THEME_BITMAP_FLAGS, phBitmap *HBITMAP) HRESULT {
	addr := lazyAddr(&pGetThemeBitmap, libUxtheme, "GetThemeBitmap")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(dwFlags), uintptr(unsafe.Pointer(phBitmap)))
	return HRESULT(ret)
}

func GetThemeStream(hTheme uintptr, iPartId int32, iStateId int32, iPropId int32, ppvStream unsafe.Pointer, pcbStream *uint32, hInst HINSTANCE) HRESULT {
	addr := lazyAddr(&pGetThemeStream, libUxtheme, "GetThemeStream")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateId), uintptr(iPropId), uintptr(ppvStream), uintptr(unsafe.Pointer(pcbStream)), hInst)
	return HRESULT(ret)
}

func BufferedPaintInit() HRESULT {
	addr := lazyAddr(&pBufferedPaintInit, libUxtheme, "BufferedPaintInit")
	ret, _,  _ := syscall.SyscallN(addr)
	return HRESULT(ret)
}

func BufferedPaintUnInit() HRESULT {
	addr := lazyAddr(&pBufferedPaintUnInit, libUxtheme, "BufferedPaintUnInit")
	ret, _,  _ := syscall.SyscallN(addr)
	return HRESULT(ret)
}

func BeginBufferedPaint(hdcTarget HDC, prcTarget *RECT, dwFormat BP_BUFFERFORMAT, pPaintParams *BP_PAINTPARAMS, phdc *HDC) (uintptr, WIN32_ERROR) {
	addr := lazyAddr(&pBeginBufferedPaint, libUxtheme, "BeginBufferedPaint")
	ret, _,  err := syscall.SyscallN(addr, hdcTarget, uintptr(unsafe.Pointer(prcTarget)), uintptr(dwFormat), uintptr(unsafe.Pointer(pPaintParams)), uintptr(unsafe.Pointer(phdc)))
	return ret, WIN32_ERROR(err)
}

func EndBufferedPaint(hBufferedPaint uintptr, fUpdateTarget BOOL) HRESULT {
	addr := lazyAddr(&pEndBufferedPaint, libUxtheme, "EndBufferedPaint")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hBufferedPaint), uintptr(fUpdateTarget))
	return HRESULT(ret)
}

func GetBufferedPaintTargetRect(hBufferedPaint uintptr, prc *RECT) HRESULT {
	addr := lazyAddr(&pGetBufferedPaintTargetRect, libUxtheme, "GetBufferedPaintTargetRect")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hBufferedPaint), uintptr(unsafe.Pointer(prc)))
	return HRESULT(ret)
}

func GetBufferedPaintTargetDC(hBufferedPaint uintptr) HDC {
	addr := lazyAddr(&pGetBufferedPaintTargetDC, libUxtheme, "GetBufferedPaintTargetDC")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hBufferedPaint))
	return HDC(ret)
}

func GetBufferedPaintDC(hBufferedPaint uintptr) HDC {
	addr := lazyAddr(&pGetBufferedPaintDC, libUxtheme, "GetBufferedPaintDC")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hBufferedPaint))
	return HDC(ret)
}

func GetBufferedPaintBits(hBufferedPaint uintptr, ppbBuffer **RGBQUAD, pcxRow *int32) HRESULT {
	addr := lazyAddr(&pGetBufferedPaintBits, libUxtheme, "GetBufferedPaintBits")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hBufferedPaint), uintptr(unsafe.Pointer(ppbBuffer)), uintptr(unsafe.Pointer(pcxRow)))
	return HRESULT(ret)
}

func BufferedPaintClear(hBufferedPaint uintptr, prc *RECT) HRESULT {
	addr := lazyAddr(&pBufferedPaintClear, libUxtheme, "BufferedPaintClear")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hBufferedPaint), uintptr(unsafe.Pointer(prc)))
	return HRESULT(ret)
}

func BufferedPaintSetAlpha(hBufferedPaint uintptr, prc *RECT, alpha uint8) HRESULT {
	addr := lazyAddr(&pBufferedPaintSetAlpha, libUxtheme, "BufferedPaintSetAlpha")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hBufferedPaint), uintptr(unsafe.Pointer(prc)), uintptr(alpha))
	return HRESULT(ret)
}

func BufferedPaintStopAllAnimations(hwnd HWND) HRESULT {
	addr := lazyAddr(&pBufferedPaintStopAllAnimations, libUxtheme, "BufferedPaintStopAllAnimations")
	ret, _,  _ := syscall.SyscallN(addr, hwnd)
	return HRESULT(ret)
}

func BeginBufferedAnimation(hwnd HWND, hdcTarget HDC, prcTarget *RECT, dwFormat BP_BUFFERFORMAT, pPaintParams *BP_PAINTPARAMS, pAnimationParams *BP_ANIMATIONPARAMS, phdcFrom *HDC, phdcTo *HDC) uintptr {
	addr := lazyAddr(&pBeginBufferedAnimation, libUxtheme, "BeginBufferedAnimation")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, hdcTarget, uintptr(unsafe.Pointer(prcTarget)), uintptr(dwFormat), uintptr(unsafe.Pointer(pPaintParams)), uintptr(unsafe.Pointer(pAnimationParams)), uintptr(unsafe.Pointer(phdcFrom)), uintptr(unsafe.Pointer(phdcTo)))
	return ret
}

func EndBufferedAnimation(hbpAnimation uintptr, fUpdateTarget BOOL) HRESULT {
	addr := lazyAddr(&pEndBufferedAnimation, libUxtheme, "EndBufferedAnimation")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hbpAnimation), uintptr(fUpdateTarget))
	return HRESULT(ret)
}

func BufferedPaintRenderAnimation(hwnd HWND, hdcTarget HDC) BOOL {
	addr := lazyAddr(&pBufferedPaintRenderAnimation, libUxtheme, "BufferedPaintRenderAnimation")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, hdcTarget)
	return BOOL(ret)
}

func IsCompositionActive() BOOL {
	addr := lazyAddr(&pIsCompositionActive, libUxtheme, "IsCompositionActive")
	ret, _,  _ := syscall.SyscallN(addr)
	return BOOL(ret)
}

func GetThemeTransitionDuration(hTheme uintptr, iPartId int32, iStateIdFrom int32, iStateIdTo int32, iPropId int32, pdwDuration *uint32) HRESULT {
	addr := lazyAddr(&pGetThemeTransitionDuration, libUxtheme, "GetThemeTransitionDuration")
	ret, _,  _ := syscall.SyscallN(addr, uintptr(hTheme), uintptr(iPartId), uintptr(iStateIdFrom), uintptr(iStateIdTo), uintptr(iPropId), uintptr(unsafe.Pointer(pdwDuration)))
	return HRESULT(ret)
}

func CheckDlgButton(hDlg HWND, nIDButton int32, uCheck DLG_BUTTON_CHECK_STATE) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pCheckDlgButton, libUser32, "CheckDlgButton")
	ret, _,  err := syscall.SyscallN(addr, hDlg, uintptr(nIDButton), uintptr(uCheck))
	return BOOL(ret), WIN32_ERROR(err)
}

func CheckRadioButton(hDlg HWND, nIDFirstButton int32, nIDLastButton int32, nIDCheckButton int32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pCheckRadioButton, libUser32, "CheckRadioButton")
	ret, _,  err := syscall.SyscallN(addr, hDlg, uintptr(nIDFirstButton), uintptr(nIDLastButton), uintptr(nIDCheckButton))
	return BOOL(ret), WIN32_ERROR(err)
}

func IsDlgButtonChecked(hDlg HWND, nIDButton int32) uint32 {
	addr := lazyAddr(&pIsDlgButtonChecked, libUser32, "IsDlgButtonChecked")
	ret, _,  _ := syscall.SyscallN(addr, hDlg, uintptr(nIDButton))
	return uint32(ret)
}

func IsCharLowerW(ch uint16) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pIsCharLowerW, libUser32, "IsCharLowerW")
	ret, _,  err := syscall.SyscallN(addr, uintptr(ch))
	return BOOL(ret), WIN32_ERROR(err)
}

func CreateSyntheticPointerDevice(pointerType POINTER_INPUT_TYPE, maxCount uint32, mode POINTER_FEEDBACK_MODE) (HSYNTHETICPOINTERDEVICE, WIN32_ERROR) {
	addr := lazyAddr(&pCreateSyntheticPointerDevice, libUser32, "CreateSyntheticPointerDevice")
	ret, _,  err := syscall.SyscallN(addr, uintptr(pointerType), uintptr(maxCount), uintptr(mode))
	return HSYNTHETICPOINTERDEVICE(ret), WIN32_ERROR(err)
}

func DestroySyntheticPointerDevice(device HSYNTHETICPOINTERDEVICE) {
	addr := lazyAddr(&pDestroySyntheticPointerDevice, libUser32, "DestroySyntheticPointerDevice")
	_, _,  _ = syscall.SyscallN(addr, device)
}

func RegisterTouchHitTestingWindow(hwnd HWND, value uint32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pRegisterTouchHitTestingWindow, libUser32, "RegisterTouchHitTestingWindow")
	ret, _,  err := syscall.SyscallN(addr, hwnd, uintptr(value))
	return BOOL(ret), WIN32_ERROR(err)
}

func EvaluateProximityToRect(controlBoundingBox *RECT, pHitTestingInput *TOUCH_HIT_TESTING_INPUT, pProximityEval *TOUCH_HIT_TESTING_PROXIMITY_EVALUATION) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pEvaluateProximityToRect, libUser32, "EvaluateProximityToRect")
	ret, _,  err := syscall.SyscallN(addr, uintptr(unsafe.Pointer(controlBoundingBox)), uintptr(unsafe.Pointer(pHitTestingInput)), uintptr(unsafe.Pointer(pProximityEval)))
	return BOOL(ret), WIN32_ERROR(err)
}

func EvaluateProximityToPolygon(numVertices uint32, controlPolygon *POINT, pHitTestingInput *TOUCH_HIT_TESTING_INPUT, pProximityEval *TOUCH_HIT_TESTING_PROXIMITY_EVALUATION) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pEvaluateProximityToPolygon, libUser32, "EvaluateProximityToPolygon")
	ret, _,  err := syscall.SyscallN(addr, uintptr(numVertices), uintptr(unsafe.Pointer(controlPolygon)), uintptr(unsafe.Pointer(pHitTestingInput)), uintptr(unsafe.Pointer(pProximityEval)))
	return BOOL(ret), WIN32_ERROR(err)
}

func PackTouchHitTestingProximityEvaluation(pHitTestingInput *TOUCH_HIT_TESTING_INPUT, pProximityEval *TOUCH_HIT_TESTING_PROXIMITY_EVALUATION) (LRESULT, WIN32_ERROR) {
	addr := lazyAddr(&pPackTouchHitTestingProximityEvaluation, libUser32, "PackTouchHitTestingProximityEvaluation")
	ret, _,  err := syscall.SyscallN(addr, uintptr(unsafe.Pointer(pHitTestingInput)), uintptr(unsafe.Pointer(pProximityEval)))
	return LRESULT(ret), WIN32_ERROR(err)
}

func GetWindowFeedbackSetting(hwnd HWND, feedback FEEDBACK_TYPE, dwFlags uint32, pSize *uint32, config unsafe.Pointer) BOOL {
	addr := lazyAddr(&pGetWindowFeedbackSetting, libUser32, "GetWindowFeedbackSetting")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(feedback), uintptr(dwFlags), uintptr(unsafe.Pointer(pSize)), uintptr(config))
	return BOOL(ret)
}

func SetWindowFeedbackSetting(hwnd HWND, feedback FEEDBACK_TYPE, dwFlags uint32, size uint32, configuration unsafe.Pointer) BOOL {
	addr := lazyAddr(&pSetWindowFeedbackSetting, libUser32, "SetWindowFeedbackSetting")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(feedback), uintptr(dwFlags), uintptr(size), uintptr(configuration))
	return BOOL(ret)
}

func SetScrollPos(hWnd HWND, nBar SCROLLBAR_CONSTANTS, nPos int32, bRedraw BOOL) (int32, WIN32_ERROR) {
	addr := lazyAddr(&pSetScrollPos, libUser32, "SetScrollPos")
	ret, _,  err := syscall.SyscallN(addr, hWnd, uintptr(nBar), uintptr(nPos), uintptr(bRedraw))
	return int32(ret), WIN32_ERROR(err)
}

func SetScrollRange(hWnd HWND, nBar SCROLLBAR_CONSTANTS, nMinPos int32, nMaxPos int32, bRedraw BOOL) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pSetScrollRange, libUser32, "SetScrollRange")
	ret, _,  err := syscall.SyscallN(addr, hWnd, uintptr(nBar), uintptr(nMinPos), uintptr(nMaxPos), uintptr(bRedraw))
	return BOOL(ret), WIN32_ERROR(err)
}

func ShowScrollBar(hWnd HWND, wBar SCROLLBAR_CONSTANTS, bShow BOOL) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pShowScrollBar, libUser32, "ShowScrollBar")
	ret, _,  err := syscall.SyscallN(addr, hWnd, uintptr(wBar), uintptr(bShow))
	return BOOL(ret), WIN32_ERROR(err)
}

func EnableScrollBar(hWnd HWND, wSBflags SCROLLBAR_CONSTANTS, wArrows ENABLE_SCROLL_BAR_ARROWS) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pEnableScrollBar, libUser32, "EnableScrollBar")
	ret, _,  err := syscall.SyscallN(addr, hWnd, uintptr(wSBflags), uintptr(wArrows))
	return BOOL(ret), WIN32_ERROR(err)
}

func DlgDirListA(hDlg HWND, lpPathSpec PSTR, nIDListBox int32, nIDStaticPath int32, uFileType DLG_DIR_LIST_FILE_TYPE) int32 {
	addr := lazyAddr(&pDlgDirListA, libUser32, "DlgDirListA")
	ret, _,  _ := syscall.SyscallN(addr, hDlg, uintptr(unsafe.Pointer(lpPathSpec)), uintptr(nIDListBox), uintptr(nIDStaticPath), uintptr(uFileType))
	return int32(ret)
}

var DlgDirList = DlgDirListW
func DlgDirListW(hDlg HWND, lpPathSpec PWSTR, nIDListBox int32, nIDStaticPath int32, uFileType DLG_DIR_LIST_FILE_TYPE) int32 {
	addr := lazyAddr(&pDlgDirListW, libUser32, "DlgDirListW")
	ret, _,  _ := syscall.SyscallN(addr, hDlg, uintptr(unsafe.Pointer(lpPathSpec)), uintptr(nIDListBox), uintptr(nIDStaticPath), uintptr(uFileType))
	return int32(ret)
}

func DlgDirSelectExA(hwndDlg HWND, lpString *uint8, chCount int32, idListBox int32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pDlgDirSelectExA, libUser32, "DlgDirSelectExA")
	ret, _,  err := syscall.SyscallN(addr, hwndDlg, uintptr(unsafe.Pointer(lpString)), uintptr(chCount), uintptr(idListBox))
	return BOOL(ret), WIN32_ERROR(err)
}

var DlgDirSelectEx = DlgDirSelectExW
func DlgDirSelectExW(hwndDlg HWND, lpString *uint16, chCount int32, idListBox int32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pDlgDirSelectExW, libUser32, "DlgDirSelectExW")
	ret, _,  err := syscall.SyscallN(addr, hwndDlg, uintptr(unsafe.Pointer(lpString)), uintptr(chCount), uintptr(idListBox))
	return BOOL(ret), WIN32_ERROR(err)
}

func DlgDirListComboBoxA(hDlg HWND, lpPathSpec PSTR, nIDComboBox int32, nIDStaticPath int32, uFiletype DLG_DIR_LIST_FILE_TYPE) (int32, WIN32_ERROR) {
	addr := lazyAddr(&pDlgDirListComboBoxA, libUser32, "DlgDirListComboBoxA")
	ret, _,  err := syscall.SyscallN(addr, hDlg, uintptr(unsafe.Pointer(lpPathSpec)), uintptr(nIDComboBox), uintptr(nIDStaticPath), uintptr(uFiletype))
	return int32(ret), WIN32_ERROR(err)
}

var DlgDirListComboBox = DlgDirListComboBoxW
func DlgDirListComboBoxW(hDlg HWND, lpPathSpec PWSTR, nIDComboBox int32, nIDStaticPath int32, uFiletype DLG_DIR_LIST_FILE_TYPE) (int32, WIN32_ERROR) {
	addr := lazyAddr(&pDlgDirListComboBoxW, libUser32, "DlgDirListComboBoxW")
	ret, _,  err := syscall.SyscallN(addr, hDlg, uintptr(unsafe.Pointer(lpPathSpec)), uintptr(nIDComboBox), uintptr(nIDStaticPath), uintptr(uFiletype))
	return int32(ret), WIN32_ERROR(err)
}

func DlgDirSelectComboBoxExA(hwndDlg HWND, lpString *uint8, cchOut int32, idComboBox int32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pDlgDirSelectComboBoxExA, libUser32, "DlgDirSelectComboBoxExA")
	ret, _,  err := syscall.SyscallN(addr, hwndDlg, uintptr(unsafe.Pointer(lpString)), uintptr(cchOut), uintptr(idComboBox))
	return BOOL(ret), WIN32_ERROR(err)
}

var DlgDirSelectComboBoxEx = DlgDirSelectComboBoxExW
func DlgDirSelectComboBoxExW(hwndDlg HWND, lpString *uint16, cchOut int32, idComboBox int32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pDlgDirSelectComboBoxExW, libUser32, "DlgDirSelectComboBoxExW")
	ret, _,  err := syscall.SyscallN(addr, hwndDlg, uintptr(unsafe.Pointer(lpString)), uintptr(cchOut), uintptr(idComboBox))
	return BOOL(ret), WIN32_ERROR(err)
}

func SetScrollInfo(hwnd HWND, nBar SCROLLBAR_CONSTANTS, lpsi *SCROLLINFO, redraw BOOL) int32 {
	addr := lazyAddr(&pSetScrollInfo, libUser32, "SetScrollInfo")
	ret, _,  _ := syscall.SyscallN(addr, hwnd, uintptr(nBar), uintptr(unsafe.Pointer(lpsi)), uintptr(redraw))
	return int32(ret)
}

func GetComboBoxInfo(hwndCombo HWND, pcbi *COMBOBOXINFO) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pGetComboBoxInfo, libUser32, "GetComboBoxInfo")
	ret, _,  err := syscall.SyscallN(addr, hwndCombo, uintptr(unsafe.Pointer(pcbi)))
	return BOOL(ret), WIN32_ERROR(err)
}

func GetListBoxInfo(hwnd HWND) uint32 {
	addr := lazyAddr(&pGetListBoxInfo, libUser32, "GetListBoxInfo")
	ret, _,  _ := syscall.SyscallN(addr, hwnd)
	return uint32(ret)
}

func RegisterPointerDeviceNotifications(window HWND, notifyRange BOOL) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pRegisterPointerDeviceNotifications, libUser32, "RegisterPointerDeviceNotifications")
	ret, _,  err := syscall.SyscallN(addr, window, uintptr(notifyRange))
	return BOOL(ret), WIN32_ERROR(err)
}


