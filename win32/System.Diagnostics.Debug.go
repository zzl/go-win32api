package win32

import (
	"syscall"
	"unsafe"
)

const (
	WOW64_CONTEXT_i386                                                 uint32  = 0x10000
	WOW64_CONTEXT_i486                                                 uint32  = 0x10000
	WOW64_CONTEXT_EXCEPTION_ACTIVE                                     uint32  = 0x8000000
	WOW64_CONTEXT_SERVICE_ACTIVE                                       uint32  = 0x10000000
	WOW64_CONTEXT_EXCEPTION_REQUEST                                    uint32  = 0x40000000
	WOW64_CONTEXT_EXCEPTION_REPORTING                                  uint32  = 0x80000000
	WOW64_SIZE_OF_80387_REGISTERS                                      uint32  = 0x50
	WOW64_MAXIMUM_SUPPORTED_EXTENSION                                  uint32  = 0x200
	ERROR_DBG_CANCELLED                                                uint32  = 0xc00004c7
	ERROR_DBG_TIMEOUT                                                  uint32  = 0xc00005b4
	DEBUG_GET_TEXT_COMPLETIONS_NO_DOT_COMMANDS                         uint32  = 0x1
	DEBUG_GET_TEXT_COMPLETIONS_NO_EXTENSION_COMMANDS                   uint32  = 0x2
	DEBUG_GET_TEXT_COMPLETIONS_NO_SYMBOLS                              uint32  = 0x4
	DEBUG_GET_TEXT_COMPLETIONS_IS_DOT_COMMAND                          uint32  = 0x1
	DEBUG_GET_TEXT_COMPLETIONS_IS_EXTENSION_COMMAND                    uint32  = 0x2
	DEBUG_GET_TEXT_COMPLETIONS_IS_SYMBOL                               uint32  = 0x4
	DEBUG_REQUEST_SOURCE_PATH_HAS_SOURCE_SERVER                        uint32  = 0x0
	DEBUG_REQUEST_TARGET_EXCEPTION_CONTEXT                             uint32  = 0x1
	DEBUG_REQUEST_TARGET_EXCEPTION_THREAD                              uint32  = 0x2
	DEBUG_REQUEST_TARGET_EXCEPTION_RECORD                              uint32  = 0x3
	DEBUG_REQUEST_GET_ADDITIONAL_CREATE_OPTIONS                        uint32  = 0x4
	DEBUG_REQUEST_SET_ADDITIONAL_CREATE_OPTIONS                        uint32  = 0x5
	DEBUG_REQUEST_GET_WIN32_MAJOR_MINOR_VERSIONS                       uint32  = 0x6
	DEBUG_REQUEST_READ_USER_MINIDUMP_STREAM                            uint32  = 0x7
	DEBUG_REQUEST_TARGET_CAN_DETACH                                    uint32  = 0x8
	DEBUG_REQUEST_SET_LOCAL_IMPLICIT_COMMAND_LINE                      uint32  = 0x9
	DEBUG_REQUEST_GET_CAPTURED_EVENT_CODE_OFFSET                       uint32  = 0xa
	DEBUG_REQUEST_READ_CAPTURED_EVENT_CODE_STREAM                      uint32  = 0xb
	DEBUG_REQUEST_EXT_TYPED_DATA_ANSI                                  uint32  = 0xc
	DEBUG_REQUEST_GET_EXTENSION_SEARCH_PATH_WIDE                       uint32  = 0xd
	DEBUG_REQUEST_GET_TEXT_COMPLETIONS_WIDE                            uint32  = 0xe
	DEBUG_REQUEST_GET_CACHED_SYMBOL_INFO                               uint32  = 0xf
	DEBUG_REQUEST_ADD_CACHED_SYMBOL_INFO                               uint32  = 0x10
	DEBUG_REQUEST_REMOVE_CACHED_SYMBOL_INFO                            uint32  = 0x11
	DEBUG_REQUEST_GET_TEXT_COMPLETIONS_ANSI                            uint32  = 0x12
	DEBUG_REQUEST_CURRENT_OUTPUT_CALLBACKS_ARE_DML_AWARE               uint32  = 0x13
	DEBUG_REQUEST_GET_OFFSET_UNWIND_INFORMATION                        uint32  = 0x14
	DEBUG_REQUEST_GET_DUMP_HEADER                                      uint32  = 0x15
	DEBUG_REQUEST_SET_DUMP_HEADER                                      uint32  = 0x16
	DEBUG_REQUEST_MIDORI                                               uint32  = 0x17
	DEBUG_REQUEST_PROCESS_DESCRIPTORS                                  uint32  = 0x18
	DEBUG_REQUEST_MISC_INFORMATION                                     uint32  = 0x19
	DEBUG_REQUEST_OPEN_PROCESS_TOKEN                                   uint32  = 0x1a
	DEBUG_REQUEST_OPEN_THREAD_TOKEN                                    uint32  = 0x1b
	DEBUG_REQUEST_DUPLICATE_TOKEN                                      uint32  = 0x1c
	DEBUG_REQUEST_QUERY_INFO_TOKEN                                     uint32  = 0x1d
	DEBUG_REQUEST_CLOSE_TOKEN                                          uint32  = 0x1e
	DEBUG_REQUEST_WOW_PROCESS                                          uint32  = 0x1f
	DEBUG_REQUEST_WOW_MODULE                                           uint32  = 0x20
	DEBUG_LIVE_USER_NON_INVASIVE                                       uint32  = 0x21
	DEBUG_REQUEST_RESUME_THREAD                                        uint32  = 0x22
	DEBUG_REQUEST_INLINE_QUERY                                         uint32  = 0x23
	DEBUG_REQUEST_TL_INSTRUMENTATION_AWARE                             uint32  = 0x24
	DEBUG_REQUEST_GET_INSTRUMENTATION_VERSION                          uint32  = 0x25
	DEBUG_REQUEST_GET_MODULE_ARCHITECTURE                              uint32  = 0x26
	DEBUG_SRCFILE_SYMBOL_TOKEN                                         uint32  = 0x0
	DEBUG_SRCFILE_SYMBOL_TOKEN_SOURCE_COMMAND_WIDE                     uint32  = 0x1
	DEBUG_SRCFILE_SYMBOL_CHECKSUMINFO                                  uint32  = 0x2
	DEBUG_SYMINFO_BREAKPOINT_SOURCE_LINE                               uint32  = 0x0
	DEBUG_SYMINFO_IMAGEHLP_MODULEW64                                   uint32  = 0x1
	DEBUG_SYMINFO_GET_SYMBOL_NAME_BY_OFFSET_AND_TAG_WIDE               uint32  = 0x2
	DEBUG_SYMINFO_GET_MODULE_SYMBOL_NAMES_AND_OFFSETS                  uint32  = 0x3
	DEBUG_SYSOBJINFO_THREAD_BASIC_INFORMATION                          uint32  = 0x0
	DEBUG_SYSOBJINFO_THREAD_NAME_WIDE                                  uint32  = 0x1
	DEBUG_SYSOBJINFO_CURRENT_PROCESS_COOKIE                            uint32  = 0x2
	DEBUG_TBINFO_EXIT_STATUS                                           uint32  = 0x1
	DEBUG_TBINFO_PRIORITY_CLASS                                        uint32  = 0x2
	DEBUG_TBINFO_PRIORITY                                              uint32  = 0x4
	DEBUG_TBINFO_TIMES                                                 uint32  = 0x8
	DEBUG_TBINFO_START_OFFSET                                          uint32  = 0x10
	DEBUG_TBINFO_AFFINITY                                              uint32  = 0x20
	DEBUG_TBINFO_ALL                                                   uint32  = 0x3f
	DEBUG_BREAKPOINT_CODE                                              uint32  = 0x0
	DEBUG_BREAKPOINT_DATA                                              uint32  = 0x1
	DEBUG_BREAKPOINT_TIME                                              uint32  = 0x2
	DEBUG_BREAKPOINT_INLINE                                            uint32  = 0x3
	DEBUG_BREAKPOINT_GO_ONLY                                           uint32  = 0x1
	DEBUG_BREAKPOINT_DEFERRED                                          uint32  = 0x2
	DEBUG_BREAKPOINT_ENABLED                                           uint32  = 0x4
	DEBUG_BREAKPOINT_ADDER_ONLY                                        uint32  = 0x8
	DEBUG_BREAKPOINT_ONE_SHOT                                          uint32  = 0x10
	DEBUG_BREAK_READ                                                   uint32  = 0x1
	DEBUG_BREAK_WRITE                                                  uint32  = 0x2
	DEBUG_BREAK_EXECUTE                                                uint32  = 0x4
	DEBUG_BREAK_IO                                                     uint32  = 0x8
	DEBUG_ATTACH_KERNEL_CONNECTION                                     uint32  = 0x0
	DEBUG_ATTACH_LOCAL_KERNEL                                          uint32  = 0x1
	DEBUG_ATTACH_EXDI_DRIVER                                           uint32  = 0x2
	DEBUG_ATTACH_INSTALL_DRIVER                                        uint32  = 0x4
	DEBUG_GET_PROC_DEFAULT                                             uint32  = 0x0
	DEBUG_GET_PROC_FULL_MATCH                                          uint32  = 0x1
	DEBUG_GET_PROC_ONLY_MATCH                                          uint32  = 0x2
	DEBUG_GET_PROC_SERVICE_NAME                                        uint32  = 0x4
	DEBUG_PROC_DESC_DEFAULT                                            uint32  = 0x0
	DEBUG_PROC_DESC_NO_PATHS                                           uint32  = 0x1
	DEBUG_PROC_DESC_NO_SERVICES                                        uint32  = 0x2
	DEBUG_PROC_DESC_NO_MTS_PACKAGES                                    uint32  = 0x4
	DEBUG_PROC_DESC_NO_COMMAND_LINE                                    uint32  = 0x8
	DEBUG_PROC_DESC_NO_SESSION_ID                                      uint32  = 0x10
	DEBUG_PROC_DESC_NO_USER_NAME                                       uint32  = 0x20
	DEBUG_PROC_DESC_WITH_PACKAGEFAMILY                                 uint32  = 0x40
	DEBUG_ATTACH_DEFAULT                                               uint32  = 0x0
	DEBUG_ATTACH_NONINVASIVE                                           uint32  = 0x1
	DEBUG_ATTACH_EXISTING                                              uint32  = 0x2
	DEBUG_ATTACH_NONINVASIVE_NO_SUSPEND                                uint32  = 0x4
	DEBUG_ATTACH_INVASIVE_NO_INITIAL_BREAK                             uint32  = 0x8
	DEBUG_ATTACH_INVASIVE_RESUME_PROCESS                               uint32  = 0x10
	DEBUG_ATTACH_NONINVASIVE_ALLOW_PARTIAL                             uint32  = 0x20
	DEBUG_ECREATE_PROCESS_DEFAULT                                      uint32  = 0x0
	DEBUG_ECREATE_PROCESS_INHERIT_HANDLES                              uint32  = 0x1
	DEBUG_ECREATE_PROCESS_USE_VERIFIER_FLAGS                           uint32  = 0x2
	DEBUG_ECREATE_PROCESS_USE_IMPLICIT_COMMAND_LINE                    uint32  = 0x4
	DEBUG_PROCESS_DETACH_ON_EXIT                                       uint32  = 0x1
	DEBUG_PROCESS_ONLY_THIS_PROCESS                                    uint32  = 0x2
	DEBUG_CONNECT_SESSION_DEFAULT                                      uint32  = 0x0
	DEBUG_CONNECT_SESSION_NO_VERSION                                   uint32  = 0x1
	DEBUG_CONNECT_SESSION_NO_ANNOUNCE                                  uint32  = 0x2
	DEBUG_SERVERS_DEBUGGER                                             uint32  = 0x1
	DEBUG_SERVERS_PROCESS                                              uint32  = 0x2
	DEBUG_SERVERS_ALL                                                  uint32  = 0x3
	DEBUG_END_PASSIVE                                                  uint32  = 0x0
	DEBUG_END_ACTIVE_TERMINATE                                         uint32  = 0x1
	DEBUG_END_ACTIVE_DETACH                                            uint32  = 0x2
	DEBUG_END_REENTRANT                                                uint32  = 0x3
	DEBUG_END_DISCONNECT                                               uint32  = 0x4
	DEBUG_OUTPUT_NORMAL                                                uint32  = 0x1
	DEBUG_OUTPUT_ERROR                                                 uint32  = 0x2
	DEBUG_OUTPUT_WARNING                                               uint32  = 0x4
	DEBUG_OUTPUT_VERBOSE                                               uint32  = 0x8
	DEBUG_OUTPUT_PROMPT                                                uint32  = 0x10
	DEBUG_OUTPUT_PROMPT_REGISTERS                                      uint32  = 0x20
	DEBUG_OUTPUT_EXTENSION_WARNING                                     uint32  = 0x40
	DEBUG_OUTPUT_DEBUGGEE                                              uint32  = 0x80
	DEBUG_OUTPUT_DEBUGGEE_PROMPT                                       uint32  = 0x100
	DEBUG_OUTPUT_SYMBOLS                                               uint32  = 0x200
	DEBUG_OUTPUT_STATUS                                                uint32  = 0x400
	DEBUG_OUTPUT_XML                                                   uint32  = 0x800
	DEBUG_IOUTPUT_KD_PROTOCOL                                          uint32  = 0x80000000
	DEBUG_IOUTPUT_REMOTING                                             uint32  = 0x40000000
	DEBUG_IOUTPUT_BREAKPOINT                                           uint32  = 0x20000000
	DEBUG_IOUTPUT_EVENT                                                uint32  = 0x10000000
	DEBUG_IOUTPUT_ADDR_TRANSLATE                                       uint32  = 0x8000000
	DEBUG_OUTPUT_IDENTITY_DEFAULT                                      uint32  = 0x0
	DEBUG_CLIENT_UNKNOWN                                               uint32  = 0x0
	DEBUG_CLIENT_VSINT                                                 uint32  = 0x1
	DEBUG_CLIENT_NTSD                                                  uint32  = 0x2
	DEBUG_CLIENT_NTKD                                                  uint32  = 0x3
	DEBUG_CLIENT_CDB                                                   uint32  = 0x4
	DEBUG_CLIENT_KD                                                    uint32  = 0x5
	DEBUG_CLIENT_WINDBG                                                uint32  = 0x6
	DEBUG_CLIENT_WINIDE                                                uint32  = 0x7
	DEBUG_FORMAT_DEFAULT                                               uint32  = 0x0
	DEBUG_FORMAT_CAB_SECONDARY_ALL_IMAGES                              uint32  = 0x10000000
	DEBUG_FORMAT_WRITE_CAB                                             uint32  = 0x20000000
	DEBUG_FORMAT_CAB_SECONDARY_FILES                                   uint32  = 0x40000000
	DEBUG_FORMAT_NO_OVERWRITE                                          uint32  = 0x80000000
	DEBUG_FORMAT_USER_SMALL_FULL_MEMORY                                uint32  = 0x1
	DEBUG_FORMAT_USER_SMALL_HANDLE_DATA                                uint32  = 0x2
	DEBUG_FORMAT_USER_SMALL_UNLOADED_MODULES                           uint32  = 0x4
	DEBUG_FORMAT_USER_SMALL_INDIRECT_MEMORY                            uint32  = 0x8
	DEBUG_FORMAT_USER_SMALL_DATA_SEGMENTS                              uint32  = 0x10
	DEBUG_FORMAT_USER_SMALL_FILTER_MEMORY                              uint32  = 0x20
	DEBUG_FORMAT_USER_SMALL_FILTER_PATHS                               uint32  = 0x40
	DEBUG_FORMAT_USER_SMALL_PROCESS_THREAD_DATA                        uint32  = 0x80
	DEBUG_FORMAT_USER_SMALL_PRIVATE_READ_WRITE_MEMORY                  uint32  = 0x100
	DEBUG_FORMAT_USER_SMALL_NO_OPTIONAL_DATA                           uint32  = 0x200
	DEBUG_FORMAT_USER_SMALL_FULL_MEMORY_INFO                           uint32  = 0x400
	DEBUG_FORMAT_USER_SMALL_THREAD_INFO                                uint32  = 0x800
	DEBUG_FORMAT_USER_SMALL_CODE_SEGMENTS                              uint32  = 0x1000
	DEBUG_FORMAT_USER_SMALL_NO_AUXILIARY_STATE                         uint32  = 0x2000
	DEBUG_FORMAT_USER_SMALL_FULL_AUXILIARY_STATE                       uint32  = 0x4000
	DEBUG_FORMAT_USER_SMALL_MODULE_HEADERS                             uint32  = 0x8000
	DEBUG_FORMAT_USER_SMALL_FILTER_TRIAGE                              uint32  = 0x10000
	DEBUG_FORMAT_USER_SMALL_ADD_AVX_XSTATE_CONTEXT                     uint32  = 0x20000
	DEBUG_FORMAT_USER_SMALL_IPT_TRACE                                  uint32  = 0x40000
	DEBUG_FORMAT_USER_SMALL_IGNORE_INACCESSIBLE_MEM                    uint32  = 0x8000000
	DEBUG_FORMAT_USER_SMALL_SCAN_PARTIAL_PAGES                         uint32  = 0x10000000
	DEBUG_DUMP_FILE_BASE                                               uint32  = 0xffffffff
	DEBUG_DUMP_FILE_PAGE_FILE_DUMP                                     uint32  = 0x0
	DEBUG_DUMP_FILE_LOAD_FAILED_INDEX                                  uint32  = 0xffffffff
	DEBUG_DUMP_FILE_ORIGINAL_CAB_INDEX                                 uint32  = 0xfffffffe
	DEBUG_STATUS_NO_CHANGE                                             uint32  = 0x0
	DEBUG_STATUS_GO                                                    uint32  = 0x1
	DEBUG_STATUS_GO_HANDLED                                            uint32  = 0x2
	DEBUG_STATUS_GO_NOT_HANDLED                                        uint32  = 0x3
	DEBUG_STATUS_STEP_OVER                                             uint32  = 0x4
	DEBUG_STATUS_STEP_INTO                                             uint32  = 0x5
	DEBUG_STATUS_BREAK                                                 uint32  = 0x6
	DEBUG_STATUS_NO_DEBUGGEE                                           uint32  = 0x7
	DEBUG_STATUS_STEP_BRANCH                                           uint32  = 0x8
	DEBUG_STATUS_IGNORE_EVENT                                          uint32  = 0x9
	DEBUG_STATUS_RESTART_REQUESTED                                     uint32  = 0xa
	DEBUG_STATUS_REVERSE_GO                                            uint32  = 0xb
	DEBUG_STATUS_REVERSE_STEP_BRANCH                                   uint32  = 0xc
	DEBUG_STATUS_REVERSE_STEP_OVER                                     uint32  = 0xd
	DEBUG_STATUS_REVERSE_STEP_INTO                                     uint32  = 0xe
	DEBUG_STATUS_OUT_OF_SYNC                                           uint32  = 0xf
	DEBUG_STATUS_WAIT_INPUT                                            uint32  = 0x10
	DEBUG_STATUS_TIMEOUT                                               uint32  = 0x11
	DEBUG_STATUS_MASK                                                  uint32  = 0x1f
	DEBUG_STATUS_INSIDE_WAIT                                           uint64  = 0x100000000
	DEBUG_STATUS_WAIT_TIMEOUT                                          uint64  = 0x200000000
	DEBUG_OUTCTL_THIS_CLIENT                                           uint32  = 0x0
	DEBUG_OUTCTL_ALL_CLIENTS                                           uint32  = 0x1
	DEBUG_OUTCTL_ALL_OTHER_CLIENTS                                     uint32  = 0x2
	DEBUG_OUTCTL_IGNORE                                                uint32  = 0x3
	DEBUG_OUTCTL_LOG_ONLY                                              uint32  = 0x4
	DEBUG_OUTCTL_SEND_MASK                                             uint32  = 0x7
	DEBUG_OUTCTL_NOT_LOGGED                                            uint32  = 0x8
	DEBUG_OUTCTL_OVERRIDE_MASK                                         uint32  = 0x10
	DEBUG_OUTCTL_DML                                                   uint32  = 0x20
	DEBUG_OUTCTL_AMBIENT_DML                                           uint32  = 0xfffffffe
	DEBUG_OUTCTL_AMBIENT_TEXT                                          uint32  = 0xffffffff
	DEBUG_OUTCTL_AMBIENT                                               uint32  = 0xffffffff
	DEBUG_INTERRUPT_ACTIVE                                             uint32  = 0x0
	DEBUG_INTERRUPT_PASSIVE                                            uint32  = 0x1
	DEBUG_INTERRUPT_EXIT                                               uint32  = 0x2
	DEBUG_CURRENT_DEFAULT                                              uint32  = 0xf
	DEBUG_CURRENT_SYMBOL                                               uint32  = 0x1
	DEBUG_CURRENT_DISASM                                               uint32  = 0x2
	DEBUG_CURRENT_REGISTERS                                            uint32  = 0x4
	DEBUG_CURRENT_SOURCE_LINE                                          uint32  = 0x8
	DEBUG_DISASM_EFFECTIVE_ADDRESS                                     uint32  = 0x1
	DEBUG_DISASM_MATCHING_SYMBOLS                                      uint32  = 0x2
	DEBUG_DISASM_SOURCE_LINE_NUMBER                                    uint32  = 0x4
	DEBUG_DISASM_SOURCE_FILE_NAME                                      uint32  = 0x8
	DEBUG_LEVEL_SOURCE                                                 uint32  = 0x0
	DEBUG_LEVEL_ASSEMBLY                                               uint32  = 0x1
	DEBUG_ENGOPT_IGNORE_DBGHELP_VERSION                                uint32  = 0x1
	DEBUG_ENGOPT_IGNORE_EXTENSION_VERSIONS                             uint32  = 0x2
	DEBUG_ENGOPT_ALLOW_NETWORK_PATHS                                   uint32  = 0x4
	DEBUG_ENGOPT_DISALLOW_NETWORK_PATHS                                uint32  = 0x8
	DEBUG_ENGOPT_IGNORE_LOADER_EXCEPTIONS                              uint32  = 0x10
	DEBUG_ENGOPT_INITIAL_BREAK                                         uint32  = 0x20
	DEBUG_ENGOPT_INITIAL_MODULE_BREAK                                  uint32  = 0x40
	DEBUG_ENGOPT_FINAL_BREAK                                           uint32  = 0x80
	DEBUG_ENGOPT_NO_EXECUTE_REPEAT                                     uint32  = 0x100
	DEBUG_ENGOPT_FAIL_INCOMPLETE_INFORMATION                           uint32  = 0x200
	DEBUG_ENGOPT_ALLOW_READ_ONLY_BREAKPOINTS                           uint32  = 0x400
	DEBUG_ENGOPT_SYNCHRONIZE_BREAKPOINTS                               uint32  = 0x800
	DEBUG_ENGOPT_DISALLOW_SHELL_COMMANDS                               uint32  = 0x1000
	DEBUG_ENGOPT_KD_QUIET_MODE                                         uint32  = 0x2000
	DEBUG_ENGOPT_DISABLE_MANAGED_SUPPORT                               uint32  = 0x4000
	DEBUG_ENGOPT_DISABLE_MODULE_SYMBOL_LOAD                            uint32  = 0x8000
	DEBUG_ENGOPT_DISABLE_EXECUTION_COMMANDS                            uint32  = 0x10000
	DEBUG_ENGOPT_DISALLOW_IMAGE_FILE_MAPPING                           uint32  = 0x20000
	DEBUG_ENGOPT_PREFER_DML                                            uint32  = 0x40000
	DEBUG_ENGOPT_DISABLESQM                                            uint32  = 0x80000
	DEBUG_ENGOPT_DISABLE_STEPLINES_OPTIONS                             uint32  = 0x200000
	DEBUG_ENGOPT_DEBUGGING_SENSITIVE_DATA                              uint32  = 0x400000
	DEBUG_ENGOPT_PREFER_TRACE_FILES                                    uint32  = 0x800000
	DEBUG_ENGOPT_ALL                                                   uint32  = 0xefffff
	DEBUG_ANY_ID                                                       uint32  = 0xffffffff
	DBG_FRAME_DEFAULT                                                  uint32  = 0x0
	DBG_FRAME_IGNORE_INLINE                                            uint32  = 0xffffffff
	STACK_FRAME_TYPE_INIT                                              uint32  = 0x0
	STACK_FRAME_TYPE_STACK                                             uint32  = 0x1
	STACK_FRAME_TYPE_INLINE                                            uint32  = 0x2
	STACK_FRAME_TYPE_RA                                                uint32  = 0x80
	STACK_FRAME_TYPE_IGNORE                                            uint32  = 0xff
	DEBUG_STACK_ARGUMENTS                                              uint32  = 0x1
	DEBUG_STACK_FUNCTION_INFO                                          uint32  = 0x2
	DEBUG_STACK_SOURCE_LINE                                            uint32  = 0x4
	DEBUG_STACK_FRAME_ADDRESSES                                        uint32  = 0x8
	DEBUG_STACK_COLUMN_NAMES                                           uint32  = 0x10
	DEBUG_STACK_NONVOLATILE_REGISTERS                                  uint32  = 0x20
	DEBUG_STACK_FRAME_NUMBERS                                          uint32  = 0x40
	DEBUG_STACK_PARAMETERS                                             uint32  = 0x80
	DEBUG_STACK_FRAME_ADDRESSES_RA_ONLY                                uint32  = 0x100
	DEBUG_STACK_FRAME_MEMORY_USAGE                                     uint32  = 0x200
	DEBUG_STACK_PARAMETERS_NEWLINE                                     uint32  = 0x400
	DEBUG_STACK_DML                                                    uint32  = 0x800
	DEBUG_STACK_FRAME_OFFSETS                                          uint32  = 0x1000
	DEBUG_STACK_PROVIDER                                               uint32  = 0x2000
	DEBUG_STACK_FRAME_ARCH                                             uint32  = 0x4000
	DEBUG_CLASS_UNINITIALIZED                                          uint32  = 0x0
	DEBUG_CLASS_KERNEL                                                 uint32  = 0x1
	DEBUG_CLASS_USER_WINDOWS                                           uint32  = 0x2
	DEBUG_CLASS_IMAGE_FILE                                             uint32  = 0x3
	DEBUG_DUMP_SMALL                                                   uint32  = 0x400
	DEBUG_DUMP_DEFAULT                                                 uint32  = 0x401
	DEBUG_DUMP_FULL                                                    uint32  = 0x402
	DEBUG_DUMP_IMAGE_FILE                                              uint32  = 0x403
	DEBUG_DUMP_TRACE_LOG                                               uint32  = 0x404
	DEBUG_DUMP_WINDOWS_CE                                              uint32  = 0x405
	DEBUG_DUMP_ACTIVE                                                  uint32  = 0x406
	DEBUG_KERNEL_CONNECTION                                            uint32  = 0x0
	DEBUG_KERNEL_LOCAL                                                 uint32  = 0x1
	DEBUG_KERNEL_EXDI_DRIVER                                           uint32  = 0x2
	DEBUG_KERNEL_IDNA                                                  uint32  = 0x3
	DEBUG_KERNEL_INSTALL_DRIVER                                        uint32  = 0x4
	DEBUG_KERNEL_REPT                                                  uint32  = 0x5
	DEBUG_KERNEL_SMALL_DUMP                                            uint32  = 0x400
	DEBUG_KERNEL_DUMP                                                  uint32  = 0x401
	DEBUG_KERNEL_ACTIVE_DUMP                                           uint32  = 0x406
	DEBUG_KERNEL_FULL_DUMP                                             uint32  = 0x402
	DEBUG_KERNEL_TRACE_LOG                                             uint32  = 0x404
	DEBUG_USER_WINDOWS_PROCESS                                         uint32  = 0x0
	DEBUG_USER_WINDOWS_PROCESS_SERVER                                  uint32  = 0x1
	DEBUG_USER_WINDOWS_IDNA                                            uint32  = 0x2
	DEBUG_USER_WINDOWS_REPT                                            uint32  = 0x3
	DEBUG_USER_WINDOWS_SMALL_DUMP                                      uint32  = 0x400
	DEBUG_USER_WINDOWS_DUMP                                            uint32  = 0x401
	DEBUG_USER_WINDOWS_DUMP_WINDOWS_CE                                 uint32  = 0x405
	DEBUG_EXTENSION_AT_ENGINE                                          uint32  = 0x0
	DEBUG_EXECUTE_DEFAULT                                              uint32  = 0x0
	DEBUG_EXECUTE_ECHO                                                 uint32  = 0x1
	DEBUG_EXECUTE_NOT_LOGGED                                           uint32  = 0x2
	DEBUG_EXECUTE_NO_REPEAT                                            uint32  = 0x4
	DEBUG_EXECUTE_USER_TYPED                                           uint32  = 0x8
	DEBUG_EXECUTE_USER_CLICKED                                         uint32  = 0x10
	DEBUG_EXECUTE_EXTENSION                                            uint32  = 0x20
	DEBUG_EXECUTE_INTERNAL                                             uint32  = 0x40
	DEBUG_EXECUTE_SCRIPT                                               uint32  = 0x80
	DEBUG_EXECUTE_TOOLBAR                                              uint32  = 0x100
	DEBUG_EXECUTE_MENU                                                 uint32  = 0x200
	DEBUG_EXECUTE_HOTKEY                                               uint32  = 0x400
	DEBUG_EXECUTE_EVENT                                                uint32  = 0x800
	DEBUG_FILTER_CREATE_THREAD                                         uint32  = 0x0
	DEBUG_FILTER_EXIT_THREAD                                           uint32  = 0x1
	DEBUG_FILTER_CREATE_PROCESS                                        uint32  = 0x2
	DEBUG_FILTER_EXIT_PROCESS                                          uint32  = 0x3
	DEBUG_FILTER_LOAD_MODULE                                           uint32  = 0x4
	DEBUG_FILTER_UNLOAD_MODULE                                         uint32  = 0x5
	DEBUG_FILTER_SYSTEM_ERROR                                          uint32  = 0x6
	DEBUG_FILTER_INITIAL_BREAKPOINT                                    uint32  = 0x7
	DEBUG_FILTER_INITIAL_MODULE_LOAD                                   uint32  = 0x8
	DEBUG_FILTER_DEBUGGEE_OUTPUT                                       uint32  = 0x9
	DEBUG_FILTER_BREAK                                                 uint32  = 0x0
	DEBUG_FILTER_SECOND_CHANCE_BREAK                                   uint32  = 0x1
	DEBUG_FILTER_OUTPUT                                                uint32  = 0x2
	DEBUG_FILTER_IGNORE                                                uint32  = 0x3
	DEBUG_FILTER_REMOVE                                                uint32  = 0x4
	DEBUG_FILTER_GO_HANDLED                                            uint32  = 0x0
	DEBUG_FILTER_GO_NOT_HANDLED                                        uint32  = 0x1
	DEBUG_WAIT_DEFAULT                                                 uint32  = 0x0
	DEBUG_VALUE_INVALID                                                uint32  = 0x0
	DEBUG_VALUE_INT8                                                   uint32  = 0x1
	DEBUG_VALUE_INT16                                                  uint32  = 0x2
	DEBUG_VALUE_INT32                                                  uint32  = 0x3
	DEBUG_VALUE_INT64                                                  uint32  = 0x4
	DEBUG_VALUE_FLOAT32                                                uint32  = 0x5
	DEBUG_VALUE_FLOAT64                                                uint32  = 0x6
	DEBUG_VALUE_FLOAT80                                                uint32  = 0x7
	DEBUG_VALUE_FLOAT82                                                uint32  = 0x8
	DEBUG_VALUE_FLOAT128                                               uint32  = 0x9
	DEBUG_VALUE_VECTOR64                                               uint32  = 0xa
	DEBUG_VALUE_VECTOR128                                              uint32  = 0xb
	DEBUG_VALUE_TYPES                                                  uint32  = 0xc
	DEBUG_OUT_TEXT_REPL_DEFAULT                                        uint32  = 0x0
	DEBUG_ASMOPT_DEFAULT                                               uint32  = 0x0
	DEBUG_ASMOPT_VERBOSE                                               uint32  = 0x1
	DEBUG_ASMOPT_NO_CODE_BYTES                                         uint32  = 0x2
	DEBUG_ASMOPT_IGNORE_OUTPUT_WIDTH                                   uint32  = 0x4
	DEBUG_ASMOPT_SOURCE_LINE_NUMBER                                    uint32  = 0x8
	DEBUG_EXPR_MASM                                                    uint32  = 0x0
	DEBUG_EXPR_CPLUSPLUS                                               uint32  = 0x1
	DEBUG_EINDEX_NAME                                                  uint32  = 0x0
	DEBUG_EINDEX_FROM_START                                            uint32  = 0x0
	DEBUG_EINDEX_FROM_END                                              uint32  = 0x1
	DEBUG_EINDEX_FROM_CURRENT                                          uint32  = 0x2
	DEBUG_LOG_DEFAULT                                                  uint32  = 0x0
	DEBUG_LOG_APPEND                                                   uint32  = 0x1
	DEBUG_LOG_UNICODE                                                  uint32  = 0x2
	DEBUG_LOG_DML                                                      uint32  = 0x4
	DEBUG_SYSVERSTR_SERVICE_PACK                                       uint32  = 0x0
	DEBUG_SYSVERSTR_BUILD                                              uint32  = 0x1
	DEBUG_MANAGED_DISABLED                                             uint32  = 0x0
	DEBUG_MANAGED_ALLOWED                                              uint32  = 0x1
	DEBUG_MANAGED_DLL_LOADED                                           uint32  = 0x2
	DEBUG_MANSTR_NONE                                                  uint32  = 0x0
	DEBUG_MANSTR_LOADED_SUPPORT_DLL                                    uint32  = 0x1
	DEBUG_MANSTR_LOAD_STATUS                                           uint32  = 0x2
	DEBUG_MANRESET_DEFAULT                                             uint32  = 0x0
	DEBUG_MANRESET_LOAD_DLL                                            uint32  = 0x1
	DEBUG_EXEC_FLAGS_NONBLOCK                                          uint32  = 0x1
	DEBUG_DATA_SPACE_VIRTUAL                                           uint32  = 0x0
	DEBUG_DATA_SPACE_PHYSICAL                                          uint32  = 0x1
	DEBUG_DATA_SPACE_CONTROL                                           uint32  = 0x2
	DEBUG_DATA_SPACE_IO                                                uint32  = 0x3
	DEBUG_DATA_SPACE_MSR                                               uint32  = 0x4
	DEBUG_DATA_SPACE_BUS_DATA                                          uint32  = 0x5
	DEBUG_DATA_SPACE_DEBUGGER_DATA                                     uint32  = 0x6
	DEBUG_DATA_SPACE_COUNT                                             uint32  = 0x7
	DEBUG_DATA_KernBase                                                uint32  = 0x18
	DEBUG_DATA_BreakpointWithStatusAddr                                uint32  = 0x20
	DEBUG_DATA_SavedContextAddr                                        uint32  = 0x28
	DEBUG_DATA_KiCallUserModeAddr                                      uint32  = 0x38
	DEBUG_DATA_KeUserCallbackDispatcherAddr                            uint32  = 0x40
	DEBUG_DATA_PsLoadedModuleListAddr                                  uint32  = 0x48
	DEBUG_DATA_PsActiveProcessHeadAddr                                 uint32  = 0x50
	DEBUG_DATA_PspCidTableAddr                                         uint32  = 0x58
	DEBUG_DATA_ExpSystemResourcesListAddr                              uint32  = 0x60
	DEBUG_DATA_ExpPagedPoolDescriptorAddr                              uint32  = 0x68
	DEBUG_DATA_ExpNumberOfPagedPoolsAddr                               uint32  = 0x70
	DEBUG_DATA_KeTimeIncrementAddr                                     uint32  = 0x78
	DEBUG_DATA_KeBugCheckCallbackListHeadAddr                          uint32  = 0x80
	DEBUG_DATA_KiBugcheckDataAddr                                      uint32  = 0x88
	DEBUG_DATA_IopErrorLogListHeadAddr                                 uint32  = 0x90
	DEBUG_DATA_ObpRootDirectoryObjectAddr                              uint32  = 0x98
	DEBUG_DATA_ObpTypeObjectTypeAddr                                   uint32  = 0xa0
	DEBUG_DATA_MmSystemCacheStartAddr                                  uint32  = 0xa8
	DEBUG_DATA_MmSystemCacheEndAddr                                    uint32  = 0xb0
	DEBUG_DATA_MmSystemCacheWsAddr                                     uint32  = 0xb8
	DEBUG_DATA_MmPfnDatabaseAddr                                       uint32  = 0xc0
	DEBUG_DATA_MmSystemPtesStartAddr                                   uint32  = 0xc8
	DEBUG_DATA_MmSystemPtesEndAddr                                     uint32  = 0xd0
	DEBUG_DATA_MmSubsectionBaseAddr                                    uint32  = 0xd8
	DEBUG_DATA_MmNumberOfPagingFilesAddr                               uint32  = 0xe0
	DEBUG_DATA_MmLowestPhysicalPageAddr                                uint32  = 0xe8
	DEBUG_DATA_MmHighestPhysicalPageAddr                               uint32  = 0xf0
	DEBUG_DATA_MmNumberOfPhysicalPagesAddr                             uint32  = 0xf8
	DEBUG_DATA_MmMaximumNonPagedPoolInBytesAddr                        uint32  = 0x100
	DEBUG_DATA_MmNonPagedSystemStartAddr                               uint32  = 0x108
	DEBUG_DATA_MmNonPagedPoolStartAddr                                 uint32  = 0x110
	DEBUG_DATA_MmNonPagedPoolEndAddr                                   uint32  = 0x118
	DEBUG_DATA_MmPagedPoolStartAddr                                    uint32  = 0x120
	DEBUG_DATA_MmPagedPoolEndAddr                                      uint32  = 0x128
	DEBUG_DATA_MmPagedPoolInformationAddr                              uint32  = 0x130
	DEBUG_DATA_MmPageSize                                              uint32  = 0x138
	DEBUG_DATA_MmSizeOfPagedPoolInBytesAddr                            uint32  = 0x140
	DEBUG_DATA_MmTotalCommitLimitAddr                                  uint32  = 0x148
	DEBUG_DATA_MmTotalCommittedPagesAddr                               uint32  = 0x150
	DEBUG_DATA_MmSharedCommitAddr                                      uint32  = 0x158
	DEBUG_DATA_MmDriverCommitAddr                                      uint32  = 0x160
	DEBUG_DATA_MmProcessCommitAddr                                     uint32  = 0x168
	DEBUG_DATA_MmPagedPoolCommitAddr                                   uint32  = 0x170
	DEBUG_DATA_MmExtendedCommitAddr                                    uint32  = 0x178
	DEBUG_DATA_MmZeroedPageListHeadAddr                                uint32  = 0x180
	DEBUG_DATA_MmFreePageListHeadAddr                                  uint32  = 0x188
	DEBUG_DATA_MmStandbyPageListHeadAddr                               uint32  = 0x190
	DEBUG_DATA_MmModifiedPageListHeadAddr                              uint32  = 0x198
	DEBUG_DATA_MmModifiedNoWritePageListHeadAddr                       uint32  = 0x1a0
	DEBUG_DATA_MmAvailablePagesAddr                                    uint32  = 0x1a8
	DEBUG_DATA_MmResidentAvailablePagesAddr                            uint32  = 0x1b0
	DEBUG_DATA_PoolTrackTableAddr                                      uint32  = 0x1b8
	DEBUG_DATA_NonPagedPoolDescriptorAddr                              uint32  = 0x1c0
	DEBUG_DATA_MmHighestUserAddressAddr                                uint32  = 0x1c8
	DEBUG_DATA_MmSystemRangeStartAddr                                  uint32  = 0x1d0
	DEBUG_DATA_MmUserProbeAddressAddr                                  uint32  = 0x1d8
	DEBUG_DATA_KdPrintCircularBufferAddr                               uint32  = 0x1e0
	DEBUG_DATA_KdPrintCircularBufferEndAddr                            uint32  = 0x1e8
	DEBUG_DATA_KdPrintWritePointerAddr                                 uint32  = 0x1f0
	DEBUG_DATA_KdPrintRolloverCountAddr                                uint32  = 0x1f8
	DEBUG_DATA_MmLoadedUserImageListAddr                               uint32  = 0x200
	DEBUG_DATA_NtBuildLabAddr                                          uint32  = 0x208
	DEBUG_DATA_KiNormalSystemCall                                      uint32  = 0x210
	DEBUG_DATA_KiProcessorBlockAddr                                    uint32  = 0x218
	DEBUG_DATA_MmUnloadedDriversAddr                                   uint32  = 0x220
	DEBUG_DATA_MmLastUnloadedDriverAddr                                uint32  = 0x228
	DEBUG_DATA_MmTriageActionTakenAddr                                 uint32  = 0x230
	DEBUG_DATA_MmSpecialPoolTagAddr                                    uint32  = 0x238
	DEBUG_DATA_KernelVerifierAddr                                      uint32  = 0x240
	DEBUG_DATA_MmVerifierDataAddr                                      uint32  = 0x248
	DEBUG_DATA_MmAllocatedNonPagedPoolAddr                             uint32  = 0x250
	DEBUG_DATA_MmPeakCommitmentAddr                                    uint32  = 0x258
	DEBUG_DATA_MmTotalCommitLimitMaximumAddr                           uint32  = 0x260
	DEBUG_DATA_CmNtCSDVersionAddr                                      uint32  = 0x268
	DEBUG_DATA_MmPhysicalMemoryBlockAddr                               uint32  = 0x270
	DEBUG_DATA_MmSessionBase                                           uint32  = 0x278
	DEBUG_DATA_MmSessionSize                                           uint32  = 0x280
	DEBUG_DATA_MmSystemParentTablePage                                 uint32  = 0x288
	DEBUG_DATA_MmVirtualTranslationBase                                uint32  = 0x290
	DEBUG_DATA_OffsetKThreadNextProcessor                              uint32  = 0x298
	DEBUG_DATA_OffsetKThreadTeb                                        uint32  = 0x29a
	DEBUG_DATA_OffsetKThreadKernelStack                                uint32  = 0x29c
	DEBUG_DATA_OffsetKThreadInitialStack                               uint32  = 0x29e
	DEBUG_DATA_OffsetKThreadApcProcess                                 uint32  = 0x2a0
	DEBUG_DATA_OffsetKThreadState                                      uint32  = 0x2a2
	DEBUG_DATA_OffsetKThreadBStore                                     uint32  = 0x2a4
	DEBUG_DATA_OffsetKThreadBStoreLimit                                uint32  = 0x2a6
	DEBUG_DATA_SizeEProcess                                            uint32  = 0x2a8
	DEBUG_DATA_OffsetEprocessPeb                                       uint32  = 0x2aa
	DEBUG_DATA_OffsetEprocessParentCID                                 uint32  = 0x2ac
	DEBUG_DATA_OffsetEprocessDirectoryTableBase                        uint32  = 0x2ae
	DEBUG_DATA_SizePrcb                                                uint32  = 0x2b0
	DEBUG_DATA_OffsetPrcbDpcRoutine                                    uint32  = 0x2b2
	DEBUG_DATA_OffsetPrcbCurrentThread                                 uint32  = 0x2b4
	DEBUG_DATA_OffsetPrcbMhz                                           uint32  = 0x2b6
	DEBUG_DATA_OffsetPrcbCpuType                                       uint32  = 0x2b8
	DEBUG_DATA_OffsetPrcbVendorString                                  uint32  = 0x2ba
	DEBUG_DATA_OffsetPrcbProcessorState                                uint32  = 0x2bc
	DEBUG_DATA_OffsetPrcbNumber                                        uint32  = 0x2be
	DEBUG_DATA_SizeEThread                                             uint32  = 0x2c0
	DEBUG_DATA_KdPrintCircularBufferPtrAddr                            uint32  = 0x2c8
	DEBUG_DATA_KdPrintBufferSizeAddr                                   uint32  = 0x2d0
	DEBUG_DATA_MmBadPagesDetected                                      uint32  = 0x320
	DEBUG_DATA_EtwpDebuggerData                                        uint32  = 0x330
	DEBUG_DATA_PteBase                                                 uint32  = 0x360
	DEBUG_DATA_PaeEnabled                                              uint32  = 0x186a0
	DEBUG_DATA_SharedUserData                                          uint32  = 0x186a8
	DEBUG_DATA_ProductType                                             uint32  = 0x186b0
	DEBUG_DATA_SuiteMask                                               uint32  = 0x186b8
	DEBUG_DATA_DumpWriterStatus                                        uint32  = 0x186c0
	DEBUG_DATA_DumpFormatVersion                                       uint32  = 0x186c8
	DEBUG_DATA_DumpWriterVersion                                       uint32  = 0x186d0
	DEBUG_DATA_DumpPowerState                                          uint32  = 0x186d8
	DEBUG_DATA_DumpMmStorage                                           uint32  = 0x186e0
	DEBUG_DATA_DumpAttributes                                          uint32  = 0x186e8
	DEBUG_DATA_KPCR_OFFSET                                             uint32  = 0x0
	DEBUG_DATA_KPRCB_OFFSET                                            uint32  = 0x1
	DEBUG_DATA_KTHREAD_OFFSET                                          uint32  = 0x2
	DEBUG_DATA_BASE_TRANSLATION_VIRTUAL_OFFSET                         uint32  = 0x3
	DEBUG_DATA_PROCESSOR_IDENTIFICATION                                uint32  = 0x4
	DEBUG_DATA_PROCESSOR_SPEED                                         uint32  = 0x5
	DEBUG_HANDLE_DATA_TYPE_BASIC                                       uint32  = 0x0
	DEBUG_HANDLE_DATA_TYPE_TYPE_NAME                                   uint32  = 0x1
	DEBUG_HANDLE_DATA_TYPE_OBJECT_NAME                                 uint32  = 0x2
	DEBUG_HANDLE_DATA_TYPE_HANDLE_COUNT                                uint32  = 0x3
	DEBUG_HANDLE_DATA_TYPE_TYPE_NAME_WIDE                              uint32  = 0x4
	DEBUG_HANDLE_DATA_TYPE_OBJECT_NAME_WIDE                            uint32  = 0x5
	DEBUG_HANDLE_DATA_TYPE_MINI_THREAD_1                               uint32  = 0x6
	DEBUG_HANDLE_DATA_TYPE_MINI_MUTANT_1                               uint32  = 0x7
	DEBUG_HANDLE_DATA_TYPE_MINI_MUTANT_2                               uint32  = 0x8
	DEBUG_HANDLE_DATA_TYPE_PER_HANDLE_OPERATIONS                       uint32  = 0x9
	DEBUG_HANDLE_DATA_TYPE_ALL_HANDLE_OPERATIONS                       uint32  = 0xa
	DEBUG_HANDLE_DATA_TYPE_MINI_PROCESS_1                              uint32  = 0xb
	DEBUG_HANDLE_DATA_TYPE_MINI_PROCESS_2                              uint32  = 0xc
	DEBUG_HANDLE_DATA_TYPE_MINI_EVENT_1                                uint32  = 0xd
	DEBUG_HANDLE_DATA_TYPE_MINI_SECTION_1                              uint32  = 0xe
	DEBUG_HANDLE_DATA_TYPE_MINI_SEMAPHORE_1                            uint32  = 0xf
	DEBUG_OFFSINFO_VIRTUAL_SOURCE                                      uint32  = 0x1
	DEBUG_VSOURCE_INVALID                                              uint32  = 0x0
	DEBUG_VSOURCE_DEBUGGEE                                             uint32  = 0x1
	DEBUG_VSOURCE_MAPPED_IMAGE                                         uint32  = 0x2
	DEBUG_VSOURCE_DUMP_WITHOUT_MEMINFO                                 uint32  = 0x3
	DEBUG_VSEARCH_DEFAULT                                              uint32  = 0x0
	DEBUG_VSEARCH_WRITABLE_ONLY                                        uint32  = 0x1
	DEBUG_PHYSICAL_DEFAULT                                             uint32  = 0x0
	DEBUG_PHYSICAL_CACHED                                              uint32  = 0x1
	DEBUG_PHYSICAL_UNCACHED                                            uint32  = 0x2
	DEBUG_PHYSICAL_WRITE_COMBINED                                      uint32  = 0x3
	DEBUG_EVENT_BREAKPOINT                                             uint32  = 0x1
	DEBUG_EVENT_EXCEPTION                                              uint32  = 0x2
	DEBUG_EVENT_CREATE_THREAD                                          uint32  = 0x4
	DEBUG_EVENT_EXIT_THREAD                                            uint32  = 0x8
	DEBUG_EVENT_CREATE_PROCESS                                         uint32  = 0x10
	DEBUG_EVENT_EXIT_PROCESS                                           uint32  = 0x20
	DEBUG_EVENT_LOAD_MODULE                                            uint32  = 0x40
	DEBUG_EVENT_UNLOAD_MODULE                                          uint32  = 0x80
	DEBUG_EVENT_SYSTEM_ERROR                                           uint32  = 0x100
	DEBUG_EVENT_SESSION_STATUS                                         uint32  = 0x200
	DEBUG_EVENT_CHANGE_DEBUGGEE_STATE                                  uint32  = 0x400
	DEBUG_EVENT_CHANGE_ENGINE_STATE                                    uint32  = 0x800
	DEBUG_EVENT_CHANGE_SYMBOL_STATE                                    uint32  = 0x1000
	DEBUG_EVENT_SERVICE_EXCEPTION                                      uint32  = 0x2000
	DEBUG_SESSION_ACTIVE                                               uint32  = 0x0
	DEBUG_SESSION_END_SESSION_ACTIVE_TERMINATE                         uint32  = 0x1
	DEBUG_SESSION_END_SESSION_ACTIVE_DETACH                            uint32  = 0x2
	DEBUG_SESSION_END_SESSION_PASSIVE                                  uint32  = 0x3
	DEBUG_SESSION_END                                                  uint32  = 0x4
	DEBUG_SESSION_REBOOT                                               uint32  = 0x5
	DEBUG_SESSION_HIBERNATE                                            uint32  = 0x6
	DEBUG_SESSION_FAILURE                                              uint32  = 0x7
	DEBUG_CDS_ALL                                                      uint32  = 0xffffffff
	DEBUG_CDS_REGISTERS                                                uint32  = 0x1
	DEBUG_CDS_DATA                                                     uint32  = 0x2
	DEBUG_CDS_REFRESH                                                  uint32  = 0x4
	DEBUG_CDS_REFRESH_EVALUATE                                         uint32  = 0x1
	DEBUG_CDS_REFRESH_EXECUTE                                          uint32  = 0x2
	DEBUG_CDS_REFRESH_EXECUTECOMMANDFILE                               uint32  = 0x3
	DEBUG_CDS_REFRESH_ADDBREAKPOINT                                    uint32  = 0x4
	DEBUG_CDS_REFRESH_REMOVEBREAKPOINT                                 uint32  = 0x5
	DEBUG_CDS_REFRESH_WRITEVIRTUAL                                     uint32  = 0x6
	DEBUG_CDS_REFRESH_WRITEVIRTUALUNCACHED                             uint32  = 0x7
	DEBUG_CDS_REFRESH_WRITEPHYSICAL                                    uint32  = 0x8
	DEBUG_CDS_REFRESH_WRITEPHYSICAL2                                   uint32  = 0x9
	DEBUG_CDS_REFRESH_SETVALUE                                         uint32  = 0xa
	DEBUG_CDS_REFRESH_SETVALUE2                                        uint32  = 0xb
	DEBUG_CDS_REFRESH_SETSCOPE                                         uint32  = 0xc
	DEBUG_CDS_REFRESH_SETSCOPEFRAMEBYINDEX                             uint32  = 0xd
	DEBUG_CDS_REFRESH_SETSCOPEFROMJITDEBUGINFO                         uint32  = 0xe
	DEBUG_CDS_REFRESH_SETSCOPEFROMSTOREDEVENT                          uint32  = 0xf
	DEBUG_CDS_REFRESH_INLINESTEP                                       uint32  = 0x10
	DEBUG_CDS_REFRESH_INLINESTEP_PSEUDO                                uint32  = 0x11
	DEBUG_CES_ALL                                                      uint32  = 0xffffffff
	DEBUG_CES_CURRENT_THREAD                                           uint32  = 0x1
	DEBUG_CES_EFFECTIVE_PROCESSOR                                      uint32  = 0x2
	DEBUG_CES_BREAKPOINTS                                              uint32  = 0x4
	DEBUG_CES_CODE_LEVEL                                               uint32  = 0x8
	DEBUG_CES_EXECUTION_STATUS                                         uint32  = 0x10
	DEBUG_CES_ENGINE_OPTIONS                                           uint32  = 0x20
	DEBUG_CES_LOG_FILE                                                 uint32  = 0x40
	DEBUG_CES_RADIX                                                    uint32  = 0x80
	DEBUG_CES_EVENT_FILTERS                                            uint32  = 0x100
	DEBUG_CES_PROCESS_OPTIONS                                          uint32  = 0x200
	DEBUG_CES_EXTENSIONS                                               uint32  = 0x400
	DEBUG_CES_SYSTEMS                                                  uint32  = 0x800
	DEBUG_CES_ASSEMBLY_OPTIONS                                         uint32  = 0x1000
	DEBUG_CES_EXPRESSION_SYNTAX                                        uint32  = 0x2000
	DEBUG_CES_TEXT_REPLACEMENTS                                        uint32  = 0x4000
	DEBUG_CSS_ALL                                                      uint32  = 0xffffffff
	DEBUG_CSS_LOADS                                                    uint32  = 0x1
	DEBUG_CSS_UNLOADS                                                  uint32  = 0x2
	DEBUG_CSS_SCOPE                                                    uint32  = 0x4
	DEBUG_CSS_PATHS                                                    uint32  = 0x8
	DEBUG_CSS_SYMBOL_OPTIONS                                           uint32  = 0x10
	DEBUG_CSS_TYPE_OPTIONS                                             uint32  = 0x20
	DEBUG_CSS_COLLAPSE_CHILDREN                                        uint32  = 0x40
	DEBUG_OUTCBI_EXPLICIT_FLUSH                                        uint32  = 0x1
	DEBUG_OUTCBI_TEXT                                                  uint32  = 0x2
	DEBUG_OUTCBI_DML                                                   uint32  = 0x4
	DEBUG_OUTCBI_ANY_FORMAT                                            uint32  = 0x6
	DEBUG_OUTCB_TEXT                                                   uint32  = 0x0
	DEBUG_OUTCB_DML                                                    uint32  = 0x1
	DEBUG_OUTCB_EXPLICIT_FLUSH                                         uint32  = 0x2
	DEBUG_OUTCBF_COMBINED_EXPLICIT_FLUSH                               uint32  = 0x1
	DEBUG_OUTCBF_DML_HAS_TAGS                                          uint32  = 0x2
	DEBUG_OUTCBF_DML_HAS_SPECIAL_CHARACTERS                            uint32  = 0x4
	DEBUG_REGISTERS_DEFAULT                                            uint32  = 0x0
	DEBUG_REGISTERS_INT32                                              uint32  = 0x1
	DEBUG_REGISTERS_INT64                                              uint32  = 0x2
	DEBUG_REGISTERS_FLOAT                                              uint32  = 0x4
	DEBUG_REGISTERS_ALL                                                uint32  = 0x7
	DEBUG_REGISTER_SUB_REGISTER                                        uint32  = 0x1
	DEBUG_REGSRC_DEBUGGEE                                              uint32  = 0x0
	DEBUG_REGSRC_EXPLICIT                                              uint32  = 0x1
	DEBUG_REGSRC_FRAME                                                 uint32  = 0x2
	DEBUG_OUTPUT_SYMBOLS_DEFAULT                                       uint32  = 0x0
	DEBUG_OUTPUT_SYMBOLS_NO_NAMES                                      uint32  = 0x1
	DEBUG_OUTPUT_SYMBOLS_NO_OFFSETS                                    uint32  = 0x2
	DEBUG_OUTPUT_SYMBOLS_NO_VALUES                                     uint32  = 0x4
	DEBUG_OUTPUT_SYMBOLS_NO_TYPES                                      uint32  = 0x10
	DEBUG_OUTPUT_NAME_END                                              string  = "**NAME**"
	DEBUG_OUTPUT_OFFSET_END                                            string  = "**OFF**"
	DEBUG_OUTPUT_VALUE_END                                             string  = "**VALUE**"
	DEBUG_OUTPUT_TYPE_END                                              string  = "**TYPE**"
	DEBUG_OUTPUT_NAME_END_WIDE                                         string  = "**NAME**"
	DEBUG_OUTPUT_OFFSET_END_WIDE                                       string  = "**OFF**"
	DEBUG_OUTPUT_VALUE_END_WIDE                                        string  = "**VALUE**"
	DEBUG_OUTPUT_TYPE_END_WIDE                                         string  = "**TYPE**"
	DEBUG_OUTPUT_NAME_END_T                                            string  = "**NAME**"
	DEBUG_OUTPUT_OFFSET_END_T                                          string  = "**OFF**"
	DEBUG_OUTPUT_VALUE_END_T                                           string  = "**VALUE**"
	DEBUG_OUTPUT_TYPE_END_T                                            string  = "**TYPE**"
	DEBUG_SYMBOL_EXPANSION_LEVEL_MASK                                  uint32  = 0xf
	DEBUG_SYMBOL_EXPANDED                                              uint32  = 0x10
	DEBUG_SYMBOL_READ_ONLY                                             uint32  = 0x20
	DEBUG_SYMBOL_IS_ARRAY                                              uint32  = 0x40
	DEBUG_SYMBOL_IS_FLOAT                                              uint32  = 0x80
	DEBUG_SYMBOL_IS_ARGUMENT                                           uint32  = 0x100
	DEBUG_SYMBOL_IS_LOCAL                                              uint32  = 0x200
	DEBUG_SYMENT_IS_CODE                                               uint32  = 0x1
	DEBUG_SYMENT_IS_DATA                                               uint32  = 0x2
	DEBUG_SYMENT_IS_PARAMETER                                          uint32  = 0x4
	DEBUG_SYMENT_IS_LOCAL                                              uint32  = 0x8
	DEBUG_SYMENT_IS_MANAGED                                            uint32  = 0x10
	DEBUG_SYMENT_IS_SYNTHETIC                                          uint32  = 0x20
	DEBUG_MODULE_LOADED                                                uint32  = 0x0
	DEBUG_MODULE_UNLOADED                                              uint32  = 0x1
	DEBUG_MODULE_USER_MODE                                             uint32  = 0x2
	DEBUG_MODULE_EXE_MODULE                                            uint32  = 0x4
	DEBUG_MODULE_EXPLICIT                                              uint32  = 0x8
	DEBUG_MODULE_SECONDARY                                             uint32  = 0x10
	DEBUG_MODULE_SYNTHETIC                                             uint32  = 0x20
	DEBUG_MODULE_SYM_BAD_CHECKSUM                                      uint32  = 0x10000
	DEBUG_SYMTYPE_NONE                                                 uint32  = 0x0
	DEBUG_SYMTYPE_COFF                                                 uint32  = 0x1
	DEBUG_SYMTYPE_CODEVIEW                                             uint32  = 0x2
	DEBUG_SYMTYPE_PDB                                                  uint32  = 0x3
	DEBUG_SYMTYPE_EXPORT                                               uint32  = 0x4
	DEBUG_SYMTYPE_DEFERRED                                             uint32  = 0x5
	DEBUG_SYMTYPE_SYM                                                  uint32  = 0x6
	DEBUG_SYMTYPE_DIA                                                  uint32  = 0x7
	DEBUG_SCOPE_GROUP_ARGUMENTS                                        uint32  = 0x1
	DEBUG_SCOPE_GROUP_LOCALS                                           uint32  = 0x2
	DEBUG_SCOPE_GROUP_ALL                                              uint32  = 0x3
	DEBUG_SCOPE_GROUP_BY_DATAMODEL                                     uint32  = 0x4
	DEBUG_OUTTYPE_DEFAULT                                              uint32  = 0x0
	DEBUG_OUTTYPE_NO_INDENT                                            uint32  = 0x1
	DEBUG_OUTTYPE_NO_OFFSET                                            uint32  = 0x2
	DEBUG_OUTTYPE_VERBOSE                                              uint32  = 0x4
	DEBUG_OUTTYPE_COMPACT_OUTPUT                                       uint32  = 0x8
	DEBUG_OUTTYPE_ADDRESS_OF_FIELD                                     uint32  = 0x10000
	DEBUG_OUTTYPE_ADDRESS_AT_END                                       uint32  = 0x20000
	DEBUG_OUTTYPE_BLOCK_RECURSE                                        uint32  = 0x200000
	DEBUG_FIND_SOURCE_DEFAULT                                          uint32  = 0x0
	DEBUG_FIND_SOURCE_FULL_PATH                                        uint32  = 0x1
	DEBUG_FIND_SOURCE_BEST_MATCH                                       uint32  = 0x2
	DEBUG_FIND_SOURCE_NO_SRCSRV                                        uint32  = 0x4
	DEBUG_FIND_SOURCE_TOKEN_LOOKUP                                     uint32  = 0x8
	DEBUG_FIND_SOURCE_WITH_CHECKSUM                                    uint32  = 0x10
	DEBUG_FIND_SOURCE_WITH_CHECKSUM_STRICT                             uint32  = 0x20
	MODULE_ORDERS_MASK                                                 uint32  = 0xf0000000
	MODULE_ORDERS_LOADTIME                                             uint32  = 0x10000000
	MODULE_ORDERS_MODULENAME                                           uint32  = 0x20000000
	DEBUG_MODNAME_IMAGE                                                uint32  = 0x0
	DEBUG_MODNAME_MODULE                                               uint32  = 0x1
	DEBUG_MODNAME_LOADED_IMAGE                                         uint32  = 0x2
	DEBUG_MODNAME_SYMBOL_FILE                                          uint32  = 0x3
	DEBUG_MODNAME_MAPPED_IMAGE                                         uint32  = 0x4
	DEBUG_TYPEOPTS_UNICODE_DISPLAY                                     uint32  = 0x1
	DEBUG_TYPEOPTS_LONGSTATUS_DISPLAY                                  uint32  = 0x2
	DEBUG_TYPEOPTS_FORCERADIX_OUTPUT                                   uint32  = 0x4
	DEBUG_TYPEOPTS_MATCH_MAXSIZE                                       uint32  = 0x8
	DEBUG_GETMOD_DEFAULT                                               uint32  = 0x0
	DEBUG_GETMOD_NO_LOADED_MODULES                                     uint32  = 0x1
	DEBUG_GETMOD_NO_UNLOADED_MODULES                                   uint32  = 0x2
	DEBUG_ADDSYNTHMOD_DEFAULT                                          uint32  = 0x0
	DEBUG_ADDSYNTHMOD_ZEROBASE                                         uint32  = 0x1
	DEBUG_ADDSYNTHSYM_DEFAULT                                          uint32  = 0x0
	DEBUG_OUTSYM_DEFAULT                                               uint32  = 0x0
	DEBUG_OUTSYM_FORCE_OFFSET                                          uint32  = 0x1
	DEBUG_OUTSYM_SOURCE_LINE                                           uint32  = 0x2
	DEBUG_OUTSYM_ALLOW_DISPLACEMENT                                    uint32  = 0x4
	DEBUG_GETFNENT_DEFAULT                                             uint32  = 0x0
	DEBUG_GETFNENT_RAW_ENTRY_ONLY                                      uint32  = 0x1
	DEBUG_SOURCE_IS_STATEMENT                                          uint32  = 0x1
	DEBUG_GSEL_DEFAULT                                                 uint32  = 0x0
	DEBUG_GSEL_NO_SYMBOL_LOADS                                         uint32  = 0x1
	DEBUG_GSEL_ALLOW_LOWER                                             uint32  = 0x2
	DEBUG_GSEL_ALLOW_HIGHER                                            uint32  = 0x4
	DEBUG_GSEL_NEAREST_ONLY                                            uint32  = 0x8
	DEBUG_GSEL_INLINE_CALLSITE                                         uint32  = 0x10
	DEBUG_FRAME_DEFAULT                                                uint32  = 0x0
	DEBUG_FRAME_IGNORE_INLINE                                          uint32  = 0x1
	DEBUG_COMMAND_EXCEPTION_ID                                         uint32  = 0xdbe00dbe
	DEBUG_CMDEX_INVALID                                                uint32  = 0x0
	DEBUG_CMDEX_ADD_EVENT_STRING                                       uint32  = 0x1
	DEBUG_CMDEX_RESET_EVENT_STRINGS                                    uint32  = 0x2
	DEBUG_EXTINIT_HAS_COMMAND_HELP                                     uint32  = 0x1
	DEBUG_NOTIFY_SESSION_ACTIVE                                        uint32  = 0x0
	DEBUG_NOTIFY_SESSION_INACTIVE                                      uint32  = 0x1
	DEBUG_NOTIFY_SESSION_ACCESSIBLE                                    uint32  = 0x2
	DEBUG_NOTIFY_SESSION_INACCESSIBLE                                  uint32  = 0x3
	DEBUG_KNOWN_STRUCT_GET_NAMES                                       uint32  = 0x1
	DEBUG_KNOWN_STRUCT_GET_SINGLE_LINE_OUTPUT                          uint32  = 0x2
	DEBUG_KNOWN_STRUCT_SUPPRESS_TYPE_NAME                              uint32  = 0x3
	DEBUG_EXT_QVALUE_DEFAULT                                           uint32  = 0x0
	DEBUG_EXT_PVALUE_DEFAULT                                           uint32  = 0x0
	DEBUG_EXT_PVTYPE_IS_VALUE                                          uint32  = 0x0
	DEBUG_EXT_PVTYPE_IS_POINTER                                        uint32  = 0x1
	CROSS_PLATFORM_MAXIMUM_PROCESSORS                                  uint32  = 0x800
	EXT_API_VERSION_NUMBER                                             uint32  = 0x5
	EXT_API_VERSION_NUMBER32                                           uint32  = 0x5
	EXT_API_VERSION_NUMBER64                                           uint32  = 0x6
	IG_KD_CONTEXT                                                      uint32  = 0x1
	IG_READ_CONTROL_SPACE                                              uint32  = 0x2
	IG_WRITE_CONTROL_SPACE                                             uint32  = 0x3
	IG_READ_IO_SPACE                                                   uint32  = 0x4
	IG_WRITE_IO_SPACE                                                  uint32  = 0x5
	IG_READ_PHYSICAL                                                   uint32  = 0x6
	IG_WRITE_PHYSICAL                                                  uint32  = 0x7
	IG_READ_IO_SPACE_EX                                                uint32  = 0x8
	IG_WRITE_IO_SPACE_EX                                               uint32  = 0x9
	IG_KSTACK_HELP                                                     uint32  = 0xa
	IG_SET_THREAD                                                      uint32  = 0xb
	IG_READ_MSR                                                        uint32  = 0xc
	IG_WRITE_MSR                                                       uint32  = 0xd
	IG_GET_DEBUGGER_DATA                                               uint32  = 0xe
	IG_GET_KERNEL_VERSION                                              uint32  = 0xf
	IG_RELOAD_SYMBOLS                                                  uint32  = 0x10
	IG_GET_SET_SYMPATH                                                 uint32  = 0x11
	IG_GET_EXCEPTION_RECORD                                            uint32  = 0x12
	IG_IS_PTR64                                                        uint32  = 0x13
	IG_GET_BUS_DATA                                                    uint32  = 0x14
	IG_SET_BUS_DATA                                                    uint32  = 0x15
	IG_DUMP_SYMBOL_INFO                                                uint32  = 0x16
	IG_LOWMEM_CHECK                                                    uint32  = 0x17
	IG_SEARCH_MEMORY                                                   uint32  = 0x18
	IG_GET_CURRENT_THREAD                                              uint32  = 0x19
	IG_GET_CURRENT_PROCESS                                             uint32  = 0x1a
	IG_GET_TYPE_SIZE                                                   uint32  = 0x1b
	IG_GET_CURRENT_PROCESS_HANDLE                                      uint32  = 0x1c
	IG_GET_INPUT_LINE                                                  uint32  = 0x1d
	IG_GET_EXPRESSION_EX                                               uint32  = 0x1e
	IG_TRANSLATE_VIRTUAL_TO_PHYSICAL                                   uint32  = 0x1f
	IG_GET_CACHE_SIZE                                                  uint32  = 0x20
	IG_READ_PHYSICAL_WITH_FLAGS                                        uint32  = 0x21
	IG_WRITE_PHYSICAL_WITH_FLAGS                                       uint32  = 0x22
	IG_POINTER_SEARCH_PHYSICAL                                         uint32  = 0x23
	IG_OBSOLETE_PLACEHOLDER_36                                         uint32  = 0x24
	IG_GET_THREAD_OS_INFO                                              uint32  = 0x25
	IG_GET_CLR_DATA_INTERFACE                                          uint32  = 0x26
	IG_MATCH_PATTERN_A                                                 uint32  = 0x27
	IG_FIND_FILE                                                       uint32  = 0x28
	IG_TYPED_DATA_OBSOLETE                                             uint32  = 0x29
	IG_QUERY_TARGET_INTERFACE                                          uint32  = 0x2a
	IG_TYPED_DATA                                                      uint32  = 0x2b
	IG_DISASSEMBLE_BUFFER                                              uint32  = 0x2c
	IG_GET_ANY_MODULE_IN_RANGE                                         uint32  = 0x2d
	IG_VIRTUAL_TO_PHYSICAL                                             uint32  = 0x2e
	IG_PHYSICAL_TO_VIRTUAL                                             uint32  = 0x2f
	IG_GET_CONTEXT_EX                                                  uint32  = 0x30
	IG_GET_TEB_ADDRESS                                                 uint32  = 0x80
	IG_GET_PEB_ADDRESS                                                 uint32  = 0x81
	PHYS_FLAG_DEFAULT                                                  uint32  = 0x0
	PHYS_FLAG_CACHED                                                   uint32  = 0x1
	PHYS_FLAG_UNCACHED                                                 uint32  = 0x2
	PHYS_FLAG_WRITE_COMBINED                                           uint32  = 0x3
	PTR_SEARCH_PHYS_ALL_HITS                                           uint32  = 0x1
	PTR_SEARCH_PHYS_PTE                                                uint32  = 0x2
	PTR_SEARCH_PHYS_RANGE_CHECK_ONLY                                   uint32  = 0x4
	PTR_SEARCH_PHYS_SIZE_SHIFT                                         uint32  = 0x3
	PTR_SEARCH_NO_SYMBOL_CHECK                                         uint32  = 0x80000000
	EXT_FIND_FILE_ALLOW_GIVEN_PATH                                     uint32  = 0x1
	DEBUG_TYPED_DATA_IS_IN_MEMORY                                      uint32  = 0x1
	DEBUG_TYPED_DATA_PHYSICAL_DEFAULT                                  uint32  = 0x2
	DEBUG_TYPED_DATA_PHYSICAL_CACHED                                   uint32  = 0x4
	DEBUG_TYPED_DATA_PHYSICAL_UNCACHED                                 uint32  = 0x6
	DEBUG_TYPED_DATA_PHYSICAL_WRITE_COMBINED                           uint32  = 0x8
	DEBUG_TYPED_DATA_PHYSICAL_MEMORY                                   uint32  = 0xe
	EXT_TDF_PHYSICAL_DEFAULT                                           uint32  = 0x2
	EXT_TDF_PHYSICAL_CACHED                                            uint32  = 0x4
	EXT_TDF_PHYSICAL_UNCACHED                                          uint32  = 0x6
	EXT_TDF_PHYSICAL_WRITE_COMBINED                                    uint32  = 0x8
	EXT_TDF_PHYSICAL_MEMORY                                            uint32  = 0xe
	WDBGEXTS_ADDRESS_DEFAULT                                           uint32  = 0x0
	WDBGEXTS_ADDRESS_SEG16                                             uint32  = 0x1
	WDBGEXTS_ADDRESS_SEG32                                             uint32  = 0x2
	WDBGEXTS_ADDRESS_RESERVED0                                         uint32  = 0x80000000
	DBGKD_VERS_FLAG_MP                                                 uint32  = 0x1
	DBGKD_VERS_FLAG_DATA                                               uint32  = 0x2
	DBGKD_VERS_FLAG_PTR64                                              uint32  = 0x4
	DBGKD_VERS_FLAG_NOMM                                               uint32  = 0x8
	DBGKD_VERS_FLAG_HSS                                                uint32  = 0x10
	DBGKD_VERS_FLAG_PARTITIONS                                         uint32  = 0x20
	DBGKD_VERS_FLAG_HAL_IN_NTOS                                        uint32  = 0x40
	KD_SECONDARY_VERSION_DEFAULT                                       uint32  = 0x0
	KD_SECONDARY_VERSION_AMD64_OBSOLETE_CONTEXT_1                      uint32  = 0x0
	KD_SECONDARY_VERSION_AMD64_OBSOLETE_CONTEXT_2                      uint32  = 0x1
	KD_SECONDARY_VERSION_AMD64_CONTEXT                                 uint32  = 0x2
	CURRENT_KD_SECONDARY_VERSION                                       uint32  = 0x2
	DBG_DUMP_NO_INDENT                                                 uint32  = 0x1
	DBG_DUMP_NO_OFFSET                                                 uint32  = 0x2
	DBG_DUMP_VERBOSE                                                   uint32  = 0x4
	DBG_DUMP_CALL_FOR_EACH                                             uint32  = 0x8
	DBG_DUMP_LIST                                                      uint32  = 0x20
	DBG_DUMP_NO_PRINT                                                  uint32  = 0x40
	DBG_DUMP_GET_SIZE_ONLY                                             uint32  = 0x80
	DBG_DUMP_COMPACT_OUT                                               uint32  = 0x2000
	DBG_DUMP_ARRAY                                                     uint32  = 0x8000
	DBG_DUMP_ADDRESS_OF_FIELD                                          uint32  = 0x10000
	DBG_DUMP_ADDRESS_AT_END                                            uint32  = 0x20000
	DBG_DUMP_COPY_TYPE_DATA                                            uint32  = 0x40000
	DBG_DUMP_READ_PHYSICAL                                             uint32  = 0x80000
	DBG_DUMP_FUNCTION_FORMAT                                           uint32  = 0x100000
	DBG_DUMP_BLOCK_RECURSE                                             uint32  = 0x200000
	DBG_DUMP_MATCH_SIZE                                                uint32  = 0x400000
	DBG_RETURN_TYPE                                                    uint32  = 0x0
	DBG_RETURN_SUBTYPES                                                uint32  = 0x0
	DBG_RETURN_TYPE_VALUES                                             uint32  = 0x0
	DBG_DUMP_FIELD_CALL_BEFORE_PRINT                                   uint32  = 0x1
	DBG_DUMP_FIELD_NO_CALLBACK_REQ                                     uint32  = 0x2
	DBG_DUMP_FIELD_RECUR_ON_THIS                                       uint32  = 0x4
	DBG_DUMP_FIELD_FULL_NAME                                           uint32  = 0x8
	DBG_DUMP_FIELD_ARRAY                                               uint32  = 0x10
	DBG_DUMP_FIELD_COPY_FIELD_DATA                                     uint32  = 0x20
	DBG_DUMP_FIELD_RETURN_ADDRESS                                      uint32  = 0x1000
	DBG_DUMP_FIELD_SIZE_IN_BITS                                        uint32  = 0x2000
	DBG_DUMP_FIELD_NO_PRINT                                            uint32  = 0x4000
	DBG_DUMP_FIELD_DEFAULT_STRING                                      uint32  = 0x10000
	DBG_DUMP_FIELD_WCHAR_STRING                                        uint32  = 0x20000
	DBG_DUMP_FIELD_MULTI_STRING                                        uint32  = 0x40000
	DBG_DUMP_FIELD_GUID_STRING                                         uint32  = 0x80000
	DBG_DUMP_FIELD_UTF32_STRING                                        uint32  = 0x100000
	MEMORY_READ_ERROR                                                  uint32  = 0x1
	SYMBOL_TYPE_INDEX_NOT_FOUND                                        uint32  = 0x2
	SYMBOL_TYPE_INFO_NOT_FOUND                                         uint32  = 0x3
	FIELDS_DID_NOT_MATCH                                               uint32  = 0x4
	NULL_SYM_DUMP_PARAM                                                uint32  = 0x5
	NULL_FIELD_NAME                                                    uint32  = 0x6
	INCORRECT_VERSION_INFO                                             uint32  = 0x7
	EXIT_ON_CONTROLC                                                   uint32  = 0x8
	CANNOT_ALLOCATE_MEMORY                                             uint32  = 0x9
	INSUFFICIENT_SPACE_TO_COPY                                         uint32  = 0xa
	ADDRESS_TYPE_INDEX_NOT_FOUND                                       uint32  = 0xb
	UNAVAILABLE_ERROR                                                  uint32  = 0xc
	SCRIPTITEM_ISVISIBLE                                               uint32  = 0x2
	SCRIPTITEM_ISSOURCE                                                uint32  = 0x4
	SCRIPTITEM_GLOBALMEMBERS                                           uint32  = 0x8
	SCRIPTITEM_ISPERSISTENT                                            uint32  = 0x40
	SCRIPTITEM_CODEONLY                                                uint32  = 0x200
	SCRIPTITEM_NOCODE                                                  uint32  = 0x400
	SCRIPTTYPELIB_ISCONTROL                                            uint32  = 0x10
	SCRIPTTYPELIB_ISPERSISTENT                                         uint32  = 0x40
	SCRIPTTEXT_DELAYEXECUTION                                          uint32  = 0x1
	SCRIPTTEXT_ISVISIBLE                                               uint32  = 0x2
	SCRIPTTEXT_ISEXPRESSION                                            uint32  = 0x20
	SCRIPTTEXT_ISPERSISTENT                                            uint32  = 0x40
	SCRIPTTEXT_HOSTMANAGESSOURCE                                       uint32  = 0x80
	SCRIPTTEXT_ISXDOMAIN                                               uint32  = 0x100
	SCRIPTTEXT_ISNONUSERCODE                                           uint32  = 0x200
	SCRIPTPROC_ISEXPRESSION                                            uint32  = 0x20
	SCRIPTPROC_HOSTMANAGESSOURCE                                       uint32  = 0x80
	SCRIPTPROC_IMPLICIT_THIS                                           uint32  = 0x100
	SCRIPTPROC_IMPLICIT_PARENTS                                        uint32  = 0x200
	SCRIPTPROC_ISXDOMAIN                                               uint32  = 0x400
	SCRIPTINFO_IUNKNOWN                                                uint32  = 0x1
	SCRIPTINFO_ITYPEINFO                                               uint32  = 0x2
	SCRIPTINTERRUPT_DEBUG                                              uint32  = 0x1
	SCRIPTINTERRUPT_RAISEEXCEPTION                                     uint32  = 0x2
	SCRIPTSTAT_STATEMENT_COUNT                                         uint32  = 0x1
	SCRIPTSTAT_INSTRUCTION_COUNT                                       uint32  = 0x2
	SCRIPTSTAT_INTSTRUCTION_TIME                                       uint32  = 0x3
	SCRIPTSTAT_TOTAL_TIME                                              uint32  = 0x4
	SCRIPT_ENCODE_SECTION                                              uint32  = 0x1
	SCRIPT_ENCODE_DEFAULT_LANGUAGE                                     uint32  = 0x1
	SCRIPT_ENCODE_NO_ASP_LANGUAGE                                      uint32  = 0x2
	SCRIPTPROP_NAME                                                    uint32  = 0x0
	SCRIPTPROP_MAJORVERSION                                            uint32  = 0x1
	SCRIPTPROP_MINORVERSION                                            uint32  = 0x2
	SCRIPTPROP_BUILDNUMBER                                             uint32  = 0x3
	SCRIPTPROP_DELAYEDEVENTSINKING                                     uint32  = 0x1000
	SCRIPTPROP_CATCHEXCEPTION                                          uint32  = 0x1001
	SCRIPTPROP_CONVERSIONLCID                                          uint32  = 0x1002
	SCRIPTPROP_HOSTSTACKREQUIRED                                       uint32  = 0x1003
	SCRIPTPROP_SCRIPTSAREFULLYTRUSTED                                  uint32  = 0x1004
	SCRIPTPROP_DEBUGGER                                                uint32  = 0x1100
	SCRIPTPROP_JITDEBUG                                                uint32  = 0x1101
	SCRIPTPROP_GCCONTROLSOFTCLOSE                                      uint32  = 0x2000
	SCRIPTPROP_INTEGERMODE                                             uint32  = 0x3000
	SCRIPTPROP_STRINGCOMPAREINSTANCE                                   uint32  = 0x3001
	SCRIPTPROP_INVOKEVERSIONING                                        uint32  = 0x4000
	SCRIPTPROP_HACK_FIBERSUPPORT                                       uint32  = 0x70000000
	SCRIPTPROP_HACK_TRIDENTEVENTSINK                                   uint32  = 0x70000001
	SCRIPTPROP_ABBREVIATE_GLOBALNAME_RESOLUTION                        uint32  = 0x70000002
	SCRIPTPROP_HOSTKEEPALIVE                                           uint32  = 0x70000004
	SCRIPT_E_RECORDED                                                  int32   = -2040119292
	SCRIPT_E_REPORTED                                                  int32   = -2147352319
	SCRIPT_E_PROPAGATE                                                 int32   = -2147352318
	MINIDUMP_VERSION                                                   uint32  = 0xa793
	MINIDUMP_MISC1_PROCESSOR_POWER_INFO                                uint32  = 0x4
	MINIDUMP_MISC3_PROCESS_INTEGRITY                                   uint32  = 0x10
	MINIDUMP_MISC3_PROCESS_EXECUTE_FLAGS                               uint32  = 0x20
	MINIDUMP_MISC3_TIMEZONE                                            uint32  = 0x40
	MINIDUMP_MISC3_PROTECTED_PROCESS                                   uint32  = 0x80
	MINIDUMP_MISC4_BUILDSTRING                                         uint32  = 0x100
	MINIDUMP_MISC5_PROCESS_COOKIE                                      uint32  = 0x200
	MINIDUMP_SYSMEMINFO1_FILECACHE_TRANSITIONREPURPOSECOUNT_FLAGS      uint32  = 0x1
	MINIDUMP_SYSMEMINFO1_BASICPERF                                     uint32  = 0x2
	MINIDUMP_SYSMEMINFO1_PERF_CCTOTALDIRTYPAGES_CCDIRTYPAGETHRESHOLD   uint32  = 0x4
	MINIDUMP_SYSMEMINFO1_PERF_RESIDENTAVAILABLEPAGES_SHAREDCOMMITPAGES uint32  = 0x8
	MINIDUMP_PROCESS_VM_COUNTERS                                       uint32  = 0x1
	MINIDUMP_PROCESS_VM_COUNTERS_VIRTUALSIZE                           uint32  = 0x2
	MINIDUMP_PROCESS_VM_COUNTERS_EX                                    uint32  = 0x4
	MINIDUMP_PROCESS_VM_COUNTERS_EX2                                   uint32  = 0x8
	MINIDUMP_PROCESS_VM_COUNTERS_JOB                                   uint32  = 0x10
	MAX_SYM_NAME                                                       uint32  = 0x7d0
	BIND_NO_BOUND_IMPORTS                                              uint32  = 0x1
	BIND_NO_UPDATE                                                     uint32  = 0x2
	BIND_ALL_IMAGES                                                    uint32  = 0x4
	BIND_CACHE_IMPORT_DLLS                                             uint32  = 0x8
	BIND_REPORT_64BIT_VA                                               uint32  = 0x10
	CHECKSUM_SUCCESS                                                   uint32  = 0x0
	CHECKSUM_OPEN_FAILURE                                              uint32  = 0x1
	CHECKSUM_MAP_FAILURE                                               uint32  = 0x2
	CHECKSUM_MAPVIEW_FAILURE                                           uint32  = 0x3
	CHECKSUM_UNICODE_FAILURE                                           uint32  = 0x4
	SPLITSYM_REMOVE_PRIVATE                                            uint32  = 0x1
	SPLITSYM_EXTRACT_ALL                                               uint32  = 0x2
	SPLITSYM_SYMBOLPATH_IS_SRC                                         uint32  = 0x4
	CERT_PE_IMAGE_DIGEST_DEBUG_INFO                                    uint32  = 0x1
	CERT_PE_IMAGE_DIGEST_RESOURCES                                     uint32  = 0x2
	CERT_PE_IMAGE_DIGEST_ALL_IMPORT_INFO                               uint32  = 0x4
	CERT_PE_IMAGE_DIGEST_NON_PE_INFO                                   uint32  = 0x8
	CERT_SECTION_TYPE_ANY                                              uint32  = 0xff
	ERROR_IMAGE_NOT_STRIPPED                                           uint32  = 0x8800
	ERROR_NO_DBG_POINTER                                               uint32  = 0x8801
	ERROR_NO_PDB_POINTER                                               uint32  = 0x8802
	UNDNAME_COMPLETE                                                   uint32  = 0x0
	UNDNAME_NO_LEADING_UNDERSCORES                                     uint32  = 0x1
	UNDNAME_NO_MS_KEYWORDS                                             uint32  = 0x2
	UNDNAME_NO_FUNCTION_RETURNS                                        uint32  = 0x4
	UNDNAME_NO_ALLOCATION_MODEL                                        uint32  = 0x8
	UNDNAME_NO_ALLOCATION_LANGUAGE                                     uint32  = 0x10
	UNDNAME_NO_MS_THISTYPE                                             uint32  = 0x20
	UNDNAME_NO_CV_THISTYPE                                             uint32  = 0x40
	UNDNAME_NO_THISTYPE                                                uint32  = 0x60
	UNDNAME_NO_ACCESS_SPECIFIERS                                       uint32  = 0x80
	UNDNAME_NO_THROW_SIGNATURES                                        uint32  = 0x100
	UNDNAME_NO_MEMBER_TYPE                                             uint32  = 0x200
	UNDNAME_NO_RETURN_UDT_MODEL                                        uint32  = 0x400
	UNDNAME_32_BIT_DECODE                                              uint32  = 0x800
	UNDNAME_NAME_ONLY                                                  uint32  = 0x1000
	UNDNAME_NO_ARGUMENTS                                               uint32  = 0x2000
	UNDNAME_NO_SPECIAL_SYMS                                            uint32  = 0x4000
	DBHHEADER_PDBGUID                                                  uint32  = 0x3
	INLINE_FRAME_CONTEXT_INIT                                          uint32  = 0x0
	INLINE_FRAME_CONTEXT_IGNORE                                        uint32  = 0xffffffff
	SYM_STKWALK_DEFAULT                                                uint32  = 0x0
	SYM_STKWALK_FORCE_FRAMEPTR                                         uint32  = 0x1
	SYM_STKWALK_ZEROEXTEND_PTRS                                        uint32  = 0x2
	API_VERSION_NUMBER                                                 uint32  = 0xc
	SYMFLAG_NULL                                                       uint32  = 0x80000
	SYMFLAG_FUNC_NO_RETURN                                             uint32  = 0x100000
	SYMFLAG_SYNTHETIC_ZEROBASE                                         uint32  = 0x200000
	SYMFLAG_PUBLIC_CODE                                                uint32  = 0x400000
	SYMFLAG_REGREL_ALIASINDIR                                          uint32  = 0x800000
	SYMFLAG_FIXUP_ARM64X                                               uint32  = 0x1000000
	SYMFLAG_GLOBAL                                                     uint32  = 0x2000000
	SYMFLAG_RESET                                                      uint32  = 0x80000000
	IMAGEHLP_MODULE_REGION_DLLBASE                                     uint32  = 0x1
	IMAGEHLP_MODULE_REGION_DLLRANGE                                    uint32  = 0x2
	IMAGEHLP_MODULE_REGION_ADDITIONAL                                  uint32  = 0x4
	IMAGEHLP_MODULE_REGION_JIT                                         uint32  = 0x8
	IMAGEHLP_MODULE_REGION_ALL                                         uint32  = 0xff
	CBA_DEFERRED_SYMBOL_LOAD_START                                     uint32  = 0x1
	CBA_DEFERRED_SYMBOL_LOAD_COMPLETE                                  uint32  = 0x2
	CBA_DEFERRED_SYMBOL_LOAD_FAILURE                                   uint32  = 0x3
	CBA_SYMBOLS_UNLOADED                                               uint32  = 0x4
	CBA_DUPLICATE_SYMBOL                                               uint32  = 0x5
	CBA_READ_MEMORY                                                    uint32  = 0x6
	CBA_DEFERRED_SYMBOL_LOAD_CANCEL                                    uint32  = 0x7
	CBA_SET_OPTIONS                                                    uint32  = 0x8
	CBA_EVENT                                                          uint32  = 0x10
	CBA_DEFERRED_SYMBOL_LOAD_PARTIAL                                   uint32  = 0x20
	CBA_DEBUG_INFO                                                     uint32  = 0x10000000
	CBA_SRCSRV_INFO                                                    uint32  = 0x20000000
	CBA_SRCSRV_EVENT                                                   uint32  = 0x40000000
	CBA_UPDATE_STATUS_BAR                                              uint32  = 0x50000000
	CBA_ENGINE_PRESENT                                                 uint32  = 0x60000000
	CBA_CHECK_ENGOPT_DISALLOW_NETWORK_PATHS                            uint32  = 0x70000000
	CBA_CHECK_ARM_MACHINE_THUMB_TYPE_OVERRIDE                          uint32  = 0x80000000
	CBA_XML_LOG                                                        uint32  = 0x90000000
	CBA_MAP_JIT_SYMBOL                                                 uint32  = 0xa0000000
	EVENT_SRCSPEW_START                                                uint32  = 0x64
	EVENT_SRCSPEW                                                      uint32  = 0x64
	EVENT_SRCSPEW_END                                                  uint32  = 0xc7
	DSLFLAG_MISMATCHED_PDB                                             uint32  = 0x1
	DSLFLAG_MISMATCHED_DBG                                             uint32  = 0x2
	FLAG_ENGINE_PRESENT                                                uint32  = 0x4
	FLAG_ENGOPT_DISALLOW_NETWORK_PATHS                                 uint32  = 0x8
	FLAG_OVERRIDE_ARM_MACHINE_TYPE                                     uint32  = 0x10
	SYMOPT_CASE_INSENSITIVE                                            uint32  = 0x1
	SYMOPT_UNDNAME                                                     uint32  = 0x2
	SYMOPT_DEFERRED_LOADS                                              uint32  = 0x4
	SYMOPT_NO_CPP                                                      uint32  = 0x8
	SYMOPT_LOAD_LINES                                                  uint32  = 0x10
	SYMOPT_OMAP_FIND_NEAREST                                           uint32  = 0x20
	SYMOPT_LOAD_ANYTHING                                               uint32  = 0x40
	SYMOPT_IGNORE_CVREC                                                uint32  = 0x80
	SYMOPT_NO_UNQUALIFIED_LOADS                                        uint32  = 0x100
	SYMOPT_FAIL_CRITICAL_ERRORS                                        uint32  = 0x200
	SYMOPT_EXACT_SYMBOLS                                               uint32  = 0x400
	SYMOPT_ALLOW_ABSOLUTE_SYMBOLS                                      uint32  = 0x800
	SYMOPT_IGNORE_NT_SYMPATH                                           uint32  = 0x1000
	SYMOPT_INCLUDE_32BIT_MODULES                                       uint32  = 0x2000
	SYMOPT_PUBLICS_ONLY                                                uint32  = 0x4000
	SYMOPT_NO_PUBLICS                                                  uint32  = 0x8000
	SYMOPT_AUTO_PUBLICS                                                uint32  = 0x10000
	SYMOPT_NO_IMAGE_SEARCH                                             uint32  = 0x20000
	SYMOPT_SECURE                                                      uint32  = 0x40000
	SYMOPT_NO_PROMPTS                                                  uint32  = 0x80000
	SYMOPT_OVERWRITE                                                   uint32  = 0x100000
	SYMOPT_IGNORE_IMAGEDIR                                             uint32  = 0x200000
	SYMOPT_FLAT_DIRECTORY                                              uint32  = 0x400000
	SYMOPT_FAVOR_COMPRESSED                                            uint32  = 0x800000
	SYMOPT_ALLOW_ZERO_ADDRESS                                          uint32  = 0x1000000
	SYMOPT_DISABLE_SYMSRV_AUTODETECT                                   uint32  = 0x2000000
	SYMOPT_READONLY_CACHE                                              uint32  = 0x4000000
	SYMOPT_SYMPATH_LAST                                                uint32  = 0x8000000
	SYMOPT_DISABLE_FAST_SYMBOLS                                        uint32  = 0x10000000
	SYMOPT_DISABLE_SYMSRV_TIMEOUT                                      uint32  = 0x20000000
	SYMOPT_DISABLE_SRVSTAR_ON_STARTUP                                  uint32  = 0x40000000
	SYMOPT_DEBUG                                                       uint32  = 0x80000000
	SYM_INLINE_COMP_ERROR                                              uint32  = 0x0
	SYM_INLINE_COMP_IDENTICAL                                          uint32  = 0x1
	SYM_INLINE_COMP_STEPIN                                             uint32  = 0x2
	SYM_INLINE_COMP_STEPOUT                                            uint32  = 0x3
	SYM_INLINE_COMP_STEPOVER                                           uint32  = 0x4
	SYM_INLINE_COMP_DIFFERENT                                          uint32  = 0x5
	ESLFLAG_FULLPATH                                                   uint32  = 0x1
	ESLFLAG_NEAREST                                                    uint32  = 0x2
	ESLFLAG_PREV                                                       uint32  = 0x4
	ESLFLAG_NEXT                                                       uint32  = 0x8
	ESLFLAG_INLINE_SITE                                                uint32  = 0x10
	SYMENUM_OPTIONS_DEFAULT                                            uint32  = 0x1
	SYMENUM_OPTIONS_INLINE                                             uint32  = 0x2
	SYMSEARCH_MASKOBJS                                                 uint32  = 0x1
	SYMSEARCH_RECURSE                                                  uint32  = 0x2
	SYMSEARCH_GLOBALSONLY                                              uint32  = 0x4
	SYMSEARCH_ALLITEMS                                                 uint32  = 0x8
	EXT_OUTPUT_VER                                                     uint32  = 0x1
	SYMSRV_VERSION                                                     uint32  = 0x2
	SSRVOPT_CALLBACK                                                   uint32  = 0x1
	SSRVOPT_OLDGUIDPTR                                                 uint32  = 0x10
	SSRVOPT_UNATTENDED                                                 uint32  = 0x20
	SSRVOPT_NOCOPY                                                     uint32  = 0x40
	SSRVOPT_GETPATH                                                    uint32  = 0x40
	SSRVOPT_PARENTWIN                                                  uint32  = 0x80
	SSRVOPT_PARAMTYPE                                                  uint32  = 0x100
	SSRVOPT_SECURE                                                     uint32  = 0x200
	SSRVOPT_TRACE                                                      uint32  = 0x400
	SSRVOPT_SETCONTEXT                                                 uint32  = 0x800
	SSRVOPT_PROXY                                                      uint32  = 0x1000
	SSRVOPT_DOWNSTREAM_STORE                                           uint32  = 0x2000
	SSRVOPT_OVERWRITE                                                  uint32  = 0x4000
	SSRVOPT_RESETTOU                                                   uint32  = 0x8000
	SSRVOPT_CALLBACKW                                                  uint32  = 0x10000
	SSRVOPT_FLAT_DEFAULT_STORE                                         uint32  = 0x20000
	SSRVOPT_PROXYW                                                     uint32  = 0x40000
	SSRVOPT_MESSAGE                                                    uint32  = 0x80000
	SSRVOPT_SERVICE                                                    uint32  = 0x100000
	SSRVOPT_FAVOR_COMPRESSED                                           uint32  = 0x200000
	SSRVOPT_STRING                                                     uint32  = 0x400000
	SSRVOPT_WINHTTP                                                    uint32  = 0x800000
	SSRVOPT_WININET                                                    uint32  = 0x1000000
	SSRVOPT_DONT_UNCOMPRESS                                            uint32  = 0x2000000
	SSRVOPT_DISABLE_PING_HOST                                          uint32  = 0x4000000
	SSRVOPT_DISABLE_TIMEOUT                                            uint32  = 0x8000000
	SSRVOPT_ENABLE_COMM_MSG                                            uint32  = 0x10000000
	SSRVOPT_URI_FILTER                                                 uint32  = 0x20000000
	SSRVOPT_URI_TIERS                                                  uint32  = 0x40000000
	SSRVOPT_RETRY_APP_HANG                                             uint32  = 0x80000000
	SSRVOPT_MAX                                                        uint32  = 0x80000000
	NUM_SSRVOPTS                                                       uint32  = 0x20
	SSRVURI_HTTP_NORMAL                                                uint32  = 0x1
	SSRVURI_HTTP_COMPRESSED                                            uint32  = 0x2
	SSRVURI_HTTP_FILEPTR                                               uint32  = 0x4
	SSRVURI_UNC_NORMAL                                                 uint32  = 0x10
	SSRVURI_UNC_COMPRESSED                                             uint32  = 0x20
	SSRVURI_UNC_FILEPTR                                                uint32  = 0x40
	SSRVURI_HTTP_MASK                                                  uint32  = 0xf
	SSRVURI_UNC_MASK                                                   uint32  = 0xf0
	SSRVURI_ALL                                                        uint32  = 0xff
	SSRVURI_NORMAL                                                     uint32  = 0x1
	SSRVURI_COMPRESSED                                                 uint32  = 0x2
	SSRVURI_FILEPTR                                                    uint32  = 0x4
	SSRVACTION_TRACE                                                   uint32  = 0x1
	SSRVACTION_QUERYCANCEL                                             uint32  = 0x2
	SSRVACTION_EVENT                                                   uint32  = 0x3
	SSRVACTION_EVENTW                                                  uint32  = 0x4
	SSRVACTION_SIZE                                                    uint32  = 0x5
	SSRVACTION_HTTPSTATUS                                              uint32  = 0x6
	SSRVACTION_XMLOUTPUT                                               uint32  = 0x7
	SSRVACTION_CHECKSUMSTATUS                                          uint32  = 0x8
	SYMSTOREOPT_ALT_INDEX                                              uint32  = 0x10
	SYMSTOREOPT_UNICODE                                                uint32  = 0x20
	SYMF_OMAP_GENERATED                                                uint32  = 0x1
	SYMF_OMAP_MODIFIED                                                 uint32  = 0x2
	SYMF_REGISTER                                                      uint32  = 0x8
	SYMF_REGREL                                                        uint32  = 0x10
	SYMF_FRAMEREL                                                      uint32  = 0x20
	SYMF_PARAMETER                                                     uint32  = 0x40
	SYMF_LOCAL                                                         uint32  = 0x80
	SYMF_CONSTANT                                                      uint32  = 0x100
	SYMF_EXPORT                                                        uint32  = 0x200
	SYMF_FORWARDER                                                     uint32  = 0x400
	SYMF_FUNCTION                                                      uint32  = 0x800
	SYMF_VIRTUAL                                                       uint32  = 0x1000
	SYMF_THUNK                                                         uint32  = 0x2000
	SYMF_TLSREL                                                        uint32  = 0x4000
	IMAGEHLP_SYMBOL_INFO_VALUEPRESENT                                  uint32  = 0x1
	IMAGEHLP_SYMBOL_INFO_REGISTER                                      uint32  = 0x8
	IMAGEHLP_SYMBOL_INFO_REGRELATIVE                                   uint32  = 0x10
	IMAGEHLP_SYMBOL_INFO_FRAMERELATIVE                                 uint32  = 0x20
	IMAGEHLP_SYMBOL_INFO_PARAMETER                                     uint32  = 0x40
	IMAGEHLP_SYMBOL_INFO_LOCAL                                         uint32  = 0x80
	IMAGEHLP_SYMBOL_INFO_CONSTANT                                      uint32  = 0x100
	IMAGEHLP_SYMBOL_FUNCTION                                           uint32  = 0x800
	IMAGEHLP_SYMBOL_VIRTUAL                                            uint32  = 0x1000
	IMAGEHLP_SYMBOL_THUNK                                              uint32  = 0x2000
	IMAGEHLP_SYMBOL_INFO_TLSRELATIVE                                   uint32  = 0x4000
	IMAGEHLP_RMAP_MAPPED_FLAT                                          uint32  = 0x1
	IMAGEHLP_RMAP_BIG_ENDIAN                                           uint32  = 0x2
	IMAGEHLP_RMAP_IGNORE_MISCOMPARE                                    uint32  = 0x4
	IMAGEHLP_RMAP_FIXUP_ARM64X                                         uint32  = 0x10000000
	IMAGEHLP_RMAP_LOAD_RW_DATA_SECTIONS                                uint32  = 0x20000000
	IMAGEHLP_RMAP_OMIT_SHARED_RW_DATA_SECTIONS                         uint32  = 0x40000000
	IMAGEHLP_RMAP_FIXUP_IMAGEBASE                                      uint32  = 0x80000000
	WCT_MAX_NODE_COUNT                                                 uint32  = 0x10
	WCT_OBJNAME_LENGTH                                                 uint32  = 0x80
	WCT_NETWORK_IO_FLAG                                                uint32  = 0x8
	RESTORE_LAST_ERROR_NAME_A                                          string  = "RestoreLastError"
	RESTORE_LAST_ERROR_NAME_W                                          string  = "RestoreLastError"
	RESTORE_LAST_ERROR_NAME                                            string  = "RestoreLastError"
	APPBREAKFLAG_DEBUGGER_BLOCK                                        uint32  = 0x1
	APPBREAKFLAG_DEBUGGER_HALT                                         uint32  = 0x2
	APPBREAKFLAG_STEP                                                  uint32  = 0x10000
	APPBREAKFLAG_NESTED                                                uint32  = 0x20000
	APPBREAKFLAG_STEPTYPE_SOURCE                                       uint32  = 0x0
	APPBREAKFLAG_STEPTYPE_BYTECODE                                     uint32  = 0x100000
	APPBREAKFLAG_STEPTYPE_MACHINE                                      uint32  = 0x200000
	APPBREAKFLAG_STEPTYPE_MASK                                         uint32  = 0xf00000
	APPBREAKFLAG_IN_BREAKPOINT                                         uint32  = 0x80000000
	SOURCETEXT_ATTR_KEYWORD                                            uint32  = 0x1
	SOURCETEXT_ATTR_COMMENT                                            uint32  = 0x2
	SOURCETEXT_ATTR_NONSOURCE                                          uint32  = 0x4
	SOURCETEXT_ATTR_OPERATOR                                           uint32  = 0x8
	SOURCETEXT_ATTR_NUMBER                                             uint32  = 0x10
	SOURCETEXT_ATTR_STRING                                             uint32  = 0x20
	SOURCETEXT_ATTR_FUNCTION_START                                     uint32  = 0x40
	TEXT_DOC_ATTR_READONLY                                             uint32  = 0x1
	TEXT_DOC_ATTR_TYPE_PRIMARY                                         uint32  = 0x2
	TEXT_DOC_ATTR_TYPE_WORKER                                          uint32  = 0x4
	TEXT_DOC_ATTR_TYPE_SCRIPT                                          uint32  = 0x8
	DEBUG_TEXT_ISEXPRESSION                                            uint32  = 0x1
	DEBUG_TEXT_RETURNVALUE                                             uint32  = 0x2
	DEBUG_TEXT_NOSIDEEFFECTS                                           uint32  = 0x4
	DEBUG_TEXT_ALLOWBREAKPOINTS                                        uint32  = 0x8
	DEBUG_TEXT_ALLOWERRORREPORT                                        uint32  = 0x10
	DEBUG_TEXT_EVALUATETOCODECONTEXT                                   uint32  = 0x20
	DEBUG_TEXT_ISNONUSERCODE                                           uint32  = 0x40
	THREAD_STATE_RUNNING                                               uint32  = 0x1
	THREAD_STATE_SUSPENDED                                             uint32  = 0x2
	THREAD_BLOCKED                                                     uint32  = 0x4
	THREAD_OUT_OF_CONTEXT                                              uint32  = 0x8
	FACILITY_JsDEBUG                                                   uint32  = 0xdc7
	E_JsDEBUG_MISMATCHED_RUNTIME                                       HRESULT = -1916338175
	E_JsDEBUG_UNKNOWN_THREAD                                           HRESULT = -1916338174
	E_JsDEBUG_OUTSIDE_OF_VM                                            HRESULT = -1916338172
	E_JsDEBUG_INVALID_MEMORY_ADDRESS                                   HRESULT = -1916338171
	E_JsDEBUG_SOURCE_LOCATION_NOT_FOUND                                HRESULT = -1916338170
	E_JsDEBUG_RUNTIME_NOT_IN_DEBUG_MODE                                HRESULT = -1916338169
	DMP_PHYSICAL_MEMORY_BLOCK_SIZE_32                                  uint32  = 0x2bc
	DMP_CONTEXT_RECORD_SIZE_32                                         uint32  = 0x4b0
	DMP_RESERVED_0_SIZE_32                                             uint32  = 0x6e0
	DMP_RESERVED_2_SIZE_32                                             uint32  = 0x10
	DMP_RESERVED_3_SIZE_32                                             uint32  = 0x38
	DMP_PHYSICAL_MEMORY_BLOCK_SIZE_64                                  uint32  = 0x2bc
	DMP_CONTEXT_RECORD_SIZE_64                                         uint32  = 0xbb8
	DMP_RESERVED_0_SIZE_64                                             uint32  = 0xfa8
	DMP_HEADER_COMMENT_SIZE                                            uint32  = 0x80
	DUMP_SUMMARY_VALID_KERNEL_VA                                       uint32  = 0x1
	DUMP_SUMMARY_VALID_CURRENT_USER_VA                                 uint32  = 0x2
	INTERFACESAFE_FOR_UNTRUSTED_CALLER                                 uint32  = 0x1
	INTERFACESAFE_FOR_UNTRUSTED_DATA                                   uint32  = 0x2
	INTERFACE_USES_DISPEX                                              uint32  = 0x4
	INTERFACE_USES_SECURITY_MANAGER                                    uint32  = 0x8
	WHEA_ERROR_SOURCE_DESCRIPTOR_VERSION_10                            uint32  = 0xa
	WHEA_ERROR_SOURCE_DESCRIPTOR_VERSION_11                            uint32  = 0xb
	WHEA_MAX_MC_BANKS                                                  uint32  = 0x20
	WHEA_ERROR_SOURCE_FLAG_FIRMWAREFIRST                               uint32  = 0x1
	WHEA_ERROR_SOURCE_FLAG_GLOBAL                                      uint32  = 0x2
	WHEA_ERROR_SOURCE_FLAG_GHES_ASSIST                                 uint32  = 0x4
	WHEA_ERROR_SOURCE_FLAG_DEFAULTSOURCE                               uint32  = 0x80000000
	WHEA_ERROR_SOURCE_INVALID_RELATED_SOURCE                           uint32  = 0xffff
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_XPFMCE                           uint32  = 0x0
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_XPFCMC                           uint32  = 0x1
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_XPFNMI                           uint32  = 0x2
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_IPFMCA                           uint32  = 0x3
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_IPFCMC                           uint32  = 0x4
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_IPFCPE                           uint32  = 0x5
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_AERROOTPORT                      uint32  = 0x6
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_AERENDPOINT                      uint32  = 0x7
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_AERBRIDGE                        uint32  = 0x8
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_GENERIC                          uint32  = 0x9
	WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_GENERIC_V2                       uint32  = 0xa
	WHEA_XPF_MC_BANK_STATUSFORMAT_IA32MCA                              uint32  = 0x0
	WHEA_XPF_MC_BANK_STATUSFORMAT_Intel64MCA                           uint32  = 0x1
	WHEA_XPF_MC_BANK_STATUSFORMAT_AMD64MCA                             uint32  = 0x2
	WHEA_NOTIFICATION_TYPE_POLLED                                      uint32  = 0x0
	WHEA_NOTIFICATION_TYPE_EXTERNALINTERRUPT                           uint32  = 0x1
	WHEA_NOTIFICATION_TYPE_LOCALINTERRUPT                              uint32  = 0x2
	WHEA_NOTIFICATION_TYPE_SCI                                         uint32  = 0x3
	WHEA_NOTIFICATION_TYPE_NMI                                         uint32  = 0x4
	WHEA_NOTIFICATION_TYPE_CMCI                                        uint32  = 0x5
	WHEA_NOTIFICATION_TYPE_MCE                                         uint32  = 0x6
	WHEA_NOTIFICATION_TYPE_GPIO_SIGNAL                                 uint32  = 0x7
	WHEA_NOTIFICATION_TYPE_ARMV8_SEA                                   uint32  = 0x8
	WHEA_NOTIFICATION_TYPE_ARMV8_SEI                                   uint32  = 0x9
	WHEA_NOTIFICATION_TYPE_EXTERNALINTERRUPT_GSIV                      uint32  = 0xa
	WHEA_NOTIFICATION_TYPE_SDEI                                        uint32  = 0xb
	WHEA_DEVICE_DRIVER_CONFIG_V1                                       uint32  = 0x1
	WHEA_DEVICE_DRIVER_CONFIG_V2                                       uint32  = 0x2
	WHEA_DEVICE_DRIVER_CONFIG_MIN                                      uint32  = 0x1
	WHEA_DEVICE_DRIVER_CONFIG_MAX                                      uint32  = 0x2
	WHEA_DEVICE_DRIVER_BUFFER_SET_V1                                   uint32  = 0x1
	WHEA_DEVICE_DRIVER_BUFFER_SET_MIN                                  uint32  = 0x1
	WHEA_DEVICE_DRIVER_BUFFER_SET_MAX                                  uint32  = 0x1
	WHEA_DISABLE_OFFLINE                                               uint32  = 0x0
	WHEA_MEM_PERSISTOFFLINE                                            uint32  = 0x1
	WHEA_MEM_PFA_DISABLE                                               uint32  = 0x2
	WHEA_MEM_PFA_PAGECOUNT                                             uint32  = 0x3
	WHEA_MEM_PFA_THRESHOLD                                             uint32  = 0x4
	WHEA_MEM_PFA_TIMEOUT                                               uint32  = 0x5
	WHEA_DISABLE_DUMMY_WRITE                                           uint32  = 0x6
	WHEA_RESTORE_CMCI_ENABLED                                          uint32  = 0x7
	WHEA_RESTORE_CMCI_ATTEMPTS                                         uint32  = 0x8
	WHEA_RESTORE_CMCI_ERR_LIMIT                                        uint32  = 0x9
	WHEA_CMCI_THRESHOLD_COUNT                                          uint32  = 0xa
	WHEA_CMCI_THRESHOLD_TIME                                           uint32  = 0xb
	WHEA_CMCI_THRESHOLD_POLL_COUNT                                     uint32  = 0xc
	WHEA_PENDING_PAGE_LIST_SZ                                          uint32  = 0xd
	WHEA_BAD_PAGE_LIST_MAX_SIZE                                        uint32  = 0xe
	WHEA_BAD_PAGE_LIST_LOCATION                                        uint32  = 0xf
	WHEA_NOTIFY_ALL_OFFLINES                                           uint32  = 0x10
	IPMI_OS_SEL_RECORD_VERSION_1                                       uint32  = 0x1
	IPMI_OS_SEL_RECORD_VERSION                                         uint32  = 0x1
	IPMI_IOCTL_INDEX                                                   uint32  = 0x400
	IOCTL_IPMI_INTERNAL_RECORD_SEL_EVENT                               uint32  = 0x221000
	IPMI_OS_SEL_RECORD_MASK                                            uint32  = 0xffff
	DBGKD_SIMULATION_NONE                                              int32   = 0
	DBGKD_SIMULATION_EXDI                                              int32   = 1
	ACTIVPROF_E_PROFILER_PRESENT                                       HRESULT = -2147220992
	ACTIVPROF_E_PROFILER_ABSENT                                        HRESULT = -2147220991
	ACTIVPROF_E_UNABLE_TO_APPLY_ACTION                                 HRESULT = -2147220990
	PROFILER_HEAP_OBJECT_NAME_ID_UNAVAILABLE                           uint32  = 0xffffffff
	SevMax                                                             int32   = 4
	FasaPreferInternalHandler                                          uint32  = 0x1
	FasaSupportInternalHandler                                         uint32  = 0x2
	FasaCaseSensitive                                                  uint32  = 0x4
	SCRIPT_CMPL_NOLIST                                                 uint32  = 0x0
	SCRIPT_CMPL_MEMBERLIST                                             uint32  = 0x1
	SCRIPT_CMPL_ENUMLIST                                               uint32  = 0x2
	SCRIPT_CMPL_PARAMTIP                                               uint32  = 0x4
	SCRIPT_CMPL_GLOBALLIST                                             uint32  = 0x8
	SCRIPT_CMPL_ENUM_TRIGGER                                           uint32  = 0x1
	SCRIPT_CMPL_MEMBER_TRIGGER                                         uint32  = 0x2
	SCRIPT_CMPL_PARAM_TRIGGER                                          uint32  = 0x3
	SCRIPT_CMPL_COMMIT                                                 uint32  = 0x4
	GETATTRTYPE_NORMAL                                                 uint32  = 0x0
	GETATTRTYPE_DEPSCAN                                                uint32  = 0x1
	GETATTRFLAG_THIS                                                   uint32  = 0x100
	GETATTRFLAG_HUMANTEXT                                              uint32  = 0x8000
	SOURCETEXT_ATTR_HUMANTEXT                                          uint32  = 0x8000
	SOURCETEXT_ATTR_IDENTIFIER                                         uint32  = 0x100
	SOURCETEXT_ATTR_MEMBERLOOKUP                                       uint32  = 0x200
	SOURCETEXT_ATTR_THIS                                               uint32  = 0x400
)

var (
	CATID_ActiveScript = syscall.GUID{0xF0B7A1A1, 0x9847, 0x11CF,
		[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

	CATID_ActiveScriptParse = syscall.GUID{0xF0B7A1A2, 0x9847, 0x11CF,
		[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

	CATID_ActiveScriptEncode = syscall.GUID{0xF0B7A1A3, 0x9847, 0x11CF,
		[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

	OID_VBSSIP = syscall.GUID{0x1629F04E, 0x2799, 0x4DB5,
		[8]byte{0x8F, 0xE5, 0xAC, 0xE1, 0x0F, 0x17, 0xEB, 0xAB}}

	OID_JSSIP = syscall.GUID{0x06C9E010, 0x38CE, 0x11D4,
		[8]byte{0xA2, 0xA3, 0x00, 0x10, 0x4B, 0xD3, 0x50, 0x90}}

	OID_WSFSIP = syscall.GUID{0x1A610570, 0x38CE, 0x11D4,
		[8]byte{0xA2, 0xA3, 0x00, 0x10, 0x4B, 0xD3, 0x50, 0x90}}

	CATID_ActiveScriptAuthor = syscall.GUID{0x0AEE2A92, 0xBCBB, 0x11D0,
		[8]byte{0x8C, 0x72, 0x00, 0xC0, 0x4F, 0xC2, 0xB0, 0x85}}
)

// enums

// enum
// flags
type SYM_LOAD_FLAGS uint32

const (
	SLMFLAG_NONE       SYM_LOAD_FLAGS = 0
	SLMFLAG_VIRTUAL    SYM_LOAD_FLAGS = 1
	SLMFLAG_ALT_INDEX  SYM_LOAD_FLAGS = 2
	SLMFLAG_NO_SYMBOLS SYM_LOAD_FLAGS = 4
)

// enum
// flags
type IMAGE_SECTION_CHARACTERISTICS uint32

const (
	IMAGE_SCN_TYPE_NO_PAD            IMAGE_SECTION_CHARACTERISTICS = 8
	IMAGE_SCN_CNT_CODE               IMAGE_SECTION_CHARACTERISTICS = 32
	IMAGE_SCN_CNT_INITIALIZED_DATA   IMAGE_SECTION_CHARACTERISTICS = 64
	IMAGE_SCN_CNT_UNINITIALIZED_DATA IMAGE_SECTION_CHARACTERISTICS = 128
	IMAGE_SCN_LNK_OTHER              IMAGE_SECTION_CHARACTERISTICS = 256
	IMAGE_SCN_LNK_INFO               IMAGE_SECTION_CHARACTERISTICS = 512
	IMAGE_SCN_LNK_REMOVE             IMAGE_SECTION_CHARACTERISTICS = 2048
	IMAGE_SCN_LNK_COMDAT             IMAGE_SECTION_CHARACTERISTICS = 4096
	IMAGE_SCN_NO_DEFER_SPEC_EXC      IMAGE_SECTION_CHARACTERISTICS = 16384
	IMAGE_SCN_GPREL                  IMAGE_SECTION_CHARACTERISTICS = 32768
	IMAGE_SCN_MEM_FARDATA            IMAGE_SECTION_CHARACTERISTICS = 32768
	IMAGE_SCN_MEM_PURGEABLE          IMAGE_SECTION_CHARACTERISTICS = 131072
	IMAGE_SCN_MEM_16BIT              IMAGE_SECTION_CHARACTERISTICS = 131072
	IMAGE_SCN_MEM_LOCKED             IMAGE_SECTION_CHARACTERISTICS = 262144
	IMAGE_SCN_MEM_PRELOAD            IMAGE_SECTION_CHARACTERISTICS = 524288
	IMAGE_SCN_ALIGN_1BYTES           IMAGE_SECTION_CHARACTERISTICS = 1048576
	IMAGE_SCN_ALIGN_2BYTES           IMAGE_SECTION_CHARACTERISTICS = 2097152
	IMAGE_SCN_ALIGN_4BYTES           IMAGE_SECTION_CHARACTERISTICS = 3145728
	IMAGE_SCN_ALIGN_8BYTES           IMAGE_SECTION_CHARACTERISTICS = 4194304
	IMAGE_SCN_ALIGN_16BYTES          IMAGE_SECTION_CHARACTERISTICS = 5242880
	IMAGE_SCN_ALIGN_32BYTES          IMAGE_SECTION_CHARACTERISTICS = 6291456
	IMAGE_SCN_ALIGN_64BYTES          IMAGE_SECTION_CHARACTERISTICS = 7340032
	IMAGE_SCN_ALIGN_128BYTES         IMAGE_SECTION_CHARACTERISTICS = 8388608
	IMAGE_SCN_ALIGN_256BYTES         IMAGE_SECTION_CHARACTERISTICS = 9437184
	IMAGE_SCN_ALIGN_512BYTES         IMAGE_SECTION_CHARACTERISTICS = 10485760
	IMAGE_SCN_ALIGN_1024BYTES        IMAGE_SECTION_CHARACTERISTICS = 11534336
	IMAGE_SCN_ALIGN_2048BYTES        IMAGE_SECTION_CHARACTERISTICS = 12582912
	IMAGE_SCN_ALIGN_4096BYTES        IMAGE_SECTION_CHARACTERISTICS = 13631488
	IMAGE_SCN_ALIGN_8192BYTES        IMAGE_SECTION_CHARACTERISTICS = 14680064
	IMAGE_SCN_ALIGN_MASK             IMAGE_SECTION_CHARACTERISTICS = 15728640
	IMAGE_SCN_LNK_NRELOC_OVFL        IMAGE_SECTION_CHARACTERISTICS = 16777216
	IMAGE_SCN_MEM_DISCARDABLE        IMAGE_SECTION_CHARACTERISTICS = 33554432
	IMAGE_SCN_MEM_NOT_CACHED         IMAGE_SECTION_CHARACTERISTICS = 67108864
	IMAGE_SCN_MEM_NOT_PAGED          IMAGE_SECTION_CHARACTERISTICS = 134217728
	IMAGE_SCN_MEM_SHARED             IMAGE_SECTION_CHARACTERISTICS = 268435456
	IMAGE_SCN_MEM_EXECUTE            IMAGE_SECTION_CHARACTERISTICS = 536870912
	IMAGE_SCN_MEM_READ               IMAGE_SECTION_CHARACTERISTICS = 1073741824
	IMAGE_SCN_MEM_WRITE              IMAGE_SECTION_CHARACTERISTICS = 2147483648
	IMAGE_SCN_SCALE_INDEX            IMAGE_SECTION_CHARACTERISTICS = 1
)

// enum
type IMAGE_FILE_MACHINE uint16

const (
	IMAGE_FILE_MACHINE_AXP64       IMAGE_FILE_MACHINE = 644
	IMAGE_FILE_MACHINE_I386        IMAGE_FILE_MACHINE = 332
	IMAGE_FILE_MACHINE_IA64        IMAGE_FILE_MACHINE = 512
	IMAGE_FILE_MACHINE_AMD64       IMAGE_FILE_MACHINE = 34404
	IMAGE_FILE_MACHINE_UNKNOWN     IMAGE_FILE_MACHINE = 0
	IMAGE_FILE_MACHINE_TARGET_HOST IMAGE_FILE_MACHINE = 1
	IMAGE_FILE_MACHINE_R3000       IMAGE_FILE_MACHINE = 354
	IMAGE_FILE_MACHINE_R4000       IMAGE_FILE_MACHINE = 358
	IMAGE_FILE_MACHINE_R10000      IMAGE_FILE_MACHINE = 360
	IMAGE_FILE_MACHINE_WCEMIPSV2   IMAGE_FILE_MACHINE = 361
	IMAGE_FILE_MACHINE_ALPHA       IMAGE_FILE_MACHINE = 388
	IMAGE_FILE_MACHINE_SH3         IMAGE_FILE_MACHINE = 418
	IMAGE_FILE_MACHINE_SH3DSP      IMAGE_FILE_MACHINE = 419
	IMAGE_FILE_MACHINE_SH3E        IMAGE_FILE_MACHINE = 420
	IMAGE_FILE_MACHINE_SH4         IMAGE_FILE_MACHINE = 422
	IMAGE_FILE_MACHINE_SH5         IMAGE_FILE_MACHINE = 424
	IMAGE_FILE_MACHINE_ARM         IMAGE_FILE_MACHINE = 448
	IMAGE_FILE_MACHINE_THUMB       IMAGE_FILE_MACHINE = 450
	IMAGE_FILE_MACHINE_ARMNT       IMAGE_FILE_MACHINE = 452
	IMAGE_FILE_MACHINE_AM33        IMAGE_FILE_MACHINE = 467
	IMAGE_FILE_MACHINE_POWERPC     IMAGE_FILE_MACHINE = 496
	IMAGE_FILE_MACHINE_POWERPCFP   IMAGE_FILE_MACHINE = 497
	IMAGE_FILE_MACHINE_MIPS16      IMAGE_FILE_MACHINE = 614
	IMAGE_FILE_MACHINE_ALPHA64     IMAGE_FILE_MACHINE = 644
	IMAGE_FILE_MACHINE_MIPSFPU     IMAGE_FILE_MACHINE = 870
	IMAGE_FILE_MACHINE_MIPSFPU16   IMAGE_FILE_MACHINE = 1126
	IMAGE_FILE_MACHINE_TRICORE     IMAGE_FILE_MACHINE = 1312
	IMAGE_FILE_MACHINE_CEF         IMAGE_FILE_MACHINE = 3311
	IMAGE_FILE_MACHINE_EBC         IMAGE_FILE_MACHINE = 3772
	IMAGE_FILE_MACHINE_M32R        IMAGE_FILE_MACHINE = 36929
	IMAGE_FILE_MACHINE_ARM64       IMAGE_FILE_MACHINE = 43620
	IMAGE_FILE_MACHINE_CEE         IMAGE_FILE_MACHINE = 49390
)

// enum
type IMAGE_SUBSYSTEM uint16

const (
	IMAGE_SUBSYSTEM_UNKNOWN                  IMAGE_SUBSYSTEM = 0
	IMAGE_SUBSYSTEM_NATIVE                   IMAGE_SUBSYSTEM = 1
	IMAGE_SUBSYSTEM_WINDOWS_GUI              IMAGE_SUBSYSTEM = 2
	IMAGE_SUBSYSTEM_WINDOWS_CUI              IMAGE_SUBSYSTEM = 3
	IMAGE_SUBSYSTEM_OS2_CUI                  IMAGE_SUBSYSTEM = 5
	IMAGE_SUBSYSTEM_POSIX_CUI                IMAGE_SUBSYSTEM = 7
	IMAGE_SUBSYSTEM_NATIVE_WINDOWS           IMAGE_SUBSYSTEM = 8
	IMAGE_SUBSYSTEM_WINDOWS_CE_GUI           IMAGE_SUBSYSTEM = 9
	IMAGE_SUBSYSTEM_EFI_APPLICATION          IMAGE_SUBSYSTEM = 10
	IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER  IMAGE_SUBSYSTEM = 11
	IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER       IMAGE_SUBSYSTEM = 12
	IMAGE_SUBSYSTEM_EFI_ROM                  IMAGE_SUBSYSTEM = 13
	IMAGE_SUBSYSTEM_XBOX                     IMAGE_SUBSYSTEM = 14
	IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION IMAGE_SUBSYSTEM = 16
	IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG        IMAGE_SUBSYSTEM = 17
)

// enum
// flags
type IMAGE_DLL_CHARACTERISTICS uint16

const (
	IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA                               IMAGE_DLL_CHARACTERISTICS = 32
	IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE                                  IMAGE_DLL_CHARACTERISTICS = 64
	IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY                               IMAGE_DLL_CHARACTERISTICS = 128
	IMAGE_DLLCHARACTERISTICS_NX_COMPAT                                     IMAGE_DLL_CHARACTERISTICS = 256
	IMAGE_DLLCHARACTERISTICS_NO_ISOLATION                                  IMAGE_DLL_CHARACTERISTICS = 512
	IMAGE_DLLCHARACTERISTICS_NO_SEH                                        IMAGE_DLL_CHARACTERISTICS = 1024
	IMAGE_DLLCHARACTERISTICS_NO_BIND                                       IMAGE_DLL_CHARACTERISTICS = 2048
	IMAGE_DLLCHARACTERISTICS_APPCONTAINER                                  IMAGE_DLL_CHARACTERISTICS = 4096
	IMAGE_DLLCHARACTERISTICS_WDM_DRIVER                                    IMAGE_DLL_CHARACTERISTICS = 8192
	IMAGE_DLLCHARACTERISTICS_GUARD_CF                                      IMAGE_DLL_CHARACTERISTICS = 16384
	IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE                         IMAGE_DLL_CHARACTERISTICS = 32768
	IMAGE_DLLCHARACTERISTICS_EX_CET_COMPAT                                 IMAGE_DLL_CHARACTERISTICS = 1
	IMAGE_DLLCHARACTERISTICS_EX_CET_COMPAT_STRICT_MODE                     IMAGE_DLL_CHARACTERISTICS = 2
	IMAGE_DLLCHARACTERISTICS_EX_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE IMAGE_DLL_CHARACTERISTICS = 4
	IMAGE_DLLCHARACTERISTICS_EX_CET_DYNAMIC_APIS_ALLOW_IN_PROC             IMAGE_DLL_CHARACTERISTICS = 8
	IMAGE_DLLCHARACTERISTICS_EX_CET_RESERVED_1                             IMAGE_DLL_CHARACTERISTICS = 16
	IMAGE_DLLCHARACTERISTICS_EX_CET_RESERVED_2                             IMAGE_DLL_CHARACTERISTICS = 32
)

// enum
type IMAGE_OPTIONAL_HEADER_MAGIC uint16

const (
	IMAGE_NT_OPTIONAL_HDR_MAGIC   IMAGE_OPTIONAL_HEADER_MAGIC = 523
	IMAGE_NT_OPTIONAL_HDR32_MAGIC IMAGE_OPTIONAL_HEADER_MAGIC = 267
	IMAGE_NT_OPTIONAL_HDR64_MAGIC IMAGE_OPTIONAL_HEADER_MAGIC = 523
	IMAGE_ROM_OPTIONAL_HDR_MAGIC  IMAGE_OPTIONAL_HEADER_MAGIC = 263
)

// enum
type BUGCHECK_ERROR uint32

const (
	HARDWARE_PROFILE_UNDOCKED_STRING                         BUGCHECK_ERROR = 1073807361
	HARDWARE_PROFILE_DOCKED_STRING                           BUGCHECK_ERROR = 1073807362
	HARDWARE_PROFILE_UNKNOWN_STRING                          BUGCHECK_ERROR = 1073807363
	WINDOWS_NT_BANNER                                        BUGCHECK_ERROR = 1073741950
	WINDOWS_NT_CSD_STRING                                    BUGCHECK_ERROR = 1073741959
	WINDOWS_NT_INFO_STRING                                   BUGCHECK_ERROR = 1073741960
	WINDOWS_NT_MP_STRING                                     BUGCHECK_ERROR = 1073741961
	THREAD_TERMINATE_HELD_MUTEX                              BUGCHECK_ERROR = 1073741962
	WINDOWS_NT_INFO_STRING_PLURAL                            BUGCHECK_ERROR = 1073741981
	WINDOWS_NT_RC_STRING                                     BUGCHECK_ERROR = 1073741982
	APC_INDEX_MISMATCH                                       BUGCHECK_ERROR = 1
	DEVICE_QUEUE_NOT_BUSY                                    BUGCHECK_ERROR = 2
	INVALID_AFFINITY_SET                                     BUGCHECK_ERROR = 3
	INVALID_DATA_ACCESS_TRAP                                 BUGCHECK_ERROR = 4
	INVALID_PROCESS_ATTACH_ATTEMPT                           BUGCHECK_ERROR = 5
	INVALID_PROCESS_DETACH_ATTEMPT                           BUGCHECK_ERROR = 6
	INVALID_SOFTWARE_INTERRUPT                               BUGCHECK_ERROR = 7
	IRQL_NOT_DISPATCH_LEVEL                                  BUGCHECK_ERROR = 8
	IRQL_NOT_GREATER_OR_EQUAL                                BUGCHECK_ERROR = 9
	IRQL_NOT_LESS_OR_EQUAL                                   BUGCHECK_ERROR = 10
	NO_EXCEPTION_HANDLING_SUPPORT                            BUGCHECK_ERROR = 11
	MAXIMUM_WAIT_OBJECTS_EXCEEDED                            BUGCHECK_ERROR = 12
	MUTEX_LEVEL_NUMBER_VIOLATION                             BUGCHECK_ERROR = 13
	NO_USER_MODE_CONTEXT                                     BUGCHECK_ERROR = 14
	SPIN_LOCK_ALREADY_OWNED                                  BUGCHECK_ERROR = 15
	SPIN_LOCK_NOT_OWNED                                      BUGCHECK_ERROR = 16
	THREAD_NOT_MUTEX_OWNER                                   BUGCHECK_ERROR = 17
	TRAP_CAUSE_UNKNOWN                                       BUGCHECK_ERROR = 18
	EMPTY_THREAD_REAPER_LIST                                 BUGCHECK_ERROR = 19
	CREATE_DELETE_LOCK_NOT_LOCKED                            BUGCHECK_ERROR = 20
	LAST_CHANCE_CALLED_FROM_KMODE                            BUGCHECK_ERROR = 21
	CID_HANDLE_CREATION                                      BUGCHECK_ERROR = 22
	CID_HANDLE_DELETION                                      BUGCHECK_ERROR = 23
	REFERENCE_BY_POINTER                                     BUGCHECK_ERROR = 24
	BAD_POOL_HEADER                                          BUGCHECK_ERROR = 25
	MEMORY_MANAGEMENT                                        BUGCHECK_ERROR = 26
	PFN_SHARE_COUNT                                          BUGCHECK_ERROR = 27
	PFN_REFERENCE_COUNT                                      BUGCHECK_ERROR = 28
	NO_SPIN_LOCK_AVAILABLE                                   BUGCHECK_ERROR = 29
	KMODE_EXCEPTION_NOT_HANDLED                              BUGCHECK_ERROR = 30
	SHARED_RESOURCE_CONV_ERROR                               BUGCHECK_ERROR = 31
	KERNEL_APC_PENDING_DURING_EXIT                           BUGCHECK_ERROR = 32
	QUOTA_UNDERFLOW                                          BUGCHECK_ERROR = 33
	FILE_SYSTEM                                              BUGCHECK_ERROR = 34
	FAT_FILE_SYSTEM                                          BUGCHECK_ERROR = 35
	NTFS_FILE_SYSTEM                                         BUGCHECK_ERROR = 36
	NPFS_FILE_SYSTEM                                         BUGCHECK_ERROR = 37
	CDFS_FILE_SYSTEM                                         BUGCHECK_ERROR = 38
	RDR_FILE_SYSTEM                                          BUGCHECK_ERROR = 39
	CORRUPT_ACCESS_TOKEN                                     BUGCHECK_ERROR = 40
	SECURITY_SYSTEM                                          BUGCHECK_ERROR = 41
	INCONSISTENT_IRP                                         BUGCHECK_ERROR = 42
	PANIC_STACK_SWITCH                                       BUGCHECK_ERROR = 43
	PORT_DRIVER_INTERNAL                                     BUGCHECK_ERROR = 44
	SCSI_DISK_DRIVER_INTERNAL                                BUGCHECK_ERROR = 45
	DATA_BUS_ERROR                                           BUGCHECK_ERROR = 46
	INSTRUCTION_BUS_ERROR                                    BUGCHECK_ERROR = 47
	SET_OF_INVALID_CONTEXT                                   BUGCHECK_ERROR = 48
	PHASE0_INITIALIZATION_FAILED                             BUGCHECK_ERROR = 49
	PHASE1_INITIALIZATION_FAILED                             BUGCHECK_ERROR = 50
	UNEXPECTED_INITIALIZATION_CALL                           BUGCHECK_ERROR = 51
	CACHE_MANAGER                                            BUGCHECK_ERROR = 52
	NO_MORE_IRP_STACK_LOCATIONS                              BUGCHECK_ERROR = 53
	DEVICE_REFERENCE_COUNT_NOT_ZERO                          BUGCHECK_ERROR = 54
	FLOPPY_INTERNAL_ERROR                                    BUGCHECK_ERROR = 55
	SERIAL_DRIVER_INTERNAL                                   BUGCHECK_ERROR = 56
	SYSTEM_EXIT_OWNED_MUTEX                                  BUGCHECK_ERROR = 57
	SYSTEM_UNWIND_PREVIOUS_USER                              BUGCHECK_ERROR = 58
	SYSTEM_SERVICE_EXCEPTION                                 BUGCHECK_ERROR = 59
	INTERRUPT_UNWIND_ATTEMPTED                               BUGCHECK_ERROR = 60
	INTERRUPT_EXCEPTION_NOT_HANDLED                          BUGCHECK_ERROR = 61
	MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED               BUGCHECK_ERROR = 62
	NO_MORE_SYSTEM_PTES                                      BUGCHECK_ERROR = 63
	TARGET_MDL_TOO_SMALL                                     BUGCHECK_ERROR = 64
	MUST_SUCCEED_POOL_EMPTY                                  BUGCHECK_ERROR = 65
	ATDISK_DRIVER_INTERNAL                                   BUGCHECK_ERROR = 66
	NO_SUCH_PARTITION                                        BUGCHECK_ERROR = 67
	MULTIPLE_IRP_COMPLETE_REQUESTS                           BUGCHECK_ERROR = 68
	INSUFFICIENT_SYSTEM_MAP_REGS                             BUGCHECK_ERROR = 69
	DEREF_UNKNOWN_LOGON_SESSION                              BUGCHECK_ERROR = 70
	REF_UNKNOWN_LOGON_SESSION                                BUGCHECK_ERROR = 71
	CANCEL_STATE_IN_COMPLETED_IRP                            BUGCHECK_ERROR = 72
	PAGE_FAULT_WITH_INTERRUPTS_OFF                           BUGCHECK_ERROR = 73
	IRQL_GT_ZERO_AT_SYSTEM_SERVICE                           BUGCHECK_ERROR = 74
	STREAMS_INTERNAL_ERROR                                   BUGCHECK_ERROR = 75
	FATAL_UNHANDLED_HARD_ERROR                               BUGCHECK_ERROR = 76
	NO_PAGES_AVAILABLE                                       BUGCHECK_ERROR = 77
	PFN_LIST_CORRUPT                                         BUGCHECK_ERROR = 78
	NDIS_INTERNAL_ERROR                                      BUGCHECK_ERROR = 79
	PAGE_FAULT_IN_NONPAGED_AREA                              BUGCHECK_ERROR = 80
	PAGE_FAULT_IN_NONPAGED_AREA_M                            BUGCHECK_ERROR = 268435536
	REGISTRY_ERROR                                           BUGCHECK_ERROR = 81
	MAILSLOT_FILE_SYSTEM                                     BUGCHECK_ERROR = 82
	NO_BOOT_DEVICE                                           BUGCHECK_ERROR = 83
	LM_SERVER_INTERNAL_ERROR                                 BUGCHECK_ERROR = 84
	DATA_COHERENCY_EXCEPTION                                 BUGCHECK_ERROR = 85
	INSTRUCTION_COHERENCY_EXCEPTION                          BUGCHECK_ERROR = 86
	XNS_INTERNAL_ERROR                                       BUGCHECK_ERROR = 87
	VOLMGRX_INTERNAL_ERROR                                   BUGCHECK_ERROR = 88
	PINBALL_FILE_SYSTEM                                      BUGCHECK_ERROR = 89
	CRITICAL_SERVICE_FAILED                                  BUGCHECK_ERROR = 90
	SET_ENV_VAR_FAILED                                       BUGCHECK_ERROR = 91
	HAL_INITIALIZATION_FAILED                                BUGCHECK_ERROR = 92
	UNSUPPORTED_PROCESSOR                                    BUGCHECK_ERROR = 93
	OBJECT_INITIALIZATION_FAILED                             BUGCHECK_ERROR = 94
	SECURITY_INITIALIZATION_FAILED                           BUGCHECK_ERROR = 95
	PROCESS_INITIALIZATION_FAILED                            BUGCHECK_ERROR = 96
	HAL1_INITIALIZATION_FAILED                               BUGCHECK_ERROR = 97
	OBJECT1_INITIALIZATION_FAILED                            BUGCHECK_ERROR = 98
	SECURITY1_INITIALIZATION_FAILED                          BUGCHECK_ERROR = 99
	SYMBOLIC_INITIALIZATION_FAILED                           BUGCHECK_ERROR = 100
	MEMORY1_INITIALIZATION_FAILED                            BUGCHECK_ERROR = 101
	CACHE_INITIALIZATION_FAILED                              BUGCHECK_ERROR = 102
	CONFIG_INITIALIZATION_FAILED                             BUGCHECK_ERROR = 103
	FILE_INITIALIZATION_FAILED                               BUGCHECK_ERROR = 104
	IO1_INITIALIZATION_FAILED                                BUGCHECK_ERROR = 105
	LPC_INITIALIZATION_FAILED                                BUGCHECK_ERROR = 106
	PROCESS1_INITIALIZATION_FAILED                           BUGCHECK_ERROR = 107
	REFMON_INITIALIZATION_FAILED                             BUGCHECK_ERROR = 108
	SESSION1_INITIALIZATION_FAILED                           BUGCHECK_ERROR = 109
	BOOTPROC_INITIALIZATION_FAILED                           BUGCHECK_ERROR = 110
	VSL_INITIALIZATION_FAILED                                BUGCHECK_ERROR = 111
	SOFT_RESTART_FATAL_ERROR                                 BUGCHECK_ERROR = 112
	ASSIGN_DRIVE_LETTERS_FAILED                              BUGCHECK_ERROR = 114
	CONFIG_LIST_FAILED                                       BUGCHECK_ERROR = 115
	BAD_SYSTEM_CONFIG_INFO                                   BUGCHECK_ERROR = 116
	CANNOT_WRITE_CONFIGURATION                               BUGCHECK_ERROR = 117
	PROCESS_HAS_LOCKED_PAGES                                 BUGCHECK_ERROR = 118
	KERNEL_STACK_INPAGE_ERROR                                BUGCHECK_ERROR = 119
	PHASE0_EXCEPTION                                         BUGCHECK_ERROR = 120
	MISMATCHED_HAL                                           BUGCHECK_ERROR = 121
	KERNEL_DATA_INPAGE_ERROR                                 BUGCHECK_ERROR = 122
	INACCESSIBLE_BOOT_DEVICE                                 BUGCHECK_ERROR = 123
	BUGCODE_NDIS_DRIVER                                      BUGCHECK_ERROR = 124
	INSTALL_MORE_MEMORY                                      BUGCHECK_ERROR = 125
	SYSTEM_THREAD_EXCEPTION_NOT_HANDLED                      BUGCHECK_ERROR = 126
	SYSTEM_THREAD_EXCEPTION_NOT_HANDLED_M                    BUGCHECK_ERROR = 268435582
	UNEXPECTED_KERNEL_MODE_TRAP                              BUGCHECK_ERROR = 127
	UNEXPECTED_KERNEL_MODE_TRAP_M                            BUGCHECK_ERROR = 268435583
	NMI_HARDWARE_FAILURE                                     BUGCHECK_ERROR = 128
	SPIN_LOCK_INIT_FAILURE                                   BUGCHECK_ERROR = 129
	DFS_FILE_SYSTEM                                          BUGCHECK_ERROR = 130
	OFS_FILE_SYSTEM                                          BUGCHECK_ERROR = 131
	RECOM_DRIVER                                             BUGCHECK_ERROR = 132
	SETUP_FAILURE                                            BUGCHECK_ERROR = 133
	AUDIT_FAILURE                                            BUGCHECK_ERROR = 134
	MBR_CHECKSUM_MISMATCH                                    BUGCHECK_ERROR = 139
	KERNEL_MODE_EXCEPTION_NOT_HANDLED                        BUGCHECK_ERROR = 142
	KERNEL_MODE_EXCEPTION_NOT_HANDLED_M                      BUGCHECK_ERROR = 268435598
	PP0_INITIALIZATION_FAILED                                BUGCHECK_ERROR = 143
	PP1_INITIALIZATION_FAILED                                BUGCHECK_ERROR = 144
	WIN32K_INIT_OR_RIT_FAILURE                               BUGCHECK_ERROR = 145
	UP_DRIVER_ON_MP_SYSTEM                                   BUGCHECK_ERROR = 146
	INVALID_KERNEL_HANDLE                                    BUGCHECK_ERROR = 147
	KERNEL_STACK_LOCKED_AT_EXIT                              BUGCHECK_ERROR = 148
	PNP_INTERNAL_ERROR                                       BUGCHECK_ERROR = 149
	INVALID_WORK_QUEUE_ITEM                                  BUGCHECK_ERROR = 150
	BOUND_IMAGE_UNSUPPORTED                                  BUGCHECK_ERROR = 151
	END_OF_NT_EVALUATION_PERIOD                              BUGCHECK_ERROR = 152
	INVALID_REGION_OR_SEGMENT                                BUGCHECK_ERROR = 153
	SYSTEM_LICENSE_VIOLATION                                 BUGCHECK_ERROR = 154
	UDFS_FILE_SYSTEM                                         BUGCHECK_ERROR = 155
	MACHINE_CHECK_EXCEPTION                                  BUGCHECK_ERROR = 156
	USER_MODE_HEALTH_MONITOR                                 BUGCHECK_ERROR = 158
	DRIVER_POWER_STATE_FAILURE                               BUGCHECK_ERROR = 159
	INTERNAL_POWER_ERROR                                     BUGCHECK_ERROR = 160
	PCI_BUS_DRIVER_INTERNAL                                  BUGCHECK_ERROR = 161
	MEMORY_IMAGE_CORRUPT                                     BUGCHECK_ERROR = 162
	ACPI_DRIVER_INTERNAL                                     BUGCHECK_ERROR = 163
	CNSS_FILE_SYSTEM_FILTER                                  BUGCHECK_ERROR = 164
	ACPI_BIOS_ERROR                                          BUGCHECK_ERROR = 165
	FP_EMULATION_ERROR                                       BUGCHECK_ERROR = 166
	BAD_EXHANDLE                                             BUGCHECK_ERROR = 167
	BOOTING_IN_SAFEMODE_MINIMAL                              BUGCHECK_ERROR = 168
	BOOTING_IN_SAFEMODE_NETWORK                              BUGCHECK_ERROR = 169
	BOOTING_IN_SAFEMODE_DSREPAIR                             BUGCHECK_ERROR = 170
	SESSION_HAS_VALID_POOL_ON_EXIT                           BUGCHECK_ERROR = 171
	HAL_MEMORY_ALLOCATION                                    BUGCHECK_ERROR = 172
	VIDEO_DRIVER_DEBUG_REPORT_REQUEST                        BUGCHECK_ERROR = 1073741997
	BGI_DETECTED_VIOLATION                                   BUGCHECK_ERROR = 177
	VIDEO_DRIVER_INIT_FAILURE                                BUGCHECK_ERROR = 180
	BOOTLOG_LOADED                                           BUGCHECK_ERROR = 181
	BOOTLOG_NOT_LOADED                                       BUGCHECK_ERROR = 182
	BOOTLOG_ENABLED                                          BUGCHECK_ERROR = 183
	ATTEMPTED_SWITCH_FROM_DPC                                BUGCHECK_ERROR = 184
	CHIPSET_DETECTED_ERROR                                   BUGCHECK_ERROR = 185
	SESSION_HAS_VALID_VIEWS_ON_EXIT                          BUGCHECK_ERROR = 186
	NETWORK_BOOT_INITIALIZATION_FAILED                       BUGCHECK_ERROR = 187
	NETWORK_BOOT_DUPLICATE_ADDRESS                           BUGCHECK_ERROR = 188
	INVALID_HIBERNATED_STATE                                 BUGCHECK_ERROR = 189
	ATTEMPTED_WRITE_TO_READONLY_MEMORY                       BUGCHECK_ERROR = 190
	MUTEX_ALREADY_OWNED                                      BUGCHECK_ERROR = 191
	PCI_CONFIG_SPACE_ACCESS_FAILURE                          BUGCHECK_ERROR = 192
	SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION                  BUGCHECK_ERROR = 193
	BAD_POOL_CALLER                                          BUGCHECK_ERROR = 194
	SYSTEM_IMAGE_BAD_SIGNATURE                               BUGCHECK_ERROR = 195
	DRIVER_VERIFIER_DETECTED_VIOLATION                       BUGCHECK_ERROR = 196
	DRIVER_CORRUPTED_EXPOOL                                  BUGCHECK_ERROR = 197
	DRIVER_CAUGHT_MODIFYING_FREED_POOL                       BUGCHECK_ERROR = 198
	TIMER_OR_DPC_INVALID                                     BUGCHECK_ERROR = 199
	IRQL_UNEXPECTED_VALUE                                    BUGCHECK_ERROR = 200
	DRIVER_VERIFIER_IOMANAGER_VIOLATION                      BUGCHECK_ERROR = 201
	PNP_DETECTED_FATAL_ERROR                                 BUGCHECK_ERROR = 202
	DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS                      BUGCHECK_ERROR = 203
	PAGE_FAULT_IN_FREED_SPECIAL_POOL                         BUGCHECK_ERROR = 204
	PAGE_FAULT_BEYOND_END_OF_ALLOCATION                      BUGCHECK_ERROR = 205
	DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS    BUGCHECK_ERROR = 206
	TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE   BUGCHECK_ERROR = 207
	DRIVER_CORRUPTED_MMPOOL                                  BUGCHECK_ERROR = 208
	DRIVER_IRQL_NOT_LESS_OR_EQUAL                            BUGCHECK_ERROR = 209
	BUGCODE_ID_DRIVER                                        BUGCHECK_ERROR = 210
	DRIVER_PORTION_MUST_BE_NONPAGED                          BUGCHECK_ERROR = 211
	SYSTEM_SCAN_AT_RAISED_IRQL_CAUGHT_IMPROPER_DRIVER_UNLOAD BUGCHECK_ERROR = 212
	DRIVER_PAGE_FAULT_IN_FREED_SPECIAL_POOL                  BUGCHECK_ERROR = 213
	DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION               BUGCHECK_ERROR = 214
	DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION_M             BUGCHECK_ERROR = 268435670
	DRIVER_UNMAPPING_INVALID_VIEW                            BUGCHECK_ERROR = 215
	DRIVER_USED_EXCESSIVE_PTES                               BUGCHECK_ERROR = 216
	LOCKED_PAGES_TRACKER_CORRUPTION                          BUGCHECK_ERROR = 217
	SYSTEM_PTE_MISUSE                                        BUGCHECK_ERROR = 218
	DRIVER_CORRUPTED_SYSPTES                                 BUGCHECK_ERROR = 219
	DRIVER_INVALID_STACK_ACCESS                              BUGCHECK_ERROR = 220
	POOL_CORRUPTION_IN_FILE_AREA                             BUGCHECK_ERROR = 222
	IMPERSONATING_WORKER_THREAD                              BUGCHECK_ERROR = 223
	ACPI_BIOS_FATAL_ERROR                                    BUGCHECK_ERROR = 224
	WORKER_THREAD_RETURNED_AT_BAD_IRQL                       BUGCHECK_ERROR = 225
	MANUALLY_INITIATED_CRASH                                 BUGCHECK_ERROR = 226
	RESOURCE_NOT_OWNED                                       BUGCHECK_ERROR = 227
	WORKER_INVALID                                           BUGCHECK_ERROR = 228
	POWER_FAILURE_SIMULATE                                   BUGCHECK_ERROR = 229
	DRIVER_VERIFIER_DMA_VIOLATION                            BUGCHECK_ERROR = 230
	INVALID_FLOATING_POINT_STATE                             BUGCHECK_ERROR = 231
	INVALID_CANCEL_OF_FILE_OPEN                              BUGCHECK_ERROR = 232
	ACTIVE_EX_WORKER_THREAD_TERMINATION                      BUGCHECK_ERROR = 233
	SAVER_UNSPECIFIED                                        BUGCHECK_ERROR = 61440
	SAVER_BLANKSCREEN                                        BUGCHECK_ERROR = 61442
	SAVER_INPUT                                              BUGCHECK_ERROR = 61443
	SAVER_WATCHDOG                                           BUGCHECK_ERROR = 61444
	SAVER_STARTNOTVISIBLE                                    BUGCHECK_ERROR = 61445
	SAVER_NAVIGATIONMODEL                                    BUGCHECK_ERROR = 61446
	SAVER_OUTOFMEMORY                                        BUGCHECK_ERROR = 61447
	SAVER_GRAPHICS                                           BUGCHECK_ERROR = 61448
	SAVER_NAVSERVERTIMEOUT                                   BUGCHECK_ERROR = 61449
	SAVER_CHROMEPROCESSCRASH                                 BUGCHECK_ERROR = 61450
	SAVER_NOTIFICATIONDISMISSAL                              BUGCHECK_ERROR = 61451
	SAVER_SPEECHDISMISSAL                                    BUGCHECK_ERROR = 61452
	SAVER_CALLDISMISSAL                                      BUGCHECK_ERROR = 61453
	SAVER_APPBARDISMISSAL                                    BUGCHECK_ERROR = 61454
	SAVER_RILADAPTATIONCRASH                                 BUGCHECK_ERROR = 61455
	SAVER_APPLISTUNREACHABLE                                 BUGCHECK_ERROR = 61456
	SAVER_REPORTNOTIFICATIONFAILURE                          BUGCHECK_ERROR = 61457
	SAVER_UNEXPECTEDSHUTDOWN                                 BUGCHECK_ERROR = 61458
	SAVER_RPCFAILURE                                         BUGCHECK_ERROR = 61459
	SAVER_AUXILIARYFULLDUMP                                  BUGCHECK_ERROR = 61460
	SAVER_ACCOUNTPROVSVCINITFAILURE                          BUGCHECK_ERROR = 61461
	SAVER_MTBFCOMMANDTIMEOUT                                 BUGCHECK_ERROR = 789
	SAVER_MTBFCOMMANDHANG                                    BUGCHECK_ERROR = 61697
	SAVER_MTBFPASSBUGCHECK                                   BUGCHECK_ERROR = 61698
	SAVER_MTBFIOERROR                                        BUGCHECK_ERROR = 61699
	SAVER_RENDERTHREADHANG                                   BUGCHECK_ERROR = 61952
	SAVER_RENDERMOBILEUIOOM                                  BUGCHECK_ERROR = 61953
	SAVER_DEVICEUPDATEUNSPECIFIED                            BUGCHECK_ERROR = 62208
	SAVER_AUDIODRIVERHANG                                    BUGCHECK_ERROR = 62464
	SAVER_BATTERYPULLOUT                                     BUGCHECK_ERROR = 62720
	SAVER_MEDIACORETESTHANG                                  BUGCHECK_ERROR = 62976
	SAVER_RESOURCEMANAGEMENT                                 BUGCHECK_ERROR = 63232
	SAVER_CAPTURESERVICE                                     BUGCHECK_ERROR = 63488
	SAVER_WAITFORSHELLREADY                                  BUGCHECK_ERROR = 63744
	SAVER_NONRESPONSIVEPROCESS                               BUGCHECK_ERROR = 404
	SAVER_SICKAPPLICATION                                    BUGCHECK_ERROR = 34918
	THREAD_STUCK_IN_DEVICE_DRIVER                            BUGCHECK_ERROR = 234
	THREAD_STUCK_IN_DEVICE_DRIVER_M                          BUGCHECK_ERROR = 268435690
	DIRTY_MAPPED_PAGES_CONGESTION                            BUGCHECK_ERROR = 235
	SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT                   BUGCHECK_ERROR = 236
	UNMOUNTABLE_BOOT_VOLUME                                  BUGCHECK_ERROR = 237
	CRITICAL_PROCESS_DIED                                    BUGCHECK_ERROR = 239
	STORAGE_MINIPORT_ERROR                                   BUGCHECK_ERROR = 240
	SCSI_VERIFIER_DETECTED_VIOLATION                         BUGCHECK_ERROR = 241
	HARDWARE_INTERRUPT_STORM                                 BUGCHECK_ERROR = 242
	DISORDERLY_SHUTDOWN                                      BUGCHECK_ERROR = 243
	CRITICAL_OBJECT_TERMINATION                              BUGCHECK_ERROR = 244
	FLTMGR_FILE_SYSTEM                                       BUGCHECK_ERROR = 245
	PCI_VERIFIER_DETECTED_VIOLATION                          BUGCHECK_ERROR = 246
	DRIVER_OVERRAN_STACK_BUFFER                              BUGCHECK_ERROR = 247
	RAMDISK_BOOT_INITIALIZATION_FAILED                       BUGCHECK_ERROR = 248
	DRIVER_RETURNED_STATUS_REPARSE_FOR_VOLUME_OPEN           BUGCHECK_ERROR = 249
	HTTP_DRIVER_CORRUPTED                                    BUGCHECK_ERROR = 250
	RECURSIVE_MACHINE_CHECK                                  BUGCHECK_ERROR = 251
	ATTEMPTED_EXECUTE_OF_NOEXECUTE_MEMORY                    BUGCHECK_ERROR = 252
	DIRTY_NOWRITE_PAGES_CONGESTION                           BUGCHECK_ERROR = 253
	BUGCODE_USB_DRIVER                                       BUGCHECK_ERROR = 254
	BC_BLUETOOTH_VERIFIER_FAULT                              BUGCHECK_ERROR = 3070
	BC_BTHMINI_VERIFIER_FAULT                                BUGCHECK_ERROR = 3071
	RESERVE_QUEUE_OVERFLOW                                   BUGCHECK_ERROR = 255
	LOADER_BLOCK_MISMATCH                                    BUGCHECK_ERROR = 256
	CLOCK_WATCHDOG_TIMEOUT                                   BUGCHECK_ERROR = 257
	DPC_WATCHDOG_TIMEOUT                                     BUGCHECK_ERROR = 258
	MUP_FILE_SYSTEM                                          BUGCHECK_ERROR = 259
	AGP_INVALID_ACCESS                                       BUGCHECK_ERROR = 260
	AGP_GART_CORRUPTION                                      BUGCHECK_ERROR = 261
	AGP_ILLEGALLY_REPROGRAMMED                               BUGCHECK_ERROR = 262
	KERNEL_EXPAND_STACK_ACTIVE                               BUGCHECK_ERROR = 263
	THIRD_PARTY_FILE_SYSTEM_FAILURE                          BUGCHECK_ERROR = 264
	CRITICAL_STRUCTURE_CORRUPTION                            BUGCHECK_ERROR = 265
	APP_TAGGING_INITIALIZATION_FAILED                        BUGCHECK_ERROR = 266
	DFSC_FILE_SYSTEM                                         BUGCHECK_ERROR = 267
	FSRTL_EXTRA_CREATE_PARAMETER_VIOLATION                   BUGCHECK_ERROR = 268
	WDF_VIOLATION                                            BUGCHECK_ERROR = 269
	VIDEO_MEMORY_MANAGEMENT_INTERNAL                         BUGCHECK_ERROR = 270
	DRIVER_INVALID_CRUNTIME_PARAMETER                        BUGCHECK_ERROR = 272
	RECURSIVE_NMI                                            BUGCHECK_ERROR = 273
	MSRPC_STATE_VIOLATION                                    BUGCHECK_ERROR = 274
	VIDEO_DXGKRNL_FATAL_ERROR                                BUGCHECK_ERROR = 275
	VIDEO_SHADOW_DRIVER_FATAL_ERROR                          BUGCHECK_ERROR = 276
	AGP_INTERNAL                                             BUGCHECK_ERROR = 277
	VIDEO_TDR_FAILURE                                        BUGCHECK_ERROR = 278
	VIDEO_TDR_TIMEOUT_DETECTED                               BUGCHECK_ERROR = 279
	NTHV_GUEST_ERROR                                         BUGCHECK_ERROR = 280
	VIDEO_SCHEDULER_INTERNAL_ERROR                           BUGCHECK_ERROR = 281
	EM_INITIALIZATION_ERROR                                  BUGCHECK_ERROR = 282
	DRIVER_RETURNED_HOLDING_CANCEL_LOCK                      BUGCHECK_ERROR = 283
	ATTEMPTED_WRITE_TO_CM_PROTECTED_STORAGE                  BUGCHECK_ERROR = 284
	EVENT_TRACING_FATAL_ERROR                                BUGCHECK_ERROR = 285
	TOO_MANY_RECURSIVE_FAULTS                                BUGCHECK_ERROR = 286
	INVALID_DRIVER_HANDLE                                    BUGCHECK_ERROR = 287
	BITLOCKER_FATAL_ERROR                                    BUGCHECK_ERROR = 288
	DRIVER_VIOLATION                                         BUGCHECK_ERROR = 289
	WHEA_INTERNAL_ERROR                                      BUGCHECK_ERROR = 290
	CRYPTO_SELF_TEST_FAILURE                                 BUGCHECK_ERROR = 291
	WHEA_UNCORRECTABLE_ERROR                                 BUGCHECK_ERROR = 292
	NMR_INVALID_STATE                                        BUGCHECK_ERROR = 293
	NETIO_INVALID_POOL_CALLER                                BUGCHECK_ERROR = 294
	PAGE_NOT_ZERO                                            BUGCHECK_ERROR = 295
	WORKER_THREAD_RETURNED_WITH_BAD_IO_PRIORITY              BUGCHECK_ERROR = 296
	WORKER_THREAD_RETURNED_WITH_BAD_PAGING_IO_PRIORITY       BUGCHECK_ERROR = 297
	MUI_NO_VALID_SYSTEM_LANGUAGE                             BUGCHECK_ERROR = 298
	FAULTY_HARDWARE_CORRUPTED_PAGE                           BUGCHECK_ERROR = 299
	EXFAT_FILE_SYSTEM                                        BUGCHECK_ERROR = 300
	VOLSNAP_OVERLAPPED_TABLE_ACCESS                          BUGCHECK_ERROR = 301
	INVALID_MDL_RANGE                                        BUGCHECK_ERROR = 302
	VHD_BOOT_INITIALIZATION_FAILED                           BUGCHECK_ERROR = 303
	DYNAMIC_ADD_PROCESSOR_MISMATCH                           BUGCHECK_ERROR = 304
	INVALID_EXTENDED_PROCESSOR_STATE                         BUGCHECK_ERROR = 305
	RESOURCE_OWNER_POINTER_INVALID                           BUGCHECK_ERROR = 306
	DPC_WATCHDOG_VIOLATION                                   BUGCHECK_ERROR = 307
	DRIVE_EXTENDER                                           BUGCHECK_ERROR = 308
	REGISTRY_FILTER_DRIVER_EXCEPTION                         BUGCHECK_ERROR = 309
	VHD_BOOT_HOST_VOLUME_NOT_ENOUGH_SPACE                    BUGCHECK_ERROR = 310
	WIN32K_HANDLE_MANAGER                                    BUGCHECK_ERROR = 311
	GPIO_CONTROLLER_DRIVER_ERROR                             BUGCHECK_ERROR = 312
	KERNEL_SECURITY_CHECK_FAILURE                            BUGCHECK_ERROR = 313
	KERNEL_MODE_HEAP_CORRUPTION                              BUGCHECK_ERROR = 314
	PASSIVE_INTERRUPT_ERROR                                  BUGCHECK_ERROR = 315
	INVALID_IO_BOOST_STATE                                   BUGCHECK_ERROR = 316
	CRITICAL_INITIALIZATION_FAILURE                          BUGCHECK_ERROR = 317
	ERRATA_WORKAROUND_UNSUCCESSFUL                           BUGCHECK_ERROR = 318
	REGISTRY_CALLBACK_DRIVER_EXCEPTION                       BUGCHECK_ERROR = 319
	STORAGE_DEVICE_ABNORMALITY_DETECTED                      BUGCHECK_ERROR = 320
	VIDEO_ENGINE_TIMEOUT_DETECTED                            BUGCHECK_ERROR = 321
	VIDEO_TDR_APPLICATION_BLOCKED                            BUGCHECK_ERROR = 322
	PROCESSOR_DRIVER_INTERNAL                                BUGCHECK_ERROR = 323
	BUGCODE_USB3_DRIVER                                      BUGCHECK_ERROR = 324
	SECURE_BOOT_VIOLATION                                    BUGCHECK_ERROR = 325
	NDIS_NET_BUFFER_LIST_INFO_ILLEGALLY_TRANSFERRED          BUGCHECK_ERROR = 326
	ABNORMAL_RESET_DETECTED                                  BUGCHECK_ERROR = 327
	IO_OBJECT_INVALID                                        BUGCHECK_ERROR = 328
	REFS_FILE_SYSTEM                                         BUGCHECK_ERROR = 329
	KERNEL_WMI_INTERNAL                                      BUGCHECK_ERROR = 330
	SOC_SUBSYSTEM_FAILURE                                    BUGCHECK_ERROR = 331
	FATAL_ABNORMAL_RESET_ERROR                               BUGCHECK_ERROR = 332
	EXCEPTION_SCOPE_INVALID                                  BUGCHECK_ERROR = 333
	SOC_CRITICAL_DEVICE_REMOVED                              BUGCHECK_ERROR = 334
	PDC_WATCHDOG_TIMEOUT                                     BUGCHECK_ERROR = 335
	TCPIP_AOAC_NIC_ACTIVE_REFERENCE_LEAK                     BUGCHECK_ERROR = 336
	UNSUPPORTED_INSTRUCTION_MODE                             BUGCHECK_ERROR = 337
	INVALID_PUSH_LOCK_FLAGS                                  BUGCHECK_ERROR = 338
	KERNEL_LOCK_ENTRY_LEAKED_ON_THREAD_TERMINATION           BUGCHECK_ERROR = 339
	UNEXPECTED_STORE_EXCEPTION                               BUGCHECK_ERROR = 340
	OS_DATA_TAMPERING                                        BUGCHECK_ERROR = 341
	WINSOCK_DETECTED_HUNG_CLOSESOCKET_LIVEDUMP               BUGCHECK_ERROR = 342
	KERNEL_THREAD_PRIORITY_FLOOR_VIOLATION                   BUGCHECK_ERROR = 343
	ILLEGAL_IOMMU_PAGE_FAULT                                 BUGCHECK_ERROR = 344
	HAL_ILLEGAL_IOMMU_PAGE_FAULT                             BUGCHECK_ERROR = 345
	SDBUS_INTERNAL_ERROR                                     BUGCHECK_ERROR = 346
	WORKER_THREAD_RETURNED_WITH_SYSTEM_PAGE_PRIORITY_ACTIVE  BUGCHECK_ERROR = 347
	PDC_WATCHDOG_TIMEOUT_LIVEDUMP                            BUGCHECK_ERROR = 348
	SOC_SUBSYSTEM_FAILURE_LIVEDUMP                           BUGCHECK_ERROR = 349
	BUGCODE_NDIS_DRIVER_LIVE_DUMP                            BUGCHECK_ERROR = 350
	CONNECTED_STANDBY_WATCHDOG_TIMEOUT_LIVEDUMP              BUGCHECK_ERROR = 351
	WIN32K_ATOMIC_CHECK_FAILURE                              BUGCHECK_ERROR = 352
	LIVE_SYSTEM_DUMP                                         BUGCHECK_ERROR = 353
	KERNEL_AUTO_BOOST_INVALID_LOCK_RELEASE                   BUGCHECK_ERROR = 354
	WORKER_THREAD_TEST_CONDITION                             BUGCHECK_ERROR = 355
	WIN32K_CRITICAL_FAILURE                                  BUGCHECK_ERROR = 356
	CLUSTER_CSV_STATUS_IO_TIMEOUT_LIVEDUMP                   BUGCHECK_ERROR = 357
	CLUSTER_RESOURCE_CALL_TIMEOUT_LIVEDUMP                   BUGCHECK_ERROR = 358
	CLUSTER_CSV_SNAPSHOT_DEVICE_INFO_TIMEOUT_LIVEDUMP        BUGCHECK_ERROR = 359
	CLUSTER_CSV_STATE_TRANSITION_TIMEOUT_LIVEDUMP            BUGCHECK_ERROR = 360
	CLUSTER_CSV_VOLUME_ARRIVAL_LIVEDUMP                      BUGCHECK_ERROR = 361
	CLUSTER_CSV_VOLUME_REMOVAL_LIVEDUMP                      BUGCHECK_ERROR = 362
	CLUSTER_CSV_CLUSTER_WATCHDOG_LIVEDUMP                    BUGCHECK_ERROR = 363
	INVALID_RUNDOWN_PROTECTION_FLAGS                         BUGCHECK_ERROR = 364
	INVALID_SLOT_ALLOCATOR_FLAGS                             BUGCHECK_ERROR = 365
	ERESOURCE_INVALID_RELEASE                                BUGCHECK_ERROR = 366
	CLUSTER_CSV_STATE_TRANSITION_INTERVAL_TIMEOUT_LIVEDUMP   BUGCHECK_ERROR = 367
	CLUSTER_CSV_CLUSSVC_DISCONNECT_WATCHDOG                  BUGCHECK_ERROR = 368
	CRYPTO_LIBRARY_INTERNAL_ERROR                            BUGCHECK_ERROR = 369
	COREMSGCALL_INTERNAL_ERROR                               BUGCHECK_ERROR = 371
	COREMSG_INTERNAL_ERROR                                   BUGCHECK_ERROR = 372
	PREVIOUS_FATAL_ABNORMAL_RESET_ERROR                      BUGCHECK_ERROR = 373
	ELAM_DRIVER_DETECTED_FATAL_ERROR                         BUGCHECK_ERROR = 376
	CLUSTER_CLUSPORT_STATUS_IO_TIMEOUT_LIVEDUMP              BUGCHECK_ERROR = 377
	PROFILER_CONFIGURATION_ILLEGAL                           BUGCHECK_ERROR = 379
	PDC_LOCK_WATCHDOG_LIVEDUMP                               BUGCHECK_ERROR = 380
	PDC_UNEXPECTED_REVOCATION_LIVEDUMP                       BUGCHECK_ERROR = 381
	MICROCODE_REVISION_MISMATCH                              BUGCHECK_ERROR = 382
	HYPERGUARD_INITIALIZATION_FAILURE                        BUGCHECK_ERROR = 383
	WVR_LIVEDUMP_REPLICATION_IOCONTEXT_TIMEOUT               BUGCHECK_ERROR = 384
	WVR_LIVEDUMP_STATE_TRANSITION_TIMEOUT                    BUGCHECK_ERROR = 385
	WVR_LIVEDUMP_RECOVERY_IOCONTEXT_TIMEOUT                  BUGCHECK_ERROR = 386
	WVR_LIVEDUMP_APP_IO_TIMEOUT                              BUGCHECK_ERROR = 387
	WVR_LIVEDUMP_MANUALLY_INITIATED                          BUGCHECK_ERROR = 388
	WVR_LIVEDUMP_STATE_FAILURE                               BUGCHECK_ERROR = 389
	WVR_LIVEDUMP_CRITICAL_ERROR                              BUGCHECK_ERROR = 390
	VIDEO_DWMINIT_TIMEOUT_FALLBACK_BDD                       BUGCHECK_ERROR = 391
	CLUSTER_CSVFS_LIVEDUMP                                   BUGCHECK_ERROR = 392
	BAD_OBJECT_HEADER                                        BUGCHECK_ERROR = 393
	SILO_CORRUPT                                             BUGCHECK_ERROR = 394
	SECURE_KERNEL_ERROR                                      BUGCHECK_ERROR = 395
	HYPERGUARD_VIOLATION                                     BUGCHECK_ERROR = 396
	SECURE_FAULT_UNHANDLED                                   BUGCHECK_ERROR = 397
	KERNEL_PARTITION_REFERENCE_VIOLATION                     BUGCHECK_ERROR = 398
	SYNTHETIC_EXCEPTION_UNHANDLED                            BUGCHECK_ERROR = 399
	WIN32K_CRITICAL_FAILURE_LIVEDUMP                         BUGCHECK_ERROR = 400
	PF_DETECTED_CORRUPTION                                   BUGCHECK_ERROR = 401
	KERNEL_AUTO_BOOST_LOCK_ACQUISITION_WITH_RAISED_IRQL      BUGCHECK_ERROR = 402
	VIDEO_DXGKRNL_LIVEDUMP                                   BUGCHECK_ERROR = 403
	KERNEL_STORAGE_SLOT_IN_USE                               BUGCHECK_ERROR = 409
	SMB_SERVER_LIVEDUMP                                      BUGCHECK_ERROR = 405
	LOADER_ROLLBACK_DETECTED                                 BUGCHECK_ERROR = 406
	WIN32K_SECURITY_FAILURE                                  BUGCHECK_ERROR = 407
	UFX_LIVEDUMP                                             BUGCHECK_ERROR = 408
	WORKER_THREAD_RETURNED_WHILE_ATTACHED_TO_SILO            BUGCHECK_ERROR = 410
	TTM_FATAL_ERROR                                          BUGCHECK_ERROR = 411
	WIN32K_POWER_WATCHDOG_TIMEOUT                            BUGCHECK_ERROR = 412
	CLUSTER_SVHDX_LIVEDUMP                                   BUGCHECK_ERROR = 413
	BUGCODE_NETADAPTER_DRIVER                                BUGCHECK_ERROR = 414
	PDC_PRIVILEGE_CHECK_LIVEDUMP                             BUGCHECK_ERROR = 415
	TTM_WATCHDOG_TIMEOUT                                     BUGCHECK_ERROR = 416
	WIN32K_CALLOUT_WATCHDOG_LIVEDUMP                         BUGCHECK_ERROR = 417
	WIN32K_CALLOUT_WATCHDOG_BUGCHECK                         BUGCHECK_ERROR = 418
	CALL_HAS_NOT_RETURNED_WATCHDOG_TIMEOUT_LIVEDUMP          BUGCHECK_ERROR = 419
	DRIPS_SW_HW_DIVERGENCE_LIVEDUMP                          BUGCHECK_ERROR = 420
	USB_DRIPS_BLOCKER_SURPRISE_REMOVAL_LIVEDUMP              BUGCHECK_ERROR = 421
	BLUETOOTH_ERROR_RECOVERY_LIVEDUMP                        BUGCHECK_ERROR = 422
	SMB_REDIRECTOR_LIVEDUMP                                  BUGCHECK_ERROR = 423
	VIDEO_DXGKRNL_BLACK_SCREEN_LIVEDUMP                      BUGCHECK_ERROR = 424
	DIRECTED_FX_TRANSITION_LIVEDUMP                          BUGCHECK_ERROR = 425
	EXCEPTION_ON_INVALID_STACK                               BUGCHECK_ERROR = 426
	UNWIND_ON_INVALID_STACK                                  BUGCHECK_ERROR = 427
	VIDEO_MINIPORT_FAILED_LIVEDUMP                           BUGCHECK_ERROR = 432
	VIDEO_MINIPORT_BLACK_SCREEN_LIVEDUMP                     BUGCHECK_ERROR = 440
	DRIVER_VERIFIER_DETECTED_VIOLATION_LIVEDUMP              BUGCHECK_ERROR = 452
	IO_THREADPOOL_DEADLOCK_LIVEDUMP                          BUGCHECK_ERROR = 453
	FAST_ERESOURCE_PRECONDITION_VIOLATION                    BUGCHECK_ERROR = 454
	STORE_DATA_STRUCTURE_CORRUPTION                          BUGCHECK_ERROR = 455
	MANUALLY_INITIATED_POWER_BUTTON_HOLD                     BUGCHECK_ERROR = 456
	USER_MODE_HEALTH_MONITOR_LIVEDUMP                        BUGCHECK_ERROR = 457
	SYNTHETIC_WATCHDOG_TIMEOUT                               BUGCHECK_ERROR = 458
	INVALID_SILO_DETACH                                      BUGCHECK_ERROR = 459
	EXRESOURCE_TIMEOUT_LIVEDUMP                              BUGCHECK_ERROR = 460
	INVALID_CALLBACK_STACK_ADDRESS                           BUGCHECK_ERROR = 461
	INVALID_KERNEL_STACK_ADDRESS                             BUGCHECK_ERROR = 462
	HARDWARE_WATCHDOG_TIMEOUT                                BUGCHECK_ERROR = 463
	ACPI_FIRMWARE_WATCHDOG_TIMEOUT                           BUGCHECK_ERROR = 464
	TELEMETRY_ASSERTS_LIVEDUMP                               BUGCHECK_ERROR = 465
	WORKER_THREAD_INVALID_STATE                              BUGCHECK_ERROR = 466
	WFP_INVALID_OPERATION                                    BUGCHECK_ERROR = 467
	UCMUCSI_LIVEDUMP                                         BUGCHECK_ERROR = 468
	DRIVER_PNP_WATCHDOG                                      BUGCHECK_ERROR = 469
	WORKER_THREAD_RETURNED_WITH_NON_DEFAULT_WORKLOAD_CLASS   BUGCHECK_ERROR = 470
	EFS_FATAL_ERROR                                          BUGCHECK_ERROR = 471
	UCMUCSI_FAILURE                                          BUGCHECK_ERROR = 472
	HAL_IOMMU_INTERNAL_ERROR                                 BUGCHECK_ERROR = 473
	HAL_BLOCKED_PROCESSOR_INTERNAL_ERROR                     BUGCHECK_ERROR = 474
	IPI_WATCHDOG_TIMEOUT                                     BUGCHECK_ERROR = 475
	DMA_COMMON_BUFFER_VECTOR_ERROR                           BUGCHECK_ERROR = 476
	BUGCODE_MBBADAPTER_DRIVER                                BUGCHECK_ERROR = 477
	BUGCODE_WIFIADAPTER_DRIVER                               BUGCHECK_ERROR = 478
	PROCESSOR_START_TIMEOUT                                  BUGCHECK_ERROR = 479
	INVALID_ALTERNATE_SYSTEM_CALL_HANDLER_REGISTRATION       BUGCHECK_ERROR = 480
	DEVICE_DIAGNOSTIC_LOG_LIVEDUMP                           BUGCHECK_ERROR = 481
	AZURE_DEVICE_FW_DUMP                                     BUGCHECK_ERROR = 482
	BREAKAWAY_CABLE_TRANSITION                               BUGCHECK_ERROR = 483
	VIDEO_DXGKRNL_SYSMM_FATAL_ERROR                          BUGCHECK_ERROR = 484
	DRIVER_VERIFIER_TRACKING_LIVE_DUMP                       BUGCHECK_ERROR = 485
	CRASHDUMP_WATCHDOG_TIMEOUT                               BUGCHECK_ERROR = 486
	REGISTRY_LIVE_DUMP                                       BUGCHECK_ERROR = 487
	INVALID_THREAD_AFFINITY_STATE                            BUGCHECK_ERROR = 488
	ILLEGAL_ATS_INITIALIZATION                               BUGCHECK_ERROR = 489
	SECURE_PCI_CONFIG_SPACE_ACCESS_VIOLATION                 BUGCHECK_ERROR = 490
	DAM_WATCHDOG_TIMEOUT                                     BUGCHECK_ERROR = 491
	XBOX_VMCTRL_CS_TIMEOUT                                   BUGCHECK_ERROR = 854
	XBOX_CORRUPTED_IMAGE                                     BUGCHECK_ERROR = 855
	XBOX_INVERTED_FUNCTION_TABLE_OVERFLOW                    BUGCHECK_ERROR = 856
	XBOX_CORRUPTED_IMAGE_BASE                                BUGCHECK_ERROR = 857
	XBOX_XDS_WATCHDOG_TIMEOUT                                BUGCHECK_ERROR = 858
	XBOX_SHUTDOWN_WATCHDOG_TIMEOUT                           BUGCHECK_ERROR = 859
	XBOX_360_SYSTEM_CRASH                                    BUGCHECK_ERROR = 864
	XBOX_360_SYSTEM_CRASH_RESERVED                           BUGCHECK_ERROR = 1056
	XBOX_SECURITY_FAILUE                                     BUGCHECK_ERROR = 1057
	KERNEL_CFG_INIT_FAILURE                                  BUGCHECK_ERROR = 1058
	MANUALLY_INITIATED_POWER_BUTTON_HOLD_LIVE_DUMP           BUGCHECK_ERROR = 4552
	HYPERVISOR_ERROR                                         BUGCHECK_ERROR = 131073
	WINLOGON_FATAL_ERROR                                     BUGCHECK_ERROR = 3221226010
	MANUALLY_INITIATED_CRASH1                                BUGCHECK_ERROR = 3735936685
	BUGCHECK_CONTEXT_MODIFIER                                BUGCHECK_ERROR = 2147483648
)

// enum
type FACILITY_CODE uint32

const (
	FACILITY_NULL                                     FACILITY_CODE = 0
	FACILITY_RPC                                      FACILITY_CODE = 1
	FACILITY_DISPATCH                                 FACILITY_CODE = 2
	FACILITY_STORAGE                                  FACILITY_CODE = 3
	FACILITY_ITF                                      FACILITY_CODE = 4
	FACILITY_WIN32                                    FACILITY_CODE = 7
	FACILITY_WINDOWS                                  FACILITY_CODE = 8
	FACILITY_SSPI                                     FACILITY_CODE = 9
	FACILITY_SECURITY                                 FACILITY_CODE = 9
	FACILITY_CONTROL                                  FACILITY_CODE = 10
	FACILITY_CERT                                     FACILITY_CODE = 11
	FACILITY_INTERNET                                 FACILITY_CODE = 12
	FACILITY_MEDIASERVER                              FACILITY_CODE = 13
	FACILITY_MSMQ                                     FACILITY_CODE = 14
	FACILITY_SETUPAPI                                 FACILITY_CODE = 15
	FACILITY_SCARD                                    FACILITY_CODE = 16
	FACILITY_COMPLUS                                  FACILITY_CODE = 17
	FACILITY_AAF                                      FACILITY_CODE = 18
	FACILITY_URT                                      FACILITY_CODE = 19
	FACILITY_ACS                                      FACILITY_CODE = 20
	FACILITY_DPLAY                                    FACILITY_CODE = 21
	FACILITY_UMI                                      FACILITY_CODE = 22
	FACILITY_SXS                                      FACILITY_CODE = 23
	FACILITY_WINDOWS_CE                               FACILITY_CODE = 24
	FACILITY_HTTP                                     FACILITY_CODE = 25
	FACILITY_USERMODE_COMMONLOG                       FACILITY_CODE = 26
	FACILITY_WER                                      FACILITY_CODE = 27
	FACILITY_USERMODE_FILTER_MANAGER                  FACILITY_CODE = 31
	FACILITY_BACKGROUNDCOPY                           FACILITY_CODE = 32
	FACILITY_CONFIGURATION                            FACILITY_CODE = 33
	FACILITY_WIA                                      FACILITY_CODE = 33
	FACILITY_STATE_MANAGEMENT                         FACILITY_CODE = 34
	FACILITY_METADIRECTORY                            FACILITY_CODE = 35
	FACILITY_WINDOWSUPDATE                            FACILITY_CODE = 36
	FACILITY_DIRECTORYSERVICE                         FACILITY_CODE = 37
	FACILITY_GRAPHICS                                 FACILITY_CODE = 38
	FACILITY_SHELL                                    FACILITY_CODE = 39
	FACILITY_NAP                                      FACILITY_CODE = 39
	FACILITY_TPM_SERVICES                             FACILITY_CODE = 40
	FACILITY_TPM_SOFTWARE                             FACILITY_CODE = 41
	FACILITY_UI                                       FACILITY_CODE = 42
	FACILITY_XAML                                     FACILITY_CODE = 43
	FACILITY_ACTION_QUEUE                             FACILITY_CODE = 44
	FACILITY_PLA                                      FACILITY_CODE = 48
	FACILITY_WINDOWS_SETUP                            FACILITY_CODE = 48
	FACILITY_FVE                                      FACILITY_CODE = 49
	FACILITY_FWP                                      FACILITY_CODE = 50
	FACILITY_WINRM                                    FACILITY_CODE = 51
	FACILITY_NDIS                                     FACILITY_CODE = 52
	FACILITY_USERMODE_HYPERVISOR                      FACILITY_CODE = 53
	FACILITY_CMI                                      FACILITY_CODE = 54
	FACILITY_USERMODE_VIRTUALIZATION                  FACILITY_CODE = 55
	FACILITY_USERMODE_VOLMGR                          FACILITY_CODE = 56
	FACILITY_BCD                                      FACILITY_CODE = 57
	FACILITY_USERMODE_VHD                             FACILITY_CODE = 58
	FACILITY_USERMODE_HNS                             FACILITY_CODE = 59
	FACILITY_SDIAG                                    FACILITY_CODE = 60
	FACILITY_WEBSERVICES                              FACILITY_CODE = 61
	FACILITY_WINPE                                    FACILITY_CODE = 61
	FACILITY_WPN                                      FACILITY_CODE = 62
	FACILITY_WINDOWS_STORE                            FACILITY_CODE = 63
	FACILITY_INPUT                                    FACILITY_CODE = 64
	FACILITY_QUIC                                     FACILITY_CODE = 65
	FACILITY_EAP                                      FACILITY_CODE = 66
	FACILITY_IORING                                   FACILITY_CODE = 70
	FACILITY_WINDOWS_DEFENDER                         FACILITY_CODE = 80
	FACILITY_OPC                                      FACILITY_CODE = 81
	FACILITY_XPS                                      FACILITY_CODE = 82
	FACILITY_MBN                                      FACILITY_CODE = 84
	FACILITY_POWERSHELL                               FACILITY_CODE = 84
	FACILITY_RAS                                      FACILITY_CODE = 83
	FACILITY_P2P_INT                                  FACILITY_CODE = 98
	FACILITY_P2P                                      FACILITY_CODE = 99
	FACILITY_DAF                                      FACILITY_CODE = 100
	FACILITY_BLUETOOTH_ATT                            FACILITY_CODE = 101
	FACILITY_AUDIO                                    FACILITY_CODE = 102
	FACILITY_STATEREPOSITORY                          FACILITY_CODE = 103
	FACILITY_VISUALCPP                                FACILITY_CODE = 109
	FACILITY_SCRIPT                                   FACILITY_CODE = 112
	FACILITY_PARSE                                    FACILITY_CODE = 113
	FACILITY_BLB                                      FACILITY_CODE = 120
	FACILITY_BLB_CLI                                  FACILITY_CODE = 121
	FACILITY_WSBAPP                                   FACILITY_CODE = 122
	FACILITY_BLBUI                                    FACILITY_CODE = 128
	FACILITY_USN                                      FACILITY_CODE = 129
	FACILITY_USERMODE_VOLSNAP                         FACILITY_CODE = 130
	FACILITY_TIERING                                  FACILITY_CODE = 131
	FACILITY_WSB_ONLINE                               FACILITY_CODE = 133
	FACILITY_ONLINE_ID                                FACILITY_CODE = 134
	FACILITY_DEVICE_UPDATE_AGENT                      FACILITY_CODE = 135
	FACILITY_DRVSERVICING                             FACILITY_CODE = 136
	FACILITY_DLS                                      FACILITY_CODE = 153
	FACILITY_DELIVERY_OPTIMIZATION                    FACILITY_CODE = 208
	FACILITY_USERMODE_SPACES                          FACILITY_CODE = 231
	FACILITY_USER_MODE_SECURITY_CORE                  FACILITY_CODE = 232
	FACILITY_USERMODE_LICENSING                       FACILITY_CODE = 234
	FACILITY_SOS                                      FACILITY_CODE = 160
	FACILITY_OCP_UPDATE_AGENT                         FACILITY_CODE = 173
	FACILITY_DEBUGGERS                                FACILITY_CODE = 176
	FACILITY_SPP                                      FACILITY_CODE = 256
	FACILITY_RESTORE                                  FACILITY_CODE = 256
	FACILITY_DMSERVER                                 FACILITY_CODE = 256
	FACILITY_DEPLOYMENT_SERVICES_SERVER               FACILITY_CODE = 257
	FACILITY_DEPLOYMENT_SERVICES_IMAGING              FACILITY_CODE = 258
	FACILITY_DEPLOYMENT_SERVICES_MANAGEMENT           FACILITY_CODE = 259
	FACILITY_DEPLOYMENT_SERVICES_UTIL                 FACILITY_CODE = 260
	FACILITY_DEPLOYMENT_SERVICES_BINLSVC              FACILITY_CODE = 261
	FACILITY_DEPLOYMENT_SERVICES_PXE                  FACILITY_CODE = 263
	FACILITY_DEPLOYMENT_SERVICES_TFTP                 FACILITY_CODE = 264
	FACILITY_DEPLOYMENT_SERVICES_TRANSPORT_MANAGEMENT FACILITY_CODE = 272
	FACILITY_DEPLOYMENT_SERVICES_DRIVER_PROVISIONING  FACILITY_CODE = 278
	FACILITY_DEPLOYMENT_SERVICES_MULTICAST_SERVER     FACILITY_CODE = 289
	FACILITY_DEPLOYMENT_SERVICES_MULTICAST_CLIENT     FACILITY_CODE = 290
	FACILITY_DEPLOYMENT_SERVICES_CONTENT_PROVIDER     FACILITY_CODE = 293
	FACILITY_HSP_SERVICES                             FACILITY_CODE = 296
	FACILITY_HSP_SOFTWARE                             FACILITY_CODE = 297
	FACILITY_LINGUISTIC_SERVICES                      FACILITY_CODE = 305
	FACILITY_AUDIOSTREAMING                           FACILITY_CODE = 1094
	FACILITY_TTD                                      FACILITY_CODE = 1490
	FACILITY_ACCELERATOR                              FACILITY_CODE = 1536
	FACILITY_WMAAECMA                                 FACILITY_CODE = 1996
	FACILITY_DIRECTMUSIC                              FACILITY_CODE = 2168
	FACILITY_DIRECT3D10                               FACILITY_CODE = 2169
	FACILITY_DXGI                                     FACILITY_CODE = 2170
	FACILITY_DXGI_DDI                                 FACILITY_CODE = 2171
	FACILITY_DIRECT3D11                               FACILITY_CODE = 2172
	FACILITY_DIRECT3D11_DEBUG                         FACILITY_CODE = 2173
	FACILITY_DIRECT3D12                               FACILITY_CODE = 2174
	FACILITY_DIRECT3D12_DEBUG                         FACILITY_CODE = 2175
	FACILITY_DXCORE                                   FACILITY_CODE = 2176
	FACILITY_PRESENTATION                             FACILITY_CODE = 2177
	FACILITY_LEAP                                     FACILITY_CODE = 2184
	FACILITY_AUDCLNT                                  FACILITY_CODE = 2185
	FACILITY_WINCODEC_DWRITE_DWM                      FACILITY_CODE = 2200
	FACILITY_WINML                                    FACILITY_CODE = 2192
	FACILITY_DIRECT2D                                 FACILITY_CODE = 2201
	FACILITY_DEFRAG                                   FACILITY_CODE = 2304
	FACILITY_USERMODE_SDBUS                           FACILITY_CODE = 2305
	FACILITY_JSCRIPT                                  FACILITY_CODE = 2306
	FACILITY_PIDGENX                                  FACILITY_CODE = 2561
	FACILITY_EAS                                      FACILITY_CODE = 85
	FACILITY_WEB                                      FACILITY_CODE = 885
	FACILITY_WEB_SOCKET                               FACILITY_CODE = 886
	FACILITY_MOBILE                                   FACILITY_CODE = 1793
	FACILITY_SQLITE                                   FACILITY_CODE = 1967
	FACILITY_SERVICE_FABRIC                           FACILITY_CODE = 1968
	FACILITY_UTC                                      FACILITY_CODE = 1989
	FACILITY_WEP                                      FACILITY_CODE = 2049
	FACILITY_SYNCENGINE                               FACILITY_CODE = 2050
	FACILITY_XBOX                                     FACILITY_CODE = 2339
	FACILITY_GAME                                     FACILITY_CODE = 2340
	FACILITY_PIX                                      FACILITY_CODE = 2748
	FACILITY_NT_BIT                                   FACILITY_CODE = 268435456
)

// enum
// flags
type THREAD_ERROR_MODE uint32

const (
	SEM_ALL_ERRORS             THREAD_ERROR_MODE = 0
	SEM_FAILCRITICALERRORS     THREAD_ERROR_MODE = 1
	SEM_NOGPFAULTERRORBOX      THREAD_ERROR_MODE = 2
	SEM_NOOPENFILEERRORBOX     THREAD_ERROR_MODE = 32768
	SEM_NOALIGNMENTFAULTEXCEPT THREAD_ERROR_MODE = 4
)

// enum
// flags
type FORMAT_MESSAGE_OPTIONS uint32

const (
	FORMAT_MESSAGE_ALLOCATE_BUFFER FORMAT_MESSAGE_OPTIONS = 256
	FORMAT_MESSAGE_ARGUMENT_ARRAY  FORMAT_MESSAGE_OPTIONS = 8192
	FORMAT_MESSAGE_FROM_HMODULE    FORMAT_MESSAGE_OPTIONS = 2048
	FORMAT_MESSAGE_FROM_STRING     FORMAT_MESSAGE_OPTIONS = 1024
	FORMAT_MESSAGE_FROM_SYSTEM     FORMAT_MESSAGE_OPTIONS = 4096
	FORMAT_MESSAGE_IGNORE_INSERTS  FORMAT_MESSAGE_OPTIONS = 512
)

// enum
type RTL_VIRTUAL_UNWIND_HANDLER_TYPE uint32

const (
	UNW_FLAG_NHANDLER  RTL_VIRTUAL_UNWIND_HANDLER_TYPE = 0
	UNW_FLAG_EHANDLER  RTL_VIRTUAL_UNWIND_HANDLER_TYPE = 1
	UNW_FLAG_UHANDLER  RTL_VIRTUAL_UNWIND_HANDLER_TYPE = 2
	UNW_FLAG_CHAININFO RTL_VIRTUAL_UNWIND_HANDLER_TYPE = 4
)

// enum
type OPEN_THREAD_WAIT_CHAIN_SESSION_FLAGS uint32

const (
	WCT_ASYNC_OPEN_FLAG OPEN_THREAD_WAIT_CHAIN_SESSION_FLAGS = 1
)

// enum
type SYM_SRV_STORE_FILE_FLAGS uint32

const (
	SYMSTOREOPT_COMPRESS       SYM_SRV_STORE_FILE_FLAGS = 1
	SYMSTOREOPT_OVERWRITE      SYM_SRV_STORE_FILE_FLAGS = 2
	SYMSTOREOPT_PASS_IF_EXISTS SYM_SRV_STORE_FILE_FLAGS = 64
	SYMSTOREOPT_POINTER        SYM_SRV_STORE_FILE_FLAGS = 8
	SYMSTOREOPT_RETURNINDEX    SYM_SRV_STORE_FILE_FLAGS = 4
)

// enum
type PROCESSOR_ARCHITECTURE uint16

const (
	PROCESSOR_ARCHITECTURE_AMD64   PROCESSOR_ARCHITECTURE = 9
	PROCESSOR_ARCHITECTURE_IA64    PROCESSOR_ARCHITECTURE = 6
	PROCESSOR_ARCHITECTURE_INTEL   PROCESSOR_ARCHITECTURE = 0
	PROCESSOR_ARCHITECTURE_ARM     PROCESSOR_ARCHITECTURE = 5
	PROCESSOR_ARCHITECTURE_UNKNOWN PROCESSOR_ARCHITECTURE = 65535
)

// enum
type IMAGE_DIRECTORY_ENTRY uint32

const (
	IMAGE_DIRECTORY_ENTRY_ARCHITECTURE   IMAGE_DIRECTORY_ENTRY = 7
	IMAGE_DIRECTORY_ENTRY_BASERELOC      IMAGE_DIRECTORY_ENTRY = 5
	IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT   IMAGE_DIRECTORY_ENTRY = 11
	IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR IMAGE_DIRECTORY_ENTRY = 14
	IMAGE_DIRECTORY_ENTRY_DEBUG          IMAGE_DIRECTORY_ENTRY = 6
	IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT   IMAGE_DIRECTORY_ENTRY = 13
	IMAGE_DIRECTORY_ENTRY_EXCEPTION      IMAGE_DIRECTORY_ENTRY = 3
	IMAGE_DIRECTORY_ENTRY_EXPORT         IMAGE_DIRECTORY_ENTRY = 0
	IMAGE_DIRECTORY_ENTRY_GLOBALPTR      IMAGE_DIRECTORY_ENTRY = 8
	IMAGE_DIRECTORY_ENTRY_IAT            IMAGE_DIRECTORY_ENTRY = 12
	IMAGE_DIRECTORY_ENTRY_IMPORT         IMAGE_DIRECTORY_ENTRY = 1
	IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG    IMAGE_DIRECTORY_ENTRY = 10
	IMAGE_DIRECTORY_ENTRY_RESOURCE       IMAGE_DIRECTORY_ENTRY = 2
	IMAGE_DIRECTORY_ENTRY_SECURITY       IMAGE_DIRECTORY_ENTRY = 4
	IMAGE_DIRECTORY_ENTRY_TLS            IMAGE_DIRECTORY_ENTRY = 9
)

// enum
type WAIT_CHAIN_THREAD_OPTIONS uint32

const (
	WCT_OUT_OF_PROC_COM_FLAG WAIT_CHAIN_THREAD_OPTIONS = 2
	WCT_OUT_OF_PROC_CS_FLAG  WAIT_CHAIN_THREAD_OPTIONS = 4
	WCT_OUT_OF_PROC_FLAG     WAIT_CHAIN_THREAD_OPTIONS = 1
)

// enum
type SYM_FIND_ID_OPTION uint32

const (
	SSRVOPT_DWORD    SYM_FIND_ID_OPTION = 2
	SSRVOPT_DWORDPTR SYM_FIND_ID_OPTION = 4
	SSRVOPT_GUIDPTR  SYM_FIND_ID_OPTION = 8
)

// enum
// flags
type IMAGE_FILE_CHARACTERISTICS uint16

const (
	IMAGE_FILE_RELOCS_STRIPPED         IMAGE_FILE_CHARACTERISTICS = 1
	IMAGE_FILE_EXECUTABLE_IMAGE        IMAGE_FILE_CHARACTERISTICS = 2
	IMAGE_FILE_LINE_NUMS_STRIPPED      IMAGE_FILE_CHARACTERISTICS = 4
	IMAGE_FILE_LOCAL_SYMS_STRIPPED     IMAGE_FILE_CHARACTERISTICS = 8
	IMAGE_FILE_AGGRESIVE_WS_TRIM       IMAGE_FILE_CHARACTERISTICS = 16
	IMAGE_FILE_LARGE_ADDRESS_AWARE     IMAGE_FILE_CHARACTERISTICS = 32
	IMAGE_FILE_BYTES_REVERSED_LO       IMAGE_FILE_CHARACTERISTICS = 128
	IMAGE_FILE_32BIT_MACHINE           IMAGE_FILE_CHARACTERISTICS = 256
	IMAGE_FILE_DEBUG_STRIPPED          IMAGE_FILE_CHARACTERISTICS = 512
	IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP IMAGE_FILE_CHARACTERISTICS = 1024
	IMAGE_FILE_NET_RUN_FROM_SWAP       IMAGE_FILE_CHARACTERISTICS = 2048
	IMAGE_FILE_SYSTEM                  IMAGE_FILE_CHARACTERISTICS = 4096
	IMAGE_FILE_DLL                     IMAGE_FILE_CHARACTERISTICS = 8192
	IMAGE_FILE_UP_SYSTEM_ONLY          IMAGE_FILE_CHARACTERISTICS = 16384
	IMAGE_FILE_BYTES_REVERSED_HI       IMAGE_FILE_CHARACTERISTICS = 32768
)

// enum
// flags
type IMAGE_FILE_CHARACTERISTICS2 uint32

const (
	IMAGE_FILE_RELOCS_STRIPPED2         IMAGE_FILE_CHARACTERISTICS2 = 1
	IMAGE_FILE_EXECUTABLE_IMAGE2        IMAGE_FILE_CHARACTERISTICS2 = 2
	IMAGE_FILE_LINE_NUMS_STRIPPED2      IMAGE_FILE_CHARACTERISTICS2 = 4
	IMAGE_FILE_LOCAL_SYMS_STRIPPED2     IMAGE_FILE_CHARACTERISTICS2 = 8
	IMAGE_FILE_AGGRESIVE_WS_TRIM2       IMAGE_FILE_CHARACTERISTICS2 = 16
	IMAGE_FILE_LARGE_ADDRESS_AWARE2     IMAGE_FILE_CHARACTERISTICS2 = 32
	IMAGE_FILE_BYTES_REVERSED_LO2       IMAGE_FILE_CHARACTERISTICS2 = 128
	IMAGE_FILE_32BIT_MACHINE2           IMAGE_FILE_CHARACTERISTICS2 = 256
	IMAGE_FILE_DEBUG_STRIPPED2          IMAGE_FILE_CHARACTERISTICS2 = 512
	IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP2 IMAGE_FILE_CHARACTERISTICS2 = 1024
	IMAGE_FILE_NET_RUN_FROM_SWAP2       IMAGE_FILE_CHARACTERISTICS2 = 2048
	IMAGE_FILE_SYSTEM_2                 IMAGE_FILE_CHARACTERISTICS2 = 4096
	IMAGE_FILE_DLL_2                    IMAGE_FILE_CHARACTERISTICS2 = 8192
	IMAGE_FILE_UP_SYSTEM_ONLY_2         IMAGE_FILE_CHARACTERISTICS2 = 16384
	IMAGE_FILE_BYTES_REVERSED_HI_2      IMAGE_FILE_CHARACTERISTICS2 = 32768
)

// enum
// flags
type SYMBOL_INFO_FLAGS uint32

const (
	SYMFLAG_CLR_TOKEN    SYMBOL_INFO_FLAGS = 262144
	SYMFLAG_CONSTANT     SYMBOL_INFO_FLAGS = 256
	SYMFLAG_EXPORT       SYMBOL_INFO_FLAGS = 512
	SYMFLAG_FORWARDER    SYMBOL_INFO_FLAGS = 1024
	SYMFLAG_FRAMEREL     SYMBOL_INFO_FLAGS = 32
	SYMFLAG_FUNCTION     SYMBOL_INFO_FLAGS = 2048
	SYMFLAG_ILREL        SYMBOL_INFO_FLAGS = 65536
	SYMFLAG_LOCAL        SYMBOL_INFO_FLAGS = 128
	SYMFLAG_METADATA     SYMBOL_INFO_FLAGS = 131072
	SYMFLAG_PARAMETER    SYMBOL_INFO_FLAGS = 64
	SYMFLAG_REGISTER     SYMBOL_INFO_FLAGS = 8
	SYMFLAG_REGREL       SYMBOL_INFO_FLAGS = 16
	SYMFLAG_SLOT         SYMBOL_INFO_FLAGS = 32768
	SYMFLAG_THUNK        SYMBOL_INFO_FLAGS = 8192
	SYMFLAG_TLSREL       SYMBOL_INFO_FLAGS = 16384
	SYMFLAG_VALUEPRESENT SYMBOL_INFO_FLAGS = 1
	SYMFLAG_VIRTUAL      SYMBOL_INFO_FLAGS = 4096
)

// enum
type IMAGEHLP_CBA_EVENT_SEVERITY uint32

const (
	SevInfo    IMAGEHLP_CBA_EVENT_SEVERITY = 0
	SevProblem IMAGEHLP_CBA_EVENT_SEVERITY = 1
	SevAttn    IMAGEHLP_CBA_EVENT_SEVERITY = 2
	SevFatal   IMAGEHLP_CBA_EVENT_SEVERITY = 3
)

// enum
type IMAGEHLP_GET_TYPE_INFO_FLAGS uint32

const (
	IMAGEHLP_GET_TYPE_INFO_CHILDREN IMAGEHLP_GET_TYPE_INFO_FLAGS = 2
	IMAGEHLP_GET_TYPE_INFO_UNCACHED IMAGEHLP_GET_TYPE_INFO_FLAGS = 1
)

// enum
type RIP_INFO_TYPE uint32

const (
	SLE_ERROR      RIP_INFO_TYPE = 1
	SLE_MINORERROR RIP_INFO_TYPE = 2
	SLE_WARNING    RIP_INFO_TYPE = 3
)

// enum
type VER_PLATFORM uint32

const (
	VER_PLATFORM_WIN32s        VER_PLATFORM = 0
	VER_PLATFORM_WIN32_WINDOWS VER_PLATFORM = 1
	VER_PLATFORM_WIN32_NT      VER_PLATFORM = 2
)

// enum
type IMAGE_DEBUG_TYPE uint32

const (
	IMAGE_DEBUG_TYPE_UNKNOWN   IMAGE_DEBUG_TYPE = 0
	IMAGE_DEBUG_TYPE_COFF      IMAGE_DEBUG_TYPE = 1
	IMAGE_DEBUG_TYPE_CODEVIEW  IMAGE_DEBUG_TYPE = 2
	IMAGE_DEBUG_TYPE_FPO       IMAGE_DEBUG_TYPE = 3
	IMAGE_DEBUG_TYPE_MISC      IMAGE_DEBUG_TYPE = 4
	IMAGE_DEBUG_TYPE_EXCEPTION IMAGE_DEBUG_TYPE = 5
	IMAGE_DEBUG_TYPE_FIXUP     IMAGE_DEBUG_TYPE = 6
	IMAGE_DEBUG_TYPE_BORLAND   IMAGE_DEBUG_TYPE = 9
)

// enum
type MINIDUMP_THREAD_INFO_DUMP_FLAGS uint32

const (
	MINIDUMP_THREAD_INFO_ERROR_THREAD    MINIDUMP_THREAD_INFO_DUMP_FLAGS = 1
	MINIDUMP_THREAD_INFO_EXITED_THREAD   MINIDUMP_THREAD_INFO_DUMP_FLAGS = 4
	MINIDUMP_THREAD_INFO_INVALID_CONTEXT MINIDUMP_THREAD_INFO_DUMP_FLAGS = 16
	MINIDUMP_THREAD_INFO_INVALID_INFO    MINIDUMP_THREAD_INFO_DUMP_FLAGS = 8
	MINIDUMP_THREAD_INFO_INVALID_TEB     MINIDUMP_THREAD_INFO_DUMP_FLAGS = 32
	MINIDUMP_THREAD_INFO_WRITING_THREAD  MINIDUMP_THREAD_INFO_DUMP_FLAGS = 2
)

// enum
type DEBUG_EVENT_CODE uint32

const (
	CREATE_PROCESS_DEBUG_EVENT DEBUG_EVENT_CODE = 3
	CREATE_THREAD_DEBUG_EVENT  DEBUG_EVENT_CODE = 2
	EXCEPTION_DEBUG_EVENT      DEBUG_EVENT_CODE = 1
	EXIT_PROCESS_DEBUG_EVENT   DEBUG_EVENT_CODE = 5
	EXIT_THREAD_DEBUG_EVENT    DEBUG_EVENT_CODE = 4
	LOAD_DLL_DEBUG_EVENT       DEBUG_EVENT_CODE = 6
	OUTPUT_DEBUG_STRING_EVENT  DEBUG_EVENT_CODE = 8
	RIP_EVENT                  DEBUG_EVENT_CODE = 9
	UNLOAD_DLL_DEBUG_EVENT     DEBUG_EVENT_CODE = 7
)

// enum
// flags
type MINIDUMP_MISC_INFO_FLAGS uint32

const (
	MINIDUMP_MISC1_PROCESS_ID    MINIDUMP_MISC_INFO_FLAGS = 1
	MINIDUMP_MISC1_PROCESS_TIMES MINIDUMP_MISC_INFO_FLAGS = 2
)

// enum
type MODLOAD_DATA_TYPE uint32

const (
	DBHHEADER_DEBUGDIRS MODLOAD_DATA_TYPE = 1
	DBHHEADER_CVMISC    MODLOAD_DATA_TYPE = 2
)

// enum
type ModelObjectKind int32

const (
	ObjectPropertyAccessor      ModelObjectKind = 0
	ObjectContext               ModelObjectKind = 1
	ObjectTargetObject          ModelObjectKind = 2
	ObjectTargetObjectReference ModelObjectKind = 3
	ObjectSynthetic             ModelObjectKind = 4
	ObjectNoValue               ModelObjectKind = 5
	ObjectError                 ModelObjectKind = 6
	ObjectIntrinsic             ModelObjectKind = 7
	ObjectMethod                ModelObjectKind = 8
	ObjectKeyReference          ModelObjectKind = 9
)

// enum
type SymbolKind int32

const (
	Symbol          SymbolKind = 0
	SymbolModule    SymbolKind = 1
	SymbolType      SymbolKind = 2
	SymbolField     SymbolKind = 3
	SymbolConstant  SymbolKind = 4
	SymbolData      SymbolKind = 5
	SymbolBaseClass SymbolKind = 6
	SymbolPublic    SymbolKind = 7
	SymbolFunction  SymbolKind = 8
)

// enum
type TypeKind int32

const (
	TypeUDT           TypeKind = 0
	TypePointer       TypeKind = 1
	TypeMemberPointer TypeKind = 2
	TypeArray         TypeKind = 3
	TypeFunction      TypeKind = 4
	TypeTypedef       TypeKind = 5
	TypeEnum          TypeKind = 6
	TypeIntrinsic     TypeKind = 7
	TypeExtendedArray TypeKind = 8
)

// enum
type IntrinsicKind int32

const (
	IntrinsicVoid    IntrinsicKind = 0
	IntrinsicBool    IntrinsicKind = 1
	IntrinsicChar    IntrinsicKind = 2
	IntrinsicWChar   IntrinsicKind = 3
	IntrinsicInt     IntrinsicKind = 4
	IntrinsicUInt    IntrinsicKind = 5
	IntrinsicLong    IntrinsicKind = 6
	IntrinsicULong   IntrinsicKind = 7
	IntrinsicFloat   IntrinsicKind = 8
	IntrinsicHRESULT IntrinsicKind = 9
	IntrinsicChar16  IntrinsicKind = 10
	IntrinsicChar32  IntrinsicKind = 11
)

// enum
type PointerKind int32

const (
	PointerStandard         PointerKind = 0
	PointerReference        PointerKind = 1
	PointerRValueReference  PointerKind = 2
	PointerCXHat            PointerKind = 3
	PointerManagedReference PointerKind = 4
)

// enum
type CallingConventionKind int32

const (
	CallingConventionUnknown  CallingConventionKind = 0
	CallingConventionCDecl    CallingConventionKind = 1
	CallingConventionFastCall CallingConventionKind = 2
	CallingConventionStdCall  CallingConventionKind = 3
	CallingConventionSysCall  CallingConventionKind = 4
	CallingConventionThisCall CallingConventionKind = 5
)

// enum
type LocationKind int32

const (
	LocationMember   LocationKind = 0
	LocationStatic   LocationKind = 1
	LocationConstant LocationKind = 2
	LocationNone     LocationKind = 3
)

// enum
type PreferredFormat int32

const (
	FormatNone                   PreferredFormat = 0
	FormatSingleCharacter        PreferredFormat = 1
	FormatQuotedString           PreferredFormat = 2
	FormatString                 PreferredFormat = 3
	FormatQuotedUnicodeString    PreferredFormat = 4
	FormatUnicodeString          PreferredFormat = 5
	FormatQuotedUTF8String       PreferredFormat = 6
	FormatUTF8String             PreferredFormat = 7
	FormatBSTRString             PreferredFormat = 8
	FormatQuotedHString          PreferredFormat = 9
	FormatHString                PreferredFormat = 10
	FormatRaw                    PreferredFormat = 11
	FormatEnumNameOnly           PreferredFormat = 12
	FormatEscapedStringWithQuote PreferredFormat = 13
	FormatUTF32String            PreferredFormat = 14
	FormatQuotedUTF32String      PreferredFormat = 15
)

// enum
type RawSearchFlags int32

const (
	RawSearchNone    RawSearchFlags = 0
	RawSearchNoBases RawSearchFlags = 1
)

// enum
type ErrorClass int32

const (
	ErrorClassWarning ErrorClass = 0
	ErrorClassError   ErrorClass = 1
)

// enum
type SignatureComparison int32

const (
	Unrelated    SignatureComparison = 0
	Ambiguous    SignatureComparison = 1
	LessSpecific SignatureComparison = 2
	MoreSpecific SignatureComparison = 3
	Identical    SignatureComparison = 4
)

// enum
type SymbolSearchOptions int32

const (
	SymbolSearchNone            SymbolSearchOptions = 0
	SymbolSearchCompletion      SymbolSearchOptions = 1
	SymbolSearchCaseInsensitive SymbolSearchOptions = 2
)

// enum
type LanguageKind int32

const (
	LanguageUnknown  LanguageKind = 0
	LanguageC        LanguageKind = 1
	LanguageCPP      LanguageKind = 2
	LanguageAssembly LanguageKind = 3
)

// enum
type VarArgsKind int32

const (
	VarArgsNone   VarArgsKind = 0
	VarArgsCStyle VarArgsKind = 1
)

// enum
type ScriptChangeKind int32

const (
	ScriptRename ScriptChangeKind = 0
)

// enum
type ScriptDebugState int32

const (
	ScriptDebugNoDebugger   ScriptDebugState = 0
	ScriptDebugNotExecuting ScriptDebugState = 1
	ScriptDebugExecuting    ScriptDebugState = 2
	ScriptDebugBreak        ScriptDebugState = 3
)

// enum
type ScriptDebugEventFilter int32

const (
	ScriptDebugEventFilterEntry              ScriptDebugEventFilter = 0
	ScriptDebugEventFilterException          ScriptDebugEventFilter = 1
	ScriptDebugEventFilterUnhandledException ScriptDebugEventFilter = 2
	ScriptDebugEventFilterAbort              ScriptDebugEventFilter = 3
)

// enum
type ScriptDebugEvent int32

const (
	ScriptDebugBreakpoint ScriptDebugEvent = 0
	ScriptDebugStep       ScriptDebugEvent = 1
	ScriptDebugException  ScriptDebugEvent = 2
	ScriptDebugAsyncBreak ScriptDebugEvent = 3
)

// enum
type ScriptExecutionKind int32

const (
	ScriptExecutionNormal   ScriptExecutionKind = 0
	ScriptExecutionStepIn   ScriptExecutionKind = 1
	ScriptExecutionStepOut  ScriptExecutionKind = 2
	ScriptExecutionStepOver ScriptExecutionKind = 3
)

// enum
type EXT_TDOP int32

const (
	EXT_TDOP_COPY                         EXT_TDOP = 0
	EXT_TDOP_RELEASE                      EXT_TDOP = 1
	EXT_TDOP_SET_FROM_EXPR                EXT_TDOP = 2
	EXT_TDOP_SET_FROM_U64_EXPR            EXT_TDOP = 3
	EXT_TDOP_GET_FIELD                    EXT_TDOP = 4
	EXT_TDOP_EVALUATE                     EXT_TDOP = 5
	EXT_TDOP_GET_TYPE_NAME                EXT_TDOP = 6
	EXT_TDOP_OUTPUT_TYPE_NAME             EXT_TDOP = 7
	EXT_TDOP_OUTPUT_SIMPLE_VALUE          EXT_TDOP = 8
	EXT_TDOP_OUTPUT_FULL_VALUE            EXT_TDOP = 9
	EXT_TDOP_HAS_FIELD                    EXT_TDOP = 10
	EXT_TDOP_GET_FIELD_OFFSET             EXT_TDOP = 11
	EXT_TDOP_GET_ARRAY_ELEMENT            EXT_TDOP = 12
	EXT_TDOP_GET_DEREFERENCE              EXT_TDOP = 13
	EXT_TDOP_GET_TYPE_SIZE                EXT_TDOP = 14
	EXT_TDOP_OUTPUT_TYPE_DEFINITION       EXT_TDOP = 15
	EXT_TDOP_GET_POINTER_TO               EXT_TDOP = 16
	EXT_TDOP_SET_FROM_TYPE_ID_AND_U64     EXT_TDOP = 17
	EXT_TDOP_SET_PTR_FROM_TYPE_ID_AND_U64 EXT_TDOP = 18
	EXT_TDOP_COUNT                        EXT_TDOP = 19
)

// enum
type DBGKD_MAJOR_TYPES int32

const (
	DBGKD_MAJOR_NT          DBGKD_MAJOR_TYPES = 0
	DBGKD_MAJOR_XBOX        DBGKD_MAJOR_TYPES = 1
	DBGKD_MAJOR_BIG         DBGKD_MAJOR_TYPES = 2
	DBGKD_MAJOR_EXDI        DBGKD_MAJOR_TYPES = 3
	DBGKD_MAJOR_NTBD        DBGKD_MAJOR_TYPES = 4
	DBGKD_MAJOR_EFI         DBGKD_MAJOR_TYPES = 5
	DBGKD_MAJOR_TNT         DBGKD_MAJOR_TYPES = 6
	DBGKD_MAJOR_SINGULARITY DBGKD_MAJOR_TYPES = 7
	DBGKD_MAJOR_HYPERVISOR  DBGKD_MAJOR_TYPES = 8
	DBGKD_MAJOR_MIDORI      DBGKD_MAJOR_TYPES = 9
	DBGKD_MAJOR_CE          DBGKD_MAJOR_TYPES = 10
	DBGKD_MAJOR_COUNT       DBGKD_MAJOR_TYPES = 11
)

// enum
type WCT_OBJECT_TYPE int32

const (
	WctCriticalSectionType WCT_OBJECT_TYPE = 1
	WctSendMessageType     WCT_OBJECT_TYPE = 2
	WctMutexType           WCT_OBJECT_TYPE = 3
	WctAlpcType            WCT_OBJECT_TYPE = 4
	WctComType             WCT_OBJECT_TYPE = 5
	WctThreadWaitType      WCT_OBJECT_TYPE = 6
	WctProcessWaitType     WCT_OBJECT_TYPE = 7
	WctThreadType          WCT_OBJECT_TYPE = 8
	WctComActivationType   WCT_OBJECT_TYPE = 9
	WctUnknownType         WCT_OBJECT_TYPE = 10
	WctSocketIoType        WCT_OBJECT_TYPE = 11
	WctSmbIoType           WCT_OBJECT_TYPE = 12
	WctMaxType             WCT_OBJECT_TYPE = 13
)

// enum
type WCT_OBJECT_STATUS int32

const (
	WctStatusNoAccess     WCT_OBJECT_STATUS = 1
	WctStatusRunning      WCT_OBJECT_STATUS = 2
	WctStatusBlocked      WCT_OBJECT_STATUS = 3
	WctStatusPidOnly      WCT_OBJECT_STATUS = 4
	WctStatusPidOnlyRpcss WCT_OBJECT_STATUS = 5
	WctStatusOwned        WCT_OBJECT_STATUS = 6
	WctStatusNotOwned     WCT_OBJECT_STATUS = 7
	WctStatusAbandoned    WCT_OBJECT_STATUS = 8
	WctStatusUnknown      WCT_OBJECT_STATUS = 9
	WctStatusError        WCT_OBJECT_STATUS = 10
	WctStatusMax          WCT_OBJECT_STATUS = 11
)

// enum
type MINIDUMP_STREAM_TYPE int32

const (
	UnusedStream                MINIDUMP_STREAM_TYPE = 0
	ReservedStream0             MINIDUMP_STREAM_TYPE = 1
	ReservedStream1             MINIDUMP_STREAM_TYPE = 2
	ThreadListStream            MINIDUMP_STREAM_TYPE = 3
	ModuleListStream            MINIDUMP_STREAM_TYPE = 4
	MemoryListStream            MINIDUMP_STREAM_TYPE = 5
	ExceptionStream             MINIDUMP_STREAM_TYPE = 6
	SystemInfoStream            MINIDUMP_STREAM_TYPE = 7
	ThreadExListStream          MINIDUMP_STREAM_TYPE = 8
	Memory64ListStream          MINIDUMP_STREAM_TYPE = 9
	CommentStreamA              MINIDUMP_STREAM_TYPE = 10
	CommentStreamW              MINIDUMP_STREAM_TYPE = 11
	HandleDataStream            MINIDUMP_STREAM_TYPE = 12
	FunctionTableStream         MINIDUMP_STREAM_TYPE = 13
	UnloadedModuleListStream    MINIDUMP_STREAM_TYPE = 14
	MiscInfoStream              MINIDUMP_STREAM_TYPE = 15
	MemoryInfoListStream        MINIDUMP_STREAM_TYPE = 16
	ThreadInfoListStream        MINIDUMP_STREAM_TYPE = 17
	HandleOperationListStream   MINIDUMP_STREAM_TYPE = 18
	TokenStream                 MINIDUMP_STREAM_TYPE = 19
	JavaScriptDataStream        MINIDUMP_STREAM_TYPE = 20
	SystemMemoryInfoStream      MINIDUMP_STREAM_TYPE = 21
	ProcessVmCountersStream     MINIDUMP_STREAM_TYPE = 22
	IptTraceStream              MINIDUMP_STREAM_TYPE = 23
	ThreadNamesStream           MINIDUMP_STREAM_TYPE = 24
	CeStreamNull                MINIDUMP_STREAM_TYPE = 32768
	CeStreamSystemInfo          MINIDUMP_STREAM_TYPE = 32769
	CeStreamException           MINIDUMP_STREAM_TYPE = 32770
	CeStreamModuleList          MINIDUMP_STREAM_TYPE = 32771
	CeStreamProcessList         MINIDUMP_STREAM_TYPE = 32772
	CeStreamThreadList          MINIDUMP_STREAM_TYPE = 32773
	CeStreamThreadContextList   MINIDUMP_STREAM_TYPE = 32774
	CeStreamThreadCallStackList MINIDUMP_STREAM_TYPE = 32775
	CeStreamMemoryVirtualList   MINIDUMP_STREAM_TYPE = 32776
	CeStreamMemoryPhysicalList  MINIDUMP_STREAM_TYPE = 32777
	CeStreamBucketParameters    MINIDUMP_STREAM_TYPE = 32778
	CeStreamProcessModuleMap    MINIDUMP_STREAM_TYPE = 32779
	CeStreamDiagnosisList       MINIDUMP_STREAM_TYPE = 32780
	LastReservedStream          MINIDUMP_STREAM_TYPE = 65535
)

// enum
type MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE int32

const (
	MiniHandleObjectInformationNone    MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 0
	MiniThreadInformation1             MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 1
	MiniMutantInformation1             MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 2
	MiniMutantInformation2             MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 3
	MiniProcessInformation1            MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 4
	MiniProcessInformation2            MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 5
	MiniEventInformation1              MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 6
	MiniSectionInformation1            MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 7
	MiniSemaphoreInformation1          MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 8
	MiniHandleObjectInformationTypeMax MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE = 9
)

// enum
type MINIDUMP_CALLBACK_TYPE int32

const (
	ModuleCallback               MINIDUMP_CALLBACK_TYPE = 0
	ThreadCallback               MINIDUMP_CALLBACK_TYPE = 1
	ThreadExCallback             MINIDUMP_CALLBACK_TYPE = 2
	IncludeThreadCallback        MINIDUMP_CALLBACK_TYPE = 3
	IncludeModuleCallback        MINIDUMP_CALLBACK_TYPE = 4
	MemoryCallback               MINIDUMP_CALLBACK_TYPE = 5
	CancelCallback               MINIDUMP_CALLBACK_TYPE = 6
	WriteKernelMinidumpCallback  MINIDUMP_CALLBACK_TYPE = 7
	KernelMinidumpStatusCallback MINIDUMP_CALLBACK_TYPE = 8
	RemoveMemoryCallback         MINIDUMP_CALLBACK_TYPE = 9
	IncludeVmRegionCallback      MINIDUMP_CALLBACK_TYPE = 10
	IoStartCallback              MINIDUMP_CALLBACK_TYPE = 11
	IoWriteAllCallback           MINIDUMP_CALLBACK_TYPE = 12
	IoFinishCallback             MINIDUMP_CALLBACK_TYPE = 13
	ReadMemoryFailureCallback    MINIDUMP_CALLBACK_TYPE = 14
	SecondaryFlagsCallback       MINIDUMP_CALLBACK_TYPE = 15
	IsProcessSnapshotCallback    MINIDUMP_CALLBACK_TYPE = 16
	VmStartCallback              MINIDUMP_CALLBACK_TYPE = 17
	VmQueryCallback              MINIDUMP_CALLBACK_TYPE = 18
	VmPreReadCallback            MINIDUMP_CALLBACK_TYPE = 19
	VmPostReadCallback           MINIDUMP_CALLBACK_TYPE = 20
)

// enum
type THREAD_WRITE_FLAGS int32

const (
	ThreadWriteThread            THREAD_WRITE_FLAGS = 1
	ThreadWriteStack             THREAD_WRITE_FLAGS = 2
	ThreadWriteContext           THREAD_WRITE_FLAGS = 4
	ThreadWriteBackingStore      THREAD_WRITE_FLAGS = 8
	ThreadWriteInstructionWindow THREAD_WRITE_FLAGS = 16
	ThreadWriteThreadData        THREAD_WRITE_FLAGS = 32
	ThreadWriteThreadInfo        THREAD_WRITE_FLAGS = 64
)

// enum
type MODULE_WRITE_FLAGS int32

const (
	ModuleWriteModule        MODULE_WRITE_FLAGS = 1
	ModuleWriteDataSeg       MODULE_WRITE_FLAGS = 2
	ModuleWriteMiscRecord    MODULE_WRITE_FLAGS = 4
	ModuleWriteCvRecord      MODULE_WRITE_FLAGS = 8
	ModuleReferencedByMemory MODULE_WRITE_FLAGS = 16
	ModuleWriteTlsData       MODULE_WRITE_FLAGS = 32
	ModuleWriteCodeSegs      MODULE_WRITE_FLAGS = 64
)

// enum
// flags
type MINIDUMP_TYPE uint32

const (
	MiniDumpNormal                         MINIDUMP_TYPE = 0
	MiniDumpWithDataSegs                   MINIDUMP_TYPE = 1
	MiniDumpWithFullMemory                 MINIDUMP_TYPE = 2
	MiniDumpWithHandleData                 MINIDUMP_TYPE = 4
	MiniDumpFilterMemory                   MINIDUMP_TYPE = 8
	MiniDumpScanMemory                     MINIDUMP_TYPE = 16
	MiniDumpWithUnloadedModules            MINIDUMP_TYPE = 32
	MiniDumpWithIndirectlyReferencedMemory MINIDUMP_TYPE = 64
	MiniDumpFilterModulePaths              MINIDUMP_TYPE = 128
	MiniDumpWithProcessThreadData          MINIDUMP_TYPE = 256
	MiniDumpWithPrivateReadWriteMemory     MINIDUMP_TYPE = 512
	MiniDumpWithoutOptionalData            MINIDUMP_TYPE = 1024
	MiniDumpWithFullMemoryInfo             MINIDUMP_TYPE = 2048
	MiniDumpWithThreadInfo                 MINIDUMP_TYPE = 4096
	MiniDumpWithCodeSegs                   MINIDUMP_TYPE = 8192
	MiniDumpWithoutAuxiliaryState          MINIDUMP_TYPE = 16384
	MiniDumpWithFullAuxiliaryState         MINIDUMP_TYPE = 32768
	MiniDumpWithPrivateWriteCopyMemory     MINIDUMP_TYPE = 65536
	MiniDumpIgnoreInaccessibleMemory       MINIDUMP_TYPE = 131072
	MiniDumpWithTokenInformation           MINIDUMP_TYPE = 262144
	MiniDumpWithModuleHeaders              MINIDUMP_TYPE = 524288
	MiniDumpFilterTriage                   MINIDUMP_TYPE = 1048576
	MiniDumpWithAvxXStateContext           MINIDUMP_TYPE = 2097152
	MiniDumpWithIptTrace                   MINIDUMP_TYPE = 4194304
	MiniDumpScanInaccessiblePartialPages   MINIDUMP_TYPE = 8388608
	MiniDumpFilterWriteCombinedMemory      MINIDUMP_TYPE = 16777216
	MiniDumpValidTypeFlags                 MINIDUMP_TYPE = 33554431
)

// enum
type MINIDUMP_SECONDARY_FLAGS int32

const (
	MiniSecondaryWithoutPowerInfo MINIDUMP_SECONDARY_FLAGS = 1
	MiniSecondaryValidFlags       MINIDUMP_SECONDARY_FLAGS = 1
)

// enum
type SCRIPTLANGUAGEVERSION int32

const (
	SCRIPTLANGUAGEVERSION_DEFAULT SCRIPTLANGUAGEVERSION = 0
	SCRIPTLANGUAGEVERSION_5_7     SCRIPTLANGUAGEVERSION = 1
	SCRIPTLANGUAGEVERSION_5_8     SCRIPTLANGUAGEVERSION = 2
	SCRIPTLANGUAGEVERSION_MAX     SCRIPTLANGUAGEVERSION = 255
)

// enum
type SCRIPTSTATE int32

const (
	SCRIPTSTATE_UNINITIALIZED SCRIPTSTATE = 0
	SCRIPTSTATE_INITIALIZED   SCRIPTSTATE = 5
	SCRIPTSTATE_STARTED       SCRIPTSTATE = 1
	SCRIPTSTATE_CONNECTED     SCRIPTSTATE = 2
	SCRIPTSTATE_DISCONNECTED  SCRIPTSTATE = 3
	SCRIPTSTATE_CLOSED        SCRIPTSTATE = 4
)

// enum
type SCRIPTTRACEINFO int32

const (
	SCRIPTTRACEINFO_SCRIPTSTART    SCRIPTTRACEINFO = 0
	SCRIPTTRACEINFO_SCRIPTEND      SCRIPTTRACEINFO = 1
	SCRIPTTRACEINFO_COMCALLSTART   SCRIPTTRACEINFO = 2
	SCRIPTTRACEINFO_COMCALLEND     SCRIPTTRACEINFO = 3
	SCRIPTTRACEINFO_CREATEOBJSTART SCRIPTTRACEINFO = 4
	SCRIPTTRACEINFO_CREATEOBJEND   SCRIPTTRACEINFO = 5
	SCRIPTTRACEINFO_GETOBJSTART    SCRIPTTRACEINFO = 6
	SCRIPTTRACEINFO_GETOBJEND      SCRIPTTRACEINFO = 7
)

// enum
type SCRIPTTHREADSTATE int32

const (
	SCRIPTTHREADSTATE_NOTINSCRIPT SCRIPTTHREADSTATE = 0
	SCRIPTTHREADSTATE_RUNNING     SCRIPTTHREADSTATE = 1
)

// enum
type SCRIPTGCTYPE int32

const (
	SCRIPTGCTYPE_NORMAL     SCRIPTGCTYPE = 0
	SCRIPTGCTYPE_EXHAUSTIVE SCRIPTGCTYPE = 1
)

// enum
type SCRIPTUICITEM int32

const (
	SCRIPTUICITEM_INPUTBOX SCRIPTUICITEM = 1
	SCRIPTUICITEM_MSGBOX   SCRIPTUICITEM = 2
)

// enum
type SCRIPTUICHANDLING int32

const (
	SCRIPTUICHANDLING_ALLOW       SCRIPTUICHANDLING = 0
	SCRIPTUICHANDLING_NOUIERROR   SCRIPTUICHANDLING = 1
	SCRIPTUICHANDLING_NOUIDEFAULT SCRIPTUICHANDLING = 2
)

// enum
// flags
type DBGPROP_ATTRIB_FLAGS uint32

const (
	DBGPROP_ATTRIB_NO_ATTRIB              DBGPROP_ATTRIB_FLAGS = 0
	DBGPROP_ATTRIB_VALUE_IS_INVALID       DBGPROP_ATTRIB_FLAGS = 8
	DBGPROP_ATTRIB_VALUE_IS_EXPANDABLE    DBGPROP_ATTRIB_FLAGS = 16
	DBGPROP_ATTRIB_VALUE_IS_FAKE          DBGPROP_ATTRIB_FLAGS = 32
	DBGPROP_ATTRIB_VALUE_IS_METHOD        DBGPROP_ATTRIB_FLAGS = 256
	DBGPROP_ATTRIB_VALUE_IS_EVENT         DBGPROP_ATTRIB_FLAGS = 512
	DBGPROP_ATTRIB_VALUE_IS_RAW_STRING    DBGPROP_ATTRIB_FLAGS = 1024
	DBGPROP_ATTRIB_VALUE_READONLY         DBGPROP_ATTRIB_FLAGS = 2048
	DBGPROP_ATTRIB_ACCESS_PUBLIC          DBGPROP_ATTRIB_FLAGS = 4096
	DBGPROP_ATTRIB_ACCESS_PRIVATE         DBGPROP_ATTRIB_FLAGS = 8192
	DBGPROP_ATTRIB_ACCESS_PROTECTED       DBGPROP_ATTRIB_FLAGS = 16384
	DBGPROP_ATTRIB_ACCESS_FINAL           DBGPROP_ATTRIB_FLAGS = 32768
	DBGPROP_ATTRIB_STORAGE_GLOBAL         DBGPROP_ATTRIB_FLAGS = 65536
	DBGPROP_ATTRIB_STORAGE_STATIC         DBGPROP_ATTRIB_FLAGS = 131072
	DBGPROP_ATTRIB_STORAGE_FIELD          DBGPROP_ATTRIB_FLAGS = 262144
	DBGPROP_ATTRIB_STORAGE_VIRTUAL        DBGPROP_ATTRIB_FLAGS = 524288
	DBGPROP_ATTRIB_TYPE_IS_CONSTANT       DBGPROP_ATTRIB_FLAGS = 1048576
	DBGPROP_ATTRIB_TYPE_IS_SYNCHRONIZED   DBGPROP_ATTRIB_FLAGS = 2097152
	DBGPROP_ATTRIB_TYPE_IS_VOLATILE       DBGPROP_ATTRIB_FLAGS = 4194304
	DBGPROP_ATTRIB_HAS_EXTENDED_ATTRIBS   DBGPROP_ATTRIB_FLAGS = 8388608
	DBGPROP_ATTRIB_FRAME_INTRYBLOCK       DBGPROP_ATTRIB_FLAGS = 16777216
	DBGPROP_ATTRIB_FRAME_INCATCHBLOCK     DBGPROP_ATTRIB_FLAGS = 33554432
	DBGPROP_ATTRIB_FRAME_INFINALLYBLOCK   DBGPROP_ATTRIB_FLAGS = 67108864
	DBGPROP_ATTRIB_VALUE_IS_RETURN_VALUE  DBGPROP_ATTRIB_FLAGS = 134217728
	DBGPROP_ATTRIB_VALUE_PENDING_MUTATION DBGPROP_ATTRIB_FLAGS = 268435456
)

// enum
// flags
type DBGPROP_INFO uint32

const (
	DBGPROP_INFO_NAME         DBGPROP_INFO = 1
	DBGPROP_INFO_TYPE         DBGPROP_INFO = 2
	DBGPROP_INFO_VALUE        DBGPROP_INFO = 4
	DBGPROP_INFO_FULLNAME     DBGPROP_INFO = 32
	DBGPROP_INFO_ATTRIBUTES   DBGPROP_INFO = 8
	DBGPROP_INFO_DEBUGPROP    DBGPROP_INFO = 16
	DBGPROP_INFO_BEAUTIFY     DBGPROP_INFO = 33554432
	DBGPROP_INFO_CALLTOSTRING DBGPROP_INFO = 67108864
	DBGPROP_INFO_AUTOEXPAND   DBGPROP_INFO = 134217728
)

// enum
// flags
type OBJECT_ATTRIB_FLAG uint32

const (
	OBJECT_ATTRIB_NO_ATTRIB            OBJECT_ATTRIB_FLAG = 0
	OBJECT_ATTRIB_NO_NAME              OBJECT_ATTRIB_FLAG = 1
	OBJECT_ATTRIB_NO_TYPE              OBJECT_ATTRIB_FLAG = 2
	OBJECT_ATTRIB_NO_VALUE             OBJECT_ATTRIB_FLAG = 4
	OBJECT_ATTRIB_VALUE_IS_INVALID     OBJECT_ATTRIB_FLAG = 8
	OBJECT_ATTRIB_VALUE_IS_OBJECT      OBJECT_ATTRIB_FLAG = 16
	OBJECT_ATTRIB_VALUE_IS_ENUM        OBJECT_ATTRIB_FLAG = 32
	OBJECT_ATTRIB_VALUE_IS_CUSTOM      OBJECT_ATTRIB_FLAG = 64
	OBJECT_ATTRIB_OBJECT_IS_EXPANDABLE OBJECT_ATTRIB_FLAG = 112
	OBJECT_ATTRIB_VALUE_HAS_CODE       OBJECT_ATTRIB_FLAG = 128
	OBJECT_ATTRIB_TYPE_IS_OBJECT       OBJECT_ATTRIB_FLAG = 256
	OBJECT_ATTRIB_TYPE_HAS_CODE        OBJECT_ATTRIB_FLAG = 512
	OBJECT_ATTRIB_TYPE_IS_EXPANDABLE   OBJECT_ATTRIB_FLAG = 256
	OBJECT_ATTRIB_SLOT_IS_CATEGORY     OBJECT_ATTRIB_FLAG = 1024
	OBJECT_ATTRIB_VALUE_READONLY       OBJECT_ATTRIB_FLAG = 2048
	OBJECT_ATTRIB_ACCESS_PUBLIC        OBJECT_ATTRIB_FLAG = 4096
	OBJECT_ATTRIB_ACCESS_PRIVATE       OBJECT_ATTRIB_FLAG = 8192
	OBJECT_ATTRIB_ACCESS_PROTECTED     OBJECT_ATTRIB_FLAG = 16384
	OBJECT_ATTRIB_ACCESS_FINAL         OBJECT_ATTRIB_FLAG = 32768
	OBJECT_ATTRIB_STORAGE_GLOBAL       OBJECT_ATTRIB_FLAG = 65536
	OBJECT_ATTRIB_STORAGE_STATIC       OBJECT_ATTRIB_FLAG = 131072
	OBJECT_ATTRIB_STORAGE_FIELD        OBJECT_ATTRIB_FLAG = 262144
	OBJECT_ATTRIB_STORAGE_VIRTUAL      OBJECT_ATTRIB_FLAG = 524288
	OBJECT_ATTRIB_TYPE_IS_CONSTANT     OBJECT_ATTRIB_FLAG = 1048576
	OBJECT_ATTRIB_TYPE_IS_SYNCHRONIZED OBJECT_ATTRIB_FLAG = 2097152
	OBJECT_ATTRIB_TYPE_IS_VOLATILE     OBJECT_ATTRIB_FLAG = 4194304
	OBJECT_ATTRIB_HAS_EXTENDED_ATTRIBS OBJECT_ATTRIB_FLAG = 8388608
	OBJECT_ATTRIB_IS_CLASS             OBJECT_ATTRIB_FLAG = 16777216
	OBJECT_ATTRIB_IS_FUNCTION          OBJECT_ATTRIB_FLAG = 33554432
	OBJECT_ATTRIB_IS_VARIABLE          OBJECT_ATTRIB_FLAG = 67108864
	OBJECT_ATTRIB_IS_PROPERTY          OBJECT_ATTRIB_FLAG = 134217728
	OBJECT_ATTRIB_IS_MACRO             OBJECT_ATTRIB_FLAG = 268435456
	OBJECT_ATTRIB_IS_TYPE              OBJECT_ATTRIB_FLAG = 536870912
	OBJECT_ATTRIB_IS_INHERITED         OBJECT_ATTRIB_FLAG = 1073741824
	OBJECT_ATTRIB_IS_INTERFACE         OBJECT_ATTRIB_FLAG = 2147483648
)

// enum
type PROP_INFO_FLAGS int32

const (
	PROP_INFO_NAME       PROP_INFO_FLAGS = 1
	PROP_INFO_TYPE       PROP_INFO_FLAGS = 2
	PROP_INFO_VALUE      PROP_INFO_FLAGS = 4
	PROP_INFO_FULLNAME   PROP_INFO_FLAGS = 32
	PROP_INFO_ATTRIBUTES PROP_INFO_FLAGS = 8
	PROP_INFO_DEBUGPROP  PROP_INFO_FLAGS = 16
	PROP_INFO_AUTOEXPAND PROP_INFO_FLAGS = 134217728
)

// enum
type EX_PROP_INFO_FLAGS int32

const (
	EX_PROP_INFO_ID           EX_PROP_INFO_FLAGS = 256
	EX_PROP_INFO_NTYPE        EX_PROP_INFO_FLAGS = 512
	EX_PROP_INFO_NVALUE       EX_PROP_INFO_FLAGS = 1024
	EX_PROP_INFO_LOCKBYTES    EX_PROP_INFO_FLAGS = 2048
	EX_PROP_INFO_DEBUGEXTPROP EX_PROP_INFO_FLAGS = 4096
)

// enum
type BREAKPOINT_STATE int32

const (
	BREAKPOINT_DELETED  BREAKPOINT_STATE = 0
	BREAKPOINT_DISABLED BREAKPOINT_STATE = 1
	BREAKPOINT_ENABLED  BREAKPOINT_STATE = 2
)

// enum
type BREAKREASON int32

const (
	BREAKREASON_STEP                BREAKREASON = 0
	BREAKREASON_BREAKPOINT          BREAKREASON = 1
	BREAKREASON_DEBUGGER_BLOCK      BREAKREASON = 2
	BREAKREASON_HOST_INITIATED      BREAKREASON = 3
	BREAKREASON_LANGUAGE_INITIATED  BREAKREASON = 4
	BREAKREASON_DEBUGGER_HALT       BREAKREASON = 5
	BREAKREASON_ERROR               BREAKREASON = 6
	BREAKREASON_JIT                 BREAKREASON = 7
	BREAKREASON_MUTATION_BREAKPOINT BREAKREASON = 8
)

// enum
type BREAKRESUME_ACTION int32

const (
	BREAKRESUMEACTION_ABORT         BREAKRESUME_ACTION = 0
	BREAKRESUMEACTION_CONTINUE      BREAKRESUME_ACTION = 1
	BREAKRESUMEACTION_STEP_INTO     BREAKRESUME_ACTION = 2
	BREAKRESUMEACTION_STEP_OVER     BREAKRESUME_ACTION = 3
	BREAKRESUMEACTION_STEP_OUT      BREAKRESUME_ACTION = 4
	BREAKRESUMEACTION_IGNORE        BREAKRESUME_ACTION = 5
	BREAKRESUMEACTION_STEP_DOCUMENT BREAKRESUME_ACTION = 6
)

// enum
type ERRORRESUMEACTION int32

const (
	ERRORRESUMEACTION_ReexecuteErrorStatement         ERRORRESUMEACTION = 0
	ERRORRESUMEACTION_AbortCallAndReturnErrorToCaller ERRORRESUMEACTION = 1
	ERRORRESUMEACTION_SkipErrorStatement              ERRORRESUMEACTION = 2
)

// enum
type DOCUMENTNAMETYPE int32

const (
	DOCUMENTNAMETYPE_APPNODE        DOCUMENTNAMETYPE = 0
	DOCUMENTNAMETYPE_TITLE          DOCUMENTNAMETYPE = 1
	DOCUMENTNAMETYPE_FILE_TAIL      DOCUMENTNAMETYPE = 2
	DOCUMENTNAMETYPE_URL            DOCUMENTNAMETYPE = 3
	DOCUMENTNAMETYPE_UNIQUE_TITLE   DOCUMENTNAMETYPE = 4
	DOCUMENTNAMETYPE_SOURCE_MAP_URL DOCUMENTNAMETYPE = 5
)

// enum
type PROFILER_SCRIPT_TYPE int32

const (
	PROFILER_SCRIPT_TYPE_USER    PROFILER_SCRIPT_TYPE = 0
	PROFILER_SCRIPT_TYPE_DYNAMIC PROFILER_SCRIPT_TYPE = 1
	PROFILER_SCRIPT_TYPE_NATIVE  PROFILER_SCRIPT_TYPE = 2
	PROFILER_SCRIPT_TYPE_DOM     PROFILER_SCRIPT_TYPE = 3
)

// enum
// flags
type PROFILER_EVENT_MASK uint32

const (
	PROFILER_EVENT_MASK_TRACE_SCRIPT_FUNCTION_CALL PROFILER_EVENT_MASK = 1
	PROFILER_EVENT_MASK_TRACE_NATIVE_FUNCTION_CALL PROFILER_EVENT_MASK = 2
	PROFILER_EVENT_MASK_TRACE_DOM_FUNCTION_CALL    PROFILER_EVENT_MASK = 4
	PROFILER_EVENT_MASK_TRACE_ALL                  PROFILER_EVENT_MASK = 3
	PROFILER_EVENT_MASK_TRACE_ALL_WITH_DOM         PROFILER_EVENT_MASK = 7
)

// enum
// flags
type PROFILER_HEAP_OBJECT_FLAGS uint32

const (
	PROFILER_HEAP_OBJECT_FLAGS_NEW_OBJECT            PROFILER_HEAP_OBJECT_FLAGS = 1
	PROFILER_HEAP_OBJECT_FLAGS_IS_ROOT               PROFILER_HEAP_OBJECT_FLAGS = 2
	PROFILER_HEAP_OBJECT_FLAGS_SITE_CLOSED           PROFILER_HEAP_OBJECT_FLAGS = 4
	PROFILER_HEAP_OBJECT_FLAGS_EXTERNAL              PROFILER_HEAP_OBJECT_FLAGS = 8
	PROFILER_HEAP_OBJECT_FLAGS_EXTERNAL_UNKNOWN      PROFILER_HEAP_OBJECT_FLAGS = 16
	PROFILER_HEAP_OBJECT_FLAGS_EXTERNAL_DISPATCH     PROFILER_HEAP_OBJECT_FLAGS = 32
	PROFILER_HEAP_OBJECT_FLAGS_SIZE_APPROXIMATE      PROFILER_HEAP_OBJECT_FLAGS = 64
	PROFILER_HEAP_OBJECT_FLAGS_SIZE_UNAVAILABLE      PROFILER_HEAP_OBJECT_FLAGS = 128
	PROFILER_HEAP_OBJECT_FLAGS_NEW_STATE_UNAVAILABLE PROFILER_HEAP_OBJECT_FLAGS = 256
	PROFILER_HEAP_OBJECT_FLAGS_WINRT_INSTANCE        PROFILER_HEAP_OBJECT_FLAGS = 512
	PROFILER_HEAP_OBJECT_FLAGS_WINRT_RUNTIMECLASS    PROFILER_HEAP_OBJECT_FLAGS = 1024
	PROFILER_HEAP_OBJECT_FLAGS_WINRT_DELEGATE        PROFILER_HEAP_OBJECT_FLAGS = 2048
	PROFILER_HEAP_OBJECT_FLAGS_WINRT_NAMESPACE       PROFILER_HEAP_OBJECT_FLAGS = 4096
)

// enum
type PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE int32

const (
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_PROTOTYPE                  PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 1
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_FUNCTION_NAME              PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 2
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_SCOPE_LIST                 PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 3
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_INTERNAL_PROPERTY          PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 4
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_NAME_PROPERTIES            PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 5
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_INDEX_PROPERTIES           PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 6
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_ELEMENT_ATTRIBUTES_SIZE    PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 7
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_ELEMENT_TEXT_CHILDREN_SIZE PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 8
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_RELATIONSHIPS              PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 9
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_WINRTEVENTS                PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 10
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_WEAKMAP_COLLECTION_LIST    PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 11
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_MAP_COLLECTION_LIST        PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 12
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_SET_COLLECTION_LIST        PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 13
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_MAX_VALUE                  PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE = 13
)

// enum
// flags
type PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS uint32

const (
	PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_NONE            PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS = 0
	PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_IS_GET_ACCESSOR PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS = 65536
	PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_IS_SET_ACCESSOR PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS = 131072
	PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_LET_VARIABLE    PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS = 262144
	PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS_CONST_VARIABLE  PROFILER_HEAP_OBJECT_RELATIONSHIP_FLAGS = 524288
)

// enum
// flags
type PROFILER_HEAP_ENUM_FLAGS uint32

const (
	PROFILER_HEAP_ENUM_FLAGS_NONE                     PROFILER_HEAP_ENUM_FLAGS = 0
	PROFILER_HEAP_ENUM_FLAGS_STORE_RELATIONSHIP_FLAGS PROFILER_HEAP_ENUM_FLAGS = 1
	PROFILER_HEAP_ENUM_FLAGS_SUBSTRINGS               PROFILER_HEAP_ENUM_FLAGS = 2
	PROFILER_HEAP_ENUM_FLAGS_RELATIONSHIP_SUBSTRINGS  PROFILER_HEAP_ENUM_FLAGS = 3
)

// enum
type PROFILER_RELATIONSHIP_INFO int32

const (
	PROFILER_PROPERTY_TYPE_NUMBER          PROFILER_RELATIONSHIP_INFO = 1
	PROFILER_PROPERTY_TYPE_STRING          PROFILER_RELATIONSHIP_INFO = 2
	PROFILER_PROPERTY_TYPE_HEAP_OBJECT     PROFILER_RELATIONSHIP_INFO = 3
	PROFILER_PROPERTY_TYPE_EXTERNAL_OBJECT PROFILER_RELATIONSHIP_INFO = 4
	PROFILER_PROPERTY_TYPE_BSTR            PROFILER_RELATIONSHIP_INFO = 5
	PROFILER_PROPERTY_TYPE_SUBSTRING       PROFILER_RELATIONSHIP_INFO = 6
)

// enum
type PROFILER_HEAP_SUMMARY_VERSION int32

const (
	PROFILER_HEAP_SUMMARY_VERSION_1 PROFILER_HEAP_SUMMARY_VERSION = 1
)

// enum
type IMAGEHLP_STATUS_REASON int32

const (
	BindOutOfMemory           IMAGEHLP_STATUS_REASON = 0
	BindRvaToVaFailed         IMAGEHLP_STATUS_REASON = 1
	BindNoRoomInImage         IMAGEHLP_STATUS_REASON = 2
	BindImportModuleFailed    IMAGEHLP_STATUS_REASON = 3
	BindImportProcedureFailed IMAGEHLP_STATUS_REASON = 4
	BindImportModule          IMAGEHLP_STATUS_REASON = 5
	BindImportProcedure       IMAGEHLP_STATUS_REASON = 6
	BindForwarder             IMAGEHLP_STATUS_REASON = 7
	BindForwarderNOT          IMAGEHLP_STATUS_REASON = 8
	BindImageModified         IMAGEHLP_STATUS_REASON = 9
	BindExpandFileHeaders     IMAGEHLP_STATUS_REASON = 10
	BindImageComplete         IMAGEHLP_STATUS_REASON = 11
	BindMismatchedSymbols     IMAGEHLP_STATUS_REASON = 12
	BindSymbolsNotUpdated     IMAGEHLP_STATUS_REASON = 13
	BindImportProcedure32     IMAGEHLP_STATUS_REASON = 14
	BindImportProcedure64     IMAGEHLP_STATUS_REASON = 15
	BindForwarder32           IMAGEHLP_STATUS_REASON = 16
	BindForwarder64           IMAGEHLP_STATUS_REASON = 17
	BindForwarderNOT32        IMAGEHLP_STATUS_REASON = 18
	BindForwarderNOT64        IMAGEHLP_STATUS_REASON = 19
)

// enum
type ADDRESS_MODE int32

const (
	AddrMode1616 ADDRESS_MODE = 0
	AddrMode1632 ADDRESS_MODE = 1
	AddrModeReal ADDRESS_MODE = 2
	AddrModeFlat ADDRESS_MODE = 3
)

// enum
type SYM_TYPE int32

const (
	SymNone     SYM_TYPE = 0
	SymCoff     SYM_TYPE = 1
	SymCv       SYM_TYPE = 2
	SymPdb      SYM_TYPE = 3
	SymExport   SYM_TYPE = 4
	SymDeferred SYM_TYPE = 5
	SymSym      SYM_TYPE = 6
	SymDia      SYM_TYPE = 7
	SymVirtual  SYM_TYPE = 8
	NumSymTypes SYM_TYPE = 9
)

// enum
type IMAGEHLP_HD_TYPE int32

const (
	HdBase IMAGEHLP_HD_TYPE = 0
	HdSym  IMAGEHLP_HD_TYPE = 1
	HdSrc  IMAGEHLP_HD_TYPE = 2
	HdMax  IMAGEHLP_HD_TYPE = 3
)

// enum
type IMAGEHLP_EXTENDED_OPTIONS int32

const (
	SYMOPT_EX_DISABLEACCESSTIMEUPDATE IMAGEHLP_EXTENDED_OPTIONS = 0
	SYMOPT_EX_LASTVALIDDEBUGDIRECTORY IMAGEHLP_EXTENDED_OPTIONS = 1
	SYMOPT_EX_NOIMPLICITPATTERNSEARCH IMAGEHLP_EXTENDED_OPTIONS = 2
	SYMOPT_EX_NEVERLOADSYMBOLS        IMAGEHLP_EXTENDED_OPTIONS = 3
	SYMOPT_EX_MAX                     IMAGEHLP_EXTENDED_OPTIONS = 4
)

// enum
type IMAGEHLP_SYMBOL_TYPE_INFO int32

const (
	TI_GET_SYMTAG                   IMAGEHLP_SYMBOL_TYPE_INFO = 0
	TI_GET_SYMNAME                  IMAGEHLP_SYMBOL_TYPE_INFO = 1
	TI_GET_LENGTH                   IMAGEHLP_SYMBOL_TYPE_INFO = 2
	TI_GET_TYPE                     IMAGEHLP_SYMBOL_TYPE_INFO = 3
	TI_GET_TYPEID                   IMAGEHLP_SYMBOL_TYPE_INFO = 4
	TI_GET_BASETYPE                 IMAGEHLP_SYMBOL_TYPE_INFO = 5
	TI_GET_ARRAYINDEXTYPEID         IMAGEHLP_SYMBOL_TYPE_INFO = 6
	TI_FINDCHILDREN                 IMAGEHLP_SYMBOL_TYPE_INFO = 7
	TI_GET_DATAKIND                 IMAGEHLP_SYMBOL_TYPE_INFO = 8
	TI_GET_ADDRESSOFFSET            IMAGEHLP_SYMBOL_TYPE_INFO = 9
	TI_GET_OFFSET                   IMAGEHLP_SYMBOL_TYPE_INFO = 10
	TI_GET_VALUE                    IMAGEHLP_SYMBOL_TYPE_INFO = 11
	TI_GET_COUNT                    IMAGEHLP_SYMBOL_TYPE_INFO = 12
	TI_GET_CHILDRENCOUNT            IMAGEHLP_SYMBOL_TYPE_INFO = 13
	TI_GET_BITPOSITION              IMAGEHLP_SYMBOL_TYPE_INFO = 14
	TI_GET_VIRTUALBASECLASS         IMAGEHLP_SYMBOL_TYPE_INFO = 15
	TI_GET_VIRTUALTABLESHAPEID      IMAGEHLP_SYMBOL_TYPE_INFO = 16
	TI_GET_VIRTUALBASEPOINTEROFFSET IMAGEHLP_SYMBOL_TYPE_INFO = 17
	TI_GET_CLASSPARENTID            IMAGEHLP_SYMBOL_TYPE_INFO = 18
	TI_GET_NESTED                   IMAGEHLP_SYMBOL_TYPE_INFO = 19
	TI_GET_SYMINDEX                 IMAGEHLP_SYMBOL_TYPE_INFO = 20
	TI_GET_LEXICALPARENT            IMAGEHLP_SYMBOL_TYPE_INFO = 21
	TI_GET_ADDRESS                  IMAGEHLP_SYMBOL_TYPE_INFO = 22
	TI_GET_THISADJUST               IMAGEHLP_SYMBOL_TYPE_INFO = 23
	TI_GET_UDTKIND                  IMAGEHLP_SYMBOL_TYPE_INFO = 24
	TI_IS_EQUIV_TO                  IMAGEHLP_SYMBOL_TYPE_INFO = 25
	TI_GET_CALLING_CONVENTION       IMAGEHLP_SYMBOL_TYPE_INFO = 26
	TI_IS_CLOSE_EQUIV_TO            IMAGEHLP_SYMBOL_TYPE_INFO = 27
	TI_GTIEX_REQS_VALID             IMAGEHLP_SYMBOL_TYPE_INFO = 28
	TI_GET_VIRTUALBASEOFFSET        IMAGEHLP_SYMBOL_TYPE_INFO = 29
	TI_GET_VIRTUALBASEDISPINDEX     IMAGEHLP_SYMBOL_TYPE_INFO = 30
	TI_GET_IS_REFERENCE             IMAGEHLP_SYMBOL_TYPE_INFO = 31
	TI_GET_INDIRECTVIRTUALBASECLASS IMAGEHLP_SYMBOL_TYPE_INFO = 32
	TI_GET_VIRTUALBASETABLETYPE     IMAGEHLP_SYMBOL_TYPE_INFO = 33
	TI_GET_OBJECTPOINTERTYPE        IMAGEHLP_SYMBOL_TYPE_INFO = 34
	IMAGEHLP_SYMBOL_TYPE_INFO_MAX   IMAGEHLP_SYMBOL_TYPE_INFO = 35
)

// enum
type IMAGEHLP_SF_TYPE int32

const (
	SfImage IMAGEHLP_SF_TYPE = 0
	SfDbg   IMAGEHLP_SF_TYPE = 1
	SfPdb   IMAGEHLP_SF_TYPE = 2
	SfMpd   IMAGEHLP_SF_TYPE = 3
	SfMax   IMAGEHLP_SF_TYPE = 4
)

// enum
type APPLICATION_NODE_EVENT_FILTER int32

const (
	FILTER_EXCLUDE_NOTHING        APPLICATION_NODE_EVENT_FILTER = 0
	FILTER_EXCLUDE_ANONYMOUS_CODE APPLICATION_NODE_EVENT_FILTER = 1
	FILTER_EXCLUDE_EVAL_CODE      APPLICATION_NODE_EVENT_FILTER = 2
)

// enum
type SCRIPT_DEBUGGER_OPTIONS int32

const (
	SDO_NONE                           SCRIPT_DEBUGGER_OPTIONS = 0
	SDO_ENABLE_FIRST_CHANCE_EXCEPTIONS SCRIPT_DEBUGGER_OPTIONS = 1
	SDO_ENABLE_WEB_WORKER_SUPPORT      SCRIPT_DEBUGGER_OPTIONS = 2
	SDO_ENABLE_NONUSER_CODE_SUPPORT    SCRIPT_DEBUGGER_OPTIONS = 4
	SDO_ENABLE_LIBRARY_STACK_FRAME     SCRIPT_DEBUGGER_OPTIONS = 8
)

// enum
type SCRIPT_ERROR_DEBUG_EXCEPTION_THROWN_KIND int32

const (
	ETK_FIRST_CHANCE   SCRIPT_ERROR_DEBUG_EXCEPTION_THROWN_KIND = 0
	ETK_USER_UNHANDLED SCRIPT_ERROR_DEBUG_EXCEPTION_THROWN_KIND = 1
	ETK_UNHANDLED      SCRIPT_ERROR_DEBUG_EXCEPTION_THROWN_KIND = 2
)

// enum
type SCRIPT_INVOCATION_CONTEXT_TYPE int32

const (
	SICT_Event                      SCRIPT_INVOCATION_CONTEXT_TYPE = 0
	SICT_SetTimeout                 SCRIPT_INVOCATION_CONTEXT_TYPE = 1
	SICT_SetInterval                SCRIPT_INVOCATION_CONTEXT_TYPE = 2
	SICT_SetImmediate               SCRIPT_INVOCATION_CONTEXT_TYPE = 3
	SICT_RequestAnimationFrame      SCRIPT_INVOCATION_CONTEXT_TYPE = 4
	SICT_ToString                   SCRIPT_INVOCATION_CONTEXT_TYPE = 5
	SICT_MutationObserverCheckpoint SCRIPT_INVOCATION_CONTEXT_TYPE = 6
	SICT_WWAExecUnsafeLocalFunction SCRIPT_INVOCATION_CONTEXT_TYPE = 7
	SICT_WWAExecAtPriority          SCRIPT_INVOCATION_CONTEXT_TYPE = 8
)

// enum
type DEBUG_STACKFRAME_TYPE int32

const (
	DST_SCRIPT_FRAME     DEBUG_STACKFRAME_TYPE = 0
	DST_INTERNAL_FRAME   DEBUG_STACKFRAME_TYPE = 1
	DST_INVOCATION_FRAME DEBUG_STACKFRAME_TYPE = 2
)

// enum
type DEBUG_EVENT_INFO_TYPE int32

const (
	DEIT_GENERAL            DEBUG_EVENT_INFO_TYPE = 0
	DEIT_ASMJS_IN_DEBUGGING DEBUG_EVENT_INFO_TYPE = 1
	DEIT_ASMJS_SUCCEEDED    DEBUG_EVENT_INFO_TYPE = 2
	DEIT_ASMJS_FAILED       DEBUG_EVENT_INFO_TYPE = 3
)

// enum
type JS_PROPERTY_MEMBERS int32

const (
	JS_PROPERTY_MEMBERS_ALL       JS_PROPERTY_MEMBERS = 0
	JS_PROPERTY_MEMBERS_ARGUMENTS JS_PROPERTY_MEMBERS = 1
)

// enum
type JS_PROPERTY_ATTRIBUTES int32

const (
	JS_PROPERTY_ATTRIBUTE_NONE       JS_PROPERTY_ATTRIBUTES = 0
	JS_PROPERTY_HAS_CHILDREN         JS_PROPERTY_ATTRIBUTES = 1
	JS_PROPERTY_FAKE                 JS_PROPERTY_ATTRIBUTES = 2
	JS_PROPERTY_METHOD               JS_PROPERTY_ATTRIBUTES = 4
	JS_PROPERTY_READONLY             JS_PROPERTY_ATTRIBUTES = 8
	JS_PROPERTY_NATIVE_WINRT_POINTER JS_PROPERTY_ATTRIBUTES = 16
	JS_PROPERTY_FRAME_INTRYBLOCK     JS_PROPERTY_ATTRIBUTES = 32
	JS_PROPERTY_FRAME_INCATCHBLOCK   JS_PROPERTY_ATTRIBUTES = 64
	JS_PROPERTY_FRAME_INFINALLYBLOCK JS_PROPERTY_ATTRIBUTES = 128
)

// enum
type JsDebugReadMemoryFlags int32

const (
	None                    JsDebugReadMemoryFlags = 0
	JsDebugAllowPartialRead JsDebugReadMemoryFlags = 1
)

// enum
type DUMP_TYPES_ int32

const (
	DUMP_TYPE_INVALID       DUMP_TYPES_ = -1
	DUMP_TYPE_UNKNOWN       DUMP_TYPES_ = 0
	DUMP_TYPE_FULL          DUMP_TYPES_ = 1
	DUMP_TYPE_SUMMARY       DUMP_TYPES_ = 2
	DUMP_TYPE_HEADER        DUMP_TYPES_ = 3
	DUMP_TYPE_TRIAGE        DUMP_TYPES_ = 4
	DUMP_TYPE_BITMAP_FULL   DUMP_TYPES_ = 5
	DUMP_TYPE_BITMAP_KERNEL DUMP_TYPES_ = 6
	DUMP_TYPE_AUTOMATIC     DUMP_TYPES_ = 7
)

// enum
type WHEA_ERROR_SOURCE_TYPE int32

const (
	WheaErrSrcTypeMCE          WHEA_ERROR_SOURCE_TYPE = 0
	WheaErrSrcTypeCMC          WHEA_ERROR_SOURCE_TYPE = 1
	WheaErrSrcTypeCPE          WHEA_ERROR_SOURCE_TYPE = 2
	WheaErrSrcTypeNMI          WHEA_ERROR_SOURCE_TYPE = 3
	WheaErrSrcTypePCIe         WHEA_ERROR_SOURCE_TYPE = 4
	WheaErrSrcTypeGeneric      WHEA_ERROR_SOURCE_TYPE = 5
	WheaErrSrcTypeINIT         WHEA_ERROR_SOURCE_TYPE = 6
	WheaErrSrcTypeBOOT         WHEA_ERROR_SOURCE_TYPE = 7
	WheaErrSrcTypeSCIGeneric   WHEA_ERROR_SOURCE_TYPE = 8
	WheaErrSrcTypeIPFMCA       WHEA_ERROR_SOURCE_TYPE = 9
	WheaErrSrcTypeIPFCMC       WHEA_ERROR_SOURCE_TYPE = 10
	WheaErrSrcTypeIPFCPE       WHEA_ERROR_SOURCE_TYPE = 11
	WheaErrSrcTypeGenericV2    WHEA_ERROR_SOURCE_TYPE = 12
	WheaErrSrcTypeSCIGenericV2 WHEA_ERROR_SOURCE_TYPE = 13
	WheaErrSrcTypeBMC          WHEA_ERROR_SOURCE_TYPE = 14
	WheaErrSrcTypePMEM         WHEA_ERROR_SOURCE_TYPE = 15
	WheaErrSrcTypeDeviceDriver WHEA_ERROR_SOURCE_TYPE = 16
	WheaErrSrcTypeMax          WHEA_ERROR_SOURCE_TYPE = 17
)

// enum
type WHEA_ERROR_SOURCE_STATE int32

const (
	WheaErrSrcStateStopped       WHEA_ERROR_SOURCE_STATE = 1
	WheaErrSrcStateStarted       WHEA_ERROR_SOURCE_STATE = 2
	WheaErrSrcStateRemoved       WHEA_ERROR_SOURCE_STATE = 3
	WheaErrSrcStateRemovePending WHEA_ERROR_SOURCE_STATE = 4
)

// enum
type IPMI_OS_SEL_RECORD_TYPE int32

const (
	IpmiOsSelRecordTypeWhea             IPMI_OS_SEL_RECORD_TYPE = 0
	IpmiOsSelRecordTypeOther            IPMI_OS_SEL_RECORD_TYPE = 1
	IpmiOsSelRecordTypeWheaErrorXpfMca  IPMI_OS_SEL_RECORD_TYPE = 2
	IpmiOsSelRecordTypeWheaErrorPci     IPMI_OS_SEL_RECORD_TYPE = 3
	IpmiOsSelRecordTypeWheaErrorNmi     IPMI_OS_SEL_RECORD_TYPE = 4
	IpmiOsSelRecordTypeWheaErrorOther   IPMI_OS_SEL_RECORD_TYPE = 5
	IpmiOsSelRecordTypeRaw              IPMI_OS_SEL_RECORD_TYPE = 6
	IpmiOsSelRecordTypeDriver           IPMI_OS_SEL_RECORD_TYPE = 7
	IpmiOsSelRecordTypeBugcheckRecovery IPMI_OS_SEL_RECORD_TYPE = 8
	IpmiOsSelRecordTypeBugcheckData     IPMI_OS_SEL_RECORD_TYPE = 9
	IpmiOsSelRecordTypeMax              IPMI_OS_SEL_RECORD_TYPE = 10
)

// structs

type EXCEPTION_DEBUG_INFO struct {
	ExceptionRecord EXCEPTION_RECORD
	DwFirstChance   uint32
}

type CREATE_THREAD_DEBUG_INFO struct {
	HThread           HANDLE
	LpThreadLocalBase unsafe.Pointer
	LpStartAddress    LPTHREAD_START_ROUTINE
}

type CREATE_PROCESS_DEBUG_INFO struct {
	HFile                 HANDLE
	HProcess              HANDLE
	HThread               HANDLE
	LpBaseOfImage         unsafe.Pointer
	DwDebugInfoFileOffset uint32
	NDebugInfoSize        uint32
	LpThreadLocalBase     unsafe.Pointer
	LpStartAddress        LPTHREAD_START_ROUTINE
	LpImageName           unsafe.Pointer
	FUnicode              uint16
}

type EXIT_THREAD_DEBUG_INFO struct {
	DwExitCode uint32
}

type EXIT_PROCESS_DEBUG_INFO struct {
	DwExitCode uint32
}

type LOAD_DLL_DEBUG_INFO struct {
	HFile                 HANDLE
	LpBaseOfDll           unsafe.Pointer
	DwDebugInfoFileOffset uint32
	NDebugInfoSize        uint32
	LpImageName           unsafe.Pointer
	FUnicode              uint16
}

type UNLOAD_DLL_DEBUG_INFO struct {
	LpBaseOfDll unsafe.Pointer
}

type OUTPUT_DEBUG_STRING_INFO struct {
	LpDebugStringData  PSTR
	FUnicode           uint16
	NDebugStringLength uint16
}

type RIP_INFO struct {
	DwError uint32
	DwType  RIP_INFO_TYPE
}

type DEBUG_EVENT_U struct {
	Data [20]uint64
}

func (this *DEBUG_EVENT_U) Exception() *EXCEPTION_DEBUG_INFO {
	return (*EXCEPTION_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) ExceptionVal() EXCEPTION_DEBUG_INFO {
	return *(*EXCEPTION_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) CreateThread() *CREATE_THREAD_DEBUG_INFO {
	return (*CREATE_THREAD_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) CreateThreadVal() CREATE_THREAD_DEBUG_INFO {
	return *(*CREATE_THREAD_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) CreateProcessInfo() *CREATE_PROCESS_DEBUG_INFO {
	return (*CREATE_PROCESS_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) CreateProcessInfoVal() CREATE_PROCESS_DEBUG_INFO {
	return *(*CREATE_PROCESS_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) ExitThread() *EXIT_THREAD_DEBUG_INFO {
	return (*EXIT_THREAD_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) ExitThreadVal() EXIT_THREAD_DEBUG_INFO {
	return *(*EXIT_THREAD_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) ExitProcess() *EXIT_PROCESS_DEBUG_INFO {
	return (*EXIT_PROCESS_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) ExitProcessVal() EXIT_PROCESS_DEBUG_INFO {
	return *(*EXIT_PROCESS_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) LoadDll() *LOAD_DLL_DEBUG_INFO {
	return (*LOAD_DLL_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) LoadDllVal() LOAD_DLL_DEBUG_INFO {
	return *(*LOAD_DLL_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) UnloadDll() *UNLOAD_DLL_DEBUG_INFO {
	return (*UNLOAD_DLL_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) UnloadDllVal() UNLOAD_DLL_DEBUG_INFO {
	return *(*UNLOAD_DLL_DEBUG_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) DebugString() *OUTPUT_DEBUG_STRING_INFO {
	return (*OUTPUT_DEBUG_STRING_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) DebugStringVal() OUTPUT_DEBUG_STRING_INFO {
	return *(*OUTPUT_DEBUG_STRING_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) RipInfo() *RIP_INFO {
	return (*RIP_INFO)(unsafe.Pointer(this))
}

func (this *DEBUG_EVENT_U) RipInfoVal() RIP_INFO {
	return *(*RIP_INFO)(unsafe.Pointer(this))
}

type DEBUG_EVENT struct {
	DwDebugEventCode DEBUG_EVENT_CODE
	DwProcessId      uint32
	DwThreadId       uint32
	U                DEBUG_EVENT_U
}

type DEBUG_OFFSET_REGION struct {
	Base uint64
	Size uint64
}

type DEBUG_READ_USER_MINIDUMP_STREAM struct {
	StreamType uint32
	Flags      uint32
	Offset     uint64
	Buffer     unsafe.Pointer
	BufferSize uint32
	BufferUsed uint32
}

type DEBUG_GET_TEXT_COMPLETIONS_IN struct {
	Flags           uint32
	MatchCountLimit uint32
	Reserved        [3]uint64
}

type DEBUG_GET_TEXT_COMPLETIONS_OUT struct {
	Flags        uint32
	ReplaceIndex uint32
	MatchCount   uint32
	Reserved1    uint32
	Reserved2    [2]uint64
}

type DEBUG_CACHED_SYMBOL_INFO struct {
	ModBase uint64
	Arg1    uint64
	Arg2    uint64
	Id      uint32
	Arg3    uint32
}

type PROCESS_NAME_ENTRY struct {
	ProcessId  uint32
	NameOffset uint32
	NameSize   uint32
	NextEntry  uint32
}

type DEBUG_THREAD_BASIC_INFORMATION struct {
	Valid         uint32
	ExitStatus    uint32
	PriorityClass uint32
	Priority      uint32
	CreateTime    uint64
	ExitTime      uint64
	KernelTime    uint64
	UserTime      uint64
	StartOffset   uint64
	Affinity      uint64
}

type SYMBOL_INFO_EX struct {
	SizeOfStruct uint32
	TypeOfInfo   uint32
	Offset       uint64
	Line         uint32
	Displacement uint32
	Reserved     [4]uint32
}

type DEBUG_BREAKPOINT_PARAMETERS struct {
	Offset               uint64
	Id                   uint32
	BreakType            uint32
	ProcType             uint32
	Flags                uint32
	DataSize             uint32
	DataAccessType       uint32
	PassCount            uint32
	CurrentPassCount     uint32
	MatchThread          uint32
	CommandSize          uint32
	OffsetExpressionSize uint32
}

type DEBUG_CREATE_PROCESS_OPTIONS struct {
	CreateFlags    uint32
	EngCreateFlags uint32
	VerifierFlags  uint32
	Reserved       uint32
}

type DEBUG_CLIENT_CONTEXT struct {
	CbSize  uint32
	EClient uint32
}

type DEBUG_STACK_FRAME struct {
	InstructionOffset uint64
	ReturnOffset      uint64
	FrameOffset       uint64
	StackOffset       uint64
	FuncTableEntry    uint64
	Params            [4]uint64
	Reserved          [6]uint64
	Virtual           BOOL
	FrameNumber       uint32
}

type DEBUG_STACK_FRAME_EX struct {
	InstructionOffset  uint64
	ReturnOffset       uint64
	FrameOffset        uint64
	StackOffset        uint64
	FuncTableEntry     uint64
	Params             [4]uint64
	Reserved           [6]uint64
	Virtual            BOOL
	FrameNumber        uint32
	InlineFrameContext uint32
	Reserved1          uint32
}

type INLINE_FRAME_CONTEXT_Anonymous struct {
	FrameId        byte
	FrameType      byte
	FrameSignature uint16
}

type INLINE_FRAME_CONTEXT struct {
	INLINE_FRAME_CONTEXT_Anonymous
}

func (this *INLINE_FRAME_CONTEXT) ContextValue() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *INLINE_FRAME_CONTEXT) ContextValueVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *INLINE_FRAME_CONTEXT) Anonymous() *INLINE_FRAME_CONTEXT_Anonymous {
	return (*INLINE_FRAME_CONTEXT_Anonymous)(unsafe.Pointer(this))
}

func (this *INLINE_FRAME_CONTEXT) AnonymousVal() INLINE_FRAME_CONTEXT_Anonymous {
	return *(*INLINE_FRAME_CONTEXT_Anonymous)(unsafe.Pointer(this))
}

type STACK_SRC_INFO struct {
	ImagePath    PWSTR
	ModuleName   PWSTR
	Function     PWSTR
	Displacement uint32
	Row          uint32
	Column       uint32
}

type STACK_SYM_FRAME_INFO struct {
	StackFrameEx DEBUG_STACK_FRAME_EX
	SrcInfo      STACK_SRC_INFO
}

type DEBUG_SPECIFIC_FILTER_PARAMETERS struct {
	ExecutionOption uint32
	ContinueOption  uint32
	TextSize        uint32
	CommandSize     uint32
	ArgumentSize    uint32
}

type DEBUG_EXCEPTION_FILTER_PARAMETERS struct {
	ExecutionOption   uint32
	ContinueOption    uint32
	TextSize          uint32
	CommandSize       uint32
	SecondCommandSize uint32
	ExceptionCode     uint32
}

type DEBUG_LAST_EVENT_INFO_BREAKPOINT struct {
	Id uint32
}

type DEBUG_LAST_EVENT_INFO_EXCEPTION struct {
	ExceptionRecord EXCEPTION_RECORD64
	FirstChance     uint32
}

type DEBUG_LAST_EVENT_INFO_EXIT_THREAD struct {
	ExitCode uint32
}

type DEBUG_LAST_EVENT_INFO_EXIT_PROCESS struct {
	ExitCode uint32
}

type DEBUG_LAST_EVENT_INFO_LOAD_MODULE struct {
	Base uint64
}

type DEBUG_LAST_EVENT_INFO_UNLOAD_MODULE struct {
	Base uint64
}

type DEBUG_LAST_EVENT_INFO_SYSTEM_ERROR struct {
	Error uint32
	Level uint32
}

type DEBUG_LAST_EVENT_INFO_SERVICE_EXCEPTION struct {
	Kind     uint32
	DataSize uint32
	Address  uint64
}

type DEBUG_VALUE_Anonymous_Anonymous struct {
	I64 uint64
	Nat BOOL
}

type DEBUG_VALUE_Anonymous_I64Parts32 struct {
	LowPart  uint32
	HighPart uint32
}

type DEBUG_VALUE_Anonymous_F128Parts64 struct {
	LowPart  uint64
	HighPart int64
}

type DEBUG_VALUE_Anonymous struct {
	Data [3]uint64
}

func (this *DEBUG_VALUE_Anonymous) I8() *byte {
	return (*byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) I8Val() byte {
	return *(*byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) I16() *uint16 {
	return (*uint16)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) I16Val() uint16 {
	return *(*uint16)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) I32() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) I32Val() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) Anonymous() *DEBUG_VALUE_Anonymous_Anonymous {
	return (*DEBUG_VALUE_Anonymous_Anonymous)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) AnonymousVal() DEBUG_VALUE_Anonymous_Anonymous {
	return *(*DEBUG_VALUE_Anonymous_Anonymous)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F32() *float32 {
	return (*float32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F32Val() float32 {
	return *(*float32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F64() *float64 {
	return (*float64)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F64Val() float64 {
	return *(*float64)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F80Bytes() *[10]byte {
	return (*[10]byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F80BytesVal() [10]byte {
	return *(*[10]byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F82Bytes() *[11]byte {
	return (*[11]byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F82BytesVal() [11]byte {
	return *(*[11]byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F128Bytes() *[16]byte {
	return (*[16]byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F128BytesVal() [16]byte {
	return *(*[16]byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VI8() *[16]byte {
	return (*[16]byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VI8Val() [16]byte {
	return *(*[16]byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VI16() *[8]uint16 {
	return (*[8]uint16)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VI16Val() [8]uint16 {
	return *(*[8]uint16)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VI32() *[4]uint32 {
	return (*[4]uint32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VI32Val() [4]uint32 {
	return *(*[4]uint32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VI64() *[2]uint64 {
	return (*[2]uint64)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VI64Val() [2]uint64 {
	return *(*[2]uint64)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VF32() *[4]float32 {
	return (*[4]float32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VF32Val() [4]float32 {
	return *(*[4]float32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VF64() *[2]float64 {
	return (*[2]float64)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) VF64Val() [2]float64 {
	return *(*[2]float64)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) I64Parts32() *DEBUG_VALUE_Anonymous_I64Parts32 {
	return (*DEBUG_VALUE_Anonymous_I64Parts32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) I64Parts32Val() DEBUG_VALUE_Anonymous_I64Parts32 {
	return *(*DEBUG_VALUE_Anonymous_I64Parts32)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F128Parts64() *DEBUG_VALUE_Anonymous_F128Parts64 {
	return (*DEBUG_VALUE_Anonymous_F128Parts64)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) F128Parts64Val() DEBUG_VALUE_Anonymous_F128Parts64 {
	return *(*DEBUG_VALUE_Anonymous_F128Parts64)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) RawBytes() *[24]byte {
	return (*[24]byte)(unsafe.Pointer(this))
}

func (this *DEBUG_VALUE_Anonymous) RawBytesVal() [24]byte {
	return *(*[24]byte)(unsafe.Pointer(this))
}

type DEBUG_VALUE struct {
	DEBUG_VALUE_Anonymous
	TailOfRawBytes uint32
	Type           uint32
}

type DEBUG_PROCESSOR_IDENTIFICATION_ALPHA struct {
	Type     uint32
	Revision uint32
}

type DEBUG_PROCESSOR_IDENTIFICATION_AMD64 struct {
	Family       uint32
	Model        uint32
	Stepping     uint32
	VendorString [16]CHAR
}

type DEBUG_PROCESSOR_IDENTIFICATION_IA64 struct {
	Model        uint32
	Revision     uint32
	Family       uint32
	ArchRev      uint32
	VendorString [16]CHAR
}

type DEBUG_PROCESSOR_IDENTIFICATION_X86 struct {
	Family       uint32
	Model        uint32
	Stepping     uint32
	VendorString [16]CHAR
}

type DEBUG_PROCESSOR_IDENTIFICATION_ARM struct {
	Model        uint32
	Revision     uint32
	VendorString [16]CHAR
}

type DEBUG_PROCESSOR_IDENTIFICATION_ARM64 struct {
	Model        uint32
	Revision     uint32
	VendorString [16]CHAR
}

type DEBUG_PROCESSOR_IDENTIFICATION_ALL struct {
	Data [8]uint32
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) Alpha() *DEBUG_PROCESSOR_IDENTIFICATION_ALPHA {
	return (*DEBUG_PROCESSOR_IDENTIFICATION_ALPHA)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) AlphaVal() DEBUG_PROCESSOR_IDENTIFICATION_ALPHA {
	return *(*DEBUG_PROCESSOR_IDENTIFICATION_ALPHA)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) Amd64() *DEBUG_PROCESSOR_IDENTIFICATION_AMD64 {
	return (*DEBUG_PROCESSOR_IDENTIFICATION_AMD64)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) Amd64Val() DEBUG_PROCESSOR_IDENTIFICATION_AMD64 {
	return *(*DEBUG_PROCESSOR_IDENTIFICATION_AMD64)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) Ia64() *DEBUG_PROCESSOR_IDENTIFICATION_IA64 {
	return (*DEBUG_PROCESSOR_IDENTIFICATION_IA64)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) Ia64Val() DEBUG_PROCESSOR_IDENTIFICATION_IA64 {
	return *(*DEBUG_PROCESSOR_IDENTIFICATION_IA64)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) X86() *DEBUG_PROCESSOR_IDENTIFICATION_X86 {
	return (*DEBUG_PROCESSOR_IDENTIFICATION_X86)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) X86Val() DEBUG_PROCESSOR_IDENTIFICATION_X86 {
	return *(*DEBUG_PROCESSOR_IDENTIFICATION_X86)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) Arm() *DEBUG_PROCESSOR_IDENTIFICATION_ARM {
	return (*DEBUG_PROCESSOR_IDENTIFICATION_ARM)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) ArmVal() DEBUG_PROCESSOR_IDENTIFICATION_ARM {
	return *(*DEBUG_PROCESSOR_IDENTIFICATION_ARM)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) Arm64() *DEBUG_PROCESSOR_IDENTIFICATION_ARM64 {
	return (*DEBUG_PROCESSOR_IDENTIFICATION_ARM64)(unsafe.Pointer(this))
}

func (this *DEBUG_PROCESSOR_IDENTIFICATION_ALL) Arm64Val() DEBUG_PROCESSOR_IDENTIFICATION_ARM64 {
	return *(*DEBUG_PROCESSOR_IDENTIFICATION_ARM64)(unsafe.Pointer(this))
}

type DEBUG_HANDLE_DATA_BASIC struct {
	TypeNameSize   uint32
	ObjectNameSize uint32
	Attributes     uint32
	GrantedAccess  uint32
	HandleCount    uint32
	PointerCount   uint32
}

type DEBUG_EVENT_CONTEXT struct {
	Size            uint32
	ProcessEngineId uint32
	ThreadEngineId  uint32
	FrameEngineId   uint32
}

type DEBUG_REGISTER_DESCRIPTION struct {
	Type         uint32
	Flags        uint32
	SubregMaster uint32
	SubregLength uint32
	SubregMask   uint64
	SubregShift  uint32
	Reserved0    uint32
}

type DEBUG_SYMBOL_PARAMETERS struct {
	Module       uint64
	TypeId       uint32
	ParentSymbol uint32
	SubElements  uint32
	Flags        uint32
	Reserved     uint64
}

type DEBUG_SYMBOL_ENTRY struct {
	ModuleBase uint64
	Offset     uint64
	Id         uint64
	Arg64      uint64
	Size       uint32
	Flags      uint32
	TypeId     uint32
	NameSize   uint32
	Token      uint32
	Tag        uint32
	Arg32      uint32
	Reserved   uint32
}

type DEBUG_MODULE_PARAMETERS struct {
	Base                uint64
	Size                uint32
	TimeDateStamp       uint32
	Checksum            uint32
	Flags               uint32
	SymbolType          uint32
	ImageNameSize       uint32
	ModuleNameSize      uint32
	LoadedImageNameSize uint32
	SymbolFileNameSize  uint32
	MappedImageNameSize uint32
	Reserved            [2]uint64
}

type DEBUG_MODULE_AND_ID struct {
	ModuleBase uint64
	Id         uint64
}

type DEBUG_SYMBOL_SOURCE_ENTRY struct {
	ModuleBase     uint64
	Offset         uint64
	FileNameId     uint64
	EngineInternal uint64
	Size           uint32
	Flags          uint32
	FileNameSize   uint32
	StartLine      uint32
	EndLine        uint32
	StartColumn    uint32
	EndColumn      uint32
	Reserved       uint32
}

type Location struct {
	HostDefined uint64
	Offset      uint64
}

type ArrayDimension struct {
	LowerBound int64
	Length     uint64
	Stride     uint64
}

type ScriptDebugPosition struct {
	Line   uint32
	Column uint32
}

type ScriptDebugEventInformation_U_ExceptionInformation struct {
	IsUncaught bool
}

type ScriptDebugEventInformation_U_BreakpointInformation struct {
	BreakpointId uint64
}

type ScriptDebugEventInformation_U struct {
	Data [1]uint64
}

func (this *ScriptDebugEventInformation_U) ExceptionInformation() *ScriptDebugEventInformation_U_ExceptionInformation {
	return (*ScriptDebugEventInformation_U_ExceptionInformation)(unsafe.Pointer(this))
}

func (this *ScriptDebugEventInformation_U) ExceptionInformationVal() ScriptDebugEventInformation_U_ExceptionInformation {
	return *(*ScriptDebugEventInformation_U_ExceptionInformation)(unsafe.Pointer(this))
}

func (this *ScriptDebugEventInformation_U) BreakpointInformation() *ScriptDebugEventInformation_U_BreakpointInformation {
	return (*ScriptDebugEventInformation_U_BreakpointInformation)(unsafe.Pointer(this))
}

func (this *ScriptDebugEventInformation_U) BreakpointInformationVal() ScriptDebugEventInformation_U_BreakpointInformation {
	return *(*ScriptDebugEventInformation_U_BreakpointInformation)(unsafe.Pointer(this))
}

type ScriptDebugEventInformation struct {
	DebugEvent    ScriptDebugEvent
	EventPosition ScriptDebugPosition
	EventSpanEnd  ScriptDebugPosition
	U             ScriptDebugEventInformation_U
}

type EXTSTACKTRACE struct {
	FramePointer   uint32
	ProgramCounter uint32
	ReturnAddress  uint32
	Args           [4]uint32
}

type EXTSTACKTRACE32 struct {
	FramePointer   uint32
	ProgramCounter uint32
	ReturnAddress  uint32
	Args           [4]uint32
}

type EXTSTACKTRACE64 struct {
	FramePointer   uint64
	ProgramCounter uint64
	ReturnAddress  uint64
	Args           [4]uint64
}

type WINDBG_EXTENSION_APIS struct {
	NSize                       uint32
	LpOutputRoutine             PWINDBG_OUTPUT_ROUTINE
	LpGetExpressionRoutine      PWINDBG_GET_EXPRESSION
	LpGetSymbolRoutine          PWINDBG_GET_SYMBOL
	LpDisasmRoutine             PWINDBG_DISASM
	LpCheckControlCRoutine      PWINDBG_CHECK_CONTROL_C
	LpReadProcessMemoryRoutine  PWINDBG_READ_PROCESS_MEMORY_ROUTINE
	LpWriteProcessMemoryRoutine PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE
	LpGetThreadContextRoutine   PWINDBG_GET_THREAD_CONTEXT_ROUTINE
	LpSetThreadContextRoutine   PWINDBG_SET_THREAD_CONTEXT_ROUTINE
	LpIoctlRoutine              PWINDBG_IOCTL_ROUTINE
	LpStackTraceRoutine         PWINDBG_STACKTRACE_ROUTINE
}

type WINDBG_EXTENSION_APIS32 struct {
	NSize                       uint32
	LpOutputRoutine             PWINDBG_OUTPUT_ROUTINE
	LpGetExpressionRoutine      PWINDBG_GET_EXPRESSION32
	LpGetSymbolRoutine          PWINDBG_GET_SYMBOL32
	LpDisasmRoutine             PWINDBG_DISASM32
	LpCheckControlCRoutine      PWINDBG_CHECK_CONTROL_C
	LpReadProcessMemoryRoutine  PWINDBG_READ_PROCESS_MEMORY_ROUTINE32
	LpWriteProcessMemoryRoutine PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE32
	LpGetThreadContextRoutine   PWINDBG_GET_THREAD_CONTEXT_ROUTINE
	LpSetThreadContextRoutine   PWINDBG_SET_THREAD_CONTEXT_ROUTINE
	LpIoctlRoutine              PWINDBG_IOCTL_ROUTINE
	LpStackTraceRoutine         PWINDBG_STACKTRACE_ROUTINE32
}

type WINDBG_EXTENSION_APIS64 struct {
	NSize                       uint32
	LpOutputRoutine             PWINDBG_OUTPUT_ROUTINE
	LpGetExpressionRoutine      PWINDBG_GET_EXPRESSION64
	LpGetSymbolRoutine          PWINDBG_GET_SYMBOL64
	LpDisasmRoutine             PWINDBG_DISASM64
	LpCheckControlCRoutine      PWINDBG_CHECK_CONTROL_C
	LpReadProcessMemoryRoutine  PWINDBG_READ_PROCESS_MEMORY_ROUTINE64
	LpWriteProcessMemoryRoutine PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE64
	LpGetThreadContextRoutine   PWINDBG_GET_THREAD_CONTEXT_ROUTINE
	LpSetThreadContextRoutine   PWINDBG_SET_THREAD_CONTEXT_ROUTINE
	LpIoctlRoutine              PWINDBG_IOCTL_ROUTINE
	LpStackTraceRoutine         PWINDBG_STACKTRACE_ROUTINE64
}

type WINDBG_OLD_EXTENSION_APIS struct {
	NSize                  uint32
	LpOutputRoutine        PWINDBG_OUTPUT_ROUTINE
	LpGetExpressionRoutine PWINDBG_GET_EXPRESSION
	LpGetSymbolRoutine     PWINDBG_GET_SYMBOL
	LpDisasmRoutine        PWINDBG_DISASM
	LpCheckControlCRoutine PWINDBG_CHECK_CONTROL_C
}

type WINDBG_OLDKD_EXTENSION_APIS struct {
	NSize                     uint32
	LpOutputRoutine           PWINDBG_OUTPUT_ROUTINE
	LpGetExpressionRoutine    PWINDBG_GET_EXPRESSION32
	LpGetSymbolRoutine        PWINDBG_GET_SYMBOL32
	LpDisasmRoutine           PWINDBG_DISASM32
	LpCheckControlCRoutine    PWINDBG_CHECK_CONTROL_C
	LpReadVirtualMemRoutine   PWINDBG_READ_PROCESS_MEMORY_ROUTINE32
	LpWriteVirtualMemRoutine  PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE32
	LpReadPhysicalMemRoutine  PWINDBG_OLDKD_READ_PHYSICAL_MEMORY
	LpWritePhysicalMemRoutine PWINDBG_OLDKD_WRITE_PHYSICAL_MEMORY
}

type EXT_API_VERSION struct {
	MajorVersion uint16
	MinorVersion uint16
	Revision     uint16
	Reserved     uint16
}

type PROCESSORINFO struct {
	Processor        uint16
	NumberProcessors uint16
}

type READCONTROLSPACE struct {
	Processor uint16
	Address   uint32
	BufLen    uint32
	Buf       [1]byte
}

type READCONTROLSPACE32 struct {
	Processor uint16
	Address   uint32
	BufLen    uint32
	Buf       [1]byte
}

type READCONTROLSPACE64 struct {
	Processor uint16
	Address   uint64
	BufLen    uint32
	Buf       [1]byte
}

type IOSPACE struct {
	Address uint32
	Length  uint32
	Data    uint32
}

type IOSPACE32 struct {
	Address uint32
	Length  uint32
	Data    uint32
}

type IOSPACE64 struct {
	Address uint64
	Length  uint32
	Data    uint32
}

type IOSPACE_EX struct {
	Address       uint32
	Length        uint32
	Data          uint32
	InterfaceType uint32
	BusNumber     uint32
	AddressSpace  uint32
}

type IOSPACE_EX32 struct {
	Address       uint32
	Length        uint32
	Data          uint32
	InterfaceType uint32
	BusNumber     uint32
	AddressSpace  uint32
}

type IOSPACE_EX64 struct {
	Address       uint64
	Length        uint32
	Data          uint32
	InterfaceType uint32
	BusNumber     uint32
	AddressSpace  uint32
}

type GETSETBUSDATA_ struct {
	BusDataType uint32
	BusNumber   uint32
	SlotNumber  uint32
	Buffer      unsafe.Pointer
	Offset      uint32
	Length      uint32
}

type SEARCHMEMORY struct {
	SearchAddress uint64
	SearchLength  uint64
	FoundAddress  uint64
	PatternLength uint32
	Pattern       unsafe.Pointer
}

type PHYSICAL struct {
	Address uint64
	BufLen  uint32
	Buf     [1]byte
}

type PHYSICAL_WITH_FLAGS struct {
	Address uint64
	BufLen  uint32
	Flags   uint32
	Buf     [1]byte
}

type READ_WRITE_MSR struct {
	Msr   uint32
	Value int64
}

type GET_SET_SYMPATH struct {
	Args   PSTR
	Result PSTR
	Length int32
}

type GET_TEB_ADDRESS struct {
	Address uint64
}

type GET_PEB_ADDRESS struct {
	CurrentThread uint64
	Address       uint64
}

type GET_CURRENT_THREAD_ADDRESS struct {
	Processor uint32
	Address   uint64
}

type GET_CURRENT_PROCESS_ADDRESS struct {
	Processor     uint32
	CurrentThread uint64
	Address       uint64
}

type GET_INPUT_LINE struct {
	Prompt     PSTR
	Buffer     PSTR
	BufferSize uint32
	InputSize  uint32
}

type GET_EXPRESSION_EX struct {
	Expression PSTR
	Remainder  PSTR
	Value      uint64
}

type TRANSLATE_VIRTUAL_TO_PHYSICAL struct {
	Virtual  uint64
	Physical uint64
}

type VIRTUAL_TO_PHYSICAL struct {
	Status     uint32
	Size       uint32
	PdeAddress uint64
	Virtual    uint64
	Physical   uint64
}

type PHYSICAL_TO_VIRTUAL struct {
	Status     uint32
	Size       uint32
	PdeAddress uint64
}

type GET_CONTEXT_EX struct {
	Status      uint32
	ContextSize uint32
	PContext    unsafe.Pointer
}

type POINTER_SEARCH_PHYSICAL struct {
	Offset            uint64
	Length            uint64
	PointerMin        uint64
	PointerMax        uint64
	Flags             uint32
	MatchOffsets      *uint64
	MatchOffsetsSize  uint32
	MatchOffsetsCount uint32
}

type WDBGEXTS_THREAD_OS_INFO struct {
	ThreadId      uint32
	ExitStatus    uint32
	PriorityClass uint32
	Priority      uint32
	CreateTime    uint64
	ExitTime      uint64
	KernelTime    uint64
	UserTime      uint64
	StartOffset   uint64
	Affinity      uint64
}

type WDBGEXTS_CLR_DATA_INTERFACE struct {
	Iid   *syscall.GUID
	Iface unsafe.Pointer
}

type EXT_MATCH_PATTERN_A struct {
	Str           PSTR
	Pattern       PSTR
	CaseSensitive uint32
}

type EXT_FIND_FILE struct {
	FileName           PWSTR
	IndexedSize        uint64
	ImageTimeDateStamp uint32
	ImageCheckSum      uint32
	ExtraInfo          unsafe.Pointer
	ExtraInfoSize      uint32
	Flags              uint32
	FileMapping        unsafe.Pointer
	FileMappingSize    uint64
	FileHandle         HANDLE
	FoundFileName      PWSTR
	FoundFileNameChars uint32
}

type DEBUG_TYPED_DATA struct {
	ModBase      uint64
	Offset       uint64
	EngineHandle uint64
	Data         uint64
	Size         uint32
	Flags        uint32
	TypeId       uint32
	BaseTypeId   uint32
	Tag          uint32
	Register     uint32
	Internal     [9]uint64
}

type EXT_TYPED_DATA struct {
	Operation       EXT_TDOP
	Flags           uint32
	InData          DEBUG_TYPED_DATA
	OutData         DEBUG_TYPED_DATA
	InStrIndex      uint32
	In32            uint32
	Out32           uint32
	In64            uint64
	Out64           uint64
	StrBufferIndex  uint32
	StrBufferChars  uint32
	StrCharsNeeded  uint32
	DataBufferIndex uint32
	DataBufferBytes uint32
	DataBytesNeeded uint32
	Status          HRESULT
	Reserved        [8]uint64
}

type WDBGEXTS_QUERY_INTERFACE struct {
	Iid   *syscall.GUID
	Iface unsafe.Pointer
}

type WDBGEXTS_DISASSEMBLE_BUFFER struct {
	InOffset          uint64
	OutOffset         uint64
	AddrFlags         uint32
	FormatFlags       uint32
	DataBufferBytes   uint32
	DisasmBufferChars uint32
	DataBuffer        unsafe.Pointer
	DisasmBuffer      PWSTR
	Reserved0         [3]uint64
}

type WDBGEXTS_MODULE_IN_RANGE struct {
	Start        uint64
	End          uint64
	FoundModBase uint64
	FoundModSize uint32
}

type DBGKD_GET_VERSION32 struct {
	MajorVersion             uint16
	MinorVersion             uint16
	ProtocolVersion          uint16
	Flags                    uint16
	KernBase                 uint32
	PsLoadedModuleList       uint32
	MachineType              uint16
	ThCallbackStack          uint16
	NextCallback             uint16
	FramePointer             uint16
	KiCallUserMode           uint32
	KeUserCallbackDispatcher uint32
	BreakpointWithStatus     uint32
	DebuggerDataList         uint32
}

type DBGKD_DEBUG_DATA_HEADER32 struct {
	List     LIST_ENTRY32
	OwnerTag uint32
	Size     uint32
}

type KDDEBUGGER_DATA32 struct {
	Header                        DBGKD_DEBUG_DATA_HEADER32
	KernBase                      uint32
	BreakpointWithStatus          uint32
	SavedContext                  uint32
	ThCallbackStack               uint16
	NextCallback                  uint16
	FramePointer                  uint16
	Bitfield_                     uint16
	KiCallUserMode                uint32
	KeUserCallbackDispatcher      uint32
	PsLoadedModuleList            uint32
	PsActiveProcessHead           uint32
	PspCidTable                   uint32
	ExpSystemResourcesList        uint32
	ExpPagedPoolDescriptor        uint32
	ExpNumberOfPagedPools         uint32
	KeTimeIncrement               uint32
	KeBugCheckCallbackListHead    uint32
	KiBugcheckData                uint32
	IopErrorLogListHead           uint32
	ObpRootDirectoryObject        uint32
	ObpTypeObjectType             uint32
	MmSystemCacheStart            uint32
	MmSystemCacheEnd              uint32
	MmSystemCacheWs               uint32
	MmPfnDatabase                 uint32
	MmSystemPtesStart             uint32
	MmSystemPtesEnd               uint32
	MmSubsectionBase              uint32
	MmNumberOfPagingFiles         uint32
	MmLowestPhysicalPage          uint32
	MmHighestPhysicalPage         uint32
	MmNumberOfPhysicalPages       uint32
	MmMaximumNonPagedPoolInBytes  uint32
	MmNonPagedSystemStart         uint32
	MmNonPagedPoolStart           uint32
	MmNonPagedPoolEnd             uint32
	MmPagedPoolStart              uint32
	MmPagedPoolEnd                uint32
	MmPagedPoolInformation        uint32
	MmPageSize                    uint32
	MmSizeOfPagedPoolInBytes      uint32
	MmTotalCommitLimit            uint32
	MmTotalCommittedPages         uint32
	MmSharedCommit                uint32
	MmDriverCommit                uint32
	MmProcessCommit               uint32
	MmPagedPoolCommit             uint32
	MmExtendedCommit              uint32
	MmZeroedPageListHead          uint32
	MmFreePageListHead            uint32
	MmStandbyPageListHead         uint32
	MmModifiedPageListHead        uint32
	MmModifiedNoWritePageListHead uint32
	MmAvailablePages              uint32
	MmResidentAvailablePages      uint32
	PoolTrackTable                uint32
	NonPagedPoolDescriptor        uint32
	MmHighestUserAddress          uint32
	MmSystemRangeStart            uint32
	MmUserProbeAddress            uint32
	KdPrintCircularBuffer         uint32
	KdPrintCircularBufferEnd      uint32
	KdPrintWritePointer           uint32
	KdPrintRolloverCount          uint32
	MmLoadedUserImageList         uint32
}

type DBGKD_GET_VERSION64 struct {
	MajorVersion       uint16
	MinorVersion       uint16
	ProtocolVersion    byte
	KdSecondaryVersion byte
	Flags              uint16
	MachineType        uint16
	MaxPacketType      byte
	MaxStateChange     byte
	MaxManipulate      byte
	Simulation         byte
	Unused             [1]uint16
	KernBase           uint64
	PsLoadedModuleList uint64
	DebuggerDataList   uint64
}

type DBGKD_DEBUG_DATA_HEADER64 struct {
	List     LIST_ENTRY64
	OwnerTag uint32
	Size     uint32
}

type KDDEBUGGER_DATA64 struct {
	Header                              DBGKD_DEBUG_DATA_HEADER64
	KernBase                            uint64
	BreakpointWithStatus                uint64
	SavedContext                        uint64
	ThCallbackStack                     uint16
	NextCallback                        uint16
	FramePointer                        uint16
	Bitfield_                           uint16
	KiCallUserMode                      uint64
	KeUserCallbackDispatcher            uint64
	PsLoadedModuleList                  uint64
	PsActiveProcessHead                 uint64
	PspCidTable                         uint64
	ExpSystemResourcesList              uint64
	ExpPagedPoolDescriptor              uint64
	ExpNumberOfPagedPools               uint64
	KeTimeIncrement                     uint64
	KeBugCheckCallbackListHead          uint64
	KiBugcheckData                      uint64
	IopErrorLogListHead                 uint64
	ObpRootDirectoryObject              uint64
	ObpTypeObjectType                   uint64
	MmSystemCacheStart                  uint64
	MmSystemCacheEnd                    uint64
	MmSystemCacheWs                     uint64
	MmPfnDatabase                       uint64
	MmSystemPtesStart                   uint64
	MmSystemPtesEnd                     uint64
	MmSubsectionBase                    uint64
	MmNumberOfPagingFiles               uint64
	MmLowestPhysicalPage                uint64
	MmHighestPhysicalPage               uint64
	MmNumberOfPhysicalPages             uint64
	MmMaximumNonPagedPoolInBytes        uint64
	MmNonPagedSystemStart               uint64
	MmNonPagedPoolStart                 uint64
	MmNonPagedPoolEnd                   uint64
	MmPagedPoolStart                    uint64
	MmPagedPoolEnd                      uint64
	MmPagedPoolInformation              uint64
	MmPageSize                          uint64
	MmSizeOfPagedPoolInBytes            uint64
	MmTotalCommitLimit                  uint64
	MmTotalCommittedPages               uint64
	MmSharedCommit                      uint64
	MmDriverCommit                      uint64
	MmProcessCommit                     uint64
	MmPagedPoolCommit                   uint64
	MmExtendedCommit                    uint64
	MmZeroedPageListHead                uint64
	MmFreePageListHead                  uint64
	MmStandbyPageListHead               uint64
	MmModifiedPageListHead              uint64
	MmModifiedNoWritePageListHead       uint64
	MmAvailablePages                    uint64
	MmResidentAvailablePages            uint64
	PoolTrackTable                      uint64
	NonPagedPoolDescriptor              uint64
	MmHighestUserAddress                uint64
	MmSystemRangeStart                  uint64
	MmUserProbeAddress                  uint64
	KdPrintCircularBuffer               uint64
	KdPrintCircularBufferEnd            uint64
	KdPrintWritePointer                 uint64
	KdPrintRolloverCount                uint64
	MmLoadedUserImageList               uint64
	NtBuildLab                          uint64
	KiNormalSystemCall                  uint64
	KiProcessorBlock                    uint64
	MmUnloadedDrivers                   uint64
	MmLastUnloadedDriver                uint64
	MmTriageActionTaken                 uint64
	MmSpecialPoolTag                    uint64
	KernelVerifier                      uint64
	MmVerifierData                      uint64
	MmAllocatedNonPagedPool             uint64
	MmPeakCommitment                    uint64
	MmTotalCommitLimitMaximum           uint64
	CmNtCSDVersion                      uint64
	MmPhysicalMemoryBlock               uint64
	MmSessionBase                       uint64
	MmSessionSize                       uint64
	MmSystemParentTablePage             uint64
	MmVirtualTranslationBase            uint64
	OffsetKThreadNextProcessor          uint16
	OffsetKThreadTeb                    uint16
	OffsetKThreadKernelStack            uint16
	OffsetKThreadInitialStack           uint16
	OffsetKThreadApcProcess             uint16
	OffsetKThreadState                  uint16
	OffsetKThreadBStore                 uint16
	OffsetKThreadBStoreLimit            uint16
	SizeEProcess                        uint16
	OffsetEprocessPeb                   uint16
	OffsetEprocessParentCID             uint16
	OffsetEprocessDirectoryTableBase    uint16
	SizePrcb                            uint16
	OffsetPrcbDpcRoutine                uint16
	OffsetPrcbCurrentThread             uint16
	OffsetPrcbMhz                       uint16
	OffsetPrcbCpuType                   uint16
	OffsetPrcbVendorString              uint16
	OffsetPrcbProcStateContext          uint16
	OffsetPrcbNumber                    uint16
	SizeEThread                         uint16
	L1tfHighPhysicalBitIndex            byte
	L1tfSwizzleBitIndex                 byte
	Padding0                            uint32
	KdPrintCircularBufferPtr            uint64
	KdPrintBufferSize                   uint64
	KeLoaderBlock                       uint64
	SizePcr                             uint16
	OffsetPcrSelfPcr                    uint16
	OffsetPcrCurrentPrcb                uint16
	OffsetPcrContainedPrcb              uint16
	OffsetPcrInitialBStore              uint16
	OffsetPcrBStoreLimit                uint16
	OffsetPcrInitialStack               uint16
	OffsetPcrStackLimit                 uint16
	OffsetPrcbPcrPage                   uint16
	OffsetPrcbProcStateSpecialReg       uint16
	GdtR0Code                           uint16
	GdtR0Data                           uint16
	GdtR0Pcr                            uint16
	GdtR3Code                           uint16
	GdtR3Data                           uint16
	GdtR3Teb                            uint16
	GdtLdt                              uint16
	GdtTss                              uint16
	Gdt64R3CmCode                       uint16
	Gdt64R3CmTeb                        uint16
	IopNumTriageDumpDataBlocks          uint64
	IopTriageDumpDataBlocks             uint64
	VfCrashDataBlock                    uint64
	MmBadPagesDetected                  uint64
	MmZeroedPageSingleBitErrorsDetected uint64
	EtwpDebuggerData                    uint64
	OffsetPrcbContext                   uint16
	OffsetPrcbMaxBreakpoints            uint16
	OffsetPrcbMaxWatchpoints            uint16
	OffsetKThreadStackLimit             uint32
	OffsetKThreadStackBase              uint32
	OffsetKThreadQueueListEntry         uint32
	OffsetEThreadIrpList                uint32
	OffsetPrcbIdleThread                uint16
	OffsetPrcbNormalDpcState            uint16
	OffsetPrcbDpcStack                  uint16
	OffsetPrcbIsrStack                  uint16
	SizeKDPC_STACK_FRAME                uint16
	OffsetKPriQueueThreadListHead       uint16
	OffsetKThreadWaitReason             uint16
	Padding1                            uint16
	PteBase                             uint64
	RetpolineStubFunctionTable          uint64
	RetpolineStubFunctionTableSize      uint32
	RetpolineStubOffset                 uint32
	RetpolineStubSize                   uint32
	OffsetEProcessMmHotPatchContext     uint16
}

type FIELD_INFO_Anonymous struct {
	Data [1]uint64
}

func (this *FIELD_INFO_Anonymous) FieldCallBack() *unsafe.Pointer {
	return (*unsafe.Pointer)(unsafe.Pointer(this))
}

func (this *FIELD_INFO_Anonymous) FieldCallBackVal() unsafe.Pointer {
	return *(*unsafe.Pointer)(unsafe.Pointer(this))
}

func (this *FIELD_INFO_Anonymous) PBuffer() *unsafe.Pointer {
	return (*unsafe.Pointer)(unsafe.Pointer(this))
}

func (this *FIELD_INFO_Anonymous) PBufferVal() unsafe.Pointer {
	return *(*unsafe.Pointer)(unsafe.Pointer(this))
}

type FIELD_INFO_BitField struct {
	Position uint16
	Size     uint16
}

type FIELD_INFO struct {
	FName     *byte
	PrintName *byte
	Size      uint32
	FOptions  uint32
	Address   uint64
	FIELD_INFO_Anonymous
	TypeId      uint32
	FieldOffset uint32
	BufferSize  uint32
	BitField    FIELD_INFO_BitField
	Bitfield_   uint32
}

type SYM_DUMP_PARAM_Anonymous struct {
	Data [1]uint64
}

func (this *SYM_DUMP_PARAM_Anonymous) Context() *unsafe.Pointer {
	return (*unsafe.Pointer)(unsafe.Pointer(this))
}

func (this *SYM_DUMP_PARAM_Anonymous) ContextVal() unsafe.Pointer {
	return *(*unsafe.Pointer)(unsafe.Pointer(this))
}

func (this *SYM_DUMP_PARAM_Anonymous) PBuffer() *unsafe.Pointer {
	return (*unsafe.Pointer)(unsafe.Pointer(this))
}

func (this *SYM_DUMP_PARAM_Anonymous) PBufferVal() unsafe.Pointer {
	return *(*unsafe.Pointer)(unsafe.Pointer(this))
}

type SYM_DUMP_PARAM struct {
	Size     uint32
	SName    *byte
	Options  uint32
	Addr     uint64
	ListLink *FIELD_INFO
	SYM_DUMP_PARAM_Anonymous
	CallbackRoutine PSYM_DUMP_FIELD_CALLBACK
	NFields         uint32
	Fields          *FIELD_INFO
	ModBase         uint64
	TypeId          uint32
	TypeSize        uint32
	BufferSize      uint32
	Bitfield_       uint32
}

type M128A struct {
	Low  uint64
	High int64
}

type XSAVE_FORMAT struct {
	ControlWord    uint16
	StatusWord     uint16
	TagWord        byte
	Reserved1      byte
	ErrorOpcode    uint16
	ErrorOffset    uint32
	ErrorSelector  uint16
	Reserved2      uint16
	DataOffset     uint32
	DataSelector   uint16
	Reserved3      uint16
	MxCsr          uint32
	MxCsr_Mask     uint32
	FloatRegisters [8]M128A
	XmmRegisters   [16]M128A
	Reserved4      [96]byte
}

type XSAVE_AREA_HEADER struct {
	Mask           uint64
	CompactionMask uint64
	Reserved2      [6]uint64
}

type XSAVE_AREA struct {
	LegacyState XSAVE_FORMAT
	Header      XSAVE_AREA_HEADER
}

type XSTATE_CONTEXT struct {
	Mask      uint64
	Length    uint32
	Reserved1 uint32
	Area      *XSAVE_AREA
	Buffer    unsafe.Pointer
}

type CONTEXT_Anonymous_Anonymous struct {
	X0  uint64
	X1  uint64
	X2  uint64
	X3  uint64
	X4  uint64
	X5  uint64
	X6  uint64
	X7  uint64
	X8  uint64
	X9  uint64
	X10 uint64
	X11 uint64
	X12 uint64
	X13 uint64
	X14 uint64
	X15 uint64
	X16 uint64
	X17 uint64
	X18 uint64
	X19 uint64
	X20 uint64
	X21 uint64
	X22 uint64
	X23 uint64
	X24 uint64
	X25 uint64
	X26 uint64
	X27 uint64
	X28 uint64
	Fp  uint64
	Lr  uint64
}

type CONTEXT_Anonymous struct {
	CONTEXT_Anonymous_Anonymous
}

func (this *CONTEXT_Anonymous) Anonymous() *CONTEXT_Anonymous_Anonymous {
	return (*CONTEXT_Anonymous_Anonymous)(unsafe.Pointer(this))
}

func (this *CONTEXT_Anonymous) AnonymousVal() CONTEXT_Anonymous_Anonymous {
	return *(*CONTEXT_Anonymous_Anonymous)(unsafe.Pointer(this))
}

func (this *CONTEXT_Anonymous) X() *[31]uint64 {
	return (*[31]uint64)(unsafe.Pointer(this))
}

func (this *CONTEXT_Anonymous) XVal() [31]uint64 {
	return *(*[31]uint64)(unsafe.Pointer(this))
}

type CONTEXT struct {
	P1Home       uint64
	P2Home       uint64
	P3Home       uint64
	P4Home       uint64
	P5Home       uint64
	P6Home       uint64
	ContextFlags uint32
	MxCsr        uint32
	SegCs        uint16
	SegDs        uint16
	SegEs        uint16
	SegFs        uint16
	SegGs        uint16
	SegSs        uint16
	EFlags       uint32
	Dr0          uint64
	Dr1          uint64
	Dr2          uint64
	Dr3          uint64
	Dr6          uint64
	Dr7          uint64
	Rax          uint64
	Rcx          uint64
	Rdx          uint64
	Rbx          uint64
	Rsp          uint64
	Rbp          uint64
	Rsi          uint64
	Rdi          uint64
	R8           uint64
	R9           uint64
	R10          uint64
	R11          uint64
	R12          uint64
	R13          uint64
	R14          uint64
	R15          uint64
	Rip          uint64
	CONTEXT_Anonymous
	VectorRegister       [26]M128A
	VectorControl        uint64
	DebugControl         uint64
	LastBranchToRip      uint64
	LastBranchFromRip    uint64
	LastExceptionToRip   uint64
	LastExceptionFromRip uint64
}

type DISPATCHER_CONTEXT struct {
	ControlPc        uint64
	ImageBase        uint64
	FunctionEntry    *IMAGE_RUNTIME_FUNCTION_ENTRY
	EstablisherFrame uint64
	TargetIp         uint64
	ContextRecord    *CONTEXT
	LanguageHandler  EXCEPTION_ROUTINE
	HandlerData      unsafe.Pointer
	HistoryTable     *UNWIND_HISTORY_TABLE
	ScopeIndex       uint32
	Fill0            uint32
}

type KNONVOLATILE_CONTEXT_POINTERS_Anonymous1_Anonymous struct {
	Xmm0  *M128A
	Xmm1  *M128A
	Xmm2  *M128A
	Xmm3  *M128A
	Xmm4  *M128A
	Xmm5  *M128A
	Xmm6  *M128A
	Xmm7  *M128A
	Xmm8  *M128A
	Xmm9  *M128A
	Xmm10 *M128A
	Xmm11 *M128A
	Xmm12 *M128A
	Xmm13 *M128A
	Xmm14 *M128A
	Xmm15 *M128A
}

type KNONVOLATILE_CONTEXT_POINTERS_Anonymous1 struct {
	KNONVOLATILE_CONTEXT_POINTERS_Anonymous1_Anonymous
}

func (this *KNONVOLATILE_CONTEXT_POINTERS_Anonymous1) FloatingContext() *[16]*M128A {
	return (*[16]*M128A)(unsafe.Pointer(this))
}

func (this *KNONVOLATILE_CONTEXT_POINTERS_Anonymous1) FloatingContextVal() [16]*M128A {
	return *(*[16]*M128A)(unsafe.Pointer(this))
}

func (this *KNONVOLATILE_CONTEXT_POINTERS_Anonymous1) Anonymous() *KNONVOLATILE_CONTEXT_POINTERS_Anonymous1_Anonymous {
	return (*KNONVOLATILE_CONTEXT_POINTERS_Anonymous1_Anonymous)(unsafe.Pointer(this))
}

func (this *KNONVOLATILE_CONTEXT_POINTERS_Anonymous1) AnonymousVal() KNONVOLATILE_CONTEXT_POINTERS_Anonymous1_Anonymous {
	return *(*KNONVOLATILE_CONTEXT_POINTERS_Anonymous1_Anonymous)(unsafe.Pointer(this))
}

type KNONVOLATILE_CONTEXT_POINTERS_Anonymous2_Anonymous struct {
	Rax *uint64
	Rcx *uint64
	Rdx *uint64
	Rbx *uint64
	Rsp *uint64
	Rbp *uint64
	Rsi *uint64
	Rdi *uint64
	R8  *uint64
	R9  *uint64
	R10 *uint64
	R11 *uint64
	R12 *uint64
	R13 *uint64
	R14 *uint64
	R15 *uint64
}

type KNONVOLATILE_CONTEXT_POINTERS_Anonymous2 struct {
	KNONVOLATILE_CONTEXT_POINTERS_Anonymous2_Anonymous
}

func (this *KNONVOLATILE_CONTEXT_POINTERS_Anonymous2) IntegerContext() *[16]*uint64 {
	return (*[16]*uint64)(unsafe.Pointer(this))
}

func (this *KNONVOLATILE_CONTEXT_POINTERS_Anonymous2) IntegerContextVal() [16]*uint64 {
	return *(*[16]*uint64)(unsafe.Pointer(this))
}

func (this *KNONVOLATILE_CONTEXT_POINTERS_Anonymous2) Anonymous() *KNONVOLATILE_CONTEXT_POINTERS_Anonymous2_Anonymous {
	return (*KNONVOLATILE_CONTEXT_POINTERS_Anonymous2_Anonymous)(unsafe.Pointer(this))
}

func (this *KNONVOLATILE_CONTEXT_POINTERS_Anonymous2) AnonymousVal() KNONVOLATILE_CONTEXT_POINTERS_Anonymous2_Anonymous {
	return *(*KNONVOLATILE_CONTEXT_POINTERS_Anonymous2_Anonymous)(unsafe.Pointer(this))
}

type KNONVOLATILE_CONTEXT_POINTERS struct {
	KNONVOLATILE_CONTEXT_POINTERS_Anonymous1
	KNONVOLATILE_CONTEXT_POINTERS_Anonymous2
}

type ARM64_NT_NEON128_Anonymous struct {
	Low  uint64
	High int64
}

type ARM64_NT_NEON128 struct {
	ARM64_NT_NEON128_Anonymous
}

func (this *ARM64_NT_NEON128) Anonymous() *ARM64_NT_NEON128_Anonymous {
	return (*ARM64_NT_NEON128_Anonymous)(unsafe.Pointer(this))
}

func (this *ARM64_NT_NEON128) AnonymousVal() ARM64_NT_NEON128_Anonymous {
	return *(*ARM64_NT_NEON128_Anonymous)(unsafe.Pointer(this))
}

func (this *ARM64_NT_NEON128) D() *[2]float64 {
	return (*[2]float64)(unsafe.Pointer(this))
}

func (this *ARM64_NT_NEON128) DVal() [2]float64 {
	return *(*[2]float64)(unsafe.Pointer(this))
}

func (this *ARM64_NT_NEON128) S() *[4]float32 {
	return (*[4]float32)(unsafe.Pointer(this))
}

func (this *ARM64_NT_NEON128) SVal() [4]float32 {
	return *(*[4]float32)(unsafe.Pointer(this))
}

func (this *ARM64_NT_NEON128) H() *[8]uint16 {
	return (*[8]uint16)(unsafe.Pointer(this))
}

func (this *ARM64_NT_NEON128) HVal() [8]uint16 {
	return *(*[8]uint16)(unsafe.Pointer(this))
}

func (this *ARM64_NT_NEON128) B() *[16]byte {
	return (*[16]byte)(unsafe.Pointer(this))
}

func (this *ARM64_NT_NEON128) BVal() [16]byte {
	return *(*[16]byte)(unsafe.Pointer(this))
}

type ARM64_NT_CONTEXT_Anonymous_Anonymous struct {
	X0  uint64
	X1  uint64
	X2  uint64
	X3  uint64
	X4  uint64
	X5  uint64
	X6  uint64
	X7  uint64
	X8  uint64
	X9  uint64
	X10 uint64
	X11 uint64
	X12 uint64
	X13 uint64
	X14 uint64
	X15 uint64
	X16 uint64
	X17 uint64
	X18 uint64
	X19 uint64
	X20 uint64
	X21 uint64
	X22 uint64
	X23 uint64
	X24 uint64
	X25 uint64
	X26 uint64
	X27 uint64
	X28 uint64
	Fp  uint64
	Lr  uint64
}

type ARM64_NT_CONTEXT_Anonymous struct {
	ARM64_NT_CONTEXT_Anonymous_Anonymous
}

func (this *ARM64_NT_CONTEXT_Anonymous) Anonymous() *ARM64_NT_CONTEXT_Anonymous_Anonymous {
	return (*ARM64_NT_CONTEXT_Anonymous_Anonymous)(unsafe.Pointer(this))
}

func (this *ARM64_NT_CONTEXT_Anonymous) AnonymousVal() ARM64_NT_CONTEXT_Anonymous_Anonymous {
	return *(*ARM64_NT_CONTEXT_Anonymous_Anonymous)(unsafe.Pointer(this))
}

func (this *ARM64_NT_CONTEXT_Anonymous) X() *[31]uint64 {
	return (*[31]uint64)(unsafe.Pointer(this))
}

func (this *ARM64_NT_CONTEXT_Anonymous) XVal() [31]uint64 {
	return *(*[31]uint64)(unsafe.Pointer(this))
}

type ARM64_NT_CONTEXT struct {
	ContextFlags uint32
	Cpsr         uint32
	ARM64_NT_CONTEXT_Anonymous
	Sp   uint64
	Pc   uint64
	V    [32]ARM64_NT_NEON128
	Fpcr uint32
	Fpsr uint32
	Bcr  [8]uint32
	Bvr  [8]uint64
	Wcr  [2]uint32
	Wvr  [2]uint64
}

type LDT_ENTRY_HighWord_Bytes struct {
	BaseMid byte
	Flags1  byte
	Flags2  byte
	BaseHi  byte
}

type LDT_ENTRY_HighWord_Bits struct {
	Bitfield_ uint32
}

type LDT_ENTRY_HighWord struct {
	Data [1]uint32
}

func (this *LDT_ENTRY_HighWord) Bytes() *LDT_ENTRY_HighWord_Bytes {
	return (*LDT_ENTRY_HighWord_Bytes)(unsafe.Pointer(this))
}

func (this *LDT_ENTRY_HighWord) BytesVal() LDT_ENTRY_HighWord_Bytes {
	return *(*LDT_ENTRY_HighWord_Bytes)(unsafe.Pointer(this))
}

func (this *LDT_ENTRY_HighWord) Bits() *LDT_ENTRY_HighWord_Bits {
	return (*LDT_ENTRY_HighWord_Bits)(unsafe.Pointer(this))
}

func (this *LDT_ENTRY_HighWord) BitsVal() LDT_ENTRY_HighWord_Bits {
	return *(*LDT_ENTRY_HighWord_Bits)(unsafe.Pointer(this))
}

type LDT_ENTRY struct {
	LimitLow uint16
	BaseLow  uint16
	HighWord LDT_ENTRY_HighWord
}

type WOW64_FLOATING_SAVE_AREA struct {
	ControlWord   uint32
	StatusWord    uint32
	TagWord       uint32
	ErrorOffset   uint32
	ErrorSelector uint32
	DataOffset    uint32
	DataSelector  uint32
	RegisterArea  [80]byte
	Cr0NpxState   uint32
}

type WOW64_CONTEXT struct {
	ContextFlags      uint32
	Dr0               uint32
	Dr1               uint32
	Dr2               uint32
	Dr3               uint32
	Dr6               uint32
	Dr7               uint32
	FloatSave         WOW64_FLOATING_SAVE_AREA
	SegGs             uint32
	SegFs             uint32
	SegEs             uint32
	SegDs             uint32
	Edi               uint32
	Esi               uint32
	Ebx               uint32
	Edx               uint32
	Ecx               uint32
	Eax               uint32
	Ebp               uint32
	Eip               uint32
	SegCs             uint32
	EFlags            uint32
	Esp               uint32
	SegSs             uint32
	ExtendedRegisters [512]byte
}

type WOW64_LDT_ENTRY_HighWord_Bytes struct {
	BaseMid byte
	Flags1  byte
	Flags2  byte
	BaseHi  byte
}

type WOW64_LDT_ENTRY_HighWord_Bits struct {
	Bitfield_ uint32
}

type WOW64_LDT_ENTRY_HighWord struct {
	Data [1]uint32
}

func (this *WOW64_LDT_ENTRY_HighWord) Bytes() *WOW64_LDT_ENTRY_HighWord_Bytes {
	return (*WOW64_LDT_ENTRY_HighWord_Bytes)(unsafe.Pointer(this))
}

func (this *WOW64_LDT_ENTRY_HighWord) BytesVal() WOW64_LDT_ENTRY_HighWord_Bytes {
	return *(*WOW64_LDT_ENTRY_HighWord_Bytes)(unsafe.Pointer(this))
}

func (this *WOW64_LDT_ENTRY_HighWord) Bits() *WOW64_LDT_ENTRY_HighWord_Bits {
	return (*WOW64_LDT_ENTRY_HighWord_Bits)(unsafe.Pointer(this))
}

func (this *WOW64_LDT_ENTRY_HighWord) BitsVal() WOW64_LDT_ENTRY_HighWord_Bits {
	return *(*WOW64_LDT_ENTRY_HighWord_Bits)(unsafe.Pointer(this))
}

type WOW64_LDT_ENTRY struct {
	LimitLow uint16
	BaseLow  uint16
	HighWord WOW64_LDT_ENTRY_HighWord
}

type WOW64_DESCRIPTOR_TABLE_ENTRY struct {
	Selector   uint32
	Descriptor WOW64_LDT_ENTRY
}

type EXCEPTION_RECORD struct {
	ExceptionCode        NTSTATUS
	ExceptionFlags       uint32
	ExceptionRecord      *EXCEPTION_RECORD
	ExceptionAddress     unsafe.Pointer
	NumberParameters     uint32
	ExceptionInformation [15]uintptr
}

type EXCEPTION_RECORD32 struct {
	ExceptionCode        NTSTATUS
	ExceptionFlags       uint32
	ExceptionRecord      uint32
	ExceptionAddress     uint32
	NumberParameters     uint32
	ExceptionInformation [15]uint32
}

type EXCEPTION_RECORD64 struct {
	ExceptionCode        NTSTATUS
	ExceptionFlags       uint32
	ExceptionRecord      uint64
	ExceptionAddress     uint64
	NumberParameters     uint32
	UnusedAlignment__    uint32
	ExceptionInformation [15]uint64
}

type EXCEPTION_POINTERS struct {
	ExceptionRecord *EXCEPTION_RECORD
	ContextRecord   *CONTEXT
}

type XSTATE_FEATURE struct {
	Offset uint32
	Size   uint32
}

type XSTATE_CONFIGURATION_Anonymous_Anonymous struct {
	Bitfield_ uint32
}

type XSTATE_CONFIGURATION_Anonymous struct {
	XSTATE_CONFIGURATION_Anonymous_Anonymous
}

func (this *XSTATE_CONFIGURATION_Anonymous) ControlFlags() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *XSTATE_CONFIGURATION_Anonymous) ControlFlagsVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *XSTATE_CONFIGURATION_Anonymous) Anonymous() *XSTATE_CONFIGURATION_Anonymous_Anonymous {
	return (*XSTATE_CONFIGURATION_Anonymous_Anonymous)(unsafe.Pointer(this))
}

func (this *XSTATE_CONFIGURATION_Anonymous) AnonymousVal() XSTATE_CONFIGURATION_Anonymous_Anonymous {
	return *(*XSTATE_CONFIGURATION_Anonymous_Anonymous)(unsafe.Pointer(this))
}

type XSTATE_CONFIGURATION struct {
	EnabledFeatures         uint64
	EnabledVolatileFeatures uint64
	Size                    uint32
	XSTATE_CONFIGURATION_Anonymous
	Features                             [64]XSTATE_FEATURE
	EnabledSupervisorFeatures            uint64
	AlignedFeatures                      uint64
	AllFeatureSize                       uint32
	AllFeatures                          [64]uint32
	EnabledUserVisibleSupervisorFeatures uint64
	ExtendedFeatureDisableFeatures       uint64
	AllNonLargeFeatureSize               uint32
	Spare                                uint32
}

type IMAGE_FILE_HEADER struct {
	Machine              IMAGE_FILE_MACHINE
	NumberOfSections     uint16
	TimeDateStamp        uint32
	PointerToSymbolTable uint32
	NumberOfSymbols      uint32
	SizeOfOptionalHeader uint16
	Characteristics      IMAGE_FILE_CHARACTERISTICS
}

type IMAGE_DATA_DIRECTORY struct {
	VirtualAddress uint32
	Size           uint32
}

type IMAGE_OPTIONAL_HEADER32 struct {
	Magic                       IMAGE_OPTIONAL_HEADER_MAGIC
	MajorLinkerVersion          byte
	MinorLinkerVersion          byte
	SizeOfCode                  uint32
	SizeOfInitializedData       uint32
	SizeOfUninitializedData     uint32
	AddressOfEntryPoint         uint32
	BaseOfCode                  uint32
	BaseOfData                  uint32
	ImageBase                   uint32
	SectionAlignment            uint32
	FileAlignment               uint32
	MajorOperatingSystemVersion uint16
	MinorOperatingSystemVersion uint16
	MajorImageVersion           uint16
	MinorImageVersion           uint16
	MajorSubsystemVersion       uint16
	MinorSubsystemVersion       uint16
	Win32VersionValue           uint32
	SizeOfImage                 uint32
	SizeOfHeaders               uint32
	CheckSum                    uint32
	Subsystem                   IMAGE_SUBSYSTEM
	DllCharacteristics          IMAGE_DLL_CHARACTERISTICS
	SizeOfStackReserve          uint32
	SizeOfStackCommit           uint32
	SizeOfHeapReserve           uint32
	SizeOfHeapCommit            uint32
	LoaderFlags                 uint32
	NumberOfRvaAndSizes         uint32
	DataDirectory               [16]IMAGE_DATA_DIRECTORY
}

type IMAGE_ROM_OPTIONAL_HEADER struct {
	Magic                   uint16
	MajorLinkerVersion      byte
	MinorLinkerVersion      byte
	SizeOfCode              uint32
	SizeOfInitializedData   uint32
	SizeOfUninitializedData uint32
	AddressOfEntryPoint     uint32
	BaseOfCode              uint32
	BaseOfData              uint32
	BaseOfBss               uint32
	GprMask                 uint32
	CprMask                 [4]uint32
	GpValue                 uint32
}

type IMAGE_OPTIONAL_HEADER64 struct {
	Magic                       IMAGE_OPTIONAL_HEADER_MAGIC
	MajorLinkerVersion          byte
	MinorLinkerVersion          byte
	SizeOfCode                  uint32
	SizeOfInitializedData       uint32
	SizeOfUninitializedData     uint32
	AddressOfEntryPoint         uint32
	BaseOfCode                  uint32
	ImageBase                   uint64
	SectionAlignment            uint32
	FileAlignment               uint32
	MajorOperatingSystemVersion uint16
	MinorOperatingSystemVersion uint16
	MajorImageVersion           uint16
	MinorImageVersion           uint16
	MajorSubsystemVersion       uint16
	MinorSubsystemVersion       uint16
	Win32VersionValue           uint32
	SizeOfImage                 uint32
	SizeOfHeaders               uint32
	CheckSum                    uint32
	Subsystem                   IMAGE_SUBSYSTEM
	DllCharacteristics          IMAGE_DLL_CHARACTERISTICS
	SizeOfStackReserve          uint64
	SizeOfStackCommit           uint64
	SizeOfHeapReserve           uint64
	SizeOfHeapCommit            uint64
	LoaderFlags                 uint32
	NumberOfRvaAndSizes         uint32
	DataDirectory               [16]IMAGE_DATA_DIRECTORY
}

type IMAGE_NT_HEADERS64 struct {
	Signature      uint32
	FileHeader     IMAGE_FILE_HEADER
	OptionalHeader IMAGE_OPTIONAL_HEADER64
}

type IMAGE_NT_HEADERS32 struct {
	Signature      uint32
	FileHeader     IMAGE_FILE_HEADER
	OptionalHeader IMAGE_OPTIONAL_HEADER32
}

type IMAGE_ROM_HEADERS struct {
	FileHeader     IMAGE_FILE_HEADER
	OptionalHeader IMAGE_ROM_OPTIONAL_HEADER
}

type IMAGE_SECTION_HEADER_Misc struct {
	Data [1]uint32
}

func (this *IMAGE_SECTION_HEADER_Misc) PhysicalAddress() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_SECTION_HEADER_Misc) PhysicalAddressVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_SECTION_HEADER_Misc) VirtualSize() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_SECTION_HEADER_Misc) VirtualSizeVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

type IMAGE_SECTION_HEADER struct {
	Name                 [8]byte
	Misc                 IMAGE_SECTION_HEADER_Misc
	VirtualAddress       uint32
	SizeOfRawData        uint32
	PointerToRawData     uint32
	PointerToRelocations uint32
	PointerToLinenumbers uint32
	NumberOfRelocations  uint16
	NumberOfLinenumbers  uint16
	Characteristics      IMAGE_SECTION_CHARACTERISTICS
}

type IMAGE_LOAD_CONFIG_CODE_INTEGRITY struct {
	Flags         uint16
	Catalog       uint16
	CatalogOffset uint32
	Reserved      uint32
}

type IMAGE_LOAD_CONFIG_DIRECTORY32 struct {
	Size                                     uint32
	TimeDateStamp                            uint32
	MajorVersion                             uint16
	MinorVersion                             uint16
	GlobalFlagsClear                         uint32
	GlobalFlagsSet                           uint32
	CriticalSectionDefaultTimeout            uint32
	DeCommitFreeBlockThreshold               uint32
	DeCommitTotalFreeThreshold               uint32
	LockPrefixTable                          uint32
	MaximumAllocationSize                    uint32
	VirtualMemoryThreshold                   uint32
	ProcessHeapFlags                         uint32
	ProcessAffinityMask                      uint32
	CSDVersion                               uint16
	DependentLoadFlags                       uint16
	EditList                                 uint32
	SecurityCookie                           uint32
	SEHandlerTable                           uint32
	SEHandlerCount                           uint32
	GuardCFCheckFunctionPointer              uint32
	GuardCFDispatchFunctionPointer           uint32
	GuardCFFunctionTable                     uint32
	GuardCFFunctionCount                     uint32
	GuardFlags                               uint32
	CodeIntegrity                            IMAGE_LOAD_CONFIG_CODE_INTEGRITY
	GuardAddressTakenIatEntryTable           uint32
	GuardAddressTakenIatEntryCount           uint32
	GuardLongJumpTargetTable                 uint32
	GuardLongJumpTargetCount                 uint32
	DynamicValueRelocTable                   uint32
	CHPEMetadataPointer                      uint32
	GuardRFFailureRoutine                    uint32
	GuardRFFailureRoutineFunctionPointer     uint32
	DynamicValueRelocTableOffset             uint32
	DynamicValueRelocTableSection            uint16
	Reserved2                                uint16
	GuardRFVerifyStackPointerFunctionPointer uint32
	HotPatchTableOffset                      uint32
	Reserved3                                uint32
	EnclaveConfigurationPointer              uint32
	VolatileMetadataPointer                  uint32
	GuardEHContinuationTable                 uint32
	GuardEHContinuationCount                 uint32
	GuardXFGCheckFunctionPointer             uint32
	GuardXFGDispatchFunctionPointer          uint32
	GuardXFGTableDispatchFunctionPointer     uint32
	CastGuardOsDeterminedFailureMode         uint32
}

type IMAGE_LOAD_CONFIG_DIRECTORY64 struct {
	Size                                     uint32
	TimeDateStamp                            uint32
	MajorVersion                             uint16
	MinorVersion                             uint16
	GlobalFlagsClear                         uint32
	GlobalFlagsSet                           uint32
	CriticalSectionDefaultTimeout            uint32
	DeCommitFreeBlockThreshold               uint64
	DeCommitTotalFreeThreshold               uint64
	LockPrefixTable                          uint64
	MaximumAllocationSize                    uint64
	VirtualMemoryThreshold                   uint64
	ProcessAffinityMask                      uint64
	ProcessHeapFlags                         uint32
	CSDVersion                               uint16
	DependentLoadFlags                       uint16
	EditList                                 uint64
	SecurityCookie                           uint64
	SEHandlerTable                           uint64
	SEHandlerCount                           uint64
	GuardCFCheckFunctionPointer              uint64
	GuardCFDispatchFunctionPointer           uint64
	GuardCFFunctionTable                     uint64
	GuardCFFunctionCount                     uint64
	GuardFlags                               uint32
	CodeIntegrity                            IMAGE_LOAD_CONFIG_CODE_INTEGRITY
	GuardAddressTakenIatEntryTable           uint64
	GuardAddressTakenIatEntryCount           uint64
	GuardLongJumpTargetTable                 uint64
	GuardLongJumpTargetCount                 uint64
	DynamicValueRelocTable                   uint64
	CHPEMetadataPointer                      uint64
	GuardRFFailureRoutine                    uint64
	GuardRFFailureRoutineFunctionPointer     uint64
	DynamicValueRelocTableOffset             uint32
	DynamicValueRelocTableSection            uint16
	Reserved2                                uint16
	GuardRFVerifyStackPointerFunctionPointer uint64
	HotPatchTableOffset                      uint32
	Reserved3                                uint32
	EnclaveConfigurationPointer              uint64
	VolatileMetadataPointer                  uint64
	GuardEHContinuationTable                 uint64
	GuardEHContinuationCount                 uint64
	GuardXFGCheckFunctionPointer             uint64
	GuardXFGDispatchFunctionPointer          uint64
	GuardXFGTableDispatchFunctionPointer     uint64
	CastGuardOsDeterminedFailureMode         uint64
}

type IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous_Anonymous struct {
	Bitfield_ uint32
}

type IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous struct {
	IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous_Anonymous
}

func (this *IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous) UnwindData() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous) UnwindDataVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous) Anonymous() *IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous_Anonymous {
	return (*IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous_Anonymous)(unsafe.Pointer(this))
}

func (this *IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous) AnonymousVal() IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous_Anonymous {
	return *(*IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous_Anonymous)(unsafe.Pointer(this))
}

type IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY struct {
	BeginAddress uint32
	IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_Anonymous
}

type IMAGE_RUNTIME_FUNCTION_ENTRY_Anonymous struct {
	Data [1]uint32
}

func (this *IMAGE_RUNTIME_FUNCTION_ENTRY_Anonymous) UnwindInfoAddress() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_RUNTIME_FUNCTION_ENTRY_Anonymous) UnwindInfoAddressVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_RUNTIME_FUNCTION_ENTRY_Anonymous) UnwindData() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_RUNTIME_FUNCTION_ENTRY_Anonymous) UnwindDataVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

type IMAGE_RUNTIME_FUNCTION_ENTRY struct {
	BeginAddress uint32
	EndAddress   uint32
	IMAGE_RUNTIME_FUNCTION_ENTRY_Anonymous
}

type IMAGE_DEBUG_DIRECTORY struct {
	Characteristics  uint32
	TimeDateStamp    uint32
	MajorVersion     uint16
	MinorVersion     uint16
	Type             IMAGE_DEBUG_TYPE
	SizeOfData       uint32
	AddressOfRawData uint32
	PointerToRawData uint32
}

type IMAGE_COFF_SYMBOLS_HEADER struct {
	NumberOfSymbols      uint32
	LvaToFirstSymbol     uint32
	NumberOfLinenumbers  uint32
	LvaToFirstLinenumber uint32
	RvaToFirstByteOfCode uint32
	RvaToLastByteOfCode  uint32
	RvaToFirstByteOfData uint32
	RvaToLastByteOfData  uint32
}

type FPO_DATA struct {
	UlOffStart uint32
	CbProcSize uint32
	CdwLocals  uint32
	CdwParams  uint16
	Bitfield_  uint16
}

type IMAGE_FUNCTION_ENTRY struct {
	StartingAddress uint32
	EndingAddress   uint32
	EndOfPrologue   uint32
}

type IMAGE_FUNCTION_ENTRY64_Anonymous struct {
	Data [1]uint64
}

func (this *IMAGE_FUNCTION_ENTRY64_Anonymous) EndOfPrologue() *uint64 {
	return (*uint64)(unsafe.Pointer(this))
}

func (this *IMAGE_FUNCTION_ENTRY64_Anonymous) EndOfPrologueVal() uint64 {
	return *(*uint64)(unsafe.Pointer(this))
}

func (this *IMAGE_FUNCTION_ENTRY64_Anonymous) UnwindInfoAddress() *uint64 {
	return (*uint64)(unsafe.Pointer(this))
}

func (this *IMAGE_FUNCTION_ENTRY64_Anonymous) UnwindInfoAddressVal() uint64 {
	return *(*uint64)(unsafe.Pointer(this))
}

type IMAGE_FUNCTION_ENTRY64 struct {
	StartingAddress uint64
	EndingAddress   uint64
	IMAGE_FUNCTION_ENTRY64_Anonymous
}

type IMAGE_COR20_HEADER_Anonymous struct {
	Data [1]uint32
}

func (this *IMAGE_COR20_HEADER_Anonymous) EntryPointToken() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_COR20_HEADER_Anonymous) EntryPointTokenVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_COR20_HEADER_Anonymous) EntryPointRVA() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *IMAGE_COR20_HEADER_Anonymous) EntryPointRVAVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

type IMAGE_COR20_HEADER struct {
	Cb                  uint32
	MajorRuntimeVersion uint16
	MinorRuntimeVersion uint16
	MetaData            IMAGE_DATA_DIRECTORY
	Flags               uint32
	IMAGE_COR20_HEADER_Anonymous
	Resources               IMAGE_DATA_DIRECTORY
	StrongNameSignature     IMAGE_DATA_DIRECTORY
	CodeManagerTable        IMAGE_DATA_DIRECTORY
	VTableFixups            IMAGE_DATA_DIRECTORY
	ExportAddressTableJumps IMAGE_DATA_DIRECTORY
	ManagedNativeHeader     IMAGE_DATA_DIRECTORY
}

type UNWIND_HISTORY_TABLE_ENTRY struct {
	ImageBase     uintptr
	FunctionEntry *IMAGE_RUNTIME_FUNCTION_ENTRY
}

type UNWIND_HISTORY_TABLE struct {
	Count       uint32
	LocalHint   byte
	GlobalHint  byte
	Search      byte
	Once        byte
	LowAddress  uintptr
	HighAddress uintptr
	Entry       [12]UNWIND_HISTORY_TABLE_ENTRY
}

type WAITCHAIN_NODE_INFO_Anonymous_LockObject struct {
	ObjectName [128]uint16
	Timeout    int64
	Alertable  BOOL
}

type WAITCHAIN_NODE_INFO_Anonymous_ThreadObject struct {
	ProcessId       uint32
	ThreadId        uint32
	WaitTime        uint32
	ContextSwitches uint32
}

type WAITCHAIN_NODE_INFO_Anonymous struct {
	Data [34]uint64
}

func (this *WAITCHAIN_NODE_INFO_Anonymous) LockObject() *WAITCHAIN_NODE_INFO_Anonymous_LockObject {
	return (*WAITCHAIN_NODE_INFO_Anonymous_LockObject)(unsafe.Pointer(this))
}

func (this *WAITCHAIN_NODE_INFO_Anonymous) LockObjectVal() WAITCHAIN_NODE_INFO_Anonymous_LockObject {
	return *(*WAITCHAIN_NODE_INFO_Anonymous_LockObject)(unsafe.Pointer(this))
}

func (this *WAITCHAIN_NODE_INFO_Anonymous) ThreadObject() *WAITCHAIN_NODE_INFO_Anonymous_ThreadObject {
	return (*WAITCHAIN_NODE_INFO_Anonymous_ThreadObject)(unsafe.Pointer(this))
}

func (this *WAITCHAIN_NODE_INFO_Anonymous) ThreadObjectVal() WAITCHAIN_NODE_INFO_Anonymous_ThreadObject {
	return *(*WAITCHAIN_NODE_INFO_Anonymous_ThreadObject)(unsafe.Pointer(this))
}

type WAITCHAIN_NODE_INFO struct {
	ObjectType   WCT_OBJECT_TYPE
	ObjectStatus WCT_OBJECT_STATUS
	WAITCHAIN_NODE_INFO_Anonymous
}

type MINIDUMP_LOCATION_DESCRIPTOR struct {
	DataSize uint32
	Rva      uint32
}

type MINIDUMP_LOCATION_DESCRIPTOR64 struct {
	DataSize uint64
	Rva      uint64
}

type MINIDUMP_MEMORY_DESCRIPTOR struct {
	StartOfMemoryRange uint64
	Memory             MINIDUMP_LOCATION_DESCRIPTOR
}

type MINIDUMP_MEMORY_DESCRIPTOR64 struct {
	StartOfMemoryRange uint64
	DataSize           uint64
}

type MINIDUMP_HEADER_Anonymous struct {
	Data [1]uint32
}

func (this *MINIDUMP_HEADER_Anonymous) Reserved() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_HEADER_Anonymous) ReservedVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_HEADER_Anonymous) TimeDateStamp() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_HEADER_Anonymous) TimeDateStampVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

type MINIDUMP_HEADER struct {
	Signature          uint32
	Version            uint32
	NumberOfStreams    uint32
	StreamDirectoryRva uint32
	CheckSum           uint32
	MINIDUMP_HEADER_Anonymous
	Flags uint64
}

type MINIDUMP_DIRECTORY struct {
	StreamType uint32
	Location   MINIDUMP_LOCATION_DESCRIPTOR
}

type MINIDUMP_STRING struct {
	Length uint32
	Buffer [1]uint16
}

type CPU_INFORMATION_X86CpuInfo struct {
	VendorId               [3]uint32
	VersionInformation     uint32
	FeatureInformation     uint32
	AMDExtendedCpuFeatures uint32
}

type CPU_INFORMATION_OtherCpuInfo struct {
	ProcessorFeatures [2]uint64
}

type CPU_INFORMATION struct {
	Data [3]uint64
}

func (this *CPU_INFORMATION) X86CpuInfo() *CPU_INFORMATION_X86CpuInfo {
	return (*CPU_INFORMATION_X86CpuInfo)(unsafe.Pointer(this))
}

func (this *CPU_INFORMATION) X86CpuInfoVal() CPU_INFORMATION_X86CpuInfo {
	return *(*CPU_INFORMATION_X86CpuInfo)(unsafe.Pointer(this))
}

func (this *CPU_INFORMATION) OtherCpuInfo() *CPU_INFORMATION_OtherCpuInfo {
	return (*CPU_INFORMATION_OtherCpuInfo)(unsafe.Pointer(this))
}

func (this *CPU_INFORMATION) OtherCpuInfoVal() CPU_INFORMATION_OtherCpuInfo {
	return *(*CPU_INFORMATION_OtherCpuInfo)(unsafe.Pointer(this))
}

type MINIDUMP_SYSTEM_INFO_Anonymous1_Anonymous struct {
	NumberOfProcessors byte
	ProductType        byte
}

type MINIDUMP_SYSTEM_INFO_Anonymous1 struct {
	MINIDUMP_SYSTEM_INFO_Anonymous1_Anonymous
}

func (this *MINIDUMP_SYSTEM_INFO_Anonymous1) Reserved0() *uint16 {
	return (*uint16)(unsafe.Pointer(this))
}

func (this *MINIDUMP_SYSTEM_INFO_Anonymous1) Reserved0Val() uint16 {
	return *(*uint16)(unsafe.Pointer(this))
}

func (this *MINIDUMP_SYSTEM_INFO_Anonymous1) Anonymous() *MINIDUMP_SYSTEM_INFO_Anonymous1_Anonymous {
	return (*MINIDUMP_SYSTEM_INFO_Anonymous1_Anonymous)(unsafe.Pointer(this))
}

func (this *MINIDUMP_SYSTEM_INFO_Anonymous1) AnonymousVal() MINIDUMP_SYSTEM_INFO_Anonymous1_Anonymous {
	return *(*MINIDUMP_SYSTEM_INFO_Anonymous1_Anonymous)(unsafe.Pointer(this))
}

type MINIDUMP_SYSTEM_INFO_Anonymous2_Anonymous struct {
	SuiteMask uint16
	Reserved2 uint16
}

type MINIDUMP_SYSTEM_INFO_Anonymous2 struct {
	MINIDUMP_SYSTEM_INFO_Anonymous2_Anonymous
}

func (this *MINIDUMP_SYSTEM_INFO_Anonymous2) Reserved1() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_SYSTEM_INFO_Anonymous2) Reserved1Val() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_SYSTEM_INFO_Anonymous2) Anonymous() *MINIDUMP_SYSTEM_INFO_Anonymous2_Anonymous {
	return (*MINIDUMP_SYSTEM_INFO_Anonymous2_Anonymous)(unsafe.Pointer(this))
}

func (this *MINIDUMP_SYSTEM_INFO_Anonymous2) AnonymousVal() MINIDUMP_SYSTEM_INFO_Anonymous2_Anonymous {
	return *(*MINIDUMP_SYSTEM_INFO_Anonymous2_Anonymous)(unsafe.Pointer(this))
}

type MINIDUMP_SYSTEM_INFO struct {
	ProcessorArchitecture PROCESSOR_ARCHITECTURE
	ProcessorLevel        uint16
	ProcessorRevision     uint16
	MINIDUMP_SYSTEM_INFO_Anonymous1
	MajorVersion  uint32
	MinorVersion  uint32
	BuildNumber   uint32
	PlatformId    VER_PLATFORM
	CSDVersionRva uint32
	MINIDUMP_SYSTEM_INFO_Anonymous2
	Cpu CPU_INFORMATION
}

type MINIDUMP_THREAD struct {
	ThreadId      uint32
	SuspendCount  uint32
	PriorityClass uint32
	Priority      uint32
	Teb           uint64
	Stack         MINIDUMP_MEMORY_DESCRIPTOR
	ThreadContext MINIDUMP_LOCATION_DESCRIPTOR
}

type MINIDUMP_THREAD_LIST struct {
	NumberOfThreads uint32
	Threads         [1]MINIDUMP_THREAD
}

type MINIDUMP_THREAD_EX struct {
	ThreadId      uint32
	SuspendCount  uint32
	PriorityClass uint32
	Priority      uint32
	Teb           uint64
	Stack         MINIDUMP_MEMORY_DESCRIPTOR
	ThreadContext MINIDUMP_LOCATION_DESCRIPTOR
	BackingStore  MINIDUMP_MEMORY_DESCRIPTOR
}

type MINIDUMP_THREAD_EX_LIST struct {
	NumberOfThreads uint32
	Threads         [1]MINIDUMP_THREAD_EX
}

type MINIDUMP_EXCEPTION struct {
	ExceptionCode        uint32
	ExceptionFlags       uint32
	ExceptionRecord      uint64
	ExceptionAddress     uint64
	NumberParameters     uint32
	UnusedAlignment__    uint32
	ExceptionInformation [15]uint64
}

type MINIDUMP_EXCEPTION_STREAM struct {
	ThreadId        uint32
	Alignment__     uint32
	ExceptionRecord MINIDUMP_EXCEPTION
	ThreadContext   MINIDUMP_LOCATION_DESCRIPTOR
}

type MINIDUMP_MODULE struct {
	BaseOfImage   uint64
	SizeOfImage   uint32
	CheckSum      uint32
	TimeDateStamp uint32
	ModuleNameRva uint32
	VersionInfo   VS_FIXEDFILEINFO
	CvRecord      MINIDUMP_LOCATION_DESCRIPTOR
	MiscRecord    MINIDUMP_LOCATION_DESCRIPTOR
	Reserved0     uint64
	Reserved1     uint64
}

type MINIDUMP_MODULE_LIST struct {
	NumberOfModules uint32
	Modules         [1]MINIDUMP_MODULE
}

type MINIDUMP_MEMORY_LIST struct {
	NumberOfMemoryRanges uint32
	MemoryRanges         [1]MINIDUMP_MEMORY_DESCRIPTOR
}

type MINIDUMP_MEMORY64_LIST struct {
	NumberOfMemoryRanges uint64
	BaseRva              uint64
	MemoryRanges         [1]MINIDUMP_MEMORY_DESCRIPTOR64
}

type MINIDUMP_EXCEPTION_INFORMATION struct {
	ThreadId          uint32
	ExceptionPointers *EXCEPTION_POINTERS
	ClientPointers    BOOL
}

type MINIDUMP_EXCEPTION_INFORMATION64 struct {
	ThreadId        uint32
	ExceptionRecord uint64
	ContextRecord   uint64
	ClientPointers  BOOL
}

type MINIDUMP_HANDLE_OBJECT_INFORMATION struct {
	NextInfoRva uint32
	InfoType    uint32
	SizeOfInfo  uint32
}

type MINIDUMP_HANDLE_DESCRIPTOR struct {
	Handle        uint64
	TypeNameRva   uint32
	ObjectNameRva uint32
	Attributes    uint32
	GrantedAccess uint32
	HandleCount   uint32
	PointerCount  uint32
}

type MINIDUMP_HANDLE_DESCRIPTOR_2 struct {
	Handle        uint64
	TypeNameRva   uint32
	ObjectNameRva uint32
	Attributes    uint32
	GrantedAccess uint32
	HandleCount   uint32
	PointerCount  uint32
	ObjectInfoRva uint32
	Reserved0     uint32
}

type MINIDUMP_HANDLE_DATA_STREAM struct {
	SizeOfHeader        uint32
	SizeOfDescriptor    uint32
	NumberOfDescriptors uint32
	Reserved            uint32
}

type MINIDUMP_HANDLE_OPERATION_LIST struct {
	SizeOfHeader    uint32
	SizeOfEntry     uint32
	NumberOfEntries uint32
	Reserved        uint32
}

type MINIDUMP_FUNCTION_TABLE_DESCRIPTOR struct {
	MinimumAddress uint64
	MaximumAddress uint64
	BaseAddress    uint64
	EntryCount     uint32
	SizeOfAlignPad uint32
}

type MINIDUMP_FUNCTION_TABLE_STREAM struct {
	SizeOfHeader           uint32
	SizeOfDescriptor       uint32
	SizeOfNativeDescriptor uint32
	SizeOfFunctionEntry    uint32
	NumberOfDescriptors    uint32
	SizeOfAlignPad         uint32
}

type MINIDUMP_UNLOADED_MODULE struct {
	BaseOfImage   uint64
	SizeOfImage   uint32
	CheckSum      uint32
	TimeDateStamp uint32
	ModuleNameRva uint32
}

type MINIDUMP_UNLOADED_MODULE_LIST struct {
	SizeOfHeader    uint32
	SizeOfEntry     uint32
	NumberOfEntries uint32
}

type XSTATE_CONFIG_FEATURE_MSC_INFO struct {
	SizeOfInfo      uint32
	ContextSize     uint32
	EnabledFeatures uint64
	Features        [64]XSTATE_FEATURE
}

type MINIDUMP_MISC_INFO struct {
	SizeOfInfo        uint32
	Flags1            MINIDUMP_MISC_INFO_FLAGS
	ProcessId         uint32
	ProcessCreateTime uint32
	ProcessUserTime   uint32
	ProcessKernelTime uint32
}

type MINIDUMP_MISC_INFO_2 struct {
	SizeOfInfo                uint32
	Flags1                    uint32
	ProcessId                 uint32
	ProcessCreateTime         uint32
	ProcessUserTime           uint32
	ProcessKernelTime         uint32
	ProcessorMaxMhz           uint32
	ProcessorCurrentMhz       uint32
	ProcessorMhzLimit         uint32
	ProcessorMaxIdleState     uint32
	ProcessorCurrentIdleState uint32
}

type MINIDUMP_MISC_INFO_3 struct {
	SizeOfInfo                uint32
	Flags1                    uint32
	ProcessId                 uint32
	ProcessCreateTime         uint32
	ProcessUserTime           uint32
	ProcessKernelTime         uint32
	ProcessorMaxMhz           uint32
	ProcessorCurrentMhz       uint32
	ProcessorMhzLimit         uint32
	ProcessorMaxIdleState     uint32
	ProcessorCurrentIdleState uint32
	ProcessIntegrityLevel     uint32
	ProcessExecuteFlags       uint32
	ProtectedProcess          uint32
	TimeZoneId                uint32
	TimeZone                  TIME_ZONE_INFORMATION
}

type MINIDUMP_MISC_INFO_4 struct {
	SizeOfInfo                uint32
	Flags1                    uint32
	ProcessId                 uint32
	ProcessCreateTime         uint32
	ProcessUserTime           uint32
	ProcessKernelTime         uint32
	ProcessorMaxMhz           uint32
	ProcessorCurrentMhz       uint32
	ProcessorMhzLimit         uint32
	ProcessorMaxIdleState     uint32
	ProcessorCurrentIdleState uint32
	ProcessIntegrityLevel     uint32
	ProcessExecuteFlags       uint32
	ProtectedProcess          uint32
	TimeZoneId                uint32
	TimeZone                  TIME_ZONE_INFORMATION
	BuildString               [260]uint16
	DbgBldStr                 [40]uint16
}

type MINIDUMP_MISC_INFO_5 struct {
	SizeOfInfo                uint32
	Flags1                    uint32
	ProcessId                 uint32
	ProcessCreateTime         uint32
	ProcessUserTime           uint32
	ProcessKernelTime         uint32
	ProcessorMaxMhz           uint32
	ProcessorCurrentMhz       uint32
	ProcessorMhzLimit         uint32
	ProcessorMaxIdleState     uint32
	ProcessorCurrentIdleState uint32
	ProcessIntegrityLevel     uint32
	ProcessExecuteFlags       uint32
	ProtectedProcess          uint32
	TimeZoneId                uint32
	TimeZone                  TIME_ZONE_INFORMATION
	BuildString               [260]uint16
	DbgBldStr                 [40]uint16
	XStateData                XSTATE_CONFIG_FEATURE_MSC_INFO
	ProcessCookie             uint32
}

type MINIDUMP_MEMORY_INFO struct {
	BaseAddress       uint64
	AllocationBase    uint64
	AllocationProtect uint32
	Alignment1__      uint32
	RegionSize        uint64
	State             VIRTUAL_ALLOCATION_TYPE
	Protect           uint32
	Type              uint32
	Alignment2__      uint32
}

type MINIDUMP_MEMORY_INFO_LIST struct {
	SizeOfHeader    uint32
	SizeOfEntry     uint32
	NumberOfEntries uint64
}

type MINIDUMP_THREAD_NAME struct {
	ThreadId        uint32
	RvaOfThreadName uint64
}

type MINIDUMP_THREAD_NAME_LIST struct {
	NumberOfThreadNames uint32
	ThreadNames         [1]MINIDUMP_THREAD_NAME
}

type MINIDUMP_THREAD_INFO struct {
	ThreadId     uint32
	DumpFlags    MINIDUMP_THREAD_INFO_DUMP_FLAGS
	DumpError    uint32
	ExitStatus   uint32
	CreateTime   uint64
	ExitTime     uint64
	KernelTime   uint64
	UserTime     uint64
	StartAddress uint64
	Affinity     uint64
}

type MINIDUMP_THREAD_INFO_LIST struct {
	SizeOfHeader    uint32
	SizeOfEntry     uint32
	NumberOfEntries uint32
}

type MINIDUMP_TOKEN_INFO_HEADER struct {
	TokenSize   uint32
	TokenId     uint32
	TokenHandle uint64
}

type MINIDUMP_TOKEN_INFO_LIST struct {
	TokenListSize     uint32
	TokenListEntries  uint32
	ListHeaderSize    uint32
	ElementHeaderSize uint32
}

type MINIDUMP_SYSTEM_BASIC_INFORMATION struct {
	TimerResolution              uint32
	PageSize                     uint32
	NumberOfPhysicalPages        uint32
	LowestPhysicalPageNumber     uint32
	HighestPhysicalPageNumber    uint32
	AllocationGranularity        uint32
	MinimumUserModeAddress       uint64
	MaximumUserModeAddress       uint64
	ActiveProcessorsAffinityMask uint64
	NumberOfProcessors           uint32
}

type MINIDUMP_SYSTEM_FILECACHE_INFORMATION struct {
	CurrentSize                           uint64
	PeakSize                              uint64
	PageFaultCount                        uint32
	MinimumWorkingSet                     uint64
	MaximumWorkingSet                     uint64
	CurrentSizeIncludingTransitionInPages uint64
	PeakSizeIncludingTransitionInPages    uint64
	TransitionRePurposeCount              uint32
	Flags                                 uint32
}

type MINIDUMP_SYSTEM_BASIC_PERFORMANCE_INFORMATION struct {
	AvailablePages uint64
	CommittedPages uint64
	CommitLimit    uint64
	PeakCommitment uint64
}

type MINIDUMP_SYSTEM_PERFORMANCE_INFORMATION struct {
	IdleProcessTime           uint64
	IoReadTransferCount       uint64
	IoWriteTransferCount      uint64
	IoOtherTransferCount      uint64
	IoReadOperationCount      uint32
	IoWriteOperationCount     uint32
	IoOtherOperationCount     uint32
	AvailablePages            uint32
	CommittedPages            uint32
	CommitLimit               uint32
	PeakCommitment            uint32
	PageFaultCount            uint32
	CopyOnWriteCount          uint32
	TransitionCount           uint32
	CacheTransitionCount      uint32
	DemandZeroCount           uint32
	PageReadCount             uint32
	PageReadIoCount           uint32
	CacheReadCount            uint32
	CacheIoCount              uint32
	DirtyPagesWriteCount      uint32
	DirtyWriteIoCount         uint32
	MappedPagesWriteCount     uint32
	MappedWriteIoCount        uint32
	PagedPoolPages            uint32
	NonPagedPoolPages         uint32
	PagedPoolAllocs           uint32
	PagedPoolFrees            uint32
	NonPagedPoolAllocs        uint32
	NonPagedPoolFrees         uint32
	FreeSystemPtes            uint32
	ResidentSystemCodePage    uint32
	TotalSystemDriverPages    uint32
	TotalSystemCodePages      uint32
	NonPagedPoolLookasideHits uint32
	PagedPoolLookasideHits    uint32
	AvailablePagedPoolPages   uint32
	ResidentSystemCachePage   uint32
	ResidentPagedPoolPage     uint32
	ResidentSystemDriverPage  uint32
	CcFastReadNoWait          uint32
	CcFastReadWait            uint32
	CcFastReadResourceMiss    uint32
	CcFastReadNotPossible     uint32
	CcFastMdlReadNoWait       uint32
	CcFastMdlReadWait         uint32
	CcFastMdlReadResourceMiss uint32
	CcFastMdlReadNotPossible  uint32
	CcMapDataNoWait           uint32
	CcMapDataWait             uint32
	CcMapDataNoWaitMiss       uint32
	CcMapDataWaitMiss         uint32
	CcPinMappedDataCount      uint32
	CcPinReadNoWait           uint32
	CcPinReadWait             uint32
	CcPinReadNoWaitMiss       uint32
	CcPinReadWaitMiss         uint32
	CcCopyReadNoWait          uint32
	CcCopyReadWait            uint32
	CcCopyReadNoWaitMiss      uint32
	CcCopyReadWaitMiss        uint32
	CcMdlReadNoWait           uint32
	CcMdlReadWait             uint32
	CcMdlReadNoWaitMiss       uint32
	CcMdlReadWaitMiss         uint32
	CcReadAheadIos            uint32
	CcLazyWriteIos            uint32
	CcLazyWritePages          uint32
	CcDataFlushes             uint32
	CcDataPages               uint32
	ContextSwitches           uint32
	FirstLevelTbFills         uint32
	SecondLevelTbFills        uint32
	SystemCalls               uint32
	CcTotalDirtyPages         uint64
	CcDirtyPageThreshold      uint64
	ResidentAvailablePages    int64
	SharedCommittedPages      uint64
}

type MINIDUMP_SYSTEM_MEMORY_INFO_1 struct {
	Revision      uint16
	Flags         uint16
	BasicInfo     MINIDUMP_SYSTEM_BASIC_INFORMATION
	FileCacheInfo MINIDUMP_SYSTEM_FILECACHE_INFORMATION
	BasicPerfInfo MINIDUMP_SYSTEM_BASIC_PERFORMANCE_INFORMATION
	PerfInfo      MINIDUMP_SYSTEM_PERFORMANCE_INFORMATION
}

type MINIDUMP_PROCESS_VM_COUNTERS_1 struct {
	Revision                   uint16
	PageFaultCount             uint32
	PeakWorkingSetSize         uint64
	WorkingSetSize             uint64
	QuotaPeakPagedPoolUsage    uint64
	QuotaPagedPoolUsage        uint64
	QuotaPeakNonPagedPoolUsage uint64
	QuotaNonPagedPoolUsage     uint64
	PagefileUsage              uint64
	PeakPagefileUsage          uint64
	PrivateUsage               uint64
}

type MINIDUMP_PROCESS_VM_COUNTERS_2 struct {
	Revision                   uint16
	Flags                      uint16
	PageFaultCount             uint32
	PeakWorkingSetSize         uint64
	WorkingSetSize             uint64
	QuotaPeakPagedPoolUsage    uint64
	QuotaPagedPoolUsage        uint64
	QuotaPeakNonPagedPoolUsage uint64
	QuotaNonPagedPoolUsage     uint64
	PagefileUsage              uint64
	PeakPagefileUsage          uint64
	PeakVirtualSize            uint64
	VirtualSize                uint64
	PrivateUsage               uint64
	PrivateWorkingSetSize      uint64
	SharedCommitUsage          uint64
	JobSharedCommitUsage       uint64
	JobPrivateCommitUsage      uint64
	JobPeakPrivateCommitUsage  uint64
	JobPrivateCommitLimit      uint64
	JobTotalCommitLimit        uint64
}

type MINIDUMP_USER_RECORD struct {
	Type   uint32
	Memory MINIDUMP_LOCATION_DESCRIPTOR
}

type MINIDUMP_USER_STREAM struct {
	Type       uint32
	BufferSize uint32
	Buffer     unsafe.Pointer
}

type MINIDUMP_USER_STREAM_INFORMATION struct {
	UserStreamCount uint32
	UserStreamArray *MINIDUMP_USER_STREAM
}

type MINIDUMP_THREAD_CALLBACK struct {
	ThreadId      uint32
	ThreadHandle  HANDLE
	Context       CONTEXT
	SizeOfContext uint32
	StackBase     uint64
	StackEnd      uint64
}

type MINIDUMP_THREAD_EX_CALLBACK struct {
	ThreadId         uint32
	ThreadHandle     HANDLE
	Context          CONTEXT
	SizeOfContext    uint32
	StackBase        uint64
	StackEnd         uint64
	BackingStoreBase uint64
	BackingStoreEnd  uint64
}

type MINIDUMP_INCLUDE_THREAD_CALLBACK struct {
	ThreadId uint32
}

type MINIDUMP_MODULE_CALLBACK struct {
	FullPath         PWSTR
	BaseOfImage      uint64
	SizeOfImage      uint32
	CheckSum         uint32
	TimeDateStamp    uint32
	VersionInfo      VS_FIXEDFILEINFO
	CvRecord         unsafe.Pointer
	SizeOfCvRecord   uint32
	MiscRecord       unsafe.Pointer
	SizeOfMiscRecord uint32
}

type MINIDUMP_INCLUDE_MODULE_CALLBACK struct {
	BaseOfImage uint64
}

type MINIDUMP_IO_CALLBACK struct {
	Handle      HANDLE
	Offset      uint64
	Buffer      unsafe.Pointer
	BufferBytes uint32
}

type MINIDUMP_READ_MEMORY_FAILURE_CALLBACK struct {
	Offset        uint64
	Bytes         uint32
	FailureStatus HRESULT
}

type MINIDUMP_VM_QUERY_CALLBACK struct {
	Offset uint64
}

type MINIDUMP_VM_PRE_READ_CALLBACK struct {
	Offset uint64
	Buffer unsafe.Pointer
	Size   uint32
}

type MINIDUMP_VM_POST_READ_CALLBACK struct {
	Offset    uint64
	Buffer    unsafe.Pointer
	Size      uint32
	Completed uint32
	Status    HRESULT
}

type MINIDUMP_CALLBACK_INPUT_Anonymous struct {
	Data [128]uint64
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) Status() *HRESULT {
	return (*HRESULT)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) StatusVal() HRESULT {
	return *(*HRESULT)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) Thread() *MINIDUMP_THREAD_CALLBACK {
	return (*MINIDUMP_THREAD_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) ThreadVal() MINIDUMP_THREAD_CALLBACK {
	return *(*MINIDUMP_THREAD_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) ThreadEx() *MINIDUMP_THREAD_EX_CALLBACK {
	return (*MINIDUMP_THREAD_EX_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) ThreadExVal() MINIDUMP_THREAD_EX_CALLBACK {
	return *(*MINIDUMP_THREAD_EX_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) Module() *MINIDUMP_MODULE_CALLBACK {
	return (*MINIDUMP_MODULE_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) ModuleVal() MINIDUMP_MODULE_CALLBACK {
	return *(*MINIDUMP_MODULE_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) IncludeThread() *MINIDUMP_INCLUDE_THREAD_CALLBACK {
	return (*MINIDUMP_INCLUDE_THREAD_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) IncludeThreadVal() MINIDUMP_INCLUDE_THREAD_CALLBACK {
	return *(*MINIDUMP_INCLUDE_THREAD_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) IncludeModule() *MINIDUMP_INCLUDE_MODULE_CALLBACK {
	return (*MINIDUMP_INCLUDE_MODULE_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) IncludeModuleVal() MINIDUMP_INCLUDE_MODULE_CALLBACK {
	return *(*MINIDUMP_INCLUDE_MODULE_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) Io() *MINIDUMP_IO_CALLBACK {
	return (*MINIDUMP_IO_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) IoVal() MINIDUMP_IO_CALLBACK {
	return *(*MINIDUMP_IO_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) ReadMemoryFailure() *MINIDUMP_READ_MEMORY_FAILURE_CALLBACK {
	return (*MINIDUMP_READ_MEMORY_FAILURE_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) ReadMemoryFailureVal() MINIDUMP_READ_MEMORY_FAILURE_CALLBACK {
	return *(*MINIDUMP_READ_MEMORY_FAILURE_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) SecondaryFlags() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) SecondaryFlagsVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) VmQuery() *MINIDUMP_VM_QUERY_CALLBACK {
	return (*MINIDUMP_VM_QUERY_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) VmQueryVal() MINIDUMP_VM_QUERY_CALLBACK {
	return *(*MINIDUMP_VM_QUERY_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) VmPreRead() *MINIDUMP_VM_PRE_READ_CALLBACK {
	return (*MINIDUMP_VM_PRE_READ_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) VmPreReadVal() MINIDUMP_VM_PRE_READ_CALLBACK {
	return *(*MINIDUMP_VM_PRE_READ_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) VmPostRead() *MINIDUMP_VM_POST_READ_CALLBACK {
	return (*MINIDUMP_VM_POST_READ_CALLBACK)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_INPUT_Anonymous) VmPostReadVal() MINIDUMP_VM_POST_READ_CALLBACK {
	return *(*MINIDUMP_VM_POST_READ_CALLBACK)(unsafe.Pointer(this))
}

type MINIDUMP_CALLBACK_INPUT struct {
	ProcessId     uint32
	ProcessHandle HANDLE
	CallbackType  uint32
	MINIDUMP_CALLBACK_INPUT_Anonymous
}

type MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous1 struct {
	MemoryBase uint64
	MemorySize uint32
}

type MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous2 struct {
	CheckCancel BOOL
	Cancel      BOOL
}

type MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous3 struct {
	VmRegion MINIDUMP_MEMORY_INFO
	Continue BOOL
}

type MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous4 struct {
	VmQueryStatus HRESULT
	VmQueryResult MINIDUMP_MEMORY_INFO
}

type MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous5 struct {
	VmReadStatus         HRESULT
	VmReadBytesCompleted uint32
}

type MINIDUMP_CALLBACK_OUTPUT_Anonymous struct {
	Data [7]uint64
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) ModuleWriteFlags() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) ModuleWriteFlagsVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) ThreadWriteFlags() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) ThreadWriteFlagsVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) SecondaryFlags() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) SecondaryFlagsVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous1() *MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous1 {
	return (*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous1)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous1Val() MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous1 {
	return *(*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous1)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous2() *MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous2 {
	return (*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous2)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous2Val() MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous2 {
	return *(*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous2)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Handle() *HANDLE {
	return (*HANDLE)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) HandleVal() HANDLE {
	return *(*HANDLE)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous3() *MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous3 {
	return (*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous3)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous3Val() MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous3 {
	return *(*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous3)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous4() *MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous4 {
	return (*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous4)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous4Val() MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous4 {
	return *(*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous4)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous5() *MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous5 {
	return (*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous5)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Anonymous5Val() MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous5 {
	return *(*MINIDUMP_CALLBACK_OUTPUT_Anonymous_Anonymous5)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) Status() *HRESULT {
	return (*HRESULT)(unsafe.Pointer(this))
}

func (this *MINIDUMP_CALLBACK_OUTPUT_Anonymous) StatusVal() HRESULT {
	return *(*HRESULT)(unsafe.Pointer(this))
}

type MINIDUMP_CALLBACK_OUTPUT struct {
	MINIDUMP_CALLBACK_OUTPUT_Anonymous
}

type MINIDUMP_CALLBACK_INFORMATION struct {
	CallbackRoutine MINIDUMP_CALLBACK_ROUTINE
	CallbackParam   unsafe.Pointer
}

type ProcessDebugManager struct {
}

type DebugHelper struct {
}

type CDebugDocumentHelper struct {
}

type MachineDebugManager_RETAIL struct {
}

type MachineDebugManager_DEBUG struct {
}

type DefaultDebugSessionProvider struct {
}

type DebugPropertyInfo struct {
	M_dwValidFields uint32
	M_bstrName      BSTR
	M_bstrType      BSTR
	M_bstrValue     BSTR
	M_bstrFullName  BSTR
	M_dwAttrib      uint32
	M_pDebugProp    *IDebugProperty
}

type ExtendedDebugPropertyInfo struct {
	DwValidFields uint32
	PszName       PWSTR
	PszType       PWSTR
	PszValue      PWSTR
	PszFullName   PWSTR
	DwAttrib      uint32
	PDebugProp    *IDebugProperty
	NDISPID       uint32
	NType         uint32
	VarValue      VARIANT
	PlbValue      *ILockBytes
	PDebugExtProp *IDebugExtendedProperty
}

type DebugStackFrameDescriptor struct {
	Pdsf      *IDebugStackFrame
	DwMin     uint32
	DwLim     uint32
	FFinal    BOOL
	PunkFinal *IUnknown
}

type DebugStackFrameDescriptor64 struct {
	Pdsf      *IDebugStackFrame
	DwMin     uint64
	DwLim     uint64
	FFinal    BOOL
	PunkFinal *IUnknown
}

type PROFILER_HEAP_OBJECT_SCOPE_LIST struct {
	Count  uint32
	Scopes [1]uintptr
}

type PROFILER_PROPERTY_TYPE_SUBSTRING_INFO struct {
	Length uint32
	Value  PWSTR
}

type PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous struct {
	Data [1]uint64
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) NumberValue() *float64 {
	return (*float64)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) NumberValueVal() float64 {
	return *(*float64)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) StringValue() *PWSTR {
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) StringValueVal() PWSTR {
	return *(*PWSTR)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) BstrValue() *BSTR {
	return (*BSTR)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) BstrValueVal() BSTR {
	return *(*BSTR)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) ObjectId() *uintptr {
	return (*uintptr)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) ObjectIdVal() uintptr {
	return *(*uintptr)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) ExternalObjectAddress() *unsafe.Pointer {
	return (*unsafe.Pointer)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) ExternalObjectAddressVal() unsafe.Pointer {
	return *(*unsafe.Pointer)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) SubString() **PROFILER_PROPERTY_TYPE_SUBSTRING_INFO {
	return (**PROFILER_PROPERTY_TYPE_SUBSTRING_INFO)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous) SubStringVal() *PROFILER_PROPERTY_TYPE_SUBSTRING_INFO {
	return *(**PROFILER_PROPERTY_TYPE_SUBSTRING_INFO)(unsafe.Pointer(this))
}

type PROFILER_HEAP_OBJECT_RELATIONSHIP struct {
	RelationshipId   uint32
	RelationshipInfo PROFILER_RELATIONSHIP_INFO
	PROFILER_HEAP_OBJECT_RELATIONSHIP_Anonymous
}

type PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST struct {
	Count    uint32
	Elements [1]PROFILER_HEAP_OBJECT_RELATIONSHIP
}

type PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous struct {
	Data [1]uint64
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) Prototype() *uintptr {
	return (*uintptr)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) PrototypeVal() uintptr {
	return *(*uintptr)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) FunctionName() *PWSTR {
	return (*PWSTR)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) FunctionNameVal() PWSTR {
	return *(*PWSTR)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) ElementAttributesSize() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) ElementAttributesSizeVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) ElementTextChildrenSize() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) ElementTextChildrenSizeVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) ScopeList() **PROFILER_HEAP_OBJECT_SCOPE_LIST {
	return (**PROFILER_HEAP_OBJECT_SCOPE_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) ScopeListVal() *PROFILER_HEAP_OBJECT_SCOPE_LIST {
	return *(**PROFILER_HEAP_OBJECT_SCOPE_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) InternalProperty() **PROFILER_HEAP_OBJECT_RELATIONSHIP {
	return (**PROFILER_HEAP_OBJECT_RELATIONSHIP)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) InternalPropertyVal() *PROFILER_HEAP_OBJECT_RELATIONSHIP {
	return *(**PROFILER_HEAP_OBJECT_RELATIONSHIP)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) NamePropertyList() **PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return (**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) NamePropertyListVal() *PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return *(**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) IndexPropertyList() **PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return (**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) IndexPropertyListVal() *PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return *(**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) RelationshipList() **PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return (**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) RelationshipListVal() *PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return *(**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) EventList() **PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return (**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) EventListVal() *PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return *(**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) WeakMapCollectionList() **PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return (**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) WeakMapCollectionListVal() *PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return *(**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) MapCollectionList() **PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return (**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) MapCollectionListVal() *PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return *(**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) SetCollectionList() **PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return (**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous) SetCollectionListVal() *PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST {
	return *(**PROFILER_HEAP_OBJECT_RELATIONSHIP_LIST)(unsafe.Pointer(this))
}

type PROFILER_HEAP_OBJECT_OPTIONAL_INFO struct {
	InfoType PROFILER_HEAP_OBJECT_OPTIONAL_INFO_TYPE
	PROFILER_HEAP_OBJECT_OPTIONAL_INFO_Anonymous
}

type PROFILER_HEAP_OBJECT_Anonymous struct {
	Data [1]uint64
}

func (this *PROFILER_HEAP_OBJECT_Anonymous) ObjectId() *uintptr {
	return (*uintptr)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_Anonymous) ObjectIdVal() uintptr {
	return *(*uintptr)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_Anonymous) ExternalObjectAddress() *unsafe.Pointer {
	return (*unsafe.Pointer)(unsafe.Pointer(this))
}

func (this *PROFILER_HEAP_OBJECT_Anonymous) ExternalObjectAddressVal() unsafe.Pointer {
	return *(*unsafe.Pointer)(unsafe.Pointer(this))
}

type PROFILER_HEAP_OBJECT struct {
	Size uint32
	PROFILER_HEAP_OBJECT_Anonymous
	TypeNameId        uint32
	Flags             uint32
	Unused            uint16
	OptionalInfoCount uint16
}

type PROFILER_HEAP_SUMMARY struct {
	Version       PROFILER_HEAP_SUMMARY_VERSION
	TotalHeapSize uint32
}

type LOADED_IMAGE struct {
	ModuleName       PSTR
	HFile            HANDLE
	MappedAddress    *byte
	FileHeader       *IMAGE_NT_HEADERS64
	LastRvaSection   *IMAGE_SECTION_HEADER
	NumberOfSections uint32
	Sections         *IMAGE_SECTION_HEADER
	Characteristics  IMAGE_FILE_CHARACTERISTICS2
	FSystemImage     BOOLEAN
	FDOSImage        BOOLEAN
	FReadOnly        BOOLEAN
	Version          byte
	Links            LIST_ENTRY
	SizeOfImage      uint32
}

type MODLOAD_DATA struct {
	Ssize uint32
	Ssig  MODLOAD_DATA_TYPE
	Data  unsafe.Pointer
	Size  uint32
	Flags uint32
}

type MODLOAD_CVMISC struct {
	OCV     uint32
	CCV     uintptr
	OMisc   uint32
	CMisc   uintptr
	DtImage uint32
	CImage  uint32
}

type MODLOAD_PDBGUID_PDBAGE struct {
	PdbGuid syscall.GUID
	PdbAge  uint32
}

type ADDRESS64 struct {
	Offset  uint64
	Segment uint16
	Mode    ADDRESS_MODE
}

type KDHELP64 struct {
	Thread                         uint64
	ThCallbackStack                uint32
	ThCallbackBStore               uint32
	NextCallback                   uint32
	FramePointer                   uint32
	KiCallUserMode                 uint64
	KeUserCallbackDispatcher       uint64
	SystemRangeStart               uint64
	KiUserExceptionDispatcher      uint64
	StackBase                      uint64
	StackLimit                     uint64
	BuildVersion                   uint32
	RetpolineStubFunctionTableSize uint32
	RetpolineStubFunctionTable     uint64
	RetpolineStubOffset            uint32
	RetpolineStubSize              uint32
	Reserved0                      [2]uint64
}

type STACKFRAME64 struct {
	AddrPC         ADDRESS64
	AddrReturn     ADDRESS64
	AddrFrame      ADDRESS64
	AddrStack      ADDRESS64
	AddrBStore     ADDRESS64
	FuncTableEntry unsafe.Pointer
	Params         [4]uint64
	Far            BOOL
	Virtual        BOOL
	Reserved       [3]uint64
	KdHelp         KDHELP64
}

type STACKFRAME_EX struct {
	AddrPC             ADDRESS64
	AddrReturn         ADDRESS64
	AddrFrame          ADDRESS64
	AddrStack          ADDRESS64
	AddrBStore         ADDRESS64
	FuncTableEntry     unsafe.Pointer
	Params             [4]uint64
	Far                BOOL
	Virtual            BOOL
	Reserved           [3]uint64
	KdHelp             KDHELP64
	StackFrameSize     uint32
	InlineFrameContext uint32
}

type API_VERSION struct {
	MajorVersion uint16
	MinorVersion uint16
	Revision     uint16
	Reserved     uint16
}

type IMAGEHLP_SYMBOL64 struct {
	SizeOfStruct  uint32
	Address       uint64
	Size          uint32
	Flags         uint32
	MaxNameLength uint32
	Name          [1]CHAR
}

type IMAGEHLP_SYMBOL64_PACKAGE struct {
	Sym  IMAGEHLP_SYMBOL64
	Name [2001]CHAR
}

type IMAGEHLP_SYMBOLW64 struct {
	SizeOfStruct  uint32
	Address       uint64
	Size          uint32
	Flags         uint32
	MaxNameLength uint32
	Name          [1]uint16
}

type IMAGEHLP_SYMBOLW64_PACKAGE struct {
	Sym  IMAGEHLP_SYMBOLW64
	Name [2001]uint16
}

type IMAGEHLP_MODULE64 struct {
	SizeOfStruct    uint32
	BaseOfImage     uint64
	ImageSize       uint32
	TimeDateStamp   uint32
	CheckSum        uint32
	NumSyms         uint32
	SymType         SYM_TYPE
	ModuleName      [32]CHAR
	ImageName       [256]CHAR
	LoadedImageName [256]CHAR
	LoadedPdbName   [256]CHAR
	CVSig           uint32
	CVData          [780]CHAR
	PdbSig          uint32
	PdbSig70        syscall.GUID
	PdbAge          uint32
	PdbUnmatched    BOOL
	DbgUnmatched    BOOL
	LineNumbers     BOOL
	GlobalSymbols   BOOL
	TypeInfo        BOOL
	SourceIndexed   BOOL
	Publics         BOOL
	MachineType     uint32
	Reserved        uint32
}

type IMAGEHLP_MODULE64_EX struct {
	Module      IMAGEHLP_MODULE64
	RegionFlags uint32
}

type IMAGEHLP_MODULEW64 struct {
	SizeOfStruct    uint32
	BaseOfImage     uint64
	ImageSize       uint32
	TimeDateStamp   uint32
	CheckSum        uint32
	NumSyms         uint32
	SymType         SYM_TYPE
	ModuleName      [32]uint16
	ImageName       [256]uint16
	LoadedImageName [256]uint16
	LoadedPdbName   [256]uint16
	CVSig           uint32
	CVData          [780]uint16
	PdbSig          uint32
	PdbSig70        syscall.GUID
	PdbAge          uint32
	PdbUnmatched    BOOL
	DbgUnmatched    BOOL
	LineNumbers     BOOL
	GlobalSymbols   BOOL
	TypeInfo        BOOL
	SourceIndexed   BOOL
	Publics         BOOL
	MachineType     uint32
	Reserved        uint32
}

type IMAGEHLP_MODULEW64_EX struct {
	Module      IMAGEHLP_MODULEW64
	RegionFlags uint32
}

type IMAGEHLP_LINE64 struct {
	SizeOfStruct uint32
	Key          unsafe.Pointer
	LineNumber   uint32
	FileName     PSTR
	Address      uint64
}

type IMAGEHLP_LINEW64 struct {
	SizeOfStruct uint32
	Key          unsafe.Pointer
	LineNumber   uint32
	FileName     PWSTR
	Address      uint64
}

type SOURCEFILE struct {
	ModBase  uint64
	FileName PSTR
}

type SOURCEFILEW struct {
	ModBase  uint64
	FileName PWSTR
}

type IMAGEHLP_CBA_READ_MEMORY struct {
	Addr      uint64
	Buf       unsafe.Pointer
	Bytes     uint32
	Bytesread *uint32
}

type IMAGEHLP_CBA_EVENT struct {
	Severity IMAGEHLP_CBA_EVENT_SEVERITY
	Code     uint32
	Desc     PSTR
	Object   unsafe.Pointer
}

type IMAGEHLP_CBA_EVENTW struct {
	Severity IMAGEHLP_CBA_EVENT_SEVERITY
	Code     uint32
	Desc     PWSTR
	Object   unsafe.Pointer
}

type IMAGEHLP_DEFERRED_SYMBOL_LOAD64 struct {
	SizeOfStruct  uint32
	BaseOfImage   uint64
	CheckSum      uint32
	TimeDateStamp uint32
	FileName      [260]CHAR
	Reparse       BOOLEAN
	HFile         HANDLE
	Flags         uint32
}

type IMAGEHLP_DEFERRED_SYMBOL_LOADW64 struct {
	SizeOfStruct  uint32
	BaseOfImage   uint64
	CheckSum      uint32
	TimeDateStamp uint32
	FileName      [261]uint16
	Reparse       BOOLEAN
	HFile         HANDLE
	Flags         uint32
}

type IMAGEHLP_DUPLICATE_SYMBOL64 struct {
	SizeOfStruct   uint32
	NumberOfDups   uint32
	Symbol         *IMAGEHLP_SYMBOL64
	SelectedSymbol uint32
}

type IMAGEHLP_JIT_SYMBOL_MAP_ struct {
	SizeOfStruct uint32
	Address      uint64
	BaseOfImage  uint64
}

type OMAP struct {
	Rva   uint32
	RvaTo uint32
}

type SRCCODEINFO struct {
	SizeOfStruct uint32
	Key          unsafe.Pointer
	ModBase      uint64
	Obj          [261]CHAR
	FileName     [261]CHAR
	LineNumber   uint32
	Address      uint64
}

type SRCCODEINFOW struct {
	SizeOfStruct uint32
	Key          unsafe.Pointer
	ModBase      uint64
	Obj          [261]uint16
	FileName     [261]uint16
	LineNumber   uint32
	Address      uint64
}

type IMAGEHLP_SYMBOL_SRC struct {
	Sizeofstruct uint32
	Type_        uint32
	File         [260]CHAR
}

type MODULE_TYPE_INFO struct {
	DataLength uint16
	Leaf       uint16
	Data       [1]byte
}

type SYMBOL_INFO struct {
	SizeOfStruct uint32
	TypeIndex    uint32
	Reserved     [2]uint64
	Index        uint32
	Size         uint32
	ModBase      uint64
	Flags        SYMBOL_INFO_FLAGS
	Value        uint64
	Address      uint64
	Register     uint32
	Scope        uint32
	Tag          uint32
	NameLen      uint32
	MaxNameLen   uint32
	Name         [1]CHAR
}

type SYMBOL_INFO_PACKAGE struct {
	Si   SYMBOL_INFO
	Name [2001]CHAR
}

type SYMBOL_INFOW struct {
	SizeOfStruct uint32
	TypeIndex    uint32
	Reserved     [2]uint64
	Index        uint32
	Size         uint32
	ModBase      uint64
	Flags        SYMBOL_INFO_FLAGS
	Value        uint64
	Address      uint64
	Register     uint32
	Scope        uint32
	Tag          uint32
	NameLen      uint32
	MaxNameLen   uint32
	Name         [1]uint16
}

type SYMBOL_INFO_PACKAGEW struct {
	Si   SYMBOL_INFOW
	Name [2001]uint16
}

type IMAGEHLP_STACK_FRAME struct {
	InstructionOffset  uint64
	ReturnOffset       uint64
	FrameOffset        uint64
	StackOffset        uint64
	BackingStoreOffset uint64
	FuncTableEntry     uint64
	Params             [4]uint64
	Reserved           [5]uint64
	Virtual            BOOL
	Reserved2          uint32
}

type TI_FINDCHILDREN_PARAMS struct {
	Count   uint32
	Start   uint32
	ChildId [1]uint32
}

type IMAGEHLP_GET_TYPE_INFO_PARAMS struct {
	SizeOfStruct   uint32
	Flags          IMAGEHLP_GET_TYPE_INFO_FLAGS
	NumIds         uint32
	TypeIds        *uint32
	TagFilter      uint64
	NumReqs        uint32
	ReqKinds       *IMAGEHLP_SYMBOL_TYPE_INFO
	ReqOffsets     *uintptr
	ReqSizes       *uint32
	ReqStride      uintptr
	BufferSize     uintptr
	Buffer         unsafe.Pointer
	EntriesMatched uint32
	EntriesFilled  uint32
	TagsFound      uint64
	AllReqsValid   uint64
	NumReqsValid   uint32
	ReqsValid      *uint64
}

type SYMSRV_INDEX_INFO struct {
	Sizeofstruct uint32
	File         [261]CHAR
	Stripped     BOOL
	Timestamp    uint32
	Size         uint32
	Dbgfile      [261]CHAR
	Pdbfile      [261]CHAR
	Guid         syscall.GUID
	Sig          uint32
	Age          uint32
}

type SYMSRV_INDEX_INFOW struct {
	Sizeofstruct uint32
	File         [261]uint16
	Stripped     BOOL
	Timestamp    uint32
	Size         uint32
	Dbgfile      [261]uint16
	Pdbfile      [261]uint16
	Guid         syscall.GUID
	Sig          uint32
	Age          uint32
}

type SYMSRV_EXTENDED_OUTPUT_DATA struct {
	SizeOfStruct uint32
	Version      uint32
	FilePtrMsg   [261]uint16
}

type DBGHELP_DATA_REPORT_STRUCT struct {
	PBinPathNonExist    PWSTR
	PSymbolPathNonExist PWSTR
}

type TEXT_DOCUMENT_ARRAY struct {
	DwCount uint32
	Members **IDebugDocumentText
}

type JsDebugPropertyInfo struct {
	Name     BSTR
	Type_    BSTR
	Value    BSTR
	FullName BSTR
	Attr     JS_PROPERTY_ATTRIBUTES
}

type MIDL___MIDL_itf_jscript9diag_0000_0007_0001__ struct {
	InstructionOffset uint64
	ReturnOffset      uint64
	FrameOffset       uint64
	StackOffset       uint64
}

type PHYSICAL_MEMORY_RUN32 struct {
	BasePage  uint32
	PageCount uint32
}

type PHYSICAL_MEMORY_DESCRIPTOR32 struct {
	NumberOfRuns  uint32
	NumberOfPages uint32
	Run           [1]PHYSICAL_MEMORY_RUN32
}

type PHYSICAL_MEMORY_RUN64 struct {
	BasePage  uint64
	PageCount uint64
}

type PHYSICAL_MEMORY_DESCRIPTOR64 struct {
	NumberOfRuns  uint32
	NumberOfPages uint64
	Run           [1]PHYSICAL_MEMORY_RUN64
}

type DUMP_FILE_ATTRIBUTES_Anonymous struct {
	Bitfield_ uint32
}

type DUMP_FILE_ATTRIBUTES struct {
	DUMP_FILE_ATTRIBUTES_Anonymous
}

func (this *DUMP_FILE_ATTRIBUTES) Anonymous() *DUMP_FILE_ATTRIBUTES_Anonymous {
	return (*DUMP_FILE_ATTRIBUTES_Anonymous)(unsafe.Pointer(this))
}

func (this *DUMP_FILE_ATTRIBUTES) AnonymousVal() DUMP_FILE_ATTRIBUTES_Anonymous {
	return *(*DUMP_FILE_ATTRIBUTES_Anonymous)(unsafe.Pointer(this))
}

func (this *DUMP_FILE_ATTRIBUTES) Attributes() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *DUMP_FILE_ATTRIBUTES) AttributesVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

type DUMP_HEADER32_Anonymous struct {
	Data [175]uint32
}

func (this *DUMP_HEADER32_Anonymous) PhysicalMemoryBlock() *PHYSICAL_MEMORY_DESCRIPTOR32 {
	return (*PHYSICAL_MEMORY_DESCRIPTOR32)(unsafe.Pointer(this))
}

func (this *DUMP_HEADER32_Anonymous) PhysicalMemoryBlockVal() PHYSICAL_MEMORY_DESCRIPTOR32 {
	return *(*PHYSICAL_MEMORY_DESCRIPTOR32)(unsafe.Pointer(this))
}

func (this *DUMP_HEADER32_Anonymous) PhysicalMemoryBlockBuffer() *[700]byte {
	return (*[700]byte)(unsafe.Pointer(this))
}

func (this *DUMP_HEADER32_Anonymous) PhysicalMemoryBlockBufferVal() [700]byte {
	return *(*[700]byte)(unsafe.Pointer(this))
}

type DUMP_HEADER32 struct {
	Signature           uint32
	ValidDump           uint32
	MajorVersion        uint32
	MinorVersion        uint32
	DirectoryTableBase  uint32
	PfnDataBase         uint32
	PsLoadedModuleList  uint32
	PsActiveProcessHead uint32
	MachineImageType    uint32
	NumberProcessors    uint32
	BugCheckCode        uint32
	BugCheckParameter1  uint32
	BugCheckParameter2  uint32
	BugCheckParameter3  uint32
	BugCheckParameter4  uint32
	VersionUser         [32]CHAR
	PaeEnabled          byte
	KdSecondaryVersion  byte
	Spare3              [2]byte
	KdDebuggerDataBlock uint32
	DUMP_HEADER32_Anonymous
	ContextRecord      [1200]byte
	Exception          EXCEPTION_RECORD32
	Comment            [128]CHAR
	Attributes         DUMP_FILE_ATTRIBUTES
	BootId             uint32
	Reserved0_         [1760]byte
	DumpType           uint32
	MiniDumpFields     uint32
	SecondaryDataState uint32
	ProductType        uint32
	SuiteMask          uint32
	WriterStatus       uint32
	RequiredDumpSpace  int64
	Reserved2_         [16]byte
	SystemUpTime       int64
	SystemTime         int64
	Reserved3_         [56]byte
}

type DUMP_HEADER64_Anonymous struct {
	Data [87]uint64
}

func (this *DUMP_HEADER64_Anonymous) PhysicalMemoryBlock() *PHYSICAL_MEMORY_DESCRIPTOR64 {
	return (*PHYSICAL_MEMORY_DESCRIPTOR64)(unsafe.Pointer(this))
}

func (this *DUMP_HEADER64_Anonymous) PhysicalMemoryBlockVal() PHYSICAL_MEMORY_DESCRIPTOR64 {
	return *(*PHYSICAL_MEMORY_DESCRIPTOR64)(unsafe.Pointer(this))
}

func (this *DUMP_HEADER64_Anonymous) PhysicalMemoryBlockBuffer() *[700]byte {
	return (*[700]byte)(unsafe.Pointer(this))
}

func (this *DUMP_HEADER64_Anonymous) PhysicalMemoryBlockBufferVal() [700]byte {
	return *(*[700]byte)(unsafe.Pointer(this))
}

type DUMP_HEADER64 struct {
	Signature           uint32
	ValidDump           uint32
	MajorVersion        uint32
	MinorVersion        uint32
	DirectoryTableBase  uint64
	PfnDataBase         uint64
	PsLoadedModuleList  uint64
	PsActiveProcessHead uint64
	MachineImageType    uint32
	NumberProcessors    uint32
	BugCheckCode        uint32
	BugCheckParameter1  uint64
	BugCheckParameter2  uint64
	BugCheckParameter3  uint64
	BugCheckParameter4  uint64
	VersionUser         [32]CHAR
	KdDebuggerDataBlock uint64
	DUMP_HEADER64_Anonymous
	ContextRecord      [3000]byte
	Exception          EXCEPTION_RECORD64
	DumpType           uint32
	RequiredDumpSpace  int64
	SystemTime         int64
	Comment            [128]CHAR
	SystemUpTime       int64
	MiniDumpFields     uint32
	SecondaryDataState uint32
	ProductType        uint32
	SuiteMask          uint32
	WriterStatus       uint32
	Unused1            byte
	KdSecondaryVersion byte
	Unused             [2]byte
	Attributes         DUMP_FILE_ATTRIBUTES
	BootId             uint32
	Reserved0_         [4008]byte
}

type WHEA_ERROR_SOURCE_CONFIGURATION_DD struct {
	Initialize   WHEA_ERROR_SOURCE_INITIALIZE_DEVICE_DRIVER
	Uninitialize WHEA_ERROR_SOURCE_UNINITIALIZE_DEVICE_DRIVER
	Correct      WHEA_ERROR_SOURCE_CORRECT_DEVICE_DRIVER
}

type WHEA_ERROR_SOURCE_CONFIGURATION_DEVICE_DRIVER_V1 struct {
	Version      uint32
	SourceGuid   syscall.GUID
	LogTag       uint16
	Reserved     [6]byte
	Initialize   WHEA_ERROR_SOURCE_INITIALIZE_DEVICE_DRIVER
	Uninitialize WHEA_ERROR_SOURCE_UNINITIALIZE_DEVICE_DRIVER
}

type WHEA_ERROR_SOURCE_CONFIGURATION_DEVICE_DRIVER struct {
	Version              uint32
	SourceGuid           syscall.GUID
	LogTag               uint16
	Reserved             [6]byte
	Initialize           WHEA_ERROR_SOURCE_INITIALIZE_DEVICE_DRIVER
	Uninitialize         WHEA_ERROR_SOURCE_UNINITIALIZE_DEVICE_DRIVER
	MaxSectionDataLength uint32
	MaxSectionsPerReport uint32
	CreatorId            syscall.GUID
	PartitionId          syscall.GUID
}

type WHEA_DRIVER_BUFFER_SET struct {
	Version             uint32
	Data                *byte
	DataSize            uint32
	SectionTypeGuid     *syscall.GUID
	SectionFriendlyName *byte
	Flags               *byte
}

type WHEA_NOTIFICATION_FLAGS_Anonymous struct {
	Bitfield_ uint16
}

type WHEA_NOTIFICATION_FLAGS struct {
	WHEA_NOTIFICATION_FLAGS_Anonymous
}

func (this *WHEA_NOTIFICATION_FLAGS) Anonymous() *WHEA_NOTIFICATION_FLAGS_Anonymous {
	return (*WHEA_NOTIFICATION_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_FLAGS) AnonymousVal() WHEA_NOTIFICATION_FLAGS_Anonymous {
	return *(*WHEA_NOTIFICATION_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_FLAGS) AsUSHORT() *uint16 {
	return (*uint16)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_FLAGS) AsUSHORTVal() uint16 {
	return *(*uint16)(unsafe.Pointer(this))
}

type XPF_MC_BANK_FLAGS_Anonymous struct {
	Bitfield_ byte
}

type XPF_MC_BANK_FLAGS struct {
	XPF_MC_BANK_FLAGS_Anonymous
}

func (this *XPF_MC_BANK_FLAGS) Anonymous() *XPF_MC_BANK_FLAGS_Anonymous {
	return (*XPF_MC_BANK_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *XPF_MC_BANK_FLAGS) AnonymousVal() XPF_MC_BANK_FLAGS_Anonymous {
	return *(*XPF_MC_BANK_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *XPF_MC_BANK_FLAGS) AsUCHAR() *byte {
	return (*byte)(unsafe.Pointer(this))
}

func (this *XPF_MC_BANK_FLAGS) AsUCHARVal() byte {
	return *(*byte)(unsafe.Pointer(this))
}

type XPF_MCE_FLAGS_Anonymous struct {
	Bitfield_ uint32
}

type XPF_MCE_FLAGS struct {
	XPF_MCE_FLAGS_Anonymous
}

func (this *XPF_MCE_FLAGS) Anonymous() *XPF_MCE_FLAGS_Anonymous {
	return (*XPF_MCE_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *XPF_MCE_FLAGS) AnonymousVal() XPF_MCE_FLAGS_Anonymous {
	return *(*XPF_MCE_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *XPF_MCE_FLAGS) AsULONG() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *XPF_MCE_FLAGS) AsULONGVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

type AER_ROOTPORT_DESCRIPTOR_FLAGS_Anonymous struct {
	Bitfield_ uint16
}

type AER_ROOTPORT_DESCRIPTOR_FLAGS struct {
	AER_ROOTPORT_DESCRIPTOR_FLAGS_Anonymous
}

func (this *AER_ROOTPORT_DESCRIPTOR_FLAGS) Anonymous() *AER_ROOTPORT_DESCRIPTOR_FLAGS_Anonymous {
	return (*AER_ROOTPORT_DESCRIPTOR_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *AER_ROOTPORT_DESCRIPTOR_FLAGS) AnonymousVal() AER_ROOTPORT_DESCRIPTOR_FLAGS_Anonymous {
	return *(*AER_ROOTPORT_DESCRIPTOR_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *AER_ROOTPORT_DESCRIPTOR_FLAGS) AsUSHORT() *uint16 {
	return (*uint16)(unsafe.Pointer(this))
}

func (this *AER_ROOTPORT_DESCRIPTOR_FLAGS) AsUSHORTVal() uint16 {
	return *(*uint16)(unsafe.Pointer(this))
}

type AER_ENDPOINT_DESCRIPTOR_FLAGS_Anonymous struct {
	Bitfield_ uint16
}

type AER_ENDPOINT_DESCRIPTOR_FLAGS struct {
	AER_ENDPOINT_DESCRIPTOR_FLAGS_Anonymous
}

func (this *AER_ENDPOINT_DESCRIPTOR_FLAGS) Anonymous() *AER_ENDPOINT_DESCRIPTOR_FLAGS_Anonymous {
	return (*AER_ENDPOINT_DESCRIPTOR_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *AER_ENDPOINT_DESCRIPTOR_FLAGS) AnonymousVal() AER_ENDPOINT_DESCRIPTOR_FLAGS_Anonymous {
	return *(*AER_ENDPOINT_DESCRIPTOR_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *AER_ENDPOINT_DESCRIPTOR_FLAGS) AsUSHORT() *uint16 {
	return (*uint16)(unsafe.Pointer(this))
}

func (this *AER_ENDPOINT_DESCRIPTOR_FLAGS) AsUSHORTVal() uint16 {
	return *(*uint16)(unsafe.Pointer(this))
}

type AER_BRIDGE_DESCRIPTOR_FLAGS_Anonymous struct {
	Bitfield_ uint16
}

type AER_BRIDGE_DESCRIPTOR_FLAGS struct {
	AER_BRIDGE_DESCRIPTOR_FLAGS_Anonymous
}

func (this *AER_BRIDGE_DESCRIPTOR_FLAGS) Anonymous() *AER_BRIDGE_DESCRIPTOR_FLAGS_Anonymous {
	return (*AER_BRIDGE_DESCRIPTOR_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *AER_BRIDGE_DESCRIPTOR_FLAGS) AnonymousVal() AER_BRIDGE_DESCRIPTOR_FLAGS_Anonymous {
	return *(*AER_BRIDGE_DESCRIPTOR_FLAGS_Anonymous)(unsafe.Pointer(this))
}

func (this *AER_BRIDGE_DESCRIPTOR_FLAGS) AsUSHORT() *uint16 {
	return (*uint16)(unsafe.Pointer(this))
}

func (this *AER_BRIDGE_DESCRIPTOR_FLAGS) AsUSHORTVal() uint16 {
	return *(*uint16)(unsafe.Pointer(this))
}

type WHEA_NOTIFICATION_DESCRIPTOR_U_Polled struct {
	PollInterval uint32
}

type WHEA_NOTIFICATION_DESCRIPTOR_U_Interrupt struct {
	PollInterval             uint32
	Vector                   uint32
	SwitchToPollingThreshold uint32
	SwitchToPollingWindow    uint32
	ErrorThreshold           uint32
	ErrorThresholdWindow     uint32
}

type WHEA_NOTIFICATION_DESCRIPTOR_U_LocalInterrupt struct {
	PollInterval             uint32
	Vector                   uint32
	SwitchToPollingThreshold uint32
	SwitchToPollingWindow    uint32
	ErrorThreshold           uint32
	ErrorThresholdWindow     uint32
}

type WHEA_NOTIFICATION_DESCRIPTOR_U_Sci struct {
	PollInterval             uint32
	Vector                   uint32
	SwitchToPollingThreshold uint32
	SwitchToPollingWindow    uint32
	ErrorThreshold           uint32
	ErrorThresholdWindow     uint32
}

type WHEA_NOTIFICATION_DESCRIPTOR_U_Nmi struct {
	PollInterval             uint32
	Vector                   uint32
	SwitchToPollingThreshold uint32
	SwitchToPollingWindow    uint32
	ErrorThreshold           uint32
	ErrorThresholdWindow     uint32
}

type WHEA_NOTIFICATION_DESCRIPTOR_U_Sea struct {
	PollInterval             uint32
	Vector                   uint32
	SwitchToPollingThreshold uint32
	SwitchToPollingWindow    uint32
	ErrorThreshold           uint32
	ErrorThresholdWindow     uint32
}

type WHEA_NOTIFICATION_DESCRIPTOR_U_Sei struct {
	PollInterval             uint32
	Vector                   uint32
	SwitchToPollingThreshold uint32
	SwitchToPollingWindow    uint32
	ErrorThreshold           uint32
	ErrorThresholdWindow     uint32
}

type WHEA_NOTIFICATION_DESCRIPTOR_U_Gsiv struct {
	PollInterval             uint32
	Vector                   uint32
	SwitchToPollingThreshold uint32
	SwitchToPollingWindow    uint32
	ErrorThreshold           uint32
	ErrorThresholdWindow     uint32
}

type WHEA_NOTIFICATION_DESCRIPTOR_U struct {
	Data [6]uint32
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) Polled() *WHEA_NOTIFICATION_DESCRIPTOR_U_Polled {
	return (*WHEA_NOTIFICATION_DESCRIPTOR_U_Polled)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) PolledVal() WHEA_NOTIFICATION_DESCRIPTOR_U_Polled {
	return *(*WHEA_NOTIFICATION_DESCRIPTOR_U_Polled)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) Interrupt() *WHEA_NOTIFICATION_DESCRIPTOR_U_Interrupt {
	return (*WHEA_NOTIFICATION_DESCRIPTOR_U_Interrupt)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) InterruptVal() WHEA_NOTIFICATION_DESCRIPTOR_U_Interrupt {
	return *(*WHEA_NOTIFICATION_DESCRIPTOR_U_Interrupt)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) LocalInterrupt() *WHEA_NOTIFICATION_DESCRIPTOR_U_LocalInterrupt {
	return (*WHEA_NOTIFICATION_DESCRIPTOR_U_LocalInterrupt)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) LocalInterruptVal() WHEA_NOTIFICATION_DESCRIPTOR_U_LocalInterrupt {
	return *(*WHEA_NOTIFICATION_DESCRIPTOR_U_LocalInterrupt)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) Sci() *WHEA_NOTIFICATION_DESCRIPTOR_U_Sci {
	return (*WHEA_NOTIFICATION_DESCRIPTOR_U_Sci)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) SciVal() WHEA_NOTIFICATION_DESCRIPTOR_U_Sci {
	return *(*WHEA_NOTIFICATION_DESCRIPTOR_U_Sci)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) Nmi() *WHEA_NOTIFICATION_DESCRIPTOR_U_Nmi {
	return (*WHEA_NOTIFICATION_DESCRIPTOR_U_Nmi)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) NmiVal() WHEA_NOTIFICATION_DESCRIPTOR_U_Nmi {
	return *(*WHEA_NOTIFICATION_DESCRIPTOR_U_Nmi)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) Sea() *WHEA_NOTIFICATION_DESCRIPTOR_U_Sea {
	return (*WHEA_NOTIFICATION_DESCRIPTOR_U_Sea)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) SeaVal() WHEA_NOTIFICATION_DESCRIPTOR_U_Sea {
	return *(*WHEA_NOTIFICATION_DESCRIPTOR_U_Sea)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) Sei() *WHEA_NOTIFICATION_DESCRIPTOR_U_Sei {
	return (*WHEA_NOTIFICATION_DESCRIPTOR_U_Sei)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) SeiVal() WHEA_NOTIFICATION_DESCRIPTOR_U_Sei {
	return *(*WHEA_NOTIFICATION_DESCRIPTOR_U_Sei)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) Gsiv() *WHEA_NOTIFICATION_DESCRIPTOR_U_Gsiv {
	return (*WHEA_NOTIFICATION_DESCRIPTOR_U_Gsiv)(unsafe.Pointer(this))
}

func (this *WHEA_NOTIFICATION_DESCRIPTOR_U) GsivVal() WHEA_NOTIFICATION_DESCRIPTOR_U_Gsiv {
	return *(*WHEA_NOTIFICATION_DESCRIPTOR_U_Gsiv)(unsafe.Pointer(this))
}

type WHEA_NOTIFICATION_DESCRIPTOR struct {
	Type   byte
	Length byte
	Flags  WHEA_NOTIFICATION_FLAGS
	U      WHEA_NOTIFICATION_DESCRIPTOR_U
}

type WHEA_XPF_MC_BANK_DESCRIPTOR struct {
	BankNumber            byte
	ClearOnInitialization BOOLEAN
	StatusDataFormat      byte
	Flags                 XPF_MC_BANK_FLAGS
	ControlMsr            uint32
	StatusMsr             uint32
	AddressMsr            uint32
	MiscMsr               uint32
	ControlData           uint64
}

type WHEA_XPF_MCE_DESCRIPTOR struct {
	Type              uint16
	Enabled           byte
	NumberOfBanks     byte
	Flags             XPF_MCE_FLAGS
	MCG_Capability    uint64
	MCG_GlobalControl uint64
	Banks             [32]WHEA_XPF_MC_BANK_DESCRIPTOR
}

type WHEA_XPF_CMC_DESCRIPTOR struct {
	Type          uint16
	Enabled       BOOLEAN
	NumberOfBanks byte
	Reserved      uint32
	Notify        WHEA_NOTIFICATION_DESCRIPTOR
	Banks         [32]WHEA_XPF_MC_BANK_DESCRIPTOR
}

type WHEA_PCI_SLOT_NUMBER_U_Bits struct {
	Bitfield_ uint32
}

type WHEA_PCI_SLOT_NUMBER_U struct {
	Data [1]uint32
}

func (this *WHEA_PCI_SLOT_NUMBER_U) Bits() *WHEA_PCI_SLOT_NUMBER_U_Bits {
	return (*WHEA_PCI_SLOT_NUMBER_U_Bits)(unsafe.Pointer(this))
}

func (this *WHEA_PCI_SLOT_NUMBER_U) BitsVal() WHEA_PCI_SLOT_NUMBER_U_Bits {
	return *(*WHEA_PCI_SLOT_NUMBER_U_Bits)(unsafe.Pointer(this))
}

func (this *WHEA_PCI_SLOT_NUMBER_U) AsULONG() *uint32 {
	return (*uint32)(unsafe.Pointer(this))
}

func (this *WHEA_PCI_SLOT_NUMBER_U) AsULONGVal() uint32 {
	return *(*uint32)(unsafe.Pointer(this))
}

type WHEA_PCI_SLOT_NUMBER struct {
	U WHEA_PCI_SLOT_NUMBER_U
}

type WHEA_XPF_NMI_DESCRIPTOR struct {
	Type    uint16
	Enabled BOOLEAN
}

type WHEA_AER_ROOTPORT_DESCRIPTOR struct {
	Type                       uint16
	Enabled                    BOOLEAN
	Reserved                   byte
	BusNumber                  uint32
	Slot                       WHEA_PCI_SLOT_NUMBER
	DeviceControl              uint16
	Flags                      AER_ROOTPORT_DESCRIPTOR_FLAGS
	UncorrectableErrorMask     uint32
	UncorrectableErrorSeverity uint32
	CorrectableErrorMask       uint32
	AdvancedCapsAndControl     uint32
	RootErrorCommand           uint32
}

type WHEA_AER_ENDPOINT_DESCRIPTOR struct {
	Type                       uint16
	Enabled                    BOOLEAN
	Reserved                   byte
	BusNumber                  uint32
	Slot                       WHEA_PCI_SLOT_NUMBER
	DeviceControl              uint16
	Flags                      AER_ENDPOINT_DESCRIPTOR_FLAGS
	UncorrectableErrorMask     uint32
	UncorrectableErrorSeverity uint32
	CorrectableErrorMask       uint32
	AdvancedCapsAndControl     uint32
}

type WHEA_AER_BRIDGE_DESCRIPTOR struct {
	Type                            uint16
	Enabled                         BOOLEAN
	Reserved                        byte
	BusNumber                       uint32
	Slot                            WHEA_PCI_SLOT_NUMBER
	DeviceControl                   uint16
	Flags                           AER_BRIDGE_DESCRIPTOR_FLAGS
	UncorrectableErrorMask          uint32
	UncorrectableErrorSeverity      uint32
	CorrectableErrorMask            uint32
	AdvancedCapsAndControl          uint32
	SecondaryUncorrectableErrorMask uint32
	SecondaryUncorrectableErrorSev  uint32
	SecondaryCapsAndControl         uint32
}

type WHEA_GENERIC_ERROR_DESCRIPTOR struct {
	Type                       uint16
	Reserved                   byte
	Enabled                    byte
	ErrStatusBlockLength       uint32
	RelatedErrorSourceId       uint32
	ErrStatusAddressSpaceID    byte
	ErrStatusAddressBitWidth   byte
	ErrStatusAddressBitOffset  byte
	ErrStatusAddressAccessSize byte
	ErrStatusAddress           int64
	Notify                     WHEA_NOTIFICATION_DESCRIPTOR
}

type WHEA_GENERIC_ERROR_DESCRIPTOR_V2 struct {
	Type                       uint16
	Reserved                   byte
	Enabled                    byte
	ErrStatusBlockLength       uint32
	RelatedErrorSourceId       uint32
	ErrStatusAddressSpaceID    byte
	ErrStatusAddressBitWidth   byte
	ErrStatusAddressBitOffset  byte
	ErrStatusAddressAccessSize byte
	ErrStatusAddress           int64
	Notify                     WHEA_NOTIFICATION_DESCRIPTOR
	ReadAckAddressSpaceID      byte
	ReadAckAddressBitWidth     byte
	ReadAckAddressBitOffset    byte
	ReadAckAddressAccessSize   byte
	ReadAckAddress             int64
	ReadAckPreserveMask        uint64
	ReadAckWriteMask           uint64
}

type WHEA_DEVICE_DRIVER_DESCRIPTOR struct {
	Type                 uint16
	Enabled              BOOLEAN
	Reserved             byte
	SourceGuid           syscall.GUID
	LogTag               uint16
	Reserved2            uint16
	PacketLength         uint32
	PacketCount          uint32
	PacketBuffer         *byte
	Config               WHEA_ERROR_SOURCE_CONFIGURATION_DD
	CreatorId            syscall.GUID
	PartitionId          syscall.GUID
	MaxSectionDataLength uint32
	MaxSectionsPerRecord uint32
	PacketStateBuffer    *byte
	OpenHandles          int32
}

type WHEA_IPF_MCA_DESCRIPTOR struct {
	Type     uint16
	Enabled  byte
	Reserved byte
}

type WHEA_IPF_CMC_DESCRIPTOR struct {
	Type     uint16
	Enabled  byte
	Reserved byte
}

type WHEA_IPF_CPE_DESCRIPTOR struct {
	Type     uint16
	Enabled  byte
	Reserved byte
}

type WHEA_ERROR_SOURCE_DESCRIPTOR_Info struct {
	Data [133]uint64
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) XpfMceDescriptor() *WHEA_XPF_MCE_DESCRIPTOR {
	return (*WHEA_XPF_MCE_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) XpfMceDescriptorVal() WHEA_XPF_MCE_DESCRIPTOR {
	return *(*WHEA_XPF_MCE_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) XpfCmcDescriptor() *WHEA_XPF_CMC_DESCRIPTOR {
	return (*WHEA_XPF_CMC_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) XpfCmcDescriptorVal() WHEA_XPF_CMC_DESCRIPTOR {
	return *(*WHEA_XPF_CMC_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) XpfNmiDescriptor() *WHEA_XPF_NMI_DESCRIPTOR {
	return (*WHEA_XPF_NMI_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) XpfNmiDescriptorVal() WHEA_XPF_NMI_DESCRIPTOR {
	return *(*WHEA_XPF_NMI_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) IpfMcaDescriptor() *WHEA_IPF_MCA_DESCRIPTOR {
	return (*WHEA_IPF_MCA_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) IpfMcaDescriptorVal() WHEA_IPF_MCA_DESCRIPTOR {
	return *(*WHEA_IPF_MCA_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) IpfCmcDescriptor() *WHEA_IPF_CMC_DESCRIPTOR {
	return (*WHEA_IPF_CMC_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) IpfCmcDescriptorVal() WHEA_IPF_CMC_DESCRIPTOR {
	return *(*WHEA_IPF_CMC_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) IpfCpeDescriptor() *WHEA_IPF_CPE_DESCRIPTOR {
	return (*WHEA_IPF_CPE_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) IpfCpeDescriptorVal() WHEA_IPF_CPE_DESCRIPTOR {
	return *(*WHEA_IPF_CPE_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) AerRootportDescriptor() *WHEA_AER_ROOTPORT_DESCRIPTOR {
	return (*WHEA_AER_ROOTPORT_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) AerRootportDescriptorVal() WHEA_AER_ROOTPORT_DESCRIPTOR {
	return *(*WHEA_AER_ROOTPORT_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) AerEndpointDescriptor() *WHEA_AER_ENDPOINT_DESCRIPTOR {
	return (*WHEA_AER_ENDPOINT_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) AerEndpointDescriptorVal() WHEA_AER_ENDPOINT_DESCRIPTOR {
	return *(*WHEA_AER_ENDPOINT_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) AerBridgeDescriptor() *WHEA_AER_BRIDGE_DESCRIPTOR {
	return (*WHEA_AER_BRIDGE_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) AerBridgeDescriptorVal() WHEA_AER_BRIDGE_DESCRIPTOR {
	return *(*WHEA_AER_BRIDGE_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) GenErrDescriptor() *WHEA_GENERIC_ERROR_DESCRIPTOR {
	return (*WHEA_GENERIC_ERROR_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) GenErrDescriptorVal() WHEA_GENERIC_ERROR_DESCRIPTOR {
	return *(*WHEA_GENERIC_ERROR_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) GenErrDescriptorV2() *WHEA_GENERIC_ERROR_DESCRIPTOR_V2 {
	return (*WHEA_GENERIC_ERROR_DESCRIPTOR_V2)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) GenErrDescriptorV2Val() WHEA_GENERIC_ERROR_DESCRIPTOR_V2 {
	return *(*WHEA_GENERIC_ERROR_DESCRIPTOR_V2)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) DeviceDriverDescriptor() *WHEA_DEVICE_DRIVER_DESCRIPTOR {
	return (*WHEA_DEVICE_DRIVER_DESCRIPTOR)(unsafe.Pointer(this))
}

func (this *WHEA_ERROR_SOURCE_DESCRIPTOR_Info) DeviceDriverDescriptorVal() WHEA_DEVICE_DRIVER_DESCRIPTOR {
	return *(*WHEA_DEVICE_DRIVER_DESCRIPTOR)(unsafe.Pointer(this))
}

type WHEA_ERROR_SOURCE_DESCRIPTOR struct {
	Length                  uint32
	Version                 uint32
	Type                    WHEA_ERROR_SOURCE_TYPE
	State                   WHEA_ERROR_SOURCE_STATE
	MaxRawDataLength        uint32
	NumRecordsToPreallocate uint32
	MaxSectionsPerRecord    uint32
	ErrorSourceId           uint32
	PlatformErrorSourceId   uint32
	Flags                   uint32
	Info                    WHEA_ERROR_SOURCE_DESCRIPTOR_Info
}

type IPMI_OS_SEL_RECORD struct {
	Signature  uint32
	Version    uint32
	Length     uint32
	RecordType IPMI_OS_SEL_RECORD_TYPE
	DataLength uint32
	Data       [1]byte
}

// func types

type PDEBUG_EXTENSION_INITIALIZE = uintptr
type PDEBUG_EXTENSION_INITIALIZE_func = func(Version *uint32, Flags *uint32) HRESULT

type PDEBUG_EXTENSION_UNINITIALIZE = uintptr
type PDEBUG_EXTENSION_UNINITIALIZE_func = func()

type PDEBUG_EXTENSION_CANUNLOAD = uintptr
type PDEBUG_EXTENSION_CANUNLOAD_func = func() HRESULT

type PDEBUG_EXTENSION_UNLOAD = uintptr
type PDEBUG_EXTENSION_UNLOAD_func = func()

type PDEBUG_EXTENSION_NOTIFY = uintptr
type PDEBUG_EXTENSION_NOTIFY_func = func(Notify uint32, Argument uint64)

type PDEBUG_EXTENSION_CALL = uintptr
type PDEBUG_EXTENSION_CALL_func = func(Client *IDebugClient, Args PSTR) HRESULT

type PDEBUG_EXTENSION_KNOWN_STRUCT = uintptr
type PDEBUG_EXTENSION_KNOWN_STRUCT_func = func(Flags uint32, Offset uint64, TypeName PSTR, Buffer PSTR, BufferChars *uint32) HRESULT

type PDEBUG_EXTENSION_KNOWN_STRUCT_EX = uintptr
type PDEBUG_EXTENSION_KNOWN_STRUCT_EX_func = func(Client *IDebugClient, Flags uint32, Offset uint64, TypeName PSTR, Buffer PSTR, BufferChars *uint32) HRESULT

type PDEBUG_EXTENSION_QUERY_VALUE_NAMES = uintptr
type PDEBUG_EXTENSION_QUERY_VALUE_NAMES_func = func(Client *IDebugClient, Flags uint32, Buffer PWSTR, BufferChars uint32, BufferNeeded *uint32) HRESULT

type PDEBUG_EXTENSION_PROVIDE_VALUE = uintptr
type PDEBUG_EXTENSION_PROVIDE_VALUE_func = func(Client *IDebugClient, Flags uint32, Name PWSTR, Value *uint64, TypeModBase *uint64, TypeId *uint32, TypeFlags *uint32) HRESULT

type PDEBUG_STACK_PROVIDER_BEGINTHREADSTACKRECONSTRUCTION = uintptr
type PDEBUG_STACK_PROVIDER_BEGINTHREADSTACKRECONSTRUCTION_func = func(StreamType uint32, MiniDumpStreamBuffer unsafe.Pointer, BufferSize uint32) HRESULT

type PDEBUG_STACK_PROVIDER_RECONSTRUCTSTACK = uintptr
type PDEBUG_STACK_PROVIDER_RECONSTRUCTSTACK_func = func(SystemThreadId uint32, NativeFrames *DEBUG_STACK_FRAME_EX, CountNativeFrames uint32, StackSymFrames **STACK_SYM_FRAME_INFO, StackSymFramesFilled *uint32) HRESULT

type PDEBUG_STACK_PROVIDER_FREESTACKSYMFRAMES = uintptr
type PDEBUG_STACK_PROVIDER_FREESTACKSYMFRAMES_func = func(StackSymFrames *STACK_SYM_FRAME_INFO) HRESULT

type PDEBUG_STACK_PROVIDER_ENDTHREADSTACKRECONSTRUCTION = uintptr
type PDEBUG_STACK_PROVIDER_ENDTHREADSTACKRECONSTRUCTION_func = func() HRESULT

type PWINDBG_OUTPUT_ROUTINE = uintptr
type PWINDBG_OUTPUT_ROUTINE_func = func(lpFormat PSTR)

type PWINDBG_GET_EXPRESSION = uintptr
type PWINDBG_GET_EXPRESSION_func = func(lpExpression PSTR) uintptr

type PWINDBG_GET_EXPRESSION32 = uintptr
type PWINDBG_GET_EXPRESSION32_func = func(lpExpression PSTR) uint32

type PWINDBG_GET_EXPRESSION64 = uintptr
type PWINDBG_GET_EXPRESSION64_func = func(lpExpression PSTR) uint64

type PWINDBG_GET_SYMBOL = uintptr
type PWINDBG_GET_SYMBOL_func = func(offset unsafe.Pointer, pchBuffer PSTR, pDisplacement *uintptr)

type PWINDBG_GET_SYMBOL32 = uintptr
type PWINDBG_GET_SYMBOL32_func = func(offset uint32, pchBuffer PSTR, pDisplacement *uint32)

type PWINDBG_GET_SYMBOL64 = uintptr
type PWINDBG_GET_SYMBOL64_func = func(offset uint64, pchBuffer PSTR, pDisplacement *uint64)

type PWINDBG_DISASM = uintptr
type PWINDBG_DISASM_func = func(lpOffset *uintptr, lpBuffer PSTR, fShowEffectiveAddress uint32) uint32

type PWINDBG_DISASM32 = uintptr
type PWINDBG_DISASM32_func = func(lpOffset *uint32, lpBuffer PSTR, fShowEffectiveAddress uint32) uint32

type PWINDBG_DISASM64 = uintptr
type PWINDBG_DISASM64_func = func(lpOffset *uint64, lpBuffer PSTR, fShowEffectiveAddress uint32) uint32

type PWINDBG_CHECK_CONTROL_C = uintptr
type PWINDBG_CHECK_CONTROL_C_func = func() uint32

type PWINDBG_READ_PROCESS_MEMORY_ROUTINE = uintptr
type PWINDBG_READ_PROCESS_MEMORY_ROUTINE_func = func(offset uintptr, lpBuffer unsafe.Pointer, cb uint32, lpcbBytesRead *uint32) uint32

type PWINDBG_READ_PROCESS_MEMORY_ROUTINE32 = uintptr
type PWINDBG_READ_PROCESS_MEMORY_ROUTINE32_func = func(offset uint32, lpBuffer unsafe.Pointer, cb uint32, lpcbBytesRead *uint32) uint32

type PWINDBG_READ_PROCESS_MEMORY_ROUTINE64 = uintptr
type PWINDBG_READ_PROCESS_MEMORY_ROUTINE64_func = func(offset uint64, lpBuffer unsafe.Pointer, cb uint32, lpcbBytesRead *uint32) uint32

type PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE = uintptr
type PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE_func = func(offset uintptr, lpBuffer unsafe.Pointer, cb uint32, lpcbBytesWritten *uint32) uint32

type PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE32 = uintptr
type PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE32_func = func(offset uint32, lpBuffer unsafe.Pointer, cb uint32, lpcbBytesWritten *uint32) uint32

type PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE64 = uintptr
type PWINDBG_WRITE_PROCESS_MEMORY_ROUTINE64_func = func(offset uint64, lpBuffer unsafe.Pointer, cb uint32, lpcbBytesWritten *uint32) uint32

type PWINDBG_GET_THREAD_CONTEXT_ROUTINE = uintptr
type PWINDBG_GET_THREAD_CONTEXT_ROUTINE_func = func(Processor uint32, lpContext *CONTEXT, cbSizeOfContext uint32) uint32

type PWINDBG_SET_THREAD_CONTEXT_ROUTINE = uintptr
type PWINDBG_SET_THREAD_CONTEXT_ROUTINE_func = func(Processor uint32, lpContext *CONTEXT, cbSizeOfContext uint32) uint32

type PWINDBG_IOCTL_ROUTINE = uintptr
type PWINDBG_IOCTL_ROUTINE_func = func(IoctlType uint16, lpvData unsafe.Pointer, cbSize uint32) uint32

type PWINDBG_OLDKD_READ_PHYSICAL_MEMORY = uintptr
type PWINDBG_OLDKD_READ_PHYSICAL_MEMORY_func = func(address uint64, buffer unsafe.Pointer, count uint32, bytesread *uint32) uint32

type PWINDBG_OLDKD_WRITE_PHYSICAL_MEMORY = uintptr
type PWINDBG_OLDKD_WRITE_PHYSICAL_MEMORY_func = func(address uint64, buffer unsafe.Pointer, length uint32, byteswritten *uint32) uint32

type PWINDBG_STACKTRACE_ROUTINE = uintptr
type PWINDBG_STACKTRACE_ROUTINE_func = func(FramePointer uint32, StackPointer uint32, ProgramCounter uint32, StackFrames *EXTSTACKTRACE, Frames uint32) uint32

type PWINDBG_STACKTRACE_ROUTINE32 = uintptr
type PWINDBG_STACKTRACE_ROUTINE32_func = func(FramePointer uint32, StackPointer uint32, ProgramCounter uint32, StackFrames *EXTSTACKTRACE32, Frames uint32) uint32

type PWINDBG_STACKTRACE_ROUTINE64 = uintptr
type PWINDBG_STACKTRACE_ROUTINE64_func = func(FramePointer uint64, StackPointer uint64, ProgramCounter uint64, StackFrames *EXTSTACKTRACE64, Frames uint32) uint32

type PWINDBG_OLD_EXTENSION_ROUTINE = uintptr
type PWINDBG_OLD_EXTENSION_ROUTINE_func = func(dwCurrentPc uint32, lpExtensionApis *WINDBG_EXTENSION_APIS, lpArgumentString PSTR)

type PWINDBG_EXTENSION_ROUTINE = uintptr
type PWINDBG_EXTENSION_ROUTINE_func = func(hCurrentProcess HANDLE, hCurrentThread HANDLE, dwCurrentPc uint32, dwProcessor uint32, lpArgumentString PSTR)

type PWINDBG_EXTENSION_ROUTINE32 = uintptr
type PWINDBG_EXTENSION_ROUTINE32_func = func(hCurrentProcess HANDLE, hCurrentThread HANDLE, dwCurrentPc uint32, dwProcessor uint32, lpArgumentString PSTR)

type PWINDBG_EXTENSION_ROUTINE64 = uintptr
type PWINDBG_EXTENSION_ROUTINE64_func = func(hCurrentProcess HANDLE, hCurrentThread HANDLE, dwCurrentPc uint64, dwProcessor uint32, lpArgumentString PSTR)

type PWINDBG_OLDKD_EXTENSION_ROUTINE = uintptr
type PWINDBG_OLDKD_EXTENSION_ROUTINE_func = func(dwCurrentPc uint32, lpExtensionApis *WINDBG_OLDKD_EXTENSION_APIS, lpArgumentString PSTR)

type PWINDBG_EXTENSION_DLL_INIT = uintptr
type PWINDBG_EXTENSION_DLL_INIT_func = func(lpExtensionApis *WINDBG_EXTENSION_APIS, MajorVersion uint16, MinorVersion uint16)

type PWINDBG_EXTENSION_DLL_INIT32 = uintptr
type PWINDBG_EXTENSION_DLL_INIT32_func = func(lpExtensionApis *WINDBG_EXTENSION_APIS32, MajorVersion uint16, MinorVersion uint16)

type PWINDBG_EXTENSION_DLL_INIT64 = uintptr
type PWINDBG_EXTENSION_DLL_INIT64_func = func(lpExtensionApis *WINDBG_EXTENSION_APIS64, MajorVersion uint16, MinorVersion uint16)

type PWINDBG_CHECK_VERSION = uintptr
type PWINDBG_CHECK_VERSION_func = func() uint32

type PWINDBG_EXTENSION_API_VERSION = uintptr
type PWINDBG_EXTENSION_API_VERSION_func = func() *EXT_API_VERSION

type PSYM_DUMP_FIELD_CALLBACK = uintptr
type PSYM_DUMP_FIELD_CALLBACK_func = func(pField *FIELD_INFO, UserContext unsafe.Pointer) uint32

type PGET_RUNTIME_FUNCTION_CALLBACK = uintptr
type PGET_RUNTIME_FUNCTION_CALLBACK_func = func(ControlPc uint64, Context unsafe.Pointer) *IMAGE_RUNTIME_FUNCTION_ENTRY

type PVECTORED_EXCEPTION_HANDLER = uintptr
type PVECTORED_EXCEPTION_HANDLER_func = func(ExceptionInfo *EXCEPTION_POINTERS) int32

type LPTOP_LEVEL_EXCEPTION_FILTER = uintptr
type LPTOP_LEVEL_EXCEPTION_FILTER_func = func(ExceptionInfo *EXCEPTION_POINTERS) int32

type PWAITCHAINCALLBACK = uintptr
type PWAITCHAINCALLBACK_func = func(WctHandle unsafe.Pointer, Context uintptr, CallbackStatus uint32, NodeCount *uint32, NodeInfoArray *WAITCHAIN_NODE_INFO, IsCycle *int32)

type PCOGETCALLSTATE = uintptr
type PCOGETCALLSTATE_func = func(param0 int32, param1 *uint32) HRESULT

type PCOGETACTIVATIONSTATE = uintptr
type PCOGETACTIVATIONSTATE_func = func(param0 syscall.GUID, param1 uint32, param2 *uint32) HRESULT

type MINIDUMP_CALLBACK_ROUTINE = uintptr
type MINIDUMP_CALLBACK_ROUTINE_func = func(CallbackParam unsafe.Pointer, CallbackInput *MINIDUMP_CALLBACK_INPUT, CallbackOutput *MINIDUMP_CALLBACK_OUTPUT) BOOL

type PIMAGEHLP_STATUS_ROUTINE = uintptr
type PIMAGEHLP_STATUS_ROUTINE_func = func(Reason IMAGEHLP_STATUS_REASON, ImageName PSTR, DllName PSTR, Va uintptr, Parameter uintptr) BOOL

type PIMAGEHLP_STATUS_ROUTINE32 = uintptr
type PIMAGEHLP_STATUS_ROUTINE32_func = func(Reason IMAGEHLP_STATUS_REASON, ImageName PSTR, DllName PSTR, Va uint32, Parameter uintptr) BOOL

type PIMAGEHLP_STATUS_ROUTINE64 = uintptr
type PIMAGEHLP_STATUS_ROUTINE64_func = func(Reason IMAGEHLP_STATUS_REASON, ImageName PSTR, DllName PSTR, Va uint64, Parameter uintptr) BOOL

type DIGEST_FUNCTION = uintptr
type DIGEST_FUNCTION_func = func(refdata unsafe.Pointer, pData *byte, dwLength uint32) BOOL

type PFIND_DEBUG_FILE_CALLBACK = uintptr
type PFIND_DEBUG_FILE_CALLBACK_func = func(FileHandle HANDLE, FileName PSTR, CallerData unsafe.Pointer) BOOL

type PFIND_DEBUG_FILE_CALLBACKW = uintptr
type PFIND_DEBUG_FILE_CALLBACKW_func = func(FileHandle HANDLE, FileName PWSTR, CallerData unsafe.Pointer) BOOL

type PFINDFILEINPATHCALLBACK = uintptr
type PFINDFILEINPATHCALLBACK_func = func(filename PSTR, context unsafe.Pointer) BOOL

type PFINDFILEINPATHCALLBACKW = uintptr
type PFINDFILEINPATHCALLBACKW_func = func(filename PWSTR, context unsafe.Pointer) BOOL

type PFIND_EXE_FILE_CALLBACK = uintptr
type PFIND_EXE_FILE_CALLBACK_func = func(FileHandle HANDLE, FileName PSTR, CallerData unsafe.Pointer) BOOL

type PFIND_EXE_FILE_CALLBACKW = uintptr
type PFIND_EXE_FILE_CALLBACKW_func = func(FileHandle HANDLE, FileName PWSTR, CallerData unsafe.Pointer) BOOL

type PENUMDIRTREE_CALLBACK = uintptr
type PENUMDIRTREE_CALLBACK_func = func(FilePath PSTR, CallerData unsafe.Pointer) BOOL

type PENUMDIRTREE_CALLBACKW = uintptr
type PENUMDIRTREE_CALLBACKW_func = func(FilePath PWSTR, CallerData unsafe.Pointer) BOOL

type PREAD_PROCESS_MEMORY_ROUTINE64 = uintptr
type PREAD_PROCESS_MEMORY_ROUTINE64_func = func(hProcess HANDLE, qwBaseAddress uint64, lpBuffer unsafe.Pointer, nSize uint32, lpNumberOfBytesRead *uint32) BOOL

type PFUNCTION_TABLE_ACCESS_ROUTINE64 = uintptr
type PFUNCTION_TABLE_ACCESS_ROUTINE64_func = func(ahProcess HANDLE, AddrBase uint64) unsafe.Pointer

type PGET_MODULE_BASE_ROUTINE64 = uintptr
type PGET_MODULE_BASE_ROUTINE64_func = func(hProcess HANDLE, Address uint64) uint64

type PTRANSLATE_ADDRESS_ROUTINE64 = uintptr
type PTRANSLATE_ADDRESS_ROUTINE64_func = func(hProcess HANDLE, hThread HANDLE, lpaddr *ADDRESS64) uint64

type PSYM_ENUMMODULES_CALLBACK64 = uintptr
type PSYM_ENUMMODULES_CALLBACK64_func = func(ModuleName PSTR, BaseOfDll uint64, UserContext unsafe.Pointer) BOOL

type PSYM_ENUMMODULES_CALLBACKW64 = uintptr
type PSYM_ENUMMODULES_CALLBACKW64_func = func(ModuleName PWSTR, BaseOfDll uint64, UserContext unsafe.Pointer) BOOL

type PENUMLOADED_MODULES_CALLBACK64 = uintptr
type PENUMLOADED_MODULES_CALLBACK64_func = func(ModuleName PSTR, ModuleBase uint64, ModuleSize uint32, UserContext unsafe.Pointer) BOOL

type PENUMLOADED_MODULES_CALLBACKW64 = uintptr
type PENUMLOADED_MODULES_CALLBACKW64_func = func(ModuleName PWSTR, ModuleBase uint64, ModuleSize uint32, UserContext unsafe.Pointer) BOOL

type PSYM_ENUMSYMBOLS_CALLBACK64 = uintptr
type PSYM_ENUMSYMBOLS_CALLBACK64_func = func(SymbolName PSTR, SymbolAddress uint64, SymbolSize uint32, UserContext unsafe.Pointer) BOOL

type PSYM_ENUMSYMBOLS_CALLBACK64W = uintptr
type PSYM_ENUMSYMBOLS_CALLBACK64W_func = func(SymbolName PWSTR, SymbolAddress uint64, SymbolSize uint32, UserContext unsafe.Pointer) BOOL

type PSYMBOL_REGISTERED_CALLBACK64 = uintptr
type PSYMBOL_REGISTERED_CALLBACK64_func = func(hProcess HANDLE, ActionCode uint32, CallbackData uint64, UserContext uint64) BOOL

type PSYMBOL_FUNCENTRY_CALLBACK = uintptr
type PSYMBOL_FUNCENTRY_CALLBACK_func = func(hProcess HANDLE, AddrBase uint32, UserContext unsafe.Pointer) unsafe.Pointer

type PSYMBOL_FUNCENTRY_CALLBACK64 = uintptr
type PSYMBOL_FUNCENTRY_CALLBACK64_func = func(hProcess HANDLE, AddrBase uint64, UserContext uint64) unsafe.Pointer

type PSYM_ENUMSOURCEFILES_CALLBACK = uintptr
type PSYM_ENUMSOURCEFILES_CALLBACK_func = func(pSourceFile *SOURCEFILE, UserContext unsafe.Pointer) BOOL

type PSYM_ENUMSOURCEFILES_CALLBACKW = uintptr
type PSYM_ENUMSOURCEFILES_CALLBACKW_func = func(pSourceFile *SOURCEFILEW, UserContext unsafe.Pointer) BOOL

type PSYM_ENUMLINES_CALLBACK = uintptr
type PSYM_ENUMLINES_CALLBACK_func = func(LineInfo *SRCCODEINFO, UserContext unsafe.Pointer) BOOL

type PSYM_ENUMLINES_CALLBACKW = uintptr
type PSYM_ENUMLINES_CALLBACKW_func = func(LineInfo *SRCCODEINFOW, UserContext unsafe.Pointer) BOOL

type PENUMSOURCEFILETOKENSCALLBACK = uintptr
type PENUMSOURCEFILETOKENSCALLBACK_func = func(token unsafe.Pointer, size uintptr) BOOL

type PSYM_ENUMPROCESSES_CALLBACK = uintptr
type PSYM_ENUMPROCESSES_CALLBACK_func = func(hProcess HANDLE, UserContext unsafe.Pointer) BOOL

type PSYM_ENUMERATESYMBOLS_CALLBACK = uintptr
type PSYM_ENUMERATESYMBOLS_CALLBACK_func = func(pSymInfo *SYMBOL_INFO, SymbolSize uint32, UserContext unsafe.Pointer) BOOL

type PSYM_ENUMERATESYMBOLS_CALLBACKW = uintptr
type PSYM_ENUMERATESYMBOLS_CALLBACKW_func = func(pSymInfo *SYMBOL_INFOW, SymbolSize uint32, UserContext unsafe.Pointer) BOOL

type SYMADDSOURCESTREAM = uintptr
type SYMADDSOURCESTREAM_func = func(param0 HANDLE, param1 uint64, param2 PSTR, param3 *byte, param4 uintptr) BOOL

type SYMADDSOURCESTREAMA = uintptr
type SYMADDSOURCESTREAMA_func = func(param0 HANDLE, param1 uint64, param2 PSTR, param3 *byte, param4 uintptr) BOOL

type PDBGHELP_CREATE_USER_DUMP_CALLBACK = uintptr
type PDBGHELP_CREATE_USER_DUMP_CALLBACK_func = func(DataType uint32, Data unsafe.Pointer, DataLength *uint32, UserData unsafe.Pointer) BOOL

type PSYMBOLSERVERPROC = uintptr
type PSYMBOLSERVERPROC_func = func(param0 PSTR, param1 PSTR, param2 unsafe.Pointer, param3 uint32, param4 uint32, param5 PSTR) BOOL

type PSYMBOLSERVERPROCA = uintptr
type PSYMBOLSERVERPROCA_func = func(param0 PSTR, param1 PSTR, param2 unsafe.Pointer, param3 uint32, param4 uint32, param5 PSTR) BOOL

type PSYMBOLSERVERPROCW = uintptr
type PSYMBOLSERVERPROCW_func = func(param0 PWSTR, param1 PWSTR, param2 unsafe.Pointer, param3 uint32, param4 uint32, param5 PWSTR) BOOL

type PSYMBOLSERVERBYINDEXPROC = uintptr
type PSYMBOLSERVERBYINDEXPROC_func = func(param0 PSTR, param1 PSTR, param2 PSTR, param3 PSTR) BOOL

type PSYMBOLSERVERBYINDEXPROCA = uintptr
type PSYMBOLSERVERBYINDEXPROCA_func = func(param0 PSTR, param1 PSTR, param2 PSTR, param3 PSTR) BOOL

type PSYMBOLSERVERBYINDEXPROCW = uintptr
type PSYMBOLSERVERBYINDEXPROCW_func = func(param0 PWSTR, param1 PWSTR, param2 PWSTR, param3 PWSTR) BOOL

type PSYMBOLSERVEROPENPROC = uintptr
type PSYMBOLSERVEROPENPROC_func = func() BOOL

type PSYMBOLSERVERCLOSEPROC = uintptr
type PSYMBOLSERVERCLOSEPROC_func = func() BOOL

type PSYMBOLSERVERSETOPTIONSPROC = uintptr
type PSYMBOLSERVERSETOPTIONSPROC_func = func(param0 uintptr, param1 uint64) BOOL

type PSYMBOLSERVERSETOPTIONSWPROC = uintptr
type PSYMBOLSERVERSETOPTIONSWPROC_func = func(param0 uintptr, param1 uint64) BOOL

type PSYMBOLSERVERCALLBACKPROC = uintptr
type PSYMBOLSERVERCALLBACKPROC_func = func(action uintptr, data uint64, context uint64) BOOL

type PSYMBOLSERVERGETOPTIONSPROC = uintptr
type PSYMBOLSERVERGETOPTIONSPROC_func = func() uintptr

type PSYMBOLSERVERPINGPROC = uintptr
type PSYMBOLSERVERPINGPROC_func = func(param0 PSTR) BOOL

type PSYMBOLSERVERPINGPROCA = uintptr
type PSYMBOLSERVERPINGPROCA_func = func(param0 PSTR) BOOL

type PSYMBOLSERVERPINGPROCW = uintptr
type PSYMBOLSERVERPINGPROCW_func = func(param0 PWSTR) BOOL

type PSYMBOLSERVERGETVERSION = uintptr
type PSYMBOLSERVERGETVERSION_func = func(param0 *API_VERSION) BOOL

type PSYMBOLSERVERDELTANAME = uintptr
type PSYMBOLSERVERDELTANAME_func = func(param0 PSTR, param1 unsafe.Pointer, param2 uint32, param3 uint32, param4 unsafe.Pointer, param5 uint32, param6 uint32, param7 PSTR, param8 uintptr) BOOL

type PSYMBOLSERVERDELTANAMEW = uintptr
type PSYMBOLSERVERDELTANAMEW_func = func(param0 PWSTR, param1 unsafe.Pointer, param2 uint32, param3 uint32, param4 unsafe.Pointer, param5 uint32, param6 uint32, param7 PWSTR, param8 uintptr) BOOL

type PSYMBOLSERVERGETSUPPLEMENT = uintptr
type PSYMBOLSERVERGETSUPPLEMENT_func = func(param0 PSTR, param1 PSTR, param2 PSTR, param3 PSTR, param4 uintptr) BOOL

type PSYMBOLSERVERGETSUPPLEMENTW = uintptr
type PSYMBOLSERVERGETSUPPLEMENTW_func = func(param0 PWSTR, param1 PWSTR, param2 PWSTR, param3 PWSTR, param4 uintptr) BOOL

type PSYMBOLSERVERSTORESUPPLEMENT = uintptr
type PSYMBOLSERVERSTORESUPPLEMENT_func = func(param0 PSTR, param1 PSTR, param2 PSTR, param3 PSTR, param4 uintptr, param5 uint32) BOOL

type PSYMBOLSERVERSTORESUPPLEMENTW = uintptr
type PSYMBOLSERVERSTORESUPPLEMENTW_func = func(param0 PWSTR, param1 PWSTR, param2 PWSTR, param3 PWSTR, param4 uintptr, param5 uint32) BOOL

type PSYMBOLSERVERGETINDEXSTRING = uintptr
type PSYMBOLSERVERGETINDEXSTRING_func = func(param0 unsafe.Pointer, param1 uint32, param2 uint32, param3 PSTR, param4 uintptr) BOOL

type PSYMBOLSERVERGETINDEXSTRINGW = uintptr
type PSYMBOLSERVERGETINDEXSTRINGW_func = func(param0 unsafe.Pointer, param1 uint32, param2 uint32, param3 PWSTR, param4 uintptr) BOOL

type PSYMBOLSERVERSTOREFILE = uintptr
type PSYMBOLSERVERSTOREFILE_func = func(param0 PSTR, param1 PSTR, param2 unsafe.Pointer, param3 uint32, param4 uint32, param5 PSTR, param6 uintptr, param7 uint32) BOOL

type PSYMBOLSERVERSTOREFILEW = uintptr
type PSYMBOLSERVERSTOREFILEW_func = func(param0 PWSTR, param1 PWSTR, param2 unsafe.Pointer, param3 uint32, param4 uint32, param5 PWSTR, param6 uintptr, param7 uint32) BOOL

type PSYMBOLSERVERISSTORE = uintptr
type PSYMBOLSERVERISSTORE_func = func(param0 PSTR) BOOL

type PSYMBOLSERVERISSTOREW = uintptr
type PSYMBOLSERVERISSTOREW_func = func(param0 PWSTR) BOOL

type PSYMBOLSERVERVERSION = uintptr
type PSYMBOLSERVERVERSION_func = func() uint32

type PSYMBOLSERVERMESSAGEPROC = uintptr
type PSYMBOLSERVERMESSAGEPROC_func = func(action uintptr, data uint64, context uint64) BOOL

type PSYMBOLSERVERWEXPROC = uintptr
type PSYMBOLSERVERWEXPROC_func = func(param0 PWSTR, param1 PWSTR, param2 unsafe.Pointer, param3 uint32, param4 uint32, param5 PWSTR, param6 *SYMSRV_EXTENDED_OUTPUT_DATA) BOOL

type PSYMBOLSERVERPINGPROCWEX = uintptr
type PSYMBOLSERVERPINGPROCWEX_func = func(param0 PWSTR) BOOL

type PSYMBOLSERVERGETOPTIONDATAPROC = uintptr
type PSYMBOLSERVERGETOPTIONDATAPROC_func = func(param0 uintptr, param1 *uint64) BOOL

type PSYMBOLSERVERSETHTTPAUTHHEADER = uintptr
type PSYMBOLSERVERSETHTTPAUTHHEADER_func = func(pszAuthHeader PWSTR) BOOL

type LPCALL_BACK_USER_INTERRUPT_ROUTINE = uintptr
type LPCALL_BACK_USER_INTERRUPT_ROUTINE_func = func() uint32

type WHEA_ERROR_SOURCE_INITIALIZE_DEVICE_DRIVER = uintptr
type WHEA_ERROR_SOURCE_INITIALIZE_DEVICE_DRIVER_func = func(Context unsafe.Pointer, ErrorSourceId uint32) NTSTATUS

type WHEA_ERROR_SOURCE_UNINITIALIZE_DEVICE_DRIVER = uintptr
type WHEA_ERROR_SOURCE_UNINITIALIZE_DEVICE_DRIVER_func = func(Context unsafe.Pointer)

type WHEA_ERROR_SOURCE_CORRECT_DEVICE_DRIVER = uintptr
type WHEA_ERROR_SOURCE_CORRECT_DEVICE_DRIVER_func = func(ErrorSourceDesc unsafe.Pointer, MaximumSectionLength *uint32) NTSTATUS

// interfaces

// F2DF5F53-071F-47BD-9DE6-5734C3FED689
var IID_IDebugAdvanced = syscall.GUID{0xF2DF5F53, 0x071F, 0x47BD,
	[8]byte{0x9D, 0xE6, 0x57, 0x34, 0xC3, 0xFE, 0xD6, 0x89}}

type IDebugAdvancedInterface interface {
	IUnknownInterface
	GetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
	SetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
}

type IDebugAdvancedVtbl struct {
	IUnknownVtbl
	GetThreadContext uintptr
	SetThreadContext uintptr
}

type IDebugAdvanced struct {
	IUnknown
}

func (this *IDebugAdvanced) Vtbl() *IDebugAdvancedVtbl {
	return (*IDebugAdvancedVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugAdvanced) GetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugAdvanced) SetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetThreadContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

// 716D14C9-119B-4BA5-AF1F-0890E672416A
var IID_IDebugAdvanced2 = syscall.GUID{0x716D14C9, 0x119B, 0x4BA5,
	[8]byte{0xAF, 0x1F, 0x08, 0x90, 0xE6, 0x72, 0x41, 0x6A}}

type IDebugAdvanced2Interface interface {
	IUnknownInterface
	GetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
	SetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
	Request(Request uint32, InBuffer unsafe.Pointer, InBufferSize uint32, OutBuffer unsafe.Pointer, OutBufferSize uint32, OutSize *uint32) HRESULT
	GetSourceFileInformation(Which uint32, SourceFile PSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT
	FindSourceFileAndToken(StartElement uint32, ModAddr uint64, File PSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSymbolInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PSTR, StringBufferSize uint32, StringSize *uint32) HRESULT
	GetSystemObjectInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT
}

type IDebugAdvanced2Vtbl struct {
	IUnknownVtbl
	GetThreadContext           uintptr
	SetThreadContext           uintptr
	Request                    uintptr
	GetSourceFileInformation   uintptr
	FindSourceFileAndToken     uintptr
	GetSymbolInformation       uintptr
	GetSystemObjectInformation uintptr
}

type IDebugAdvanced2 struct {
	IUnknown
}

func (this *IDebugAdvanced2) Vtbl() *IDebugAdvanced2Vtbl {
	return (*IDebugAdvanced2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugAdvanced2) GetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugAdvanced2) SetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetThreadContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugAdvanced2) Request(Request uint32, InBuffer unsafe.Pointer, InBufferSize uint32, OutBuffer unsafe.Pointer, OutBufferSize uint32, OutSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Request, uintptr(unsafe.Pointer(this)), uintptr(Request), uintptr(InBuffer), uintptr(InBufferSize), uintptr(OutBuffer), uintptr(OutBufferSize), uintptr(unsafe.Pointer(OutSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced2) GetSourceFileInformation(Which uint32, SourceFile PSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileInformation, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(SourceFile)), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced2) FindSourceFileAndToken(StartElement uint32, ModAddr uint64, File PSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFileAndToken, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(ModAddr), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(FileToken), uintptr(FileTokenSize), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced2) GetSymbolInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PSTR, StringBufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolInformation, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)), uintptr(unsafe.Pointer(StringBuffer)), uintptr(StringBufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced2) GetSystemObjectInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemObjectInformation, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)))
	return HRESULT(ret)
}

// CBA4ABB4-84C4-444D-87CA-A04E13286739
var IID_IDebugAdvanced3 = syscall.GUID{0xCBA4ABB4, 0x84C4, 0x444D,
	[8]byte{0x87, 0xCA, 0xA0, 0x4E, 0x13, 0x28, 0x67, 0x39}}

type IDebugAdvanced3Interface interface {
	IUnknownInterface
	GetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
	SetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
	Request(Request uint32, InBuffer unsafe.Pointer, InBufferSize uint32, OutBuffer unsafe.Pointer, OutBufferSize uint32, OutSize *uint32) HRESULT
	GetSourceFileInformation(Which uint32, SourceFile PSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT
	FindSourceFileAndToken(StartElement uint32, ModAddr uint64, File PSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSymbolInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PSTR, StringBufferSize uint32, StringSize *uint32) HRESULT
	GetSystemObjectInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT
	GetSourceFileInformationWide(Which uint32, SourceFile PWSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT
	FindSourceFileAndTokenWide(StartElement uint32, ModAddr uint64, File PWSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSymbolInformationWide(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PWSTR, StringBufferSize uint32, StringSize *uint32) HRESULT
}

type IDebugAdvanced3Vtbl struct {
	IUnknownVtbl
	GetThreadContext             uintptr
	SetThreadContext             uintptr
	Request                      uintptr
	GetSourceFileInformation     uintptr
	FindSourceFileAndToken       uintptr
	GetSymbolInformation         uintptr
	GetSystemObjectInformation   uintptr
	GetSourceFileInformationWide uintptr
	FindSourceFileAndTokenWide   uintptr
	GetSymbolInformationWide     uintptr
}

type IDebugAdvanced3 struct {
	IUnknown
}

func (this *IDebugAdvanced3) Vtbl() *IDebugAdvanced3Vtbl {
	return (*IDebugAdvanced3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugAdvanced3) GetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugAdvanced3) SetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetThreadContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugAdvanced3) Request(Request uint32, InBuffer unsafe.Pointer, InBufferSize uint32, OutBuffer unsafe.Pointer, OutBufferSize uint32, OutSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Request, uintptr(unsafe.Pointer(this)), uintptr(Request), uintptr(InBuffer), uintptr(InBufferSize), uintptr(OutBuffer), uintptr(OutBufferSize), uintptr(unsafe.Pointer(OutSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced3) GetSourceFileInformation(Which uint32, SourceFile PSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileInformation, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(SourceFile)), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced3) FindSourceFileAndToken(StartElement uint32, ModAddr uint64, File PSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFileAndToken, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(ModAddr), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(FileToken), uintptr(FileTokenSize), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced3) GetSymbolInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PSTR, StringBufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolInformation, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)), uintptr(unsafe.Pointer(StringBuffer)), uintptr(StringBufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced3) GetSystemObjectInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemObjectInformation, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced3) GetSourceFileInformationWide(Which uint32, SourceFile PWSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileInformationWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(SourceFile)), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced3) FindSourceFileAndTokenWide(StartElement uint32, ModAddr uint64, File PWSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFileAndTokenWide, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(ModAddr), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(FileToken), uintptr(FileTokenSize), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced3) GetSymbolInformationWide(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PWSTR, StringBufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolInformationWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)), uintptr(unsafe.Pointer(StringBuffer)), uintptr(StringBufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

// D1069067-2A65-4BF0-AE97-76184B67856B
var IID_IDebugAdvanced4 = syscall.GUID{0xD1069067, 0x2A65, 0x4BF0,
	[8]byte{0xAE, 0x97, 0x76, 0x18, 0x4B, 0x67, 0x85, 0x6B}}

type IDebugAdvanced4Interface interface {
	IUnknownInterface
	GetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
	SetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
	Request(Request uint32, InBuffer unsafe.Pointer, InBufferSize uint32, OutBuffer unsafe.Pointer, OutBufferSize uint32, OutSize *uint32) HRESULT
	GetSourceFileInformation(Which uint32, SourceFile PSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT
	FindSourceFileAndToken(StartElement uint32, ModAddr uint64, File PSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSymbolInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PSTR, StringBufferSize uint32, StringSize *uint32) HRESULT
	GetSystemObjectInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT
	GetSourceFileInformationWide(Which uint32, SourceFile PWSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT
	FindSourceFileAndTokenWide(StartElement uint32, ModAddr uint64, File PWSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSymbolInformationWide(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PWSTR, StringBufferSize uint32, StringSize *uint32) HRESULT
	GetSymbolInformationWideEx(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PWSTR, StringBufferSize uint32, StringSize *uint32, pInfoEx *SYMBOL_INFO_EX) HRESULT
}

type IDebugAdvanced4Vtbl struct {
	IUnknownVtbl
	GetThreadContext             uintptr
	SetThreadContext             uintptr
	Request                      uintptr
	GetSourceFileInformation     uintptr
	FindSourceFileAndToken       uintptr
	GetSymbolInformation         uintptr
	GetSystemObjectInformation   uintptr
	GetSourceFileInformationWide uintptr
	FindSourceFileAndTokenWide   uintptr
	GetSymbolInformationWide     uintptr
	GetSymbolInformationWideEx   uintptr
}

type IDebugAdvanced4 struct {
	IUnknown
}

func (this *IDebugAdvanced4) Vtbl() *IDebugAdvanced4Vtbl {
	return (*IDebugAdvanced4Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugAdvanced4) GetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) SetThreadContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetThreadContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) Request(Request uint32, InBuffer unsafe.Pointer, InBufferSize uint32, OutBuffer unsafe.Pointer, OutBufferSize uint32, OutSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Request, uintptr(unsafe.Pointer(this)), uintptr(Request), uintptr(InBuffer), uintptr(InBufferSize), uintptr(OutBuffer), uintptr(OutBufferSize), uintptr(unsafe.Pointer(OutSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) GetSourceFileInformation(Which uint32, SourceFile PSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileInformation, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(SourceFile)), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) FindSourceFileAndToken(StartElement uint32, ModAddr uint64, File PSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFileAndToken, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(ModAddr), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(FileToken), uintptr(FileTokenSize), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) GetSymbolInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PSTR, StringBufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolInformation, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)), uintptr(unsafe.Pointer(StringBuffer)), uintptr(StringBufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) GetSystemObjectInformation(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemObjectInformation, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) GetSourceFileInformationWide(Which uint32, SourceFile PWSTR, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileInformationWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(SourceFile)), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) FindSourceFileAndTokenWide(StartElement uint32, ModAddr uint64, File PWSTR, Flags uint32, FileToken unsafe.Pointer, FileTokenSize uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFileAndTokenWide, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(ModAddr), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(FileToken), uintptr(FileTokenSize), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) GetSymbolInformationWide(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PWSTR, StringBufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolInformationWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)), uintptr(unsafe.Pointer(StringBuffer)), uintptr(StringBufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugAdvanced4) GetSymbolInformationWideEx(Which uint32, Arg64 uint64, Arg32 uint32, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32, StringBuffer PWSTR, StringBufferSize uint32, StringSize *uint32, pInfoEx *SYMBOL_INFO_EX) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolInformationWideEx, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Arg64), uintptr(Arg32), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)), uintptr(unsafe.Pointer(StringBuffer)), uintptr(StringBufferSize), uintptr(unsafe.Pointer(StringSize)), uintptr(unsafe.Pointer(pInfoEx)))
	return HRESULT(ret)
}

// 5BD9D474-5975-423A-B88B-65A8E7110E65
var IID_IDebugBreakpoint = syscall.GUID{0x5BD9D474, 0x5975, 0x423A,
	[8]byte{0xB8, 0x8B, 0x65, 0xA8, 0xE7, 0x11, 0x0E, 0x65}}

type IDebugBreakpointInterface interface {
	IUnknownInterface
	GetId(Id *uint32) HRESULT
	GetType(BreakType *uint32, ProcType *uint32) HRESULT
	GetAdder(Adder **IDebugClient) HRESULT
	GetFlags(Flags *uint32) HRESULT
	AddFlags(Flags uint32) HRESULT
	RemoveFlags(Flags uint32) HRESULT
	SetFlags(Flags uint32) HRESULT
	GetOffset(Offset *uint64) HRESULT
	SetOffset(Offset uint64) HRESULT
	GetDataParameters(Size *uint32, AccessType *uint32) HRESULT
	SetDataParameters(Size uint32, AccessType uint32) HRESULT
	GetPassCount(Count *uint32) HRESULT
	SetPassCount(Count uint32) HRESULT
	GetCurrentPassCount(Count *uint32) HRESULT
	GetMatchThreadId(Id *uint32) HRESULT
	SetMatchThreadId(Thread uint32) HRESULT
	GetCommand(Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetCommand(Command PSTR) HRESULT
	GetOffsetExpression(Buffer PSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT
	SetOffsetExpression(Expression PSTR) HRESULT
	GetParameters(Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
}

type IDebugBreakpointVtbl struct {
	IUnknownVtbl
	GetId               uintptr
	GetType             uintptr
	GetAdder            uintptr
	GetFlags            uintptr
	AddFlags            uintptr
	RemoveFlags         uintptr
	SetFlags            uintptr
	GetOffset           uintptr
	SetOffset           uintptr
	GetDataParameters   uintptr
	SetDataParameters   uintptr
	GetPassCount        uintptr
	SetPassCount        uintptr
	GetCurrentPassCount uintptr
	GetMatchThreadId    uintptr
	SetMatchThreadId    uintptr
	GetCommand          uintptr
	SetCommand          uintptr
	GetOffsetExpression uintptr
	SetOffsetExpression uintptr
	GetParameters       uintptr
}

type IDebugBreakpoint struct {
	IUnknown
}

func (this *IDebugBreakpoint) Vtbl() *IDebugBreakpointVtbl {
	return (*IDebugBreakpointVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugBreakpoint) GetId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetType(BreakType *uint32, ProcType *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(BreakType)), uintptr(unsafe.Pointer(ProcType)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetAdder(Adder **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetAdder, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Adder)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetFlags(Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) AddFlags(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddFlags, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) RemoveFlags(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveFlags, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) SetFlags(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetFlags, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) SetOffset(Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetDataParameters(Size *uint32, AccessType *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDataParameters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)), uintptr(unsafe.Pointer(AccessType)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) SetDataParameters(Size uint32, AccessType uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDataParameters, uintptr(unsafe.Pointer(this)), uintptr(Size), uintptr(AccessType))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetPassCount(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPassCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) SetPassCount(Count uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetPassCount, uintptr(unsafe.Pointer(this)), uintptr(Count))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetCurrentPassCount(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentPassCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetMatchThreadId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetMatchThreadId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) SetMatchThreadId(Thread uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetMatchThreadId, uintptr(unsafe.Pointer(this)), uintptr(Thread))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetCommand(Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCommand, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) SetCommand(Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCommand, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetOffsetExpression(Buffer PSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetExpression, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExpressionSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) SetOffsetExpression(Expression PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOffsetExpression, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint) GetParameters(Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetParameters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

// 1B278D20-79F2-426E-A3F9-C1DDF375D48E
var IID_IDebugBreakpoint2 = syscall.GUID{0x1B278D20, 0x79F2, 0x426E,
	[8]byte{0xA3, 0xF9, 0xC1, 0xDD, 0xF3, 0x75, 0xD4, 0x8E}}

type IDebugBreakpoint2Interface interface {
	IUnknownInterface
	GetId(Id *uint32) HRESULT
	GetType(BreakType *uint32, ProcType *uint32) HRESULT
	GetAdder(Adder **IDebugClient) HRESULT
	GetFlags(Flags *uint32) HRESULT
	AddFlags(Flags uint32) HRESULT
	RemoveFlags(Flags uint32) HRESULT
	SetFlags(Flags uint32) HRESULT
	GetOffset(Offset *uint64) HRESULT
	SetOffset(Offset uint64) HRESULT
	GetDataParameters(Size *uint32, AccessType *uint32) HRESULT
	SetDataParameters(Size uint32, AccessType uint32) HRESULT
	GetPassCount(Count *uint32) HRESULT
	SetPassCount(Count uint32) HRESULT
	GetCurrentPassCount(Count *uint32) HRESULT
	GetMatchThreadId(Id *uint32) HRESULT
	SetMatchThreadId(Thread uint32) HRESULT
	GetCommand(Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetCommand(Command PSTR) HRESULT
	GetOffsetExpression(Buffer PSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT
	SetOffsetExpression(Expression PSTR) HRESULT
	GetParameters(Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
	GetCommandWide(Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetCommandWide(Command PWSTR) HRESULT
	GetOffsetExpressionWide(Buffer PWSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT
	SetOffsetExpressionWide(Expression PWSTR) HRESULT
}

type IDebugBreakpoint2Vtbl struct {
	IUnknownVtbl
	GetId                   uintptr
	GetType                 uintptr
	GetAdder                uintptr
	GetFlags                uintptr
	AddFlags                uintptr
	RemoveFlags             uintptr
	SetFlags                uintptr
	GetOffset               uintptr
	SetOffset               uintptr
	GetDataParameters       uintptr
	SetDataParameters       uintptr
	GetPassCount            uintptr
	SetPassCount            uintptr
	GetCurrentPassCount     uintptr
	GetMatchThreadId        uintptr
	SetMatchThreadId        uintptr
	GetCommand              uintptr
	SetCommand              uintptr
	GetOffsetExpression     uintptr
	SetOffsetExpression     uintptr
	GetParameters           uintptr
	GetCommandWide          uintptr
	SetCommandWide          uintptr
	GetOffsetExpressionWide uintptr
	SetOffsetExpressionWide uintptr
}

type IDebugBreakpoint2 struct {
	IUnknown
}

func (this *IDebugBreakpoint2) Vtbl() *IDebugBreakpoint2Vtbl {
	return (*IDebugBreakpoint2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugBreakpoint2) GetId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetType(BreakType *uint32, ProcType *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(BreakType)), uintptr(unsafe.Pointer(ProcType)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetAdder(Adder **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetAdder, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Adder)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetFlags(Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) AddFlags(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddFlags, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) RemoveFlags(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveFlags, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) SetFlags(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetFlags, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) SetOffset(Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetDataParameters(Size *uint32, AccessType *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDataParameters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)), uintptr(unsafe.Pointer(AccessType)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) SetDataParameters(Size uint32, AccessType uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDataParameters, uintptr(unsafe.Pointer(this)), uintptr(Size), uintptr(AccessType))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetPassCount(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPassCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) SetPassCount(Count uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetPassCount, uintptr(unsafe.Pointer(this)), uintptr(Count))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetCurrentPassCount(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentPassCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetMatchThreadId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetMatchThreadId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) SetMatchThreadId(Thread uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetMatchThreadId, uintptr(unsafe.Pointer(this)), uintptr(Thread))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetCommand(Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCommand, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) SetCommand(Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCommand, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetOffsetExpression(Buffer PSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetExpression, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExpressionSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) SetOffsetExpression(Expression PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOffsetExpression, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetParameters(Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetParameters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetCommandWide(Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCommandWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) SetCommandWide(Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCommandWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) GetOffsetExpressionWide(Buffer PWSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetExpressionWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExpressionSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint2) SetOffsetExpressionWide(Expression PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOffsetExpressionWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)))
	return HRESULT(ret)
}

// 38F5C249-B448-43BB-9835-579D4EC02249
var IID_IDebugBreakpoint3 = syscall.GUID{0x38F5C249, 0xB448, 0x43BB,
	[8]byte{0x98, 0x35, 0x57, 0x9D, 0x4E, 0xC0, 0x22, 0x49}}

type IDebugBreakpoint3Interface interface {
	IUnknownInterface
	GetId(Id *uint32) HRESULT
	GetType(BreakType *uint32, ProcType *uint32) HRESULT
	GetAdder(Adder **IDebugClient) HRESULT
	GetFlags(Flags *uint32) HRESULT
	AddFlags(Flags uint32) HRESULT
	RemoveFlags(Flags uint32) HRESULT
	SetFlags(Flags uint32) HRESULT
	GetOffset(Offset *uint64) HRESULT
	SetOffset(Offset uint64) HRESULT
	GetDataParameters(Size *uint32, AccessType *uint32) HRESULT
	SetDataParameters(Size uint32, AccessType uint32) HRESULT
	GetPassCount(Count *uint32) HRESULT
	SetPassCount(Count uint32) HRESULT
	GetCurrentPassCount(Count *uint32) HRESULT
	GetMatchThreadId(Id *uint32) HRESULT
	SetMatchThreadId(Thread uint32) HRESULT
	GetCommand(Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetCommand(Command PSTR) HRESULT
	GetOffsetExpression(Buffer PSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT
	SetOffsetExpression(Expression PSTR) HRESULT
	GetParameters(Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
	GetCommandWide(Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetCommandWide(Command PWSTR) HRESULT
	GetOffsetExpressionWide(Buffer PWSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT
	SetOffsetExpressionWide(Expression PWSTR) HRESULT
	GetGuid(Guid *syscall.GUID) HRESULT
}

type IDebugBreakpoint3Vtbl struct {
	IUnknownVtbl
	GetId                   uintptr
	GetType                 uintptr
	GetAdder                uintptr
	GetFlags                uintptr
	AddFlags                uintptr
	RemoveFlags             uintptr
	SetFlags                uintptr
	GetOffset               uintptr
	SetOffset               uintptr
	GetDataParameters       uintptr
	SetDataParameters       uintptr
	GetPassCount            uintptr
	SetPassCount            uintptr
	GetCurrentPassCount     uintptr
	GetMatchThreadId        uintptr
	SetMatchThreadId        uintptr
	GetCommand              uintptr
	SetCommand              uintptr
	GetOffsetExpression     uintptr
	SetOffsetExpression     uintptr
	GetParameters           uintptr
	GetCommandWide          uintptr
	SetCommandWide          uintptr
	GetOffsetExpressionWide uintptr
	SetOffsetExpressionWide uintptr
	GetGuid                 uintptr
}

type IDebugBreakpoint3 struct {
	IUnknown
}

func (this *IDebugBreakpoint3) Vtbl() *IDebugBreakpoint3Vtbl {
	return (*IDebugBreakpoint3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugBreakpoint3) GetId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetType(BreakType *uint32, ProcType *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(BreakType)), uintptr(unsafe.Pointer(ProcType)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetAdder(Adder **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetAdder, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Adder)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetFlags(Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) AddFlags(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddFlags, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) RemoveFlags(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveFlags, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) SetFlags(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetFlags, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) SetOffset(Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetDataParameters(Size *uint32, AccessType *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDataParameters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)), uintptr(unsafe.Pointer(AccessType)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) SetDataParameters(Size uint32, AccessType uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDataParameters, uintptr(unsafe.Pointer(this)), uintptr(Size), uintptr(AccessType))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetPassCount(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPassCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) SetPassCount(Count uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetPassCount, uintptr(unsafe.Pointer(this)), uintptr(Count))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetCurrentPassCount(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentPassCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetMatchThreadId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetMatchThreadId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) SetMatchThreadId(Thread uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetMatchThreadId, uintptr(unsafe.Pointer(this)), uintptr(Thread))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetCommand(Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCommand, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) SetCommand(Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCommand, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetOffsetExpression(Buffer PSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetExpression, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExpressionSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) SetOffsetExpression(Expression PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOffsetExpression, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetParameters(Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetParameters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetCommandWide(Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCommandWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) SetCommandWide(Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCommandWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetOffsetExpressionWide(Buffer PWSTR, BufferSize uint32, ExpressionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetExpressionWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExpressionSize)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) SetOffsetExpressionWide(Expression PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOffsetExpressionWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)))
	return HRESULT(ret)
}

func (this *IDebugBreakpoint3) GetGuid(Guid *syscall.GUID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetGuid, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Guid)))
	return HRESULT(ret)
}

// 27FE5639-8407-4F47-8364-EE118FB08AC8
var IID_IDebugClient = syscall.GUID{0x27FE5639, 0x8407, 0x4F47,
	[8]byte{0x83, 0x64, 0xEE, 0x11, 0x8F, 0xB0, 0x8A, 0xC8}}

type IDebugClientInterface interface {
	IUnknownInterface
	AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT
	GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptions(Options PSTR) HRESULT
	StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT
	DisconnectProcessServer(Server uint64) HRESULT
	GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT
	GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	GetProcessOptions(Options *uint32) HRESULT
	AddProcessOptions(Options uint32) HRESULT
	RemoveProcessOptions(Options uint32) HRESULT
	SetProcessOptions(Options uint32) HRESULT
	OpenDumpFile(DumpFile PSTR) HRESULT
	WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT
	ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT
	StartServer(Options PSTR) HRESULT
	OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT
	TerminateProcesses() HRESULT
	DetachProcesses() HRESULT
	EndSession(Flags uint32) HRESULT
	GetExitCode(Code *uint32) HRESULT
	DispatchCallbacks(Timeout uint32) HRESULT
	ExitDispatch(Client *IDebugClient) HRESULT
	CreateClient(Client **IDebugClient) HRESULT
	GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT
	SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT
	GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT
	SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT
	GetOutputMask(Mask *uint32) HRESULT
	SetOutputMask(Mask uint32) HRESULT
	GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT
	SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT
	GetOutputWidth(Columns *uint32) HRESULT
	SetOutputWidth(Columns uint32) HRESULT
	GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefix(Prefix PSTR) HRESULT
	GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT
	GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT
	SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT
	FlushCallbacks() HRESULT
}

type IDebugClientVtbl struct {
	IUnknownVtbl
	AttachKernel                              uintptr
	GetKernelConnectionOptions                uintptr
	SetKernelConnectionOptions                uintptr
	StartProcessServer                        uintptr
	ConnectProcessServer                      uintptr
	DisconnectProcessServer                   uintptr
	GetRunningProcessSystemIds                uintptr
	GetRunningProcessSystemIdByExecutableName uintptr
	GetRunningProcessDescription              uintptr
	AttachProcess                             uintptr
	CreateProcessA                            uintptr
	CreateProcessAndAttach                    uintptr
	GetProcessOptions                         uintptr
	AddProcessOptions                         uintptr
	RemoveProcessOptions                      uintptr
	SetProcessOptions                         uintptr
	OpenDumpFile                              uintptr
	WriteDumpFile                             uintptr
	ConnectSession                            uintptr
	StartServer                               uintptr
	OutputServers                             uintptr
	TerminateProcesses                        uintptr
	DetachProcesses                           uintptr
	EndSession                                uintptr
	GetExitCode                               uintptr
	DispatchCallbacks                         uintptr
	ExitDispatch                              uintptr
	CreateClient                              uintptr
	GetInputCallbacks                         uintptr
	SetInputCallbacks                         uintptr
	GetOutputCallbacks                        uintptr
	SetOutputCallbacks                        uintptr
	GetOutputMask                             uintptr
	SetOutputMask                             uintptr
	GetOtherOutputMask                        uintptr
	SetOtherOutputMask                        uintptr
	GetOutputWidth                            uintptr
	SetOutputWidth                            uintptr
	GetOutputLinePrefix                       uintptr
	SetOutputLinePrefix                       uintptr
	GetIdentity                               uintptr
	OutputIdentity                            uintptr
	GetEventCallbacks                         uintptr
	SetEventCallbacks                         uintptr
	FlushCallbacks                            uintptr
}

type IDebugClient struct {
	IUnknown
}

func (this *IDebugClient) Vtbl() *IDebugClientVtbl {
	return (*IDebugClientVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugClient) AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernel, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient) GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient) SetKernelConnectionOptions(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient) StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient) ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient) DisconnectProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisconnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient) GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIds, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Ids)), uintptr(Count), uintptr(unsafe.Pointer(ActualCount)))
	return HRESULT(ret)
}

func (this *IDebugClient) GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableName, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient) GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescription, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient) AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachProcess, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient) CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient) CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient) GetProcessOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient) AddProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient) RemoveProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient) SetProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient) OpenDumpFile(DumpFile PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)))
	return HRESULT(ret)
}

func (this *IDebugClient) WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier))
	return HRESULT(ret)
}

func (this *IDebugClient) ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectSession, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(HistoryLimit))
	return HRESULT(ret)
}

func (this *IDebugClient) StartServer(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient) OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServers, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient) TerminateProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient) DetachProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient) EndSession(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSession, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient) GetExitCode(Code *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExitCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)))
	return HRESULT(ret)
}

func (this *IDebugClient) DispatchCallbacks(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DispatchCallbacks, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient) ExitDispatch(Client *IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitDispatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient) CreateClient(Client **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateClient, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient) GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient) SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient) GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient) SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient) GetOutputMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient) SetOutputMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient) GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient) SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient) GetOutputWidth(Columns *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Columns)))
	return HRESULT(ret)
}

func (this *IDebugClient) SetOutputWidth(Columns uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(Columns))
	return HRESULT(ret)
}

func (this *IDebugClient) GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient) SetOutputLinePrefix(Prefix PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient) GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentity, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient) OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentity, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient) GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient) SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient) FlushCallbacks() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FlushCallbacks, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// EDBED635-372E-4DAB-BBFE-ED0D2F63BE81
var IID_IDebugClient2 = syscall.GUID{0xEDBED635, 0x372E, 0x4DAB,
	[8]byte{0xBB, 0xFE, 0xED, 0x0D, 0x2F, 0x63, 0xBE, 0x81}}

type IDebugClient2Interface interface {
	IUnknownInterface
	AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT
	GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptions(Options PSTR) HRESULT
	StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT
	DisconnectProcessServer(Server uint64) HRESULT
	GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT
	GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	GetProcessOptions(Options *uint32) HRESULT
	AddProcessOptions(Options uint32) HRESULT
	RemoveProcessOptions(Options uint32) HRESULT
	SetProcessOptions(Options uint32) HRESULT
	OpenDumpFile(DumpFile PSTR) HRESULT
	WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT
	ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT
	StartServer(Options PSTR) HRESULT
	OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT
	TerminateProcesses() HRESULT
	DetachProcesses() HRESULT
	EndSession(Flags uint32) HRESULT
	GetExitCode(Code *uint32) HRESULT
	DispatchCallbacks(Timeout uint32) HRESULT
	ExitDispatch(Client *IDebugClient) HRESULT
	CreateClient(Client **IDebugClient) HRESULT
	GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT
	SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT
	GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT
	SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT
	GetOutputMask(Mask *uint32) HRESULT
	SetOutputMask(Mask uint32) HRESULT
	GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT
	SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT
	GetOutputWidth(Columns *uint32) HRESULT
	SetOutputWidth(Columns uint32) HRESULT
	GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefix(Prefix PSTR) HRESULT
	GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT
	GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT
	SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT
	FlushCallbacks() HRESULT
	WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT
	AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT
	EndProcessServer(Server uint64) HRESULT
	WaitForProcessServerEnd(Timeout uint32) HRESULT
	IsKernelDebuggerEnabled() HRESULT
	TerminateCurrentProcess() HRESULT
	DetachCurrentProcess() HRESULT
	AbandonCurrentProcess() HRESULT
}

type IDebugClient2Vtbl struct {
	IUnknownVtbl
	AttachKernel                              uintptr
	GetKernelConnectionOptions                uintptr
	SetKernelConnectionOptions                uintptr
	StartProcessServer                        uintptr
	ConnectProcessServer                      uintptr
	DisconnectProcessServer                   uintptr
	GetRunningProcessSystemIds                uintptr
	GetRunningProcessSystemIdByExecutableName uintptr
	GetRunningProcessDescription              uintptr
	AttachProcess                             uintptr
	CreateProcessA                            uintptr
	CreateProcessAndAttach                    uintptr
	GetProcessOptions                         uintptr
	AddProcessOptions                         uintptr
	RemoveProcessOptions                      uintptr
	SetProcessOptions                         uintptr
	OpenDumpFile                              uintptr
	WriteDumpFile                             uintptr
	ConnectSession                            uintptr
	StartServer                               uintptr
	OutputServers                             uintptr
	TerminateProcesses                        uintptr
	DetachProcesses                           uintptr
	EndSession                                uintptr
	GetExitCode                               uintptr
	DispatchCallbacks                         uintptr
	ExitDispatch                              uintptr
	CreateClient                              uintptr
	GetInputCallbacks                         uintptr
	SetInputCallbacks                         uintptr
	GetOutputCallbacks                        uintptr
	SetOutputCallbacks                        uintptr
	GetOutputMask                             uintptr
	SetOutputMask                             uintptr
	GetOtherOutputMask                        uintptr
	SetOtherOutputMask                        uintptr
	GetOutputWidth                            uintptr
	SetOutputWidth                            uintptr
	GetOutputLinePrefix                       uintptr
	SetOutputLinePrefix                       uintptr
	GetIdentity                               uintptr
	OutputIdentity                            uintptr
	GetEventCallbacks                         uintptr
	SetEventCallbacks                         uintptr
	FlushCallbacks                            uintptr
	WriteDumpFile2                            uintptr
	AddDumpInformationFile                    uintptr
	EndProcessServer                          uintptr
	WaitForProcessServerEnd                   uintptr
	IsKernelDebuggerEnabled                   uintptr
	TerminateCurrentProcess                   uintptr
	DetachCurrentProcess                      uintptr
	AbandonCurrentProcess                     uintptr
}

type IDebugClient2 struct {
	IUnknown
}

func (this *IDebugClient2) Vtbl() *IDebugClient2Vtbl {
	return (*IDebugClient2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugClient2) AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernel, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient2) SetKernelConnectionOptions(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient2) StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient2) ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient2) DisconnectProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisconnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIds, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Ids)), uintptr(Count), uintptr(unsafe.Pointer(ActualCount)))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableName, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescription, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient2) AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachProcess, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient2) CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient2) CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetProcessOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient2) AddProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient2) RemoveProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient2) SetProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient2) OpenDumpFile(DumpFile PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)))
	return HRESULT(ret)
}

func (this *IDebugClient2) WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier))
	return HRESULT(ret)
}

func (this *IDebugClient2) ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectSession, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(HistoryLimit))
	return HRESULT(ret)
}

func (this *IDebugClient2) StartServer(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient2) OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServers, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient2) TerminateProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient2) DetachProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient2) EndSession(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSession, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetExitCode(Code *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExitCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)))
	return HRESULT(ret)
}

func (this *IDebugClient2) DispatchCallbacks(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DispatchCallbacks, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient2) ExitDispatch(Client *IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitDispatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient2) CreateClient(Client **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateClient, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient2) SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient2) SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetOutputMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient2) SetOutputMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient2) SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetOutputWidth(Columns *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Columns)))
	return HRESULT(ret)
}

func (this *IDebugClient2) SetOutputWidth(Columns uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(Columns))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient2) SetOutputLinePrefix(Prefix PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentity, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient2) OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentity, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient2) GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient2) SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient2) FlushCallbacks() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FlushCallbacks, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient2) WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient2) AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InfoFile)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient2) EndProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient2) WaitForProcessServerEnd(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForProcessServerEnd, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient2) IsKernelDebuggerEnabled() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsKernelDebuggerEnabled, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient2) TerminateCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient2) DetachCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient2) AbandonCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AbandonCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// DD492D7F-71B8-4AD6-A8DC-1C887479FF91
var IID_IDebugClient3 = syscall.GUID{0xDD492D7F, 0x71B8, 0x4AD6,
	[8]byte{0xA8, 0xDC, 0x1C, 0x88, 0x74, 0x79, 0xFF, 0x91}}

type IDebugClient3Interface interface {
	IUnknownInterface
	AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT
	GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptions(Options PSTR) HRESULT
	StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT
	DisconnectProcessServer(Server uint64) HRESULT
	GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT
	GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	GetProcessOptions(Options *uint32) HRESULT
	AddProcessOptions(Options uint32) HRESULT
	RemoveProcessOptions(Options uint32) HRESULT
	SetProcessOptions(Options uint32) HRESULT
	OpenDumpFile(DumpFile PSTR) HRESULT
	WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT
	ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT
	StartServer(Options PSTR) HRESULT
	OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT
	TerminateProcesses() HRESULT
	DetachProcesses() HRESULT
	EndSession(Flags uint32) HRESULT
	GetExitCode(Code *uint32) HRESULT
	DispatchCallbacks(Timeout uint32) HRESULT
	ExitDispatch(Client *IDebugClient) HRESULT
	CreateClient(Client **IDebugClient) HRESULT
	GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT
	SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT
	GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT
	SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT
	GetOutputMask(Mask *uint32) HRESULT
	SetOutputMask(Mask uint32) HRESULT
	GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT
	SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT
	GetOutputWidth(Columns *uint32) HRESULT
	SetOutputWidth(Columns uint32) HRESULT
	GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefix(Prefix PSTR) HRESULT
	GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT
	GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT
	SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT
	FlushCallbacks() HRESULT
	WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT
	AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT
	EndProcessServer(Server uint64) HRESULT
	WaitForProcessServerEnd(Timeout uint32) HRESULT
	IsKernelDebuggerEnabled() HRESULT
	TerminateCurrentProcess() HRESULT
	DetachCurrentProcess() HRESULT
	AbandonCurrentProcess() HRESULT
	GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
}

type IDebugClient3Vtbl struct {
	IUnknownVtbl
	AttachKernel                                  uintptr
	GetKernelConnectionOptions                    uintptr
	SetKernelConnectionOptions                    uintptr
	StartProcessServer                            uintptr
	ConnectProcessServer                          uintptr
	DisconnectProcessServer                       uintptr
	GetRunningProcessSystemIds                    uintptr
	GetRunningProcessSystemIdByExecutableName     uintptr
	GetRunningProcessDescription                  uintptr
	AttachProcess                                 uintptr
	CreateProcessA                                uintptr
	CreateProcessAndAttach                        uintptr
	GetProcessOptions                             uintptr
	AddProcessOptions                             uintptr
	RemoveProcessOptions                          uintptr
	SetProcessOptions                             uintptr
	OpenDumpFile                                  uintptr
	WriteDumpFile                                 uintptr
	ConnectSession                                uintptr
	StartServer                                   uintptr
	OutputServers                                 uintptr
	TerminateProcesses                            uintptr
	DetachProcesses                               uintptr
	EndSession                                    uintptr
	GetExitCode                                   uintptr
	DispatchCallbacks                             uintptr
	ExitDispatch                                  uintptr
	CreateClient                                  uintptr
	GetInputCallbacks                             uintptr
	SetInputCallbacks                             uintptr
	GetOutputCallbacks                            uintptr
	SetOutputCallbacks                            uintptr
	GetOutputMask                                 uintptr
	SetOutputMask                                 uintptr
	GetOtherOutputMask                            uintptr
	SetOtherOutputMask                            uintptr
	GetOutputWidth                                uintptr
	SetOutputWidth                                uintptr
	GetOutputLinePrefix                           uintptr
	SetOutputLinePrefix                           uintptr
	GetIdentity                                   uintptr
	OutputIdentity                                uintptr
	GetEventCallbacks                             uintptr
	SetEventCallbacks                             uintptr
	FlushCallbacks                                uintptr
	WriteDumpFile2                                uintptr
	AddDumpInformationFile                        uintptr
	EndProcessServer                              uintptr
	WaitForProcessServerEnd                       uintptr
	IsKernelDebuggerEnabled                       uintptr
	TerminateCurrentProcess                       uintptr
	DetachCurrentProcess                          uintptr
	AbandonCurrentProcess                         uintptr
	GetRunningProcessSystemIdByExecutableNameWide uintptr
	GetRunningProcessDescriptionWide              uintptr
	CreateProcessWide                             uintptr
	CreateProcessAndAttachWide                    uintptr
}

type IDebugClient3 struct {
	IUnknown
}

func (this *IDebugClient3) Vtbl() *IDebugClient3Vtbl {
	return (*IDebugClient3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugClient3) AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernel, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient3) SetKernelConnectionOptions(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient3) StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient3) ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient3) DisconnectProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisconnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIds, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Ids)), uintptr(Count), uintptr(unsafe.Pointer(ActualCount)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableName, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescription, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient3) AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachProcess, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient3) CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient3) CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetProcessOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient3) AddProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient3) RemoveProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient3) SetProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient3) OpenDumpFile(DumpFile PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)))
	return HRESULT(ret)
}

func (this *IDebugClient3) WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier))
	return HRESULT(ret)
}

func (this *IDebugClient3) ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectSession, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(HistoryLimit))
	return HRESULT(ret)
}

func (this *IDebugClient3) StartServer(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient3) OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServers, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient3) TerminateProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient3) DetachProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient3) EndSession(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSession, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetExitCode(Code *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExitCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)))
	return HRESULT(ret)
}

func (this *IDebugClient3) DispatchCallbacks(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DispatchCallbacks, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient3) ExitDispatch(Client *IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitDispatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient3) CreateClient(Client **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateClient, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient3) SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient3) SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetOutputMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient3) SetOutputMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient3) SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetOutputWidth(Columns *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Columns)))
	return HRESULT(ret)
}

func (this *IDebugClient3) SetOutputWidth(Columns uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(Columns))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient3) SetOutputLinePrefix(Prefix PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentity, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient3) OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentity, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient3) SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient3) FlushCallbacks() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FlushCallbacks, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient3) WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient3) AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InfoFile)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient3) EndProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient3) WaitForProcessServerEnd(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForProcessServerEnd, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient3) IsKernelDebuggerEnabled() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsKernelDebuggerEnabled, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient3) TerminateCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient3) DetachCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient3) AbandonCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AbandonCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableNameWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient3) GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient3) CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient3) CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttachWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

// CA83C3DE-5089-4CF8-93C8-D892387F2A5E
var IID_IDebugClient4 = syscall.GUID{0xCA83C3DE, 0x5089, 0x4CF8,
	[8]byte{0x93, 0xC8, 0xD8, 0x92, 0x38, 0x7F, 0x2A, 0x5E}}

type IDebugClient4Interface interface {
	IUnknownInterface
	AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT
	GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptions(Options PSTR) HRESULT
	StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT
	DisconnectProcessServer(Server uint64) HRESULT
	GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT
	GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	GetProcessOptions(Options *uint32) HRESULT
	AddProcessOptions(Options uint32) HRESULT
	RemoveProcessOptions(Options uint32) HRESULT
	SetProcessOptions(Options uint32) HRESULT
	OpenDumpFile(DumpFile PSTR) HRESULT
	WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT
	ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT
	StartServer(Options PSTR) HRESULT
	OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT
	TerminateProcesses() HRESULT
	DetachProcesses() HRESULT
	EndSession(Flags uint32) HRESULT
	GetExitCode(Code *uint32) HRESULT
	DispatchCallbacks(Timeout uint32) HRESULT
	ExitDispatch(Client *IDebugClient) HRESULT
	CreateClient(Client **IDebugClient) HRESULT
	GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT
	SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT
	GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT
	SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT
	GetOutputMask(Mask *uint32) HRESULT
	SetOutputMask(Mask uint32) HRESULT
	GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT
	SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT
	GetOutputWidth(Columns *uint32) HRESULT
	SetOutputWidth(Columns uint32) HRESULT
	GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefix(Prefix PSTR) HRESULT
	GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT
	GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT
	SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT
	FlushCallbacks() HRESULT
	WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT
	AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT
	EndProcessServer(Server uint64) HRESULT
	WaitForProcessServerEnd(Timeout uint32) HRESULT
	IsKernelDebuggerEnabled() HRESULT
	TerminateCurrentProcess() HRESULT
	DetachCurrentProcess() HRESULT
	AbandonCurrentProcess() HRESULT
	GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT
	WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT
	AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT
	GetNumberDumpFiles(Number *uint32) HRESULT
	GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
	GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
}

type IDebugClient4Vtbl struct {
	IUnknownVtbl
	AttachKernel                                  uintptr
	GetKernelConnectionOptions                    uintptr
	SetKernelConnectionOptions                    uintptr
	StartProcessServer                            uintptr
	ConnectProcessServer                          uintptr
	DisconnectProcessServer                       uintptr
	GetRunningProcessSystemIds                    uintptr
	GetRunningProcessSystemIdByExecutableName     uintptr
	GetRunningProcessDescription                  uintptr
	AttachProcess                                 uintptr
	CreateProcessA                                uintptr
	CreateProcessAndAttach                        uintptr
	GetProcessOptions                             uintptr
	AddProcessOptions                             uintptr
	RemoveProcessOptions                          uintptr
	SetProcessOptions                             uintptr
	OpenDumpFile                                  uintptr
	WriteDumpFile                                 uintptr
	ConnectSession                                uintptr
	StartServer                                   uintptr
	OutputServers                                 uintptr
	TerminateProcesses                            uintptr
	DetachProcesses                               uintptr
	EndSession                                    uintptr
	GetExitCode                                   uintptr
	DispatchCallbacks                             uintptr
	ExitDispatch                                  uintptr
	CreateClient                                  uintptr
	GetInputCallbacks                             uintptr
	SetInputCallbacks                             uintptr
	GetOutputCallbacks                            uintptr
	SetOutputCallbacks                            uintptr
	GetOutputMask                                 uintptr
	SetOutputMask                                 uintptr
	GetOtherOutputMask                            uintptr
	SetOtherOutputMask                            uintptr
	GetOutputWidth                                uintptr
	SetOutputWidth                                uintptr
	GetOutputLinePrefix                           uintptr
	SetOutputLinePrefix                           uintptr
	GetIdentity                                   uintptr
	OutputIdentity                                uintptr
	GetEventCallbacks                             uintptr
	SetEventCallbacks                             uintptr
	FlushCallbacks                                uintptr
	WriteDumpFile2                                uintptr
	AddDumpInformationFile                        uintptr
	EndProcessServer                              uintptr
	WaitForProcessServerEnd                       uintptr
	IsKernelDebuggerEnabled                       uintptr
	TerminateCurrentProcess                       uintptr
	DetachCurrentProcess                          uintptr
	AbandonCurrentProcess                         uintptr
	GetRunningProcessSystemIdByExecutableNameWide uintptr
	GetRunningProcessDescriptionWide              uintptr
	CreateProcessWide                             uintptr
	CreateProcessAndAttachWide                    uintptr
	OpenDumpFileWide                              uintptr
	WriteDumpFileWide                             uintptr
	AddDumpInformationFileWide                    uintptr
	GetNumberDumpFiles                            uintptr
	GetDumpFile                                   uintptr
	GetDumpFileWide                               uintptr
}

type IDebugClient4 struct {
	IUnknown
}

func (this *IDebugClient4) Vtbl() *IDebugClient4Vtbl {
	return (*IDebugClient4Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugClient4) AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernel, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient4) SetKernelConnectionOptions(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient4) StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient4) ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient4) DisconnectProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisconnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIds, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Ids)), uintptr(Count), uintptr(unsafe.Pointer(ActualCount)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableName, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescription, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient4) AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachProcess, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient4) CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient4) CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetProcessOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient4) AddProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient4) RemoveProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient4) SetProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient4) OpenDumpFile(DumpFile PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)))
	return HRESULT(ret)
}

func (this *IDebugClient4) WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier))
	return HRESULT(ret)
}

func (this *IDebugClient4) ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectSession, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(HistoryLimit))
	return HRESULT(ret)
}

func (this *IDebugClient4) StartServer(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient4) OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServers, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient4) TerminateProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient4) DetachProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient4) EndSession(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSession, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetExitCode(Code *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExitCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)))
	return HRESULT(ret)
}

func (this *IDebugClient4) DispatchCallbacks(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DispatchCallbacks, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient4) ExitDispatch(Client *IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitDispatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient4) CreateClient(Client **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateClient, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient4) SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient4) SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetOutputMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient4) SetOutputMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient4) SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetOutputWidth(Columns *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Columns)))
	return HRESULT(ret)
}

func (this *IDebugClient4) SetOutputWidth(Columns uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(Columns))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient4) SetOutputLinePrefix(Prefix PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentity, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient4) OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentity, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient4) SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient4) FlushCallbacks() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FlushCallbacks, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient4) WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient4) AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InfoFile)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient4) EndProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient4) WaitForProcessServerEnd(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForProcessServerEnd, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient4) IsKernelDebuggerEnabled() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsKernelDebuggerEnabled, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient4) TerminateCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient4) DetachCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient4) AbandonCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AbandonCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableNameWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient4) CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient4) CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttachWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient4) OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle))
	return HRESULT(ret)
}

func (this *IDebugClient4) WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient4) AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetNumberDumpFiles(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberDumpFiles, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFile, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugClient4) GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

// E3ACB9D7-7EC2-4F0C-A0DA-E81E0CBBE628
var IID_IDebugClient5 = syscall.GUID{0xE3ACB9D7, 0x7EC2, 0x4F0C,
	[8]byte{0xA0, 0xDA, 0xE8, 0x1E, 0x0C, 0xBB, 0xE6, 0x28}}

type IDebugClient5Interface interface {
	IUnknownInterface
	AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT
	GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptions(Options PSTR) HRESULT
	StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT
	DisconnectProcessServer(Server uint64) HRESULT
	GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT
	GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	GetProcessOptions(Options *uint32) HRESULT
	AddProcessOptions(Options uint32) HRESULT
	RemoveProcessOptions(Options uint32) HRESULT
	SetProcessOptions(Options uint32) HRESULT
	OpenDumpFile(DumpFile PSTR) HRESULT
	WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT
	ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT
	StartServer(Options PSTR) HRESULT
	OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT
	TerminateProcesses() HRESULT
	DetachProcesses() HRESULT
	EndSession(Flags uint32) HRESULT
	GetExitCode(Code *uint32) HRESULT
	DispatchCallbacks(Timeout uint32) HRESULT
	ExitDispatch(Client *IDebugClient) HRESULT
	CreateClient(Client **IDebugClient) HRESULT
	GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT
	SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT
	GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT
	SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT
	GetOutputMask(Mask *uint32) HRESULT
	SetOutputMask(Mask uint32) HRESULT
	GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT
	SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT
	GetOutputWidth(Columns *uint32) HRESULT
	SetOutputWidth(Columns uint32) HRESULT
	GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefix(Prefix PSTR) HRESULT
	GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT
	GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT
	SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT
	FlushCallbacks() HRESULT
	WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT
	AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT
	EndProcessServer(Server uint64) HRESULT
	WaitForProcessServerEnd(Timeout uint32) HRESULT
	IsKernelDebuggerEnabled() HRESULT
	TerminateCurrentProcess() HRESULT
	DetachCurrentProcess() HRESULT
	AbandonCurrentProcess() HRESULT
	GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT
	WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT
	AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT
	GetNumberDumpFiles(Number *uint32) HRESULT
	GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
	GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
	AttachKernelWide(Flags uint32, ConnectOptions PWSTR) HRESULT
	GetKernelConnectionOptionsWide(Buffer PWSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptionsWide(Options PWSTR) HRESULT
	StartProcessServerWide(Flags uint32, Options PWSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServerWide(RemoteOptions PWSTR, Server *uint64) HRESULT
	StartServerWide(Options PWSTR) HRESULT
	OutputServersWide(OutputControl uint32, Machine PWSTR, Flags uint32) HRESULT
	GetOutputCallbacksWide(Callbacks **IDebugOutputCallbacksWide) HRESULT
	SetOutputCallbacksWide(Callbacks *IDebugOutputCallbacksWide) HRESULT
	GetOutputLinePrefixWide(Buffer PWSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefixWide(Prefix PWSTR) HRESULT
	GetIdentityWide(Buffer PWSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentityWide(OutputControl uint32, Flags uint32, Format PWSTR) HRESULT
	GetEventCallbacksWide(Callbacks **IDebugEventCallbacksWide) HRESULT
	SetEventCallbacksWide(Callbacks *IDebugEventCallbacksWide) HRESULT
	CreateProcess2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR) HRESULT
	CreateProcess2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR) HRESULT
	CreateProcessAndAttach2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessAndAttach2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR, ProcessId uint32, AttachFlags uint32) HRESULT
	PushOutputLinePrefix(NewPrefix PSTR, Handle *uint64) HRESULT
	PushOutputLinePrefixWide(NewPrefix PWSTR, Handle *uint64) HRESULT
	PopOutputLinePrefix(Handle uint64) HRESULT
	GetNumberInputCallbacks(Count *uint32) HRESULT
	GetNumberOutputCallbacks(Count *uint32) HRESULT
	GetNumberEventCallbacks(EventFlags uint32, Count *uint32) HRESULT
	GetQuitLockString(Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	SetQuitLockString(String PSTR) HRESULT
	GetQuitLockStringWide(Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	SetQuitLockStringWide(String PWSTR) HRESULT
}

type IDebugClient5Vtbl struct {
	IUnknownVtbl
	AttachKernel                                  uintptr
	GetKernelConnectionOptions                    uintptr
	SetKernelConnectionOptions                    uintptr
	StartProcessServer                            uintptr
	ConnectProcessServer                          uintptr
	DisconnectProcessServer                       uintptr
	GetRunningProcessSystemIds                    uintptr
	GetRunningProcessSystemIdByExecutableName     uintptr
	GetRunningProcessDescription                  uintptr
	AttachProcess                                 uintptr
	CreateProcessA                                uintptr
	CreateProcessAndAttach                        uintptr
	GetProcessOptions                             uintptr
	AddProcessOptions                             uintptr
	RemoveProcessOptions                          uintptr
	SetProcessOptions                             uintptr
	OpenDumpFile                                  uintptr
	WriteDumpFile                                 uintptr
	ConnectSession                                uintptr
	StartServer                                   uintptr
	OutputServers                                 uintptr
	TerminateProcesses                            uintptr
	DetachProcesses                               uintptr
	EndSession                                    uintptr
	GetExitCode                                   uintptr
	DispatchCallbacks                             uintptr
	ExitDispatch                                  uintptr
	CreateClient                                  uintptr
	GetInputCallbacks                             uintptr
	SetInputCallbacks                             uintptr
	GetOutputCallbacks                            uintptr
	SetOutputCallbacks                            uintptr
	GetOutputMask                                 uintptr
	SetOutputMask                                 uintptr
	GetOtherOutputMask                            uintptr
	SetOtherOutputMask                            uintptr
	GetOutputWidth                                uintptr
	SetOutputWidth                                uintptr
	GetOutputLinePrefix                           uintptr
	SetOutputLinePrefix                           uintptr
	GetIdentity                                   uintptr
	OutputIdentity                                uintptr
	GetEventCallbacks                             uintptr
	SetEventCallbacks                             uintptr
	FlushCallbacks                                uintptr
	WriteDumpFile2                                uintptr
	AddDumpInformationFile                        uintptr
	EndProcessServer                              uintptr
	WaitForProcessServerEnd                       uintptr
	IsKernelDebuggerEnabled                       uintptr
	TerminateCurrentProcess                       uintptr
	DetachCurrentProcess                          uintptr
	AbandonCurrentProcess                         uintptr
	GetRunningProcessSystemIdByExecutableNameWide uintptr
	GetRunningProcessDescriptionWide              uintptr
	CreateProcessWide                             uintptr
	CreateProcessAndAttachWide                    uintptr
	OpenDumpFileWide                              uintptr
	WriteDumpFileWide                             uintptr
	AddDumpInformationFileWide                    uintptr
	GetNumberDumpFiles                            uintptr
	GetDumpFile                                   uintptr
	GetDumpFileWide                               uintptr
	AttachKernelWide                              uintptr
	GetKernelConnectionOptionsWide                uintptr
	SetKernelConnectionOptionsWide                uintptr
	StartProcessServerWide                        uintptr
	ConnectProcessServerWide                      uintptr
	StartServerWide                               uintptr
	OutputServersWide                             uintptr
	GetOutputCallbacksWide                        uintptr
	SetOutputCallbacksWide                        uintptr
	GetOutputLinePrefixWide                       uintptr
	SetOutputLinePrefixWide                       uintptr
	GetIdentityWide                               uintptr
	OutputIdentityWide                            uintptr
	GetEventCallbacksWide                         uintptr
	SetEventCallbacksWide                         uintptr
	CreateProcess2                                uintptr
	CreateProcess2Wide                            uintptr
	CreateProcessAndAttach2                       uintptr
	CreateProcessAndAttach2Wide                   uintptr
	PushOutputLinePrefix                          uintptr
	PushOutputLinePrefixWide                      uintptr
	PopOutputLinePrefix                           uintptr
	GetNumberInputCallbacks                       uintptr
	GetNumberOutputCallbacks                      uintptr
	GetNumberEventCallbacks                       uintptr
	GetQuitLockString                             uintptr
	SetQuitLockString                             uintptr
	GetQuitLockStringWide                         uintptr
	SetQuitLockStringWide                         uintptr
}

type IDebugClient5 struct {
	IUnknown
}

func (this *IDebugClient5) Vtbl() *IDebugClient5Vtbl {
	return (*IDebugClient5Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugClient5) AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernel, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetKernelConnectionOptions(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient5) StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient5) ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient5) DisconnectProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisconnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIds, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Ids)), uintptr(Count), uintptr(unsafe.Pointer(ActualCount)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableName, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescription, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachProcess, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient5) CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient5) CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetProcessOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient5) AddProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient5) RemoveProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient5) OpenDumpFile(DumpFile PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)))
	return HRESULT(ret)
}

func (this *IDebugClient5) WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier))
	return HRESULT(ret)
}

func (this *IDebugClient5) ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectSession, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(HistoryLimit))
	return HRESULT(ret)
}

func (this *IDebugClient5) StartServer(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient5) OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServers, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient5) TerminateProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient5) DetachProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient5) EndSession(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSession, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetExitCode(Code *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExitCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)))
	return HRESULT(ret)
}

func (this *IDebugClient5) DispatchCallbacks(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DispatchCallbacks, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient5) ExitDispatch(Client *IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitDispatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient5) CreateClient(Client **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateClient, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetOutputMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetOutputMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetOutputWidth(Columns *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Columns)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetOutputWidth(Columns uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(Columns))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetOutputLinePrefix(Prefix PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentity, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentity, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) FlushCallbacks() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FlushCallbacks, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient5) WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient5) AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InfoFile)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient5) EndProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient5) WaitForProcessServerEnd(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForProcessServerEnd, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient5) IsKernelDebuggerEnabled() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsKernelDebuggerEnabled, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient5) TerminateCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient5) DetachCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient5) AbandonCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AbandonCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableNameWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient5) CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttachWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient5) OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle))
	return HRESULT(ret)
}

func (this *IDebugClient5) WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient5) AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetNumberDumpFiles(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberDumpFiles, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFile, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugClient5) AttachKernelWide(Flags uint32, ConnectOptions PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernelWide, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetKernelConnectionOptionsWide(Buffer PWSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptionsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetKernelConnectionOptionsWide(Options PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptionsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient5) StartProcessServerWide(Flags uint32, Options PWSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServerWide, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient5) ConnectProcessServerWide(RemoteOptions PWSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServerWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient5) StartServerWide(Options PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServerWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient5) OutputServersWide(OutputControl uint32, Machine PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServersWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetOutputCallbacksWide(Callbacks **IDebugOutputCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetOutputCallbacksWide(Callbacks *IDebugOutputCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetOutputLinePrefixWide(Buffer PWSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetOutputLinePrefixWide(Prefix PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetIdentityWide(Buffer PWSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentityWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) OutputIdentityWide(OutputControl uint32, Flags uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentityWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetEventCallbacksWide(Callbacks **IDebugEventCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetEventCallbacksWide(Callbacks *IDebugEventCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient5) CreateProcess2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcess2, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)))
	return HRESULT(ret)
}

func (this *IDebugClient5) CreateProcess2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcess2Wide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)))
	return HRESULT(ret)
}

func (this *IDebugClient5) CreateProcessAndAttach2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach2, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient5) CreateProcessAndAttach2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach2Wide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient5) PushOutputLinePrefix(NewPrefix PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PushOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NewPrefix)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugClient5) PushOutputLinePrefixWide(NewPrefix PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PushOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NewPrefix)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugClient5) PopOutputLinePrefix(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PopOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetNumberInputCallbacks(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetNumberOutputCallbacks(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetNumberEventCallbacks(EventFlags uint32, Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(EventFlags), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetQuitLockString(Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetQuitLockString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetQuitLockString(String PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetQuitLockString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(String)))
	return HRESULT(ret)
}

func (this *IDebugClient5) GetQuitLockStringWide(Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetQuitLockStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugClient5) SetQuitLockStringWide(String PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetQuitLockStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(String)))
	return HRESULT(ret)
}

// FD28B4C5-C498-4686-A28E-62CAD2154EB3
var IID_IDebugClient6 = syscall.GUID{0xFD28B4C5, 0xC498, 0x4686,
	[8]byte{0xA2, 0x8E, 0x62, 0xCA, 0xD2, 0x15, 0x4E, 0xB3}}

type IDebugClient6Interface interface {
	IUnknownInterface
	AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT
	GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptions(Options PSTR) HRESULT
	StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT
	DisconnectProcessServer(Server uint64) HRESULT
	GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT
	GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	GetProcessOptions(Options *uint32) HRESULT
	AddProcessOptions(Options uint32) HRESULT
	RemoveProcessOptions(Options uint32) HRESULT
	SetProcessOptions(Options uint32) HRESULT
	OpenDumpFile(DumpFile PSTR) HRESULT
	WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT
	ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT
	StartServer(Options PSTR) HRESULT
	OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT
	TerminateProcesses() HRESULT
	DetachProcesses() HRESULT
	EndSession(Flags uint32) HRESULT
	GetExitCode(Code *uint32) HRESULT
	DispatchCallbacks(Timeout uint32) HRESULT
	ExitDispatch(Client *IDebugClient) HRESULT
	CreateClient(Client **IDebugClient) HRESULT
	GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT
	SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT
	GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT
	SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT
	GetOutputMask(Mask *uint32) HRESULT
	SetOutputMask(Mask uint32) HRESULT
	GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT
	SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT
	GetOutputWidth(Columns *uint32) HRESULT
	SetOutputWidth(Columns uint32) HRESULT
	GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefix(Prefix PSTR) HRESULT
	GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT
	GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT
	SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT
	FlushCallbacks() HRESULT
	WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT
	AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT
	EndProcessServer(Server uint64) HRESULT
	WaitForProcessServerEnd(Timeout uint32) HRESULT
	IsKernelDebuggerEnabled() HRESULT
	TerminateCurrentProcess() HRESULT
	DetachCurrentProcess() HRESULT
	AbandonCurrentProcess() HRESULT
	GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT
	WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT
	AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT
	GetNumberDumpFiles(Number *uint32) HRESULT
	GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
	GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
	AttachKernelWide(Flags uint32, ConnectOptions PWSTR) HRESULT
	GetKernelConnectionOptionsWide(Buffer PWSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptionsWide(Options PWSTR) HRESULT
	StartProcessServerWide(Flags uint32, Options PWSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServerWide(RemoteOptions PWSTR, Server *uint64) HRESULT
	StartServerWide(Options PWSTR) HRESULT
	OutputServersWide(OutputControl uint32, Machine PWSTR, Flags uint32) HRESULT
	GetOutputCallbacksWide(Callbacks **IDebugOutputCallbacksWide) HRESULT
	SetOutputCallbacksWide(Callbacks *IDebugOutputCallbacksWide) HRESULT
	GetOutputLinePrefixWide(Buffer PWSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefixWide(Prefix PWSTR) HRESULT
	GetIdentityWide(Buffer PWSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentityWide(OutputControl uint32, Flags uint32, Format PWSTR) HRESULT
	GetEventCallbacksWide(Callbacks **IDebugEventCallbacksWide) HRESULT
	SetEventCallbacksWide(Callbacks *IDebugEventCallbacksWide) HRESULT
	CreateProcess2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR) HRESULT
	CreateProcess2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR) HRESULT
	CreateProcessAndAttach2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessAndAttach2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR, ProcessId uint32, AttachFlags uint32) HRESULT
	PushOutputLinePrefix(NewPrefix PSTR, Handle *uint64) HRESULT
	PushOutputLinePrefixWide(NewPrefix PWSTR, Handle *uint64) HRESULT
	PopOutputLinePrefix(Handle uint64) HRESULT
	GetNumberInputCallbacks(Count *uint32) HRESULT
	GetNumberOutputCallbacks(Count *uint32) HRESULT
	GetNumberEventCallbacks(EventFlags uint32, Count *uint32) HRESULT
	GetQuitLockString(Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	SetQuitLockString(String PSTR) HRESULT
	GetQuitLockStringWide(Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	SetQuitLockStringWide(String PWSTR) HRESULT
	SetEventContextCallbacks(Callbacks *IDebugEventContextCallbacks) HRESULT
}

type IDebugClient6Vtbl struct {
	IUnknownVtbl
	AttachKernel                                  uintptr
	GetKernelConnectionOptions                    uintptr
	SetKernelConnectionOptions                    uintptr
	StartProcessServer                            uintptr
	ConnectProcessServer                          uintptr
	DisconnectProcessServer                       uintptr
	GetRunningProcessSystemIds                    uintptr
	GetRunningProcessSystemIdByExecutableName     uintptr
	GetRunningProcessDescription                  uintptr
	AttachProcess                                 uintptr
	CreateProcessA                                uintptr
	CreateProcessAndAttach                        uintptr
	GetProcessOptions                             uintptr
	AddProcessOptions                             uintptr
	RemoveProcessOptions                          uintptr
	SetProcessOptions                             uintptr
	OpenDumpFile                                  uintptr
	WriteDumpFile                                 uintptr
	ConnectSession                                uintptr
	StartServer                                   uintptr
	OutputServers                                 uintptr
	TerminateProcesses                            uintptr
	DetachProcesses                               uintptr
	EndSession                                    uintptr
	GetExitCode                                   uintptr
	DispatchCallbacks                             uintptr
	ExitDispatch                                  uintptr
	CreateClient                                  uintptr
	GetInputCallbacks                             uintptr
	SetInputCallbacks                             uintptr
	GetOutputCallbacks                            uintptr
	SetOutputCallbacks                            uintptr
	GetOutputMask                                 uintptr
	SetOutputMask                                 uintptr
	GetOtherOutputMask                            uintptr
	SetOtherOutputMask                            uintptr
	GetOutputWidth                                uintptr
	SetOutputWidth                                uintptr
	GetOutputLinePrefix                           uintptr
	SetOutputLinePrefix                           uintptr
	GetIdentity                                   uintptr
	OutputIdentity                                uintptr
	GetEventCallbacks                             uintptr
	SetEventCallbacks                             uintptr
	FlushCallbacks                                uintptr
	WriteDumpFile2                                uintptr
	AddDumpInformationFile                        uintptr
	EndProcessServer                              uintptr
	WaitForProcessServerEnd                       uintptr
	IsKernelDebuggerEnabled                       uintptr
	TerminateCurrentProcess                       uintptr
	DetachCurrentProcess                          uintptr
	AbandonCurrentProcess                         uintptr
	GetRunningProcessSystemIdByExecutableNameWide uintptr
	GetRunningProcessDescriptionWide              uintptr
	CreateProcessWide                             uintptr
	CreateProcessAndAttachWide                    uintptr
	OpenDumpFileWide                              uintptr
	WriteDumpFileWide                             uintptr
	AddDumpInformationFileWide                    uintptr
	GetNumberDumpFiles                            uintptr
	GetDumpFile                                   uintptr
	GetDumpFileWide                               uintptr
	AttachKernelWide                              uintptr
	GetKernelConnectionOptionsWide                uintptr
	SetKernelConnectionOptionsWide                uintptr
	StartProcessServerWide                        uintptr
	ConnectProcessServerWide                      uintptr
	StartServerWide                               uintptr
	OutputServersWide                             uintptr
	GetOutputCallbacksWide                        uintptr
	SetOutputCallbacksWide                        uintptr
	GetOutputLinePrefixWide                       uintptr
	SetOutputLinePrefixWide                       uintptr
	GetIdentityWide                               uintptr
	OutputIdentityWide                            uintptr
	GetEventCallbacksWide                         uintptr
	SetEventCallbacksWide                         uintptr
	CreateProcess2                                uintptr
	CreateProcess2Wide                            uintptr
	CreateProcessAndAttach2                       uintptr
	CreateProcessAndAttach2Wide                   uintptr
	PushOutputLinePrefix                          uintptr
	PushOutputLinePrefixWide                      uintptr
	PopOutputLinePrefix                           uintptr
	GetNumberInputCallbacks                       uintptr
	GetNumberOutputCallbacks                      uintptr
	GetNumberEventCallbacks                       uintptr
	GetQuitLockString                             uintptr
	SetQuitLockString                             uintptr
	GetQuitLockStringWide                         uintptr
	SetQuitLockStringWide                         uintptr
	SetEventContextCallbacks                      uintptr
}

type IDebugClient6 struct {
	IUnknown
}

func (this *IDebugClient6) Vtbl() *IDebugClient6Vtbl {
	return (*IDebugClient6Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugClient6) AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernel, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetKernelConnectionOptions(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient6) StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient6) ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient6) DisconnectProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisconnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIds, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Ids)), uintptr(Count), uintptr(unsafe.Pointer(ActualCount)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableName, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescription, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachProcess, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient6) CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient6) CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetProcessOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient6) AddProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient6) RemoveProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient6) OpenDumpFile(DumpFile PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)))
	return HRESULT(ret)
}

func (this *IDebugClient6) WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier))
	return HRESULT(ret)
}

func (this *IDebugClient6) ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectSession, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(HistoryLimit))
	return HRESULT(ret)
}

func (this *IDebugClient6) StartServer(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient6) OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServers, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient6) TerminateProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient6) DetachProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient6) EndSession(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSession, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetExitCode(Code *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExitCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)))
	return HRESULT(ret)
}

func (this *IDebugClient6) DispatchCallbacks(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DispatchCallbacks, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient6) ExitDispatch(Client *IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitDispatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient6) CreateClient(Client **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateClient, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetOutputMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetOutputMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetOutputWidth(Columns *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Columns)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetOutputWidth(Columns uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(Columns))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetOutputLinePrefix(Prefix PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentity, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentity, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) FlushCallbacks() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FlushCallbacks, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient6) WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient6) AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InfoFile)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient6) EndProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient6) WaitForProcessServerEnd(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForProcessServerEnd, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient6) IsKernelDebuggerEnabled() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsKernelDebuggerEnabled, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient6) TerminateCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient6) DetachCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient6) AbandonCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AbandonCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableNameWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient6) CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttachWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient6) OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle))
	return HRESULT(ret)
}

func (this *IDebugClient6) WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient6) AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetNumberDumpFiles(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberDumpFiles, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFile, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugClient6) AttachKernelWide(Flags uint32, ConnectOptions PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernelWide, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetKernelConnectionOptionsWide(Buffer PWSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptionsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetKernelConnectionOptionsWide(Options PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptionsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient6) StartProcessServerWide(Flags uint32, Options PWSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServerWide, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient6) ConnectProcessServerWide(RemoteOptions PWSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServerWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient6) StartServerWide(Options PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServerWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient6) OutputServersWide(OutputControl uint32, Machine PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServersWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetOutputCallbacksWide(Callbacks **IDebugOutputCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetOutputCallbacksWide(Callbacks *IDebugOutputCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetOutputLinePrefixWide(Buffer PWSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetOutputLinePrefixWide(Prefix PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetIdentityWide(Buffer PWSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentityWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) OutputIdentityWide(OutputControl uint32, Flags uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentityWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetEventCallbacksWide(Callbacks **IDebugEventCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetEventCallbacksWide(Callbacks *IDebugEventCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient6) CreateProcess2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcess2, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)))
	return HRESULT(ret)
}

func (this *IDebugClient6) CreateProcess2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcess2Wide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)))
	return HRESULT(ret)
}

func (this *IDebugClient6) CreateProcessAndAttach2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach2, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient6) CreateProcessAndAttach2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach2Wide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient6) PushOutputLinePrefix(NewPrefix PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PushOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NewPrefix)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugClient6) PushOutputLinePrefixWide(NewPrefix PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PushOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NewPrefix)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugClient6) PopOutputLinePrefix(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PopOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetNumberInputCallbacks(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetNumberOutputCallbacks(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetNumberEventCallbacks(EventFlags uint32, Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(EventFlags), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetQuitLockString(Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetQuitLockString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetQuitLockString(String PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetQuitLockString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(String)))
	return HRESULT(ret)
}

func (this *IDebugClient6) GetQuitLockStringWide(Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetQuitLockStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetQuitLockStringWide(String PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetQuitLockStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(String)))
	return HRESULT(ret)
}

func (this *IDebugClient6) SetEventContextCallbacks(Callbacks *IDebugEventContextCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventContextCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

// 13586BE3-542E-481E-B1F2-8497BA74F9A9
var IID_IDebugClient7 = syscall.GUID{0x13586BE3, 0x542E, 0x481E,
	[8]byte{0xB1, 0xF2, 0x84, 0x97, 0xBA, 0x74, 0xF9, 0xA9}}

type IDebugClient7Interface interface {
	IUnknownInterface
	AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT
	GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptions(Options PSTR) HRESULT
	StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT
	DisconnectProcessServer(Server uint64) HRESULT
	GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT
	GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	GetProcessOptions(Options *uint32) HRESULT
	AddProcessOptions(Options uint32) HRESULT
	RemoveProcessOptions(Options uint32) HRESULT
	SetProcessOptions(Options uint32) HRESULT
	OpenDumpFile(DumpFile PSTR) HRESULT
	WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT
	ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT
	StartServer(Options PSTR) HRESULT
	OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT
	TerminateProcesses() HRESULT
	DetachProcesses() HRESULT
	EndSession(Flags uint32) HRESULT
	GetExitCode(Code *uint32) HRESULT
	DispatchCallbacks(Timeout uint32) HRESULT
	ExitDispatch(Client *IDebugClient) HRESULT
	CreateClient(Client **IDebugClient) HRESULT
	GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT
	SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT
	GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT
	SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT
	GetOutputMask(Mask *uint32) HRESULT
	SetOutputMask(Mask uint32) HRESULT
	GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT
	SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT
	GetOutputWidth(Columns *uint32) HRESULT
	SetOutputWidth(Columns uint32) HRESULT
	GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefix(Prefix PSTR) HRESULT
	GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT
	GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT
	SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT
	FlushCallbacks() HRESULT
	WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT
	AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT
	EndProcessServer(Server uint64) HRESULT
	WaitForProcessServerEnd(Timeout uint32) HRESULT
	IsKernelDebuggerEnabled() HRESULT
	TerminateCurrentProcess() HRESULT
	DetachCurrentProcess() HRESULT
	AbandonCurrentProcess() HRESULT
	GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT
	WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT
	AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT
	GetNumberDumpFiles(Number *uint32) HRESULT
	GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
	GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
	AttachKernelWide(Flags uint32, ConnectOptions PWSTR) HRESULT
	GetKernelConnectionOptionsWide(Buffer PWSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptionsWide(Options PWSTR) HRESULT
	StartProcessServerWide(Flags uint32, Options PWSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServerWide(RemoteOptions PWSTR, Server *uint64) HRESULT
	StartServerWide(Options PWSTR) HRESULT
	OutputServersWide(OutputControl uint32, Machine PWSTR, Flags uint32) HRESULT
	GetOutputCallbacksWide(Callbacks **IDebugOutputCallbacksWide) HRESULT
	SetOutputCallbacksWide(Callbacks *IDebugOutputCallbacksWide) HRESULT
	GetOutputLinePrefixWide(Buffer PWSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefixWide(Prefix PWSTR) HRESULT
	GetIdentityWide(Buffer PWSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentityWide(OutputControl uint32, Flags uint32, Format PWSTR) HRESULT
	GetEventCallbacksWide(Callbacks **IDebugEventCallbacksWide) HRESULT
	SetEventCallbacksWide(Callbacks *IDebugEventCallbacksWide) HRESULT
	CreateProcess2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR) HRESULT
	CreateProcess2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR) HRESULT
	CreateProcessAndAttach2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessAndAttach2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR, ProcessId uint32, AttachFlags uint32) HRESULT
	PushOutputLinePrefix(NewPrefix PSTR, Handle *uint64) HRESULT
	PushOutputLinePrefixWide(NewPrefix PWSTR, Handle *uint64) HRESULT
	PopOutputLinePrefix(Handle uint64) HRESULT
	GetNumberInputCallbacks(Count *uint32) HRESULT
	GetNumberOutputCallbacks(Count *uint32) HRESULT
	GetNumberEventCallbacks(EventFlags uint32, Count *uint32) HRESULT
	GetQuitLockString(Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	SetQuitLockString(String PSTR) HRESULT
	GetQuitLockStringWide(Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	SetQuitLockStringWide(String PWSTR) HRESULT
	SetEventContextCallbacks(Callbacks *IDebugEventContextCallbacks) HRESULT
	SetClientContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
}

type IDebugClient7Vtbl struct {
	IUnknownVtbl
	AttachKernel                                  uintptr
	GetKernelConnectionOptions                    uintptr
	SetKernelConnectionOptions                    uintptr
	StartProcessServer                            uintptr
	ConnectProcessServer                          uintptr
	DisconnectProcessServer                       uintptr
	GetRunningProcessSystemIds                    uintptr
	GetRunningProcessSystemIdByExecutableName     uintptr
	GetRunningProcessDescription                  uintptr
	AttachProcess                                 uintptr
	CreateProcessA                                uintptr
	CreateProcessAndAttach                        uintptr
	GetProcessOptions                             uintptr
	AddProcessOptions                             uintptr
	RemoveProcessOptions                          uintptr
	SetProcessOptions                             uintptr
	OpenDumpFile                                  uintptr
	WriteDumpFile                                 uintptr
	ConnectSession                                uintptr
	StartServer                                   uintptr
	OutputServers                                 uintptr
	TerminateProcesses                            uintptr
	DetachProcesses                               uintptr
	EndSession                                    uintptr
	GetExitCode                                   uintptr
	DispatchCallbacks                             uintptr
	ExitDispatch                                  uintptr
	CreateClient                                  uintptr
	GetInputCallbacks                             uintptr
	SetInputCallbacks                             uintptr
	GetOutputCallbacks                            uintptr
	SetOutputCallbacks                            uintptr
	GetOutputMask                                 uintptr
	SetOutputMask                                 uintptr
	GetOtherOutputMask                            uintptr
	SetOtherOutputMask                            uintptr
	GetOutputWidth                                uintptr
	SetOutputWidth                                uintptr
	GetOutputLinePrefix                           uintptr
	SetOutputLinePrefix                           uintptr
	GetIdentity                                   uintptr
	OutputIdentity                                uintptr
	GetEventCallbacks                             uintptr
	SetEventCallbacks                             uintptr
	FlushCallbacks                                uintptr
	WriteDumpFile2                                uintptr
	AddDumpInformationFile                        uintptr
	EndProcessServer                              uintptr
	WaitForProcessServerEnd                       uintptr
	IsKernelDebuggerEnabled                       uintptr
	TerminateCurrentProcess                       uintptr
	DetachCurrentProcess                          uintptr
	AbandonCurrentProcess                         uintptr
	GetRunningProcessSystemIdByExecutableNameWide uintptr
	GetRunningProcessDescriptionWide              uintptr
	CreateProcessWide                             uintptr
	CreateProcessAndAttachWide                    uintptr
	OpenDumpFileWide                              uintptr
	WriteDumpFileWide                             uintptr
	AddDumpInformationFileWide                    uintptr
	GetNumberDumpFiles                            uintptr
	GetDumpFile                                   uintptr
	GetDumpFileWide                               uintptr
	AttachKernelWide                              uintptr
	GetKernelConnectionOptionsWide                uintptr
	SetKernelConnectionOptionsWide                uintptr
	StartProcessServerWide                        uintptr
	ConnectProcessServerWide                      uintptr
	StartServerWide                               uintptr
	OutputServersWide                             uintptr
	GetOutputCallbacksWide                        uintptr
	SetOutputCallbacksWide                        uintptr
	GetOutputLinePrefixWide                       uintptr
	SetOutputLinePrefixWide                       uintptr
	GetIdentityWide                               uintptr
	OutputIdentityWide                            uintptr
	GetEventCallbacksWide                         uintptr
	SetEventCallbacksWide                         uintptr
	CreateProcess2                                uintptr
	CreateProcess2Wide                            uintptr
	CreateProcessAndAttach2                       uintptr
	CreateProcessAndAttach2Wide                   uintptr
	PushOutputLinePrefix                          uintptr
	PushOutputLinePrefixWide                      uintptr
	PopOutputLinePrefix                           uintptr
	GetNumberInputCallbacks                       uintptr
	GetNumberOutputCallbacks                      uintptr
	GetNumberEventCallbacks                       uintptr
	GetQuitLockString                             uintptr
	SetQuitLockString                             uintptr
	GetQuitLockStringWide                         uintptr
	SetQuitLockStringWide                         uintptr
	SetEventContextCallbacks                      uintptr
	SetClientContext                              uintptr
}

type IDebugClient7 struct {
	IUnknown
}

func (this *IDebugClient7) Vtbl() *IDebugClient7Vtbl {
	return (*IDebugClient7Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugClient7) AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernel, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetKernelConnectionOptions(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient7) StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient7) ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient7) DisconnectProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisconnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIds, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Ids)), uintptr(Count), uintptr(unsafe.Pointer(ActualCount)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableName, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescription, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachProcess, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient7) CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient7) CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetProcessOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient7) AddProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient7) RemoveProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient7) OpenDumpFile(DumpFile PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)))
	return HRESULT(ret)
}

func (this *IDebugClient7) WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier))
	return HRESULT(ret)
}

func (this *IDebugClient7) ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectSession, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(HistoryLimit))
	return HRESULT(ret)
}

func (this *IDebugClient7) StartServer(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient7) OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServers, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient7) TerminateProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient7) DetachProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient7) EndSession(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSession, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetExitCode(Code *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExitCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)))
	return HRESULT(ret)
}

func (this *IDebugClient7) DispatchCallbacks(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DispatchCallbacks, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient7) ExitDispatch(Client *IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitDispatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient7) CreateClient(Client **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateClient, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetOutputMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetOutputMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetOutputWidth(Columns *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Columns)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetOutputWidth(Columns uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(Columns))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetOutputLinePrefix(Prefix PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentity, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentity, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) FlushCallbacks() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FlushCallbacks, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient7) WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient7) AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InfoFile)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient7) EndProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient7) WaitForProcessServerEnd(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForProcessServerEnd, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient7) IsKernelDebuggerEnabled() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsKernelDebuggerEnabled, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient7) TerminateCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient7) DetachCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient7) AbandonCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AbandonCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableNameWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient7) CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttachWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient7) OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle))
	return HRESULT(ret)
}

func (this *IDebugClient7) WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient7) AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetNumberDumpFiles(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberDumpFiles, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFile, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugClient7) AttachKernelWide(Flags uint32, ConnectOptions PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernelWide, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetKernelConnectionOptionsWide(Buffer PWSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptionsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetKernelConnectionOptionsWide(Options PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptionsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient7) StartProcessServerWide(Flags uint32, Options PWSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServerWide, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient7) ConnectProcessServerWide(RemoteOptions PWSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServerWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient7) StartServerWide(Options PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServerWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient7) OutputServersWide(OutputControl uint32, Machine PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServersWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetOutputCallbacksWide(Callbacks **IDebugOutputCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetOutputCallbacksWide(Callbacks *IDebugOutputCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetOutputLinePrefixWide(Buffer PWSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetOutputLinePrefixWide(Prefix PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetIdentityWide(Buffer PWSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentityWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) OutputIdentityWide(OutputControl uint32, Flags uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentityWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetEventCallbacksWide(Callbacks **IDebugEventCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetEventCallbacksWide(Callbacks *IDebugEventCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) CreateProcess2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcess2, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)))
	return HRESULT(ret)
}

func (this *IDebugClient7) CreateProcess2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcess2Wide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)))
	return HRESULT(ret)
}

func (this *IDebugClient7) CreateProcessAndAttach2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach2, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient7) CreateProcessAndAttach2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach2Wide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient7) PushOutputLinePrefix(NewPrefix PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PushOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NewPrefix)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugClient7) PushOutputLinePrefixWide(NewPrefix PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PushOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NewPrefix)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugClient7) PopOutputLinePrefix(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PopOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetNumberInputCallbacks(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetNumberOutputCallbacks(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetNumberEventCallbacks(EventFlags uint32, Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(EventFlags), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetQuitLockString(Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetQuitLockString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetQuitLockString(String PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetQuitLockString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(String)))
	return HRESULT(ret)
}

func (this *IDebugClient7) GetQuitLockStringWide(Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetQuitLockStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetQuitLockStringWide(String PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetQuitLockStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(String)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetEventContextCallbacks(Callbacks *IDebugEventContextCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventContextCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient7) SetClientContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetClientContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

// CEC43ADD-6375-469E-83D5-414E4033C19A
var IID_IDebugClient8 = syscall.GUID{0xCEC43ADD, 0x6375, 0x469E,
	[8]byte{0x83, 0xD5, 0x41, 0x4E, 0x40, 0x33, 0xC1, 0x9A}}

type IDebugClient8Interface interface {
	IUnknownInterface
	AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT
	GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptions(Options PSTR) HRESULT
	StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT
	DisconnectProcessServer(Server uint64) HRESULT
	GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT
	GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	GetProcessOptions(Options *uint32) HRESULT
	AddProcessOptions(Options uint32) HRESULT
	RemoveProcessOptions(Options uint32) HRESULT
	SetProcessOptions(Options uint32) HRESULT
	OpenDumpFile(DumpFile PSTR) HRESULT
	WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT
	ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT
	StartServer(Options PSTR) HRESULT
	OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT
	TerminateProcesses() HRESULT
	DetachProcesses() HRESULT
	EndSession(Flags uint32) HRESULT
	GetExitCode(Code *uint32) HRESULT
	DispatchCallbacks(Timeout uint32) HRESULT
	ExitDispatch(Client *IDebugClient) HRESULT
	CreateClient(Client **IDebugClient) HRESULT
	GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT
	SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT
	GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT
	SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT
	GetOutputMask(Mask *uint32) HRESULT
	SetOutputMask(Mask uint32) HRESULT
	GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT
	SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT
	GetOutputWidth(Columns *uint32) HRESULT
	SetOutputWidth(Columns uint32) HRESULT
	GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefix(Prefix PSTR) HRESULT
	GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT
	GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT
	SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT
	FlushCallbacks() HRESULT
	WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT
	AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT
	EndProcessServer(Server uint64) HRESULT
	WaitForProcessServerEnd(Timeout uint32) HRESULT
	IsKernelDebuggerEnabled() HRESULT
	TerminateCurrentProcess() HRESULT
	DetachCurrentProcess() HRESULT
	AbandonCurrentProcess() HRESULT
	GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT
	GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT
	CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT
	CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT
	OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT
	WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT
	AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT
	GetNumberDumpFiles(Number *uint32) HRESULT
	GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
	GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT
	AttachKernelWide(Flags uint32, ConnectOptions PWSTR) HRESULT
	GetKernelConnectionOptionsWide(Buffer PWSTR, BufferSize uint32, OptionsSize *uint32) HRESULT
	SetKernelConnectionOptionsWide(Options PWSTR) HRESULT
	StartProcessServerWide(Flags uint32, Options PWSTR, Reserved unsafe.Pointer) HRESULT
	ConnectProcessServerWide(RemoteOptions PWSTR, Server *uint64) HRESULT
	StartServerWide(Options PWSTR) HRESULT
	OutputServersWide(OutputControl uint32, Machine PWSTR, Flags uint32) HRESULT
	GetOutputCallbacksWide(Callbacks **IDebugOutputCallbacksWide) HRESULT
	SetOutputCallbacksWide(Callbacks *IDebugOutputCallbacksWide) HRESULT
	GetOutputLinePrefixWide(Buffer PWSTR, BufferSize uint32, PrefixSize *uint32) HRESULT
	SetOutputLinePrefixWide(Prefix PWSTR) HRESULT
	GetIdentityWide(Buffer PWSTR, BufferSize uint32, IdentitySize *uint32) HRESULT
	OutputIdentityWide(OutputControl uint32, Flags uint32, Format PWSTR) HRESULT
	GetEventCallbacksWide(Callbacks **IDebugEventCallbacksWide) HRESULT
	SetEventCallbacksWide(Callbacks *IDebugEventCallbacksWide) HRESULT
	CreateProcess2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR) HRESULT
	CreateProcess2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR) HRESULT
	CreateProcessAndAttach2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR, ProcessId uint32, AttachFlags uint32) HRESULT
	CreateProcessAndAttach2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR, ProcessId uint32, AttachFlags uint32) HRESULT
	PushOutputLinePrefix(NewPrefix PSTR, Handle *uint64) HRESULT
	PushOutputLinePrefixWide(NewPrefix PWSTR, Handle *uint64) HRESULT
	PopOutputLinePrefix(Handle uint64) HRESULT
	GetNumberInputCallbacks(Count *uint32) HRESULT
	GetNumberOutputCallbacks(Count *uint32) HRESULT
	GetNumberEventCallbacks(EventFlags uint32, Count *uint32) HRESULT
	GetQuitLockString(Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	SetQuitLockString(String PSTR) HRESULT
	GetQuitLockStringWide(Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	SetQuitLockStringWide(String PWSTR) HRESULT
	SetEventContextCallbacks(Callbacks *IDebugEventContextCallbacks) HRESULT
	SetClientContext(Context unsafe.Pointer, ContextSize uint32) HRESULT
	OpenDumpFileWide2(FileName PWSTR, FileHandle uint64, AlternateArch uint32) HRESULT
}

type IDebugClient8Vtbl struct {
	IUnknownVtbl
	AttachKernel                                  uintptr
	GetKernelConnectionOptions                    uintptr
	SetKernelConnectionOptions                    uintptr
	StartProcessServer                            uintptr
	ConnectProcessServer                          uintptr
	DisconnectProcessServer                       uintptr
	GetRunningProcessSystemIds                    uintptr
	GetRunningProcessSystemIdByExecutableName     uintptr
	GetRunningProcessDescription                  uintptr
	AttachProcess                                 uintptr
	CreateProcessA                                uintptr
	CreateProcessAndAttach                        uintptr
	GetProcessOptions                             uintptr
	AddProcessOptions                             uintptr
	RemoveProcessOptions                          uintptr
	SetProcessOptions                             uintptr
	OpenDumpFile                                  uintptr
	WriteDumpFile                                 uintptr
	ConnectSession                                uintptr
	StartServer                                   uintptr
	OutputServers                                 uintptr
	TerminateProcesses                            uintptr
	DetachProcesses                               uintptr
	EndSession                                    uintptr
	GetExitCode                                   uintptr
	DispatchCallbacks                             uintptr
	ExitDispatch                                  uintptr
	CreateClient                                  uintptr
	GetInputCallbacks                             uintptr
	SetInputCallbacks                             uintptr
	GetOutputCallbacks                            uintptr
	SetOutputCallbacks                            uintptr
	GetOutputMask                                 uintptr
	SetOutputMask                                 uintptr
	GetOtherOutputMask                            uintptr
	SetOtherOutputMask                            uintptr
	GetOutputWidth                                uintptr
	SetOutputWidth                                uintptr
	GetOutputLinePrefix                           uintptr
	SetOutputLinePrefix                           uintptr
	GetIdentity                                   uintptr
	OutputIdentity                                uintptr
	GetEventCallbacks                             uintptr
	SetEventCallbacks                             uintptr
	FlushCallbacks                                uintptr
	WriteDumpFile2                                uintptr
	AddDumpInformationFile                        uintptr
	EndProcessServer                              uintptr
	WaitForProcessServerEnd                       uintptr
	IsKernelDebuggerEnabled                       uintptr
	TerminateCurrentProcess                       uintptr
	DetachCurrentProcess                          uintptr
	AbandonCurrentProcess                         uintptr
	GetRunningProcessSystemIdByExecutableNameWide uintptr
	GetRunningProcessDescriptionWide              uintptr
	CreateProcessWide                             uintptr
	CreateProcessAndAttachWide                    uintptr
	OpenDumpFileWide                              uintptr
	WriteDumpFileWide                             uintptr
	AddDumpInformationFileWide                    uintptr
	GetNumberDumpFiles                            uintptr
	GetDumpFile                                   uintptr
	GetDumpFileWide                               uintptr
	AttachKernelWide                              uintptr
	GetKernelConnectionOptionsWide                uintptr
	SetKernelConnectionOptionsWide                uintptr
	StartProcessServerWide                        uintptr
	ConnectProcessServerWide                      uintptr
	StartServerWide                               uintptr
	OutputServersWide                             uintptr
	GetOutputCallbacksWide                        uintptr
	SetOutputCallbacksWide                        uintptr
	GetOutputLinePrefixWide                       uintptr
	SetOutputLinePrefixWide                       uintptr
	GetIdentityWide                               uintptr
	OutputIdentityWide                            uintptr
	GetEventCallbacksWide                         uintptr
	SetEventCallbacksWide                         uintptr
	CreateProcess2                                uintptr
	CreateProcess2Wide                            uintptr
	CreateProcessAndAttach2                       uintptr
	CreateProcessAndAttach2Wide                   uintptr
	PushOutputLinePrefix                          uintptr
	PushOutputLinePrefixWide                      uintptr
	PopOutputLinePrefix                           uintptr
	GetNumberInputCallbacks                       uintptr
	GetNumberOutputCallbacks                      uintptr
	GetNumberEventCallbacks                       uintptr
	GetQuitLockString                             uintptr
	SetQuitLockString                             uintptr
	GetQuitLockStringWide                         uintptr
	SetQuitLockStringWide                         uintptr
	SetEventContextCallbacks                      uintptr
	SetClientContext                              uintptr
	OpenDumpFileWide2                             uintptr
}

type IDebugClient8 struct {
	IUnknown
}

func (this *IDebugClient8) Vtbl() *IDebugClient8Vtbl {
	return (*IDebugClient8Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugClient8) AttachKernel(Flags uint32, ConnectOptions PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernel, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetKernelConnectionOptions(Buffer PSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetKernelConnectionOptions(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient8) StartProcessServer(Flags uint32, Options PSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient8) ConnectProcessServer(RemoteOptions PSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient8) DisconnectProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisconnectProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetRunningProcessSystemIds(Server uint64, Ids *uint32, Count uint32, ActualCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIds, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Ids)), uintptr(Count), uintptr(unsafe.Pointer(ActualCount)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetRunningProcessSystemIdByExecutableName(Server uint64, ExeName PSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableName, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetRunningProcessDescription(Server uint64, SystemId uint32, Flags uint32, ExeName PSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescription, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) AttachProcess(Server uint64, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachProcess, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient8) CreateProcessA(Server uint64, CommandLine PSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient8) CreateProcessAndAttach(Server uint64, CommandLine PSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetProcessOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient8) AddProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient8) RemoveProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetProcessOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProcessOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugClient8) OpenDumpFile(DumpFile PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)))
	return HRESULT(ret)
}

func (this *IDebugClient8) WriteDumpFile(DumpFile PSTR, Qualifier uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier))
	return HRESULT(ret)
}

func (this *IDebugClient8) ConnectSession(Flags uint32, HistoryLimit uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectSession, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(HistoryLimit))
	return HRESULT(ret)
}

func (this *IDebugClient8) StartServer(Options PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient8) OutputServers(OutputControl uint32, Machine PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServers, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient8) TerminateProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient8) DetachProcesses() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachProcesses, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient8) EndSession(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSession, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetExitCode(Code *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExitCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)))
	return HRESULT(ret)
}

func (this *IDebugClient8) DispatchCallbacks(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DispatchCallbacks, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient8) ExitDispatch(Client *IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitDispatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient8) CreateClient(Client **IDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateClient, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetInputCallbacks(Callbacks **IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetInputCallbacks(Callbacks *IDebugInputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetOutputCallbacks(Callbacks **IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetOutputCallbacks(Callbacks *IDebugOutputCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetOutputMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetOutputMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetOtherOutputMask(Client *IDebugClient, Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetOtherOutputMask(Client *IDebugClient, Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOtherOutputMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Client)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetOutputWidth(Columns *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Columns)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetOutputWidth(Columns uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputWidth, uintptr(unsafe.Pointer(this)), uintptr(Columns))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetOutputLinePrefix(Buffer PSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetOutputLinePrefix(Prefix PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetIdentity(Buffer PSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentity, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) OutputIdentity(OutputControl uint32, Flags uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentity, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetEventCallbacks(Callbacks **IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetEventCallbacks(Callbacks *IDebugEventCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) FlushCallbacks() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FlushCallbacks, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient8) WriteDumpFile2(DumpFile PSTR, Qualifier uint32, FormatFlags uint32, Comment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(DumpFile)), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient8) AddDumpInformationFile(InfoFile PSTR, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InfoFile)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient8) EndProcessServer(Server uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndProcessServer, uintptr(unsafe.Pointer(this)), uintptr(Server))
	return HRESULT(ret)
}

func (this *IDebugClient8) WaitForProcessServerEnd(Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForProcessServerEnd, uintptr(unsafe.Pointer(this)), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugClient8) IsKernelDebuggerEnabled() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsKernelDebuggerEnabled, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient8) TerminateCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminateCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient8) DetachCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DetachCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient8) AbandonCurrentProcess() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AbandonCurrentProcess, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetRunningProcessSystemIdByExecutableNameWide(Server uint64, ExeName PWSTR, Flags uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessSystemIdByExecutableNameWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(ExeName)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetRunningProcessDescriptionWide(Server uint64, SystemId uint32, Flags uint32, ExeName PWSTR, ExeNameSize uint32, ActualExeNameSize *uint32, Description PWSTR, DescriptionSize uint32, ActualDescriptionSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRunningProcessDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(SystemId), uintptr(Flags), uintptr(unsafe.Pointer(ExeName)), uintptr(ExeNameSize), uintptr(unsafe.Pointer(ActualExeNameSize)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(ActualDescriptionSize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) CreateProcessWide(Server uint64, CommandLine PWSTR, CreateFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags))
	return HRESULT(ret)
}

func (this *IDebugClient8) CreateProcessAndAttachWide(Server uint64, CommandLine PWSTR, CreateFlags uint32, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttachWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(CreateFlags), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient8) OpenDumpFileWide(FileName PWSTR, FileHandle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle))
	return HRESULT(ret)
}

func (this *IDebugClient8) WriteDumpFileWide(FileName PWSTR, FileHandle uint64, Qualifier uint32, FormatFlags uint32, Comment PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Qualifier), uintptr(FormatFlags), uintptr(unsafe.Pointer(Comment)))
	return HRESULT(ret)
}

func (this *IDebugClient8) AddDumpInformationFileWide(FileName PWSTR, FileHandle uint64, Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDumpInformationFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetNumberDumpFiles(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberDumpFiles, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetDumpFile(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFile, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetDumpFileWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32, Handle *uint64, Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFileWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Handle)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugClient8) AttachKernelWide(Flags uint32, ConnectOptions PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AttachKernelWide, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(ConnectOptions)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetKernelConnectionOptionsWide(Buffer PWSTR, BufferSize uint32, OptionsSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKernelConnectionOptionsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(OptionsSize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetKernelConnectionOptionsWide(Options PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKernelConnectionOptionsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient8) StartProcessServerWide(Flags uint32, Options PWSTR, Reserved unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProcessServerWide, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Options)), uintptr(Reserved))
	return HRESULT(ret)
}

func (this *IDebugClient8) ConnectProcessServerWide(RemoteOptions PWSTR, Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectProcessServerWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(RemoteOptions)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugClient8) StartServerWide(Options PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartServerWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugClient8) OutputServersWide(OutputControl uint32, Machine PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputServersWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Machine)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetOutputCallbacksWide(Callbacks **IDebugOutputCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetOutputCallbacksWide(Callbacks *IDebugOutputCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetOutputLinePrefixWide(Buffer PWSTR, BufferSize uint32, PrefixSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PrefixSize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetOutputLinePrefixWide(Prefix PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Prefix)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetIdentityWide(Buffer PWSTR, BufferSize uint32, IdentitySize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIdentityWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(IdentitySize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) OutputIdentityWide(OutputControl uint32, Flags uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputIdentityWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetEventCallbacksWide(Callbacks **IDebugEventCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetEventCallbacksWide(Callbacks *IDebugEventCallbacksWide) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventCallbacksWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) CreateProcess2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcess2, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)))
	return HRESULT(ret)
}

func (this *IDebugClient8) CreateProcess2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcess2Wide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)))
	return HRESULT(ret)
}

func (this *IDebugClient8) CreateProcessAndAttach2(Server uint64, CommandLine PSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PSTR, Environment PSTR, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach2, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient8) CreateProcessAndAttach2Wide(Server uint64, CommandLine PWSTR, OptionsBuffer unsafe.Pointer, OptionsBufferSize uint32, InitialDirectory PWSTR, Environment PWSTR, ProcessId uint32, AttachFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessAndAttach2Wide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(CommandLine)), uintptr(OptionsBuffer), uintptr(OptionsBufferSize), uintptr(unsafe.Pointer(InitialDirectory)), uintptr(unsafe.Pointer(Environment)), uintptr(ProcessId), uintptr(AttachFlags))
	return HRESULT(ret)
}

func (this *IDebugClient8) PushOutputLinePrefix(NewPrefix PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PushOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NewPrefix)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugClient8) PushOutputLinePrefixWide(NewPrefix PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PushOutputLinePrefixWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NewPrefix)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugClient8) PopOutputLinePrefix(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PopOutputLinePrefix, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetNumberInputCallbacks(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberInputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetNumberOutputCallbacks(Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberOutputCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetNumberEventCallbacks(EventFlags uint32, Count *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventCallbacks, uintptr(unsafe.Pointer(this)), uintptr(EventFlags), uintptr(unsafe.Pointer(Count)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetQuitLockString(Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetQuitLockString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetQuitLockString(String PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetQuitLockString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(String)))
	return HRESULT(ret)
}

func (this *IDebugClient8) GetQuitLockStringWide(Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetQuitLockStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetQuitLockStringWide(String PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetQuitLockStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(String)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetEventContextCallbacks(Callbacks *IDebugEventContextCallbacks) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventContextCallbacks, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Callbacks)))
	return HRESULT(ret)
}

func (this *IDebugClient8) SetClientContext(Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetClientContext, uintptr(unsafe.Pointer(this)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugClient8) OpenDumpFileWide2(FileName PWSTR, FileHandle uint64, AlternateArch uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenDumpFileWide2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FileName)), uintptr(FileHandle), uintptr(AlternateArch))
	return HRESULT(ret)
}

// A02B66C4-AEA3-4234-A9F7-FE4C383D4E29
var IID_IDebugPlmClient = syscall.GUID{0xA02B66C4, 0xAEA3, 0x4234,
	[8]byte{0xA9, 0xF7, 0xFE, 0x4C, 0x38, 0x3D, 0x4E, 0x29}}

type IDebugPlmClientInterface interface {
	IUnknownInterface
	LaunchPlmPackageForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, AppName PWSTR, Arguments PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT
}

type IDebugPlmClientVtbl struct {
	IUnknownVtbl
	LaunchPlmPackageForDebugWide uintptr
}

type IDebugPlmClient struct {
	IUnknown
}

func (this *IDebugPlmClient) Vtbl() *IDebugPlmClientVtbl {
	return (*IDebugPlmClientVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugPlmClient) LaunchPlmPackageForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, AppName PWSTR, Arguments PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LaunchPlmPackageForDebugWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(Timeout), uintptr(unsafe.Pointer(PackageFullName)), uintptr(unsafe.Pointer(AppName)), uintptr(unsafe.Pointer(Arguments)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)))
	return HRESULT(ret)
}

// 597C980D-E7BD-4309-962C-9D9B69A7372C
var IID_IDebugPlmClient2 = syscall.GUID{0x597C980D, 0xE7BD, 0x4309,
	[8]byte{0x96, 0x2C, 0x9D, 0x9B, 0x69, 0xA7, 0x37, 0x2C}}

type IDebugPlmClient2Interface interface {
	IUnknownInterface
	LaunchPlmPackageForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, AppName PWSTR, Arguments PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT
	LaunchPlmBgTaskForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, BackgroundTaskId PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT
}

type IDebugPlmClient2Vtbl struct {
	IUnknownVtbl
	LaunchPlmPackageForDebugWide uintptr
	LaunchPlmBgTaskForDebugWide  uintptr
}

type IDebugPlmClient2 struct {
	IUnknown
}

func (this *IDebugPlmClient2) Vtbl() *IDebugPlmClient2Vtbl {
	return (*IDebugPlmClient2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugPlmClient2) LaunchPlmPackageForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, AppName PWSTR, Arguments PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LaunchPlmPackageForDebugWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(Timeout), uintptr(unsafe.Pointer(PackageFullName)), uintptr(unsafe.Pointer(AppName)), uintptr(unsafe.Pointer(Arguments)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient2) LaunchPlmBgTaskForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, BackgroundTaskId PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LaunchPlmBgTaskForDebugWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(Timeout), uintptr(unsafe.Pointer(PackageFullName)), uintptr(unsafe.Pointer(BackgroundTaskId)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)))
	return HRESULT(ret)
}

// D4A5DBD1-CA02-4D90-856A-2A92BFD0F20F
var IID_IDebugPlmClient3 = syscall.GUID{0xD4A5DBD1, 0xCA02, 0x4D90,
	[8]byte{0x85, 0x6A, 0x2A, 0x92, 0xBF, 0xD0, 0xF2, 0x0F}}

type IDebugPlmClient3Interface interface {
	IUnknownInterface
	LaunchPlmPackageForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, AppName PWSTR, Arguments PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT
	LaunchPlmBgTaskForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, BackgroundTaskId PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT
	QueryPlmPackageWide(Server uint64, PackageFullName PWSTR, Stream *IDebugOutputStream) HRESULT
	QueryPlmPackageList(Server uint64, Stream *IDebugOutputStream) HRESULT
	EnablePlmPackageDebugWide(Server uint64, PackageFullName PWSTR) HRESULT
	DisablePlmPackageDebugWide(Server uint64, PackageFullName PWSTR) HRESULT
	SuspendPlmPackageWide(Server uint64, PackageFullName PWSTR) HRESULT
	ResumePlmPackageWide(Server uint64, PackageFullName PWSTR) HRESULT
	TerminatePlmPackageWide(Server uint64, PackageFullName PWSTR) HRESULT
	LaunchAndDebugPlmAppWide(Server uint64, PackageFullName PWSTR, AppName PWSTR, Arguments PWSTR) HRESULT
	ActivateAndDebugPlmBgTaskWide(Server uint64, PackageFullName PWSTR, BackgroundTaskId PWSTR) HRESULT
}

type IDebugPlmClient3Vtbl struct {
	IUnknownVtbl
	LaunchPlmPackageForDebugWide  uintptr
	LaunchPlmBgTaskForDebugWide   uintptr
	QueryPlmPackageWide           uintptr
	QueryPlmPackageList           uintptr
	EnablePlmPackageDebugWide     uintptr
	DisablePlmPackageDebugWide    uintptr
	SuspendPlmPackageWide         uintptr
	ResumePlmPackageWide          uintptr
	TerminatePlmPackageWide       uintptr
	LaunchAndDebugPlmAppWide      uintptr
	ActivateAndDebugPlmBgTaskWide uintptr
}

type IDebugPlmClient3 struct {
	IUnknown
}

func (this *IDebugPlmClient3) Vtbl() *IDebugPlmClient3Vtbl {
	return (*IDebugPlmClient3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugPlmClient3) LaunchPlmPackageForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, AppName PWSTR, Arguments PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LaunchPlmPackageForDebugWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(Timeout), uintptr(unsafe.Pointer(PackageFullName)), uintptr(unsafe.Pointer(AppName)), uintptr(unsafe.Pointer(Arguments)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) LaunchPlmBgTaskForDebugWide(Server uint64, Timeout uint32, PackageFullName PWSTR, BackgroundTaskId PWSTR, ProcessId *uint32, ThreadId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LaunchPlmBgTaskForDebugWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(Timeout), uintptr(unsafe.Pointer(PackageFullName)), uintptr(unsafe.Pointer(BackgroundTaskId)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) QueryPlmPackageWide(Server uint64, PackageFullName PWSTR, Stream *IDebugOutputStream) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryPlmPackageWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(PackageFullName)), uintptr(unsafe.Pointer(Stream)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) QueryPlmPackageList(Server uint64, Stream *IDebugOutputStream) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryPlmPackageList, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Stream)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) EnablePlmPackageDebugWide(Server uint64, PackageFullName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnablePlmPackageDebugWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(PackageFullName)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) DisablePlmPackageDebugWide(Server uint64, PackageFullName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisablePlmPackageDebugWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(PackageFullName)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) SuspendPlmPackageWide(Server uint64, PackageFullName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SuspendPlmPackageWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(PackageFullName)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) ResumePlmPackageWide(Server uint64, PackageFullName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResumePlmPackageWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(PackageFullName)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) TerminatePlmPackageWide(Server uint64, PackageFullName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TerminatePlmPackageWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(PackageFullName)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) LaunchAndDebugPlmAppWide(Server uint64, PackageFullName PWSTR, AppName PWSTR, Arguments PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LaunchAndDebugPlmAppWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(PackageFullName)), uintptr(unsafe.Pointer(AppName)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugPlmClient3) ActivateAndDebugPlmBgTaskWide(Server uint64, PackageFullName PWSTR, BackgroundTaskId PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ActivateAndDebugPlmBgTaskWide, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(PackageFullName)), uintptr(unsafe.Pointer(BackgroundTaskId)))
	return HRESULT(ret)
}

// 7782D8F2-2B85-4059-AB88-28CEDDCA1C80
var IID_IDebugOutputStream = syscall.GUID{0x7782D8F2, 0x2B85, 0x4059,
	[8]byte{0xAB, 0x88, 0x28, 0xCE, 0xDD, 0xCA, 0x1C, 0x80}}

type IDebugOutputStreamInterface interface {
	IUnknownInterface
	Write(psz PWSTR) HRESULT
}

type IDebugOutputStreamVtbl struct {
	IUnknownVtbl
	Write uintptr
}

type IDebugOutputStream struct {
	IUnknown
}

func (this *IDebugOutputStream) Vtbl() *IDebugOutputStreamVtbl {
	return (*IDebugOutputStreamVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugOutputStream) Write(psz PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Write, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psz)))
	return HRESULT(ret)
}

// 5182E668-105E-416E-AD92-24EF800424BA
var IID_IDebugControl = syscall.GUID{0x5182E668, 0x105E, 0x416E,
	[8]byte{0xAD, 0x92, 0x24, 0xEF, 0x80, 0x04, 0x24, 0xBA}}

type IDebugControlInterface interface {
	IUnknownInterface
	GetInterrupt() HRESULT
	SetInterrupt(Flags uint32) HRESULT
	GetInterruptTimeout(Seconds *uint32) HRESULT
	SetInterruptTimeout(Seconds uint32) HRESULT
	GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFile(File PSTR, Append BOOL) HRESULT
	CloseLogFile() HRESULT
	GetLogMask(Mask *uint32) HRESULT
	SetLogMask(Mask uint32) HRESULT
	Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInput(Buffer PSTR) HRESULT
	Output(Mask uint32, Format PSTR) HRESULT
	OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT
	ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT
	ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT
	OutputPrompt(OutputControl uint32, Format PSTR) HRESULT
	OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT
	GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT
	OutputVersionInformation(OutputControl uint32) HRESULT
	GetNotifyEventHandle(Handle *uint64) HRESULT
	SetNotifyEventHandle(Handle uint64) HRESULT
	Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT
	Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetDisassembleEffectiveOffset(Offset *uint64) HRESULT
	OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT
	OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT
	GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT
	GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT
	GetReturnOffset(Offset *uint64) HRESULT
	OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT
	GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT
	GetActualProcessorType(Type *uint32) HRESULT
	GetExecutingProcessorType(Type *uint32) HRESULT
	GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT
	GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetNumberProcessors(Number *uint32) HRESULT
	GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT
	GetPageSize(Size *uint32) HRESULT
	IsPointer64Bit() HRESULT
	ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT
	GetNumberSupportedProcessorTypes(Number *uint32) HRESULT
	GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEffectiveProcessorType(Type *uint32) HRESULT
	SetEffectiveProcessorType(Type uint32) HRESULT
	GetExecutionStatus(Status *uint32) HRESULT
	SetExecutionStatus(Status uint32) HRESULT
	GetCodeLevel(Level *uint32) HRESULT
	SetCodeLevel(Level uint32) HRESULT
	GetEngineOptions(Options *uint32) HRESULT
	AddEngineOptions(Options uint32) HRESULT
	RemoveEngineOptions(Options uint32) HRESULT
	SetEngineOptions(Options uint32) HRESULT
	GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT
	SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT
	GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacro(Slot uint32, Macro PSTR) HRESULT
	GetRadix(Radix *uint32) HRESULT
	SetRadix(Radix uint32) HRESULT
	Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT
	CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT
	Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT
	ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT
	GetNumberBreakpoints(Number *uint32) HRESULT
	GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
	AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT
	RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT
	AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT
	RemoveExtension(Handle uint64) HRESULT
	GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT
	CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT
	GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT
	GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT
	GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT
	GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT
	GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommand(Index uint32, Command PSTR) HRESULT
	GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT
	GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT
	WaitForEvent(Flags uint32, Timeout uint32) HRESULT
	GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
}

type IDebugControlVtbl struct {
	IUnknownVtbl
	GetInterrupt                             uintptr
	SetInterrupt                             uintptr
	GetInterruptTimeout                      uintptr
	SetInterruptTimeout                      uintptr
	GetLogFile                               uintptr
	OpenLogFile                              uintptr
	CloseLogFile                             uintptr
	GetLogMask                               uintptr
	SetLogMask                               uintptr
	Input                                    uintptr
	ReturnInput                              uintptr
	Output                                   uintptr
	OutputVaList                             uintptr
	ControlledOutput                         uintptr
	ControlledOutputVaList                   uintptr
	OutputPrompt                             uintptr
	OutputPromptVaList                       uintptr
	GetPromptText                            uintptr
	OutputCurrentState                       uintptr
	OutputVersionInformation                 uintptr
	GetNotifyEventHandle                     uintptr
	SetNotifyEventHandle                     uintptr
	Assemble                                 uintptr
	Disassemble                              uintptr
	GetDisassembleEffectiveOffset            uintptr
	OutputDisassembly                        uintptr
	OutputDisassemblyLines                   uintptr
	GetNearInstruction                       uintptr
	GetStackTrace                            uintptr
	GetReturnOffset                          uintptr
	OutputStackTrace                         uintptr
	GetDebuggeeType                          uintptr
	GetActualProcessorType                   uintptr
	GetExecutingProcessorType                uintptr
	GetNumberPossibleExecutingProcessorTypes uintptr
	GetPossibleExecutingProcessorTypes       uintptr
	GetNumberProcessors                      uintptr
	GetSystemVersion                         uintptr
	GetPageSize                              uintptr
	IsPointer64Bit                           uintptr
	ReadBugCheckData                         uintptr
	GetNumberSupportedProcessorTypes         uintptr
	GetSupportedProcessorTypes               uintptr
	GetProcessorTypeNames                    uintptr
	GetEffectiveProcessorType                uintptr
	SetEffectiveProcessorType                uintptr
	GetExecutionStatus                       uintptr
	SetExecutionStatus                       uintptr
	GetCodeLevel                             uintptr
	SetCodeLevel                             uintptr
	GetEngineOptions                         uintptr
	AddEngineOptions                         uintptr
	RemoveEngineOptions                      uintptr
	SetEngineOptions                         uintptr
	GetSystemErrorControl                    uintptr
	SetSystemErrorControl                    uintptr
	GetTextMacro                             uintptr
	SetTextMacro                             uintptr
	GetRadix                                 uintptr
	SetRadix                                 uintptr
	Evaluate                                 uintptr
	CoerceValue                              uintptr
	CoerceValues                             uintptr
	Execute                                  uintptr
	ExecuteCommandFile                       uintptr
	GetNumberBreakpoints                     uintptr
	GetBreakpointByIndex                     uintptr
	GetBreakpointById                        uintptr
	GetBreakpointParameters                  uintptr
	AddBreakpoint                            uintptr
	RemoveBreakpoint                         uintptr
	AddExtension                             uintptr
	RemoveExtension                          uintptr
	GetExtensionByPath                       uintptr
	CallExtension                            uintptr
	GetExtensionFunction                     uintptr
	GetWindbgExtensionApis32                 uintptr
	GetWindbgExtensionApis64                 uintptr
	GetNumberEventFilters                    uintptr
	GetEventFilterText                       uintptr
	GetEventFilterCommand                    uintptr
	SetEventFilterCommand                    uintptr
	GetSpecificFilterParameters              uintptr
	SetSpecificFilterParameters              uintptr
	GetSpecificFilterArgument                uintptr
	SetSpecificFilterArgument                uintptr
	GetExceptionFilterParameters             uintptr
	SetExceptionFilterParameters             uintptr
	GetExceptionFilterSecondCommand          uintptr
	SetExceptionFilterSecondCommand          uintptr
	WaitForEvent                             uintptr
	GetLastEventInformation                  uintptr
}

type IDebugControl struct {
	IUnknown
}

func (this *IDebugControl) Vtbl() *IDebugControlVtbl {
	return (*IDebugControlVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugControl) GetInterrupt() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterrupt, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetInterrupt(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterrupt, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl) GetInterruptTimeout(Seconds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Seconds)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetInterruptTimeout(Seconds uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(Seconds))
	return HRESULT(ret)
}

func (this *IDebugControl) GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl) OpenLogFile(File PSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl) CloseLogFile() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CloseLogFile, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetLogMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetLogMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetLogMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugControl) Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Input, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl) ReturnInput(Buffer PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl) Output(Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl) OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaList, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl) ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutput, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl) ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl) OutputPrompt(OutputControl uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPrompt, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl) OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl) OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputCurrentState, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl) OutputVersionInformation(OutputControl uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(OutputControl))
	return HRESULT(ret)
}

func (this *IDebugControl) GetNotifyEventHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetNotifyEventHandle(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl) Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Assemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl) Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Disassemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetDisassembleEffectiveOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDisassembleEffectiveOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl) OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassembly, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl) OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassemblyLines, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(PreviousLines), uintptr(TotalLines), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(OffsetLine)), uintptr(unsafe.Pointer(StartOffset)), uintptr(unsafe.Pointer(EndOffset)), uintptr(unsafe.Pointer(LineOffsets)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearInstruction, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NearOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTrace, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetReturnOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetReturnOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl) OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl) GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebuggeeType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Class)), uintptr(unsafe.Pointer(Qualifier)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetActualProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetActualProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetExecutingProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutingProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetNumberProcessors(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcessors, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersion, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Major)), uintptr(unsafe.Pointer(Minor)), uintptr(unsafe.Pointer(ServicePackString)), uintptr(ServicePackStringSize), uintptr(unsafe.Pointer(ServicePackStringUsed)), uintptr(unsafe.Pointer(ServicePackNumber)), uintptr(unsafe.Pointer(BuildString)), uintptr(BuildStringSize), uintptr(unsafe.Pointer(BuildStringUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetPageSize(Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPageSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugControl) IsPointer64Bit() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsPointer64Bit, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl) ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBugCheckData, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)), uintptr(unsafe.Pointer(Arg1)), uintptr(unsafe.Pointer(Arg2)), uintptr(unsafe.Pointer(Arg3)), uintptr(unsafe.Pointer(Arg4)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetNumberSupportedProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNames, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetEffectiveProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetEffectiveProcessorType(Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugControl) GetExecutionStatus(Status *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Status)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetExecutionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugControl) GetCodeLevel(Level *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Level)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetCodeLevel(Level uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(Level))
	return HRESULT(ret)
}

func (this *IDebugControl) GetEngineOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl) AddEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl) RemoveEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl) SetEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl) GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(OutputLevel)), uintptr(unsafe.Pointer(BreakLevel)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(OutputLevel), uintptr(BreakLevel))
	return HRESULT(ret)
}

func (this *IDebugControl) GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetTextMacro(Slot uint32, Macro PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetRadix(Radix *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRadix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Radix)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetRadix(Radix uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetRadix, uintptr(unsafe.Pointer(this)), uintptr(Radix))
	return HRESULT(ret)
}

func (this *IDebugControl) Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Evaluate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl) CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(In)), uintptr(OutType), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl) CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(In)), uintptr(unsafe.Pointer(OutTypes)), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl) Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Execute, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl) ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFile, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl) GetNumberBreakpoints(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberBreakpoints, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl) AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl) RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl) AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtension, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl) RemoveExtension(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl) GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl) CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunction, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis32, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis64, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventFilters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SpecificEvents)), uintptr(unsafe.Pointer(SpecificExceptions)), uintptr(unsafe.Pointer(ArbitraryExceptions)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterText, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetEventFilterCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Codes)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl) GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl) SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl) WaitForEvent(Flags uint32, Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForEvent, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugControl) GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

// D4366723-44DF-4BED-8C7E-4C05424F4588
var IID_IDebugControl2 = syscall.GUID{0xD4366723, 0x44DF, 0x4BED,
	[8]byte{0x8C, 0x7E, 0x4C, 0x05, 0x42, 0x4F, 0x45, 0x88}}

type IDebugControl2Interface interface {
	IUnknownInterface
	GetInterrupt() HRESULT
	SetInterrupt(Flags uint32) HRESULT
	GetInterruptTimeout(Seconds *uint32) HRESULT
	SetInterruptTimeout(Seconds uint32) HRESULT
	GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFile(File PSTR, Append BOOL) HRESULT
	CloseLogFile() HRESULT
	GetLogMask(Mask *uint32) HRESULT
	SetLogMask(Mask uint32) HRESULT
	Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInput(Buffer PSTR) HRESULT
	Output(Mask uint32, Format PSTR) HRESULT
	OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT
	ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT
	ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT
	OutputPrompt(OutputControl uint32, Format PSTR) HRESULT
	OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT
	GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT
	OutputVersionInformation(OutputControl uint32) HRESULT
	GetNotifyEventHandle(Handle *uint64) HRESULT
	SetNotifyEventHandle(Handle uint64) HRESULT
	Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT
	Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetDisassembleEffectiveOffset(Offset *uint64) HRESULT
	OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT
	OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT
	GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT
	GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT
	GetReturnOffset(Offset *uint64) HRESULT
	OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT
	GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT
	GetActualProcessorType(Type *uint32) HRESULT
	GetExecutingProcessorType(Type *uint32) HRESULT
	GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT
	GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetNumberProcessors(Number *uint32) HRESULT
	GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT
	GetPageSize(Size *uint32) HRESULT
	IsPointer64Bit() HRESULT
	ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT
	GetNumberSupportedProcessorTypes(Number *uint32) HRESULT
	GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEffectiveProcessorType(Type *uint32) HRESULT
	SetEffectiveProcessorType(Type uint32) HRESULT
	GetExecutionStatus(Status *uint32) HRESULT
	SetExecutionStatus(Status uint32) HRESULT
	GetCodeLevel(Level *uint32) HRESULT
	SetCodeLevel(Level uint32) HRESULT
	GetEngineOptions(Options *uint32) HRESULT
	AddEngineOptions(Options uint32) HRESULT
	RemoveEngineOptions(Options uint32) HRESULT
	SetEngineOptions(Options uint32) HRESULT
	GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT
	SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT
	GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacro(Slot uint32, Macro PSTR) HRESULT
	GetRadix(Radix *uint32) HRESULT
	SetRadix(Radix uint32) HRESULT
	Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT
	CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT
	Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT
	ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT
	GetNumberBreakpoints(Number *uint32) HRESULT
	GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
	AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT
	RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT
	AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT
	RemoveExtension(Handle uint64) HRESULT
	GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT
	CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT
	GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT
	GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT
	GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT
	GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT
	GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommand(Index uint32, Command PSTR) HRESULT
	GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT
	GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT
	WaitForEvent(Flags uint32, Timeout uint32) HRESULT
	GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetCurrentTimeDate(TimeDate *uint32) HRESULT
	GetCurrentSystemUpTime(UpTime *uint32) HRESULT
	GetDumpFormatFlags(FormatFlags *uint32) HRESULT
	GetNumberTextReplacements(NumRepl *uint32) HRESULT
	GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT
	RemoveTextReplacements() HRESULT
	OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT
}

type IDebugControl2Vtbl struct {
	IUnknownVtbl
	GetInterrupt                             uintptr
	SetInterrupt                             uintptr
	GetInterruptTimeout                      uintptr
	SetInterruptTimeout                      uintptr
	GetLogFile                               uintptr
	OpenLogFile                              uintptr
	CloseLogFile                             uintptr
	GetLogMask                               uintptr
	SetLogMask                               uintptr
	Input                                    uintptr
	ReturnInput                              uintptr
	Output                                   uintptr
	OutputVaList                             uintptr
	ControlledOutput                         uintptr
	ControlledOutputVaList                   uintptr
	OutputPrompt                             uintptr
	OutputPromptVaList                       uintptr
	GetPromptText                            uintptr
	OutputCurrentState                       uintptr
	OutputVersionInformation                 uintptr
	GetNotifyEventHandle                     uintptr
	SetNotifyEventHandle                     uintptr
	Assemble                                 uintptr
	Disassemble                              uintptr
	GetDisassembleEffectiveOffset            uintptr
	OutputDisassembly                        uintptr
	OutputDisassemblyLines                   uintptr
	GetNearInstruction                       uintptr
	GetStackTrace                            uintptr
	GetReturnOffset                          uintptr
	OutputStackTrace                         uintptr
	GetDebuggeeType                          uintptr
	GetActualProcessorType                   uintptr
	GetExecutingProcessorType                uintptr
	GetNumberPossibleExecutingProcessorTypes uintptr
	GetPossibleExecutingProcessorTypes       uintptr
	GetNumberProcessors                      uintptr
	GetSystemVersion                         uintptr
	GetPageSize                              uintptr
	IsPointer64Bit                           uintptr
	ReadBugCheckData                         uintptr
	GetNumberSupportedProcessorTypes         uintptr
	GetSupportedProcessorTypes               uintptr
	GetProcessorTypeNames                    uintptr
	GetEffectiveProcessorType                uintptr
	SetEffectiveProcessorType                uintptr
	GetExecutionStatus                       uintptr
	SetExecutionStatus                       uintptr
	GetCodeLevel                             uintptr
	SetCodeLevel                             uintptr
	GetEngineOptions                         uintptr
	AddEngineOptions                         uintptr
	RemoveEngineOptions                      uintptr
	SetEngineOptions                         uintptr
	GetSystemErrorControl                    uintptr
	SetSystemErrorControl                    uintptr
	GetTextMacro                             uintptr
	SetTextMacro                             uintptr
	GetRadix                                 uintptr
	SetRadix                                 uintptr
	Evaluate                                 uintptr
	CoerceValue                              uintptr
	CoerceValues                             uintptr
	Execute                                  uintptr
	ExecuteCommandFile                       uintptr
	GetNumberBreakpoints                     uintptr
	GetBreakpointByIndex                     uintptr
	GetBreakpointById                        uintptr
	GetBreakpointParameters                  uintptr
	AddBreakpoint                            uintptr
	RemoveBreakpoint                         uintptr
	AddExtension                             uintptr
	RemoveExtension                          uintptr
	GetExtensionByPath                       uintptr
	CallExtension                            uintptr
	GetExtensionFunction                     uintptr
	GetWindbgExtensionApis32                 uintptr
	GetWindbgExtensionApis64                 uintptr
	GetNumberEventFilters                    uintptr
	GetEventFilterText                       uintptr
	GetEventFilterCommand                    uintptr
	SetEventFilterCommand                    uintptr
	GetSpecificFilterParameters              uintptr
	SetSpecificFilterParameters              uintptr
	GetSpecificFilterArgument                uintptr
	SetSpecificFilterArgument                uintptr
	GetExceptionFilterParameters             uintptr
	SetExceptionFilterParameters             uintptr
	GetExceptionFilterSecondCommand          uintptr
	SetExceptionFilterSecondCommand          uintptr
	WaitForEvent                             uintptr
	GetLastEventInformation                  uintptr
	GetCurrentTimeDate                       uintptr
	GetCurrentSystemUpTime                   uintptr
	GetDumpFormatFlags                       uintptr
	GetNumberTextReplacements                uintptr
	GetTextReplacement                       uintptr
	SetTextReplacement                       uintptr
	RemoveTextReplacements                   uintptr
	OutputTextReplacements                   uintptr
}

type IDebugControl2 struct {
	IUnknown
}

func (this *IDebugControl2) Vtbl() *IDebugControl2Vtbl {
	return (*IDebugControl2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugControl2) GetInterrupt() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterrupt, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetInterrupt(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterrupt, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetInterruptTimeout(Seconds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Seconds)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetInterruptTimeout(Seconds uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(Seconds))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl2) OpenLogFile(File PSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl2) CloseLogFile() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CloseLogFile, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetLogMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetLogMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetLogMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugControl2) Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Input, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl2) ReturnInput(Buffer PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl2) Output(Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl2) OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaList, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl2) ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutput, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl2) ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl2) OutputPrompt(OutputControl uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPrompt, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl2) OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl2) OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputCurrentState, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl2) OutputVersionInformation(OutputControl uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(OutputControl))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetNotifyEventHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetNotifyEventHandle(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl2) Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Assemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl2) Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Disassemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetDisassembleEffectiveOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDisassembleEffectiveOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl2) OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassembly, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl2) OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassemblyLines, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(PreviousLines), uintptr(TotalLines), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(OffsetLine)), uintptr(unsafe.Pointer(StartOffset)), uintptr(unsafe.Pointer(EndOffset)), uintptr(unsafe.Pointer(LineOffsets)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearInstruction, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NearOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTrace, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetReturnOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetReturnOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl2) OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebuggeeType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Class)), uintptr(unsafe.Pointer(Qualifier)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetActualProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetActualProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetExecutingProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutingProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetNumberProcessors(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcessors, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersion, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Major)), uintptr(unsafe.Pointer(Minor)), uintptr(unsafe.Pointer(ServicePackString)), uintptr(ServicePackStringSize), uintptr(unsafe.Pointer(ServicePackStringUsed)), uintptr(unsafe.Pointer(ServicePackNumber)), uintptr(unsafe.Pointer(BuildString)), uintptr(BuildStringSize), uintptr(unsafe.Pointer(BuildStringUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetPageSize(Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPageSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugControl2) IsPointer64Bit() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsPointer64Bit, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl2) ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBugCheckData, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)), uintptr(unsafe.Pointer(Arg1)), uintptr(unsafe.Pointer(Arg2)), uintptr(unsafe.Pointer(Arg3)), uintptr(unsafe.Pointer(Arg4)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetNumberSupportedProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNames, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetEffectiveProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetEffectiveProcessorType(Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetExecutionStatus(Status *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Status)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetExecutionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetCodeLevel(Level *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Level)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetCodeLevel(Level uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(Level))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetEngineOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl2) AddEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl2) RemoveEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(OutputLevel)), uintptr(unsafe.Pointer(BreakLevel)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(OutputLevel), uintptr(BreakLevel))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetTextMacro(Slot uint32, Macro PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetRadix(Radix *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRadix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Radix)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetRadix(Radix uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetRadix, uintptr(unsafe.Pointer(this)), uintptr(Radix))
	return HRESULT(ret)
}

func (this *IDebugControl2) Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Evaluate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl2) CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(In)), uintptr(OutType), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl2) CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(In)), uintptr(unsafe.Pointer(OutTypes)), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl2) Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Execute, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl2) ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFile, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetNumberBreakpoints(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberBreakpoints, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl2) AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl2) RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl2) AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtension, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl2) RemoveExtension(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl2) CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunction, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis32, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis64, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventFilters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SpecificEvents)), uintptr(unsafe.Pointer(SpecificExceptions)), uintptr(unsafe.Pointer(ArbitraryExceptions)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterText, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetEventFilterCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Codes)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl2) WaitForEvent(Flags uint32, Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForEvent, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetCurrentTimeDate(TimeDate *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentTimeDate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(TimeDate)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetCurrentSystemUpTime(UpTime *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemUpTime, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(UpTime)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetDumpFormatFlags(FormatFlags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFormatFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FormatFlags)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetNumberTextReplacements(NumRepl *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NumRepl)))
	return HRESULT(ret)
}

func (this *IDebugControl2) GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl2) SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl2) RemoveTextReplacements() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTextReplacements, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl2) OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

// 7DF74A86-B03F-407F-90AB-A20DADCEAD08
var IID_IDebugControl3 = syscall.GUID{0x7DF74A86, 0xB03F, 0x407F,
	[8]byte{0x90, 0xAB, 0xA2, 0x0D, 0xAD, 0xCE, 0xAD, 0x08}}

type IDebugControl3Interface interface {
	IUnknownInterface
	GetInterrupt() HRESULT
	SetInterrupt(Flags uint32) HRESULT
	GetInterruptTimeout(Seconds *uint32) HRESULT
	SetInterruptTimeout(Seconds uint32) HRESULT
	GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFile(File PSTR, Append BOOL) HRESULT
	CloseLogFile() HRESULT
	GetLogMask(Mask *uint32) HRESULT
	SetLogMask(Mask uint32) HRESULT
	Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInput(Buffer PSTR) HRESULT
	Output(Mask uint32, Format PSTR) HRESULT
	OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT
	ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT
	ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT
	OutputPrompt(OutputControl uint32, Format PSTR) HRESULT
	OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT
	GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT
	OutputVersionInformation(OutputControl uint32) HRESULT
	GetNotifyEventHandle(Handle *uint64) HRESULT
	SetNotifyEventHandle(Handle uint64) HRESULT
	Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT
	Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetDisassembleEffectiveOffset(Offset *uint64) HRESULT
	OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT
	OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT
	GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT
	GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT
	GetReturnOffset(Offset *uint64) HRESULT
	OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT
	GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT
	GetActualProcessorType(Type *uint32) HRESULT
	GetExecutingProcessorType(Type *uint32) HRESULT
	GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT
	GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetNumberProcessors(Number *uint32) HRESULT
	GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT
	GetPageSize(Size *uint32) HRESULT
	IsPointer64Bit() HRESULT
	ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT
	GetNumberSupportedProcessorTypes(Number *uint32) HRESULT
	GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEffectiveProcessorType(Type *uint32) HRESULT
	SetEffectiveProcessorType(Type uint32) HRESULT
	GetExecutionStatus(Status *uint32) HRESULT
	SetExecutionStatus(Status uint32) HRESULT
	GetCodeLevel(Level *uint32) HRESULT
	SetCodeLevel(Level uint32) HRESULT
	GetEngineOptions(Options *uint32) HRESULT
	AddEngineOptions(Options uint32) HRESULT
	RemoveEngineOptions(Options uint32) HRESULT
	SetEngineOptions(Options uint32) HRESULT
	GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT
	SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT
	GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacro(Slot uint32, Macro PSTR) HRESULT
	GetRadix(Radix *uint32) HRESULT
	SetRadix(Radix uint32) HRESULT
	Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT
	CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT
	Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT
	ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT
	GetNumberBreakpoints(Number *uint32) HRESULT
	GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
	AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT
	RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT
	AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT
	RemoveExtension(Handle uint64) HRESULT
	GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT
	CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT
	GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT
	GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT
	GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT
	GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT
	GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommand(Index uint32, Command PSTR) HRESULT
	GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT
	GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT
	WaitForEvent(Flags uint32, Timeout uint32) HRESULT
	GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetCurrentTimeDate(TimeDate *uint32) HRESULT
	GetCurrentSystemUpTime(UpTime *uint32) HRESULT
	GetDumpFormatFlags(FormatFlags *uint32) HRESULT
	GetNumberTextReplacements(NumRepl *uint32) HRESULT
	GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT
	RemoveTextReplacements() HRESULT
	OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT
	GetAssemblyOptions(Options *uint32) HRESULT
	AddAssemblyOptions(Options uint32) HRESULT
	RemoveAssemblyOptions(Options uint32) HRESULT
	SetAssemblyOptions(Options uint32) HRESULT
	GetExpressionSyntax(Flags *uint32) HRESULT
	SetExpressionSyntax(Flags uint32) HRESULT
	SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT
	GetNumberExpressionSyntaxes(Number *uint32) HRESULT
	GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetNumberEvents(Events *uint32) HRESULT
	GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT
	GetCurrentEventIndex(Index *uint32) HRESULT
	SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT
}

type IDebugControl3Vtbl struct {
	IUnknownVtbl
	GetInterrupt                             uintptr
	SetInterrupt                             uintptr
	GetInterruptTimeout                      uintptr
	SetInterruptTimeout                      uintptr
	GetLogFile                               uintptr
	OpenLogFile                              uintptr
	CloseLogFile                             uintptr
	GetLogMask                               uintptr
	SetLogMask                               uintptr
	Input                                    uintptr
	ReturnInput                              uintptr
	Output                                   uintptr
	OutputVaList                             uintptr
	ControlledOutput                         uintptr
	ControlledOutputVaList                   uintptr
	OutputPrompt                             uintptr
	OutputPromptVaList                       uintptr
	GetPromptText                            uintptr
	OutputCurrentState                       uintptr
	OutputVersionInformation                 uintptr
	GetNotifyEventHandle                     uintptr
	SetNotifyEventHandle                     uintptr
	Assemble                                 uintptr
	Disassemble                              uintptr
	GetDisassembleEffectiveOffset            uintptr
	OutputDisassembly                        uintptr
	OutputDisassemblyLines                   uintptr
	GetNearInstruction                       uintptr
	GetStackTrace                            uintptr
	GetReturnOffset                          uintptr
	OutputStackTrace                         uintptr
	GetDebuggeeType                          uintptr
	GetActualProcessorType                   uintptr
	GetExecutingProcessorType                uintptr
	GetNumberPossibleExecutingProcessorTypes uintptr
	GetPossibleExecutingProcessorTypes       uintptr
	GetNumberProcessors                      uintptr
	GetSystemVersion                         uintptr
	GetPageSize                              uintptr
	IsPointer64Bit                           uintptr
	ReadBugCheckData                         uintptr
	GetNumberSupportedProcessorTypes         uintptr
	GetSupportedProcessorTypes               uintptr
	GetProcessorTypeNames                    uintptr
	GetEffectiveProcessorType                uintptr
	SetEffectiveProcessorType                uintptr
	GetExecutionStatus                       uintptr
	SetExecutionStatus                       uintptr
	GetCodeLevel                             uintptr
	SetCodeLevel                             uintptr
	GetEngineOptions                         uintptr
	AddEngineOptions                         uintptr
	RemoveEngineOptions                      uintptr
	SetEngineOptions                         uintptr
	GetSystemErrorControl                    uintptr
	SetSystemErrorControl                    uintptr
	GetTextMacro                             uintptr
	SetTextMacro                             uintptr
	GetRadix                                 uintptr
	SetRadix                                 uintptr
	Evaluate                                 uintptr
	CoerceValue                              uintptr
	CoerceValues                             uintptr
	Execute                                  uintptr
	ExecuteCommandFile                       uintptr
	GetNumberBreakpoints                     uintptr
	GetBreakpointByIndex                     uintptr
	GetBreakpointById                        uintptr
	GetBreakpointParameters                  uintptr
	AddBreakpoint                            uintptr
	RemoveBreakpoint                         uintptr
	AddExtension                             uintptr
	RemoveExtension                          uintptr
	GetExtensionByPath                       uintptr
	CallExtension                            uintptr
	GetExtensionFunction                     uintptr
	GetWindbgExtensionApis32                 uintptr
	GetWindbgExtensionApis64                 uintptr
	GetNumberEventFilters                    uintptr
	GetEventFilterText                       uintptr
	GetEventFilterCommand                    uintptr
	SetEventFilterCommand                    uintptr
	GetSpecificFilterParameters              uintptr
	SetSpecificFilterParameters              uintptr
	GetSpecificFilterArgument                uintptr
	SetSpecificFilterArgument                uintptr
	GetExceptionFilterParameters             uintptr
	SetExceptionFilterParameters             uintptr
	GetExceptionFilterSecondCommand          uintptr
	SetExceptionFilterSecondCommand          uintptr
	WaitForEvent                             uintptr
	GetLastEventInformation                  uintptr
	GetCurrentTimeDate                       uintptr
	GetCurrentSystemUpTime                   uintptr
	GetDumpFormatFlags                       uintptr
	GetNumberTextReplacements                uintptr
	GetTextReplacement                       uintptr
	SetTextReplacement                       uintptr
	RemoveTextReplacements                   uintptr
	OutputTextReplacements                   uintptr
	GetAssemblyOptions                       uintptr
	AddAssemblyOptions                       uintptr
	RemoveAssemblyOptions                    uintptr
	SetAssemblyOptions                       uintptr
	GetExpressionSyntax                      uintptr
	SetExpressionSyntax                      uintptr
	SetExpressionSyntaxByName                uintptr
	GetNumberExpressionSyntaxes              uintptr
	GetExpressionSyntaxNames                 uintptr
	GetNumberEvents                          uintptr
	GetEventIndexDescription                 uintptr
	GetCurrentEventIndex                     uintptr
	SetNextEventIndex                        uintptr
}

type IDebugControl3 struct {
	IUnknown
}

func (this *IDebugControl3) Vtbl() *IDebugControl3Vtbl {
	return (*IDebugControl3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugControl3) GetInterrupt() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterrupt, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetInterrupt(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterrupt, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetInterruptTimeout(Seconds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Seconds)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetInterruptTimeout(Seconds uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(Seconds))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl3) OpenLogFile(File PSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl3) CloseLogFile() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CloseLogFile, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetLogMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetLogMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetLogMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugControl3) Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Input, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) ReturnInput(Buffer PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl3) Output(Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl3) OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaList, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl3) ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutput, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl3) ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl3) OutputPrompt(OutputControl uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPrompt, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl3) OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputCurrentState, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl3) OutputVersionInformation(OutputControl uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(OutputControl))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNotifyEventHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetNotifyEventHandle(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl3) Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Assemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl3) Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Disassemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetDisassembleEffectiveOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDisassembleEffectiveOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl3) OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassembly, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl3) OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassemblyLines, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(PreviousLines), uintptr(TotalLines), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(OffsetLine)), uintptr(unsafe.Pointer(StartOffset)), uintptr(unsafe.Pointer(EndOffset)), uintptr(unsafe.Pointer(LineOffsets)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearInstruction, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NearOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTrace, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetReturnOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetReturnOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl3) OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebuggeeType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Class)), uintptr(unsafe.Pointer(Qualifier)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetActualProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetActualProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetExecutingProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutingProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNumberProcessors(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcessors, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersion, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Major)), uintptr(unsafe.Pointer(Minor)), uintptr(unsafe.Pointer(ServicePackString)), uintptr(ServicePackStringSize), uintptr(unsafe.Pointer(ServicePackStringUsed)), uintptr(unsafe.Pointer(ServicePackNumber)), uintptr(unsafe.Pointer(BuildString)), uintptr(BuildStringSize), uintptr(unsafe.Pointer(BuildStringUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetPageSize(Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPageSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugControl3) IsPointer64Bit() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsPointer64Bit, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl3) ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBugCheckData, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)), uintptr(unsafe.Pointer(Arg1)), uintptr(unsafe.Pointer(Arg2)), uintptr(unsafe.Pointer(Arg3)), uintptr(unsafe.Pointer(Arg4)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNumberSupportedProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNames, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetEffectiveProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetEffectiveProcessorType(Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetExecutionStatus(Status *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Status)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetExecutionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetCodeLevel(Level *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Level)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetCodeLevel(Level uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(Level))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetEngineOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl3) AddEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl3) RemoveEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(OutputLevel)), uintptr(unsafe.Pointer(BreakLevel)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(OutputLevel), uintptr(BreakLevel))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetTextMacro(Slot uint32, Macro PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetRadix(Radix *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRadix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Radix)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetRadix(Radix uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetRadix, uintptr(unsafe.Pointer(this)), uintptr(Radix))
	return HRESULT(ret)
}

func (this *IDebugControl3) Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Evaluate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl3) CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(In)), uintptr(OutType), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl3) CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(In)), uintptr(unsafe.Pointer(OutTypes)), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl3) Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Execute, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl3) ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFile, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNumberBreakpoints(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberBreakpoints, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl3) AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl3) RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl3) AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtension, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl3) RemoveExtension(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl3) CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunction, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis32, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis64, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventFilters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SpecificEvents)), uintptr(unsafe.Pointer(SpecificExceptions)), uintptr(unsafe.Pointer(ArbitraryExceptions)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterText, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetEventFilterCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Codes)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl3) WaitForEvent(Flags uint32, Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForEvent, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetCurrentTimeDate(TimeDate *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentTimeDate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(TimeDate)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetCurrentSystemUpTime(UpTime *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemUpTime, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(UpTime)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetDumpFormatFlags(FormatFlags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFormatFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FormatFlags)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNumberTextReplacements(NumRepl *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NumRepl)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl3) RemoveTextReplacements() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTextReplacements, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl3) OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetAssemblyOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl3) AddAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl3) RemoveAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetExpressionSyntax(Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetExpressionSyntax(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntaxByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(AbbrevName)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNumberExpressionSyntaxes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberExpressionSyntaxes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntaxNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetNumberEvents(Events *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEvents, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Events)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventIndexDescription, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DescSize)))
	return HRESULT(ret)
}

func (this *IDebugControl3) GetCurrentEventIndex(Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentEventIndex, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugControl3) SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNextEventIndex, uintptr(unsafe.Pointer(this)), uintptr(Relation), uintptr(Value), uintptr(unsafe.Pointer(NextIndex)))
	return HRESULT(ret)
}

// 94E60CE9-9B41-4B19-9FC0-6D9EB35272B3
var IID_IDebugControl4 = syscall.GUID{0x94E60CE9, 0x9B41, 0x4B19,
	[8]byte{0x9F, 0xC0, 0x6D, 0x9E, 0xB3, 0x52, 0x72, 0xB3}}

type IDebugControl4Interface interface {
	IUnknownInterface
	GetInterrupt() HRESULT
	SetInterrupt(Flags uint32) HRESULT
	GetInterruptTimeout(Seconds *uint32) HRESULT
	SetInterruptTimeout(Seconds uint32) HRESULT
	GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFile(File PSTR, Append BOOL) HRESULT
	CloseLogFile() HRESULT
	GetLogMask(Mask *uint32) HRESULT
	SetLogMask(Mask uint32) HRESULT
	Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInput(Buffer PSTR) HRESULT
	Output(Mask uint32, Format PSTR) HRESULT
	OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT
	ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT
	ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT
	OutputPrompt(OutputControl uint32, Format PSTR) HRESULT
	OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT
	GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT
	OutputVersionInformation(OutputControl uint32) HRESULT
	GetNotifyEventHandle(Handle *uint64) HRESULT
	SetNotifyEventHandle(Handle uint64) HRESULT
	Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT
	Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetDisassembleEffectiveOffset(Offset *uint64) HRESULT
	OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT
	OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT
	GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT
	GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT
	GetReturnOffset(Offset *uint64) HRESULT
	OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT
	GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT
	GetActualProcessorType(Type *uint32) HRESULT
	GetExecutingProcessorType(Type *uint32) HRESULT
	GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT
	GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetNumberProcessors(Number *uint32) HRESULT
	GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT
	GetPageSize(Size *uint32) HRESULT
	IsPointer64Bit() HRESULT
	ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT
	GetNumberSupportedProcessorTypes(Number *uint32) HRESULT
	GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEffectiveProcessorType(Type *uint32) HRESULT
	SetEffectiveProcessorType(Type uint32) HRESULT
	GetExecutionStatus(Status *uint32) HRESULT
	SetExecutionStatus(Status uint32) HRESULT
	GetCodeLevel(Level *uint32) HRESULT
	SetCodeLevel(Level uint32) HRESULT
	GetEngineOptions(Options *uint32) HRESULT
	AddEngineOptions(Options uint32) HRESULT
	RemoveEngineOptions(Options uint32) HRESULT
	SetEngineOptions(Options uint32) HRESULT
	GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT
	SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT
	GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacro(Slot uint32, Macro PSTR) HRESULT
	GetRadix(Radix *uint32) HRESULT
	SetRadix(Radix uint32) HRESULT
	Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT
	CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT
	Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT
	ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT
	GetNumberBreakpoints(Number *uint32) HRESULT
	GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
	AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT
	RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT
	AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT
	RemoveExtension(Handle uint64) HRESULT
	GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT
	CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT
	GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT
	GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT
	GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT
	GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT
	GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommand(Index uint32, Command PSTR) HRESULT
	GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT
	GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT
	WaitForEvent(Flags uint32, Timeout uint32) HRESULT
	GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetCurrentTimeDate(TimeDate *uint32) HRESULT
	GetCurrentSystemUpTime(UpTime *uint32) HRESULT
	GetDumpFormatFlags(FormatFlags *uint32) HRESULT
	GetNumberTextReplacements(NumRepl *uint32) HRESULT
	GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT
	RemoveTextReplacements() HRESULT
	OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT
	GetAssemblyOptions(Options *uint32) HRESULT
	AddAssemblyOptions(Options uint32) HRESULT
	RemoveAssemblyOptions(Options uint32) HRESULT
	SetAssemblyOptions(Options uint32) HRESULT
	GetExpressionSyntax(Flags *uint32) HRESULT
	SetExpressionSyntax(Flags uint32) HRESULT
	SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT
	GetNumberExpressionSyntaxes(Number *uint32) HRESULT
	GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetNumberEvents(Events *uint32) HRESULT
	GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT
	GetCurrentEventIndex(Index *uint32) HRESULT
	SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT
	GetLogFileWide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFileWide(File PWSTR, Append BOOL) HRESULT
	InputWide(Buffer PWSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInputWide(Buffer PWSTR) HRESULT
	OutputWide(Mask uint32, Format PWSTR) HRESULT
	OutputVaListWide(Mask uint32, Format PWSTR, Args *int8) HRESULT
	ControlledOutputWide(OutputControl uint32, Mask uint32, Format PWSTR) HRESULT
	ControlledOutputVaListWide(OutputControl uint32, Mask uint32, Format PWSTR, Args *int8) HRESULT
	OutputPromptWide(OutputControl uint32, Format PWSTR) HRESULT
	OutputPromptVaListWide(OutputControl uint32, Format PWSTR, Args *int8) HRESULT
	GetPromptTextWide(Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT
	AssembleWide(Offset uint64, Instr PWSTR, EndOffset *uint64) HRESULT
	DisassembleWide(Offset uint64, Flags uint32, Buffer PWSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetProcessorTypeNamesWide(Type uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetTextMacroWide(Slot uint32, Buffer PWSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacroWide(Slot uint32, Macro PWSTR) HRESULT
	EvaluateWide(Expression PWSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	ExecuteWide(OutputControl uint32, Command PWSTR, Flags uint32) HRESULT
	ExecuteCommandFileWide(OutputControl uint32, CommandFile PWSTR, Flags uint32) HRESULT
	GetBreakpointByIndex2(Index uint32, Bp **IDebugBreakpoint2) HRESULT
	GetBreakpointById2(Id uint32, Bp **IDebugBreakpoint2) HRESULT
	AddBreakpoint2(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint2) HRESULT
	RemoveBreakpoint2(Bp *IDebugBreakpoint2) HRESULT
	AddExtensionWide(Path PWSTR, Flags uint32, Handle *uint64) HRESULT
	GetExtensionByPathWide(Path PWSTR, Handle *uint64) HRESULT
	CallExtensionWide(Handle uint64, Function PWSTR, Arguments PWSTR) HRESULT
	GetExtensionFunctionWide(Handle uint64, FuncName PWSTR, Function *FARPROC) HRESULT
	GetEventFilterTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommandWide(Index uint32, Command PWSTR) HRESULT
	GetSpecificFilterArgumentWide(Index uint32, Buffer PWSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgumentWide(Index uint32, Argument PWSTR) HRESULT
	GetExceptionFilterSecondCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommandWide(Index uint32, Command PWSTR) HRESULT
	GetLastEventInformationWide(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PWSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetTextReplacementWide(SrcText PWSTR, Index uint32, SrcBuffer PWSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PWSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacementWide(SrcText PWSTR, DstText PWSTR) HRESULT
	SetExpressionSyntaxByNameWide(AbbrevName PWSTR) HRESULT
	GetExpressionSyntaxNamesWide(Index uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEventIndexDescriptionWide(Index uint32, Which uint32, Buffer PWSTR, BufferSize uint32, DescSize *uint32) HRESULT
	GetLogFile2(Buffer PSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT
	OpenLogFile2(File PSTR, Flags uint32) HRESULT
	GetLogFile2Wide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT
	OpenLogFile2Wide(File PWSTR, Flags uint32) HRESULT
	GetSystemVersionValues(PlatformId *uint32, Win32Major *uint32, Win32Minor *uint32, KdMajor *uint32, KdMinor *uint32) HRESULT
	GetSystemVersionString(Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSystemVersionStringWide(Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetContextStackTrace(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT
	OutputContextStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT
	GetStoredEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, Context unsafe.Pointer, ContextSize uint32, ContextUsed *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32) HRESULT
	GetManagedStatus(Flags *uint32, WhichString uint32, String PSTR, StringSize uint32, StringNeeded *uint32) HRESULT
	GetManagedStatusWide(Flags *uint32, WhichString uint32, String PWSTR, StringSize uint32, StringNeeded *uint32) HRESULT
	ResetManagedStatus(Flags uint32) HRESULT
}

type IDebugControl4Vtbl struct {
	IUnknownVtbl
	GetInterrupt                             uintptr
	SetInterrupt                             uintptr
	GetInterruptTimeout                      uintptr
	SetInterruptTimeout                      uintptr
	GetLogFile                               uintptr
	OpenLogFile                              uintptr
	CloseLogFile                             uintptr
	GetLogMask                               uintptr
	SetLogMask                               uintptr
	Input                                    uintptr
	ReturnInput                              uintptr
	Output                                   uintptr
	OutputVaList                             uintptr
	ControlledOutput                         uintptr
	ControlledOutputVaList                   uintptr
	OutputPrompt                             uintptr
	OutputPromptVaList                       uintptr
	GetPromptText                            uintptr
	OutputCurrentState                       uintptr
	OutputVersionInformation                 uintptr
	GetNotifyEventHandle                     uintptr
	SetNotifyEventHandle                     uintptr
	Assemble                                 uintptr
	Disassemble                              uintptr
	GetDisassembleEffectiveOffset            uintptr
	OutputDisassembly                        uintptr
	OutputDisassemblyLines                   uintptr
	GetNearInstruction                       uintptr
	GetStackTrace                            uintptr
	GetReturnOffset                          uintptr
	OutputStackTrace                         uintptr
	GetDebuggeeType                          uintptr
	GetActualProcessorType                   uintptr
	GetExecutingProcessorType                uintptr
	GetNumberPossibleExecutingProcessorTypes uintptr
	GetPossibleExecutingProcessorTypes       uintptr
	GetNumberProcessors                      uintptr
	GetSystemVersion                         uintptr
	GetPageSize                              uintptr
	IsPointer64Bit                           uintptr
	ReadBugCheckData                         uintptr
	GetNumberSupportedProcessorTypes         uintptr
	GetSupportedProcessorTypes               uintptr
	GetProcessorTypeNames                    uintptr
	GetEffectiveProcessorType                uintptr
	SetEffectiveProcessorType                uintptr
	GetExecutionStatus                       uintptr
	SetExecutionStatus                       uintptr
	GetCodeLevel                             uintptr
	SetCodeLevel                             uintptr
	GetEngineOptions                         uintptr
	AddEngineOptions                         uintptr
	RemoveEngineOptions                      uintptr
	SetEngineOptions                         uintptr
	GetSystemErrorControl                    uintptr
	SetSystemErrorControl                    uintptr
	GetTextMacro                             uintptr
	SetTextMacro                             uintptr
	GetRadix                                 uintptr
	SetRadix                                 uintptr
	Evaluate                                 uintptr
	CoerceValue                              uintptr
	CoerceValues                             uintptr
	Execute                                  uintptr
	ExecuteCommandFile                       uintptr
	GetNumberBreakpoints                     uintptr
	GetBreakpointByIndex                     uintptr
	GetBreakpointById                        uintptr
	GetBreakpointParameters                  uintptr
	AddBreakpoint                            uintptr
	RemoveBreakpoint                         uintptr
	AddExtension                             uintptr
	RemoveExtension                          uintptr
	GetExtensionByPath                       uintptr
	CallExtension                            uintptr
	GetExtensionFunction                     uintptr
	GetWindbgExtensionApis32                 uintptr
	GetWindbgExtensionApis64                 uintptr
	GetNumberEventFilters                    uintptr
	GetEventFilterText                       uintptr
	GetEventFilterCommand                    uintptr
	SetEventFilterCommand                    uintptr
	GetSpecificFilterParameters              uintptr
	SetSpecificFilterParameters              uintptr
	GetSpecificFilterArgument                uintptr
	SetSpecificFilterArgument                uintptr
	GetExceptionFilterParameters             uintptr
	SetExceptionFilterParameters             uintptr
	GetExceptionFilterSecondCommand          uintptr
	SetExceptionFilterSecondCommand          uintptr
	WaitForEvent                             uintptr
	GetLastEventInformation                  uintptr
	GetCurrentTimeDate                       uintptr
	GetCurrentSystemUpTime                   uintptr
	GetDumpFormatFlags                       uintptr
	GetNumberTextReplacements                uintptr
	GetTextReplacement                       uintptr
	SetTextReplacement                       uintptr
	RemoveTextReplacements                   uintptr
	OutputTextReplacements                   uintptr
	GetAssemblyOptions                       uintptr
	AddAssemblyOptions                       uintptr
	RemoveAssemblyOptions                    uintptr
	SetAssemblyOptions                       uintptr
	GetExpressionSyntax                      uintptr
	SetExpressionSyntax                      uintptr
	SetExpressionSyntaxByName                uintptr
	GetNumberExpressionSyntaxes              uintptr
	GetExpressionSyntaxNames                 uintptr
	GetNumberEvents                          uintptr
	GetEventIndexDescription                 uintptr
	GetCurrentEventIndex                     uintptr
	SetNextEventIndex                        uintptr
	GetLogFileWide                           uintptr
	OpenLogFileWide                          uintptr
	InputWide                                uintptr
	ReturnInputWide                          uintptr
	OutputWide                               uintptr
	OutputVaListWide                         uintptr
	ControlledOutputWide                     uintptr
	ControlledOutputVaListWide               uintptr
	OutputPromptWide                         uintptr
	OutputPromptVaListWide                   uintptr
	GetPromptTextWide                        uintptr
	AssembleWide                             uintptr
	DisassembleWide                          uintptr
	GetProcessorTypeNamesWide                uintptr
	GetTextMacroWide                         uintptr
	SetTextMacroWide                         uintptr
	EvaluateWide                             uintptr
	ExecuteWide                              uintptr
	ExecuteCommandFileWide                   uintptr
	GetBreakpointByIndex2                    uintptr
	GetBreakpointById2                       uintptr
	AddBreakpoint2                           uintptr
	RemoveBreakpoint2                        uintptr
	AddExtensionWide                         uintptr
	GetExtensionByPathWide                   uintptr
	CallExtensionWide                        uintptr
	GetExtensionFunctionWide                 uintptr
	GetEventFilterTextWide                   uintptr
	GetEventFilterCommandWide                uintptr
	SetEventFilterCommandWide                uintptr
	GetSpecificFilterArgumentWide            uintptr
	SetSpecificFilterArgumentWide            uintptr
	GetExceptionFilterSecondCommandWide      uintptr
	SetExceptionFilterSecondCommandWide      uintptr
	GetLastEventInformationWide              uintptr
	GetTextReplacementWide                   uintptr
	SetTextReplacementWide                   uintptr
	SetExpressionSyntaxByNameWide            uintptr
	GetExpressionSyntaxNamesWide             uintptr
	GetEventIndexDescriptionWide             uintptr
	GetLogFile2                              uintptr
	OpenLogFile2                             uintptr
	GetLogFile2Wide                          uintptr
	OpenLogFile2Wide                         uintptr
	GetSystemVersionValues                   uintptr
	GetSystemVersionString                   uintptr
	GetSystemVersionStringWide               uintptr
	GetContextStackTrace                     uintptr
	OutputContextStackTrace                  uintptr
	GetStoredEventInformation                uintptr
	GetManagedStatus                         uintptr
	GetManagedStatusWide                     uintptr
	ResetManagedStatus                       uintptr
}

type IDebugControl4 struct {
	IUnknown
}

func (this *IDebugControl4) Vtbl() *IDebugControl4Vtbl {
	return (*IDebugControl4Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugControl4) GetInterrupt() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterrupt, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetInterrupt(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterrupt, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetInterruptTimeout(Seconds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Seconds)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetInterruptTimeout(Seconds uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(Seconds))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OpenLogFile(File PSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl4) CloseLogFile() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CloseLogFile, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetLogMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetLogMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetLogMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugControl4) Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Input, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) ReturnInput(Buffer PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl4) Output(Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaList, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl4) ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutput, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl4) ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputPrompt(OutputControl uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPrompt, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputCurrentState, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputVersionInformation(OutputControl uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(OutputControl))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNotifyEventHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetNotifyEventHandle(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl4) Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Assemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl4) Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Disassemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetDisassembleEffectiveOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDisassembleEffectiveOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassembly, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassemblyLines, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(PreviousLines), uintptr(TotalLines), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(OffsetLine)), uintptr(unsafe.Pointer(StartOffset)), uintptr(unsafe.Pointer(EndOffset)), uintptr(unsafe.Pointer(LineOffsets)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearInstruction, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NearOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTrace, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetReturnOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetReturnOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebuggeeType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Class)), uintptr(unsafe.Pointer(Qualifier)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetActualProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetActualProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExecutingProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutingProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNumberProcessors(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcessors, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersion, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Major)), uintptr(unsafe.Pointer(Minor)), uintptr(unsafe.Pointer(ServicePackString)), uintptr(ServicePackStringSize), uintptr(unsafe.Pointer(ServicePackStringUsed)), uintptr(unsafe.Pointer(ServicePackNumber)), uintptr(unsafe.Pointer(BuildString)), uintptr(BuildStringSize), uintptr(unsafe.Pointer(BuildStringUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetPageSize(Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPageSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugControl4) IsPointer64Bit() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsPointer64Bit, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl4) ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBugCheckData, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)), uintptr(unsafe.Pointer(Arg1)), uintptr(unsafe.Pointer(Arg2)), uintptr(unsafe.Pointer(Arg3)), uintptr(unsafe.Pointer(Arg4)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNumberSupportedProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNames, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetEffectiveProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetEffectiveProcessorType(Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExecutionStatus(Status *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Status)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetExecutionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetCodeLevel(Level *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Level)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetCodeLevel(Level uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(Level))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetEngineOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl4) AddEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl4) RemoveEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(OutputLevel)), uintptr(unsafe.Pointer(BreakLevel)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(OutputLevel), uintptr(BreakLevel))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetTextMacro(Slot uint32, Macro PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetRadix(Radix *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRadix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Radix)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetRadix(Radix uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetRadix, uintptr(unsafe.Pointer(this)), uintptr(Radix))
	return HRESULT(ret)
}

func (this *IDebugControl4) Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Evaluate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl4) CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(In)), uintptr(OutType), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl4) CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(In)), uintptr(unsafe.Pointer(OutTypes)), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl4) Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Execute, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFile, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNumberBreakpoints(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberBreakpoints, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl4) AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl4) RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl4) AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtension, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl4) RemoveExtension(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl4) CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunction, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis32, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis64, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventFilters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SpecificEvents)), uintptr(unsafe.Pointer(SpecificExceptions)), uintptr(unsafe.Pointer(ArbitraryExceptions)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterText, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetEventFilterCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Codes)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl4) WaitForEvent(Flags uint32, Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForEvent, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetCurrentTimeDate(TimeDate *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentTimeDate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(TimeDate)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetCurrentSystemUpTime(UpTime *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemUpTime, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(UpTime)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetDumpFormatFlags(FormatFlags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFormatFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FormatFlags)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNumberTextReplacements(NumRepl *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NumRepl)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl4) RemoveTextReplacements() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTextReplacements, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetAssemblyOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl4) AddAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl4) RemoveAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExpressionSyntax(Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetExpressionSyntax(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntaxByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(AbbrevName)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNumberExpressionSyntaxes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberExpressionSyntaxes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntaxNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetNumberEvents(Events *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEvents, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Events)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventIndexDescription, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DescSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetCurrentEventIndex(Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentEventIndex, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNextEventIndex, uintptr(unsafe.Pointer(this)), uintptr(Relation), uintptr(Value), uintptr(unsafe.Pointer(NextIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetLogFileWide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OpenLogFileWide(File PWSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl4) InputWide(Buffer PWSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InputWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) ReturnInputWide(Buffer PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInputWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputWide(Mask uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputWide, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputVaListWide(Mask uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaListWide, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl4) ControlledOutputWide(OutputControl uint32, Mask uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl4) ControlledOutputVaListWide(OutputControl uint32, Mask uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaListWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputPromptWide(OutputControl uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputPromptVaListWide(OutputControl uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaListWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetPromptTextWide(Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptTextWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) AssembleWide(Offset uint64, Instr PWSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AssembleWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl4) DisassembleWide(Offset uint64, Flags uint32, Buffer PWSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisassembleWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetProcessorTypeNamesWide(Type uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNamesWide, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetTextMacroWide(Slot uint32, Buffer PWSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacroWide, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetTextMacroWide(Slot uint32, Macro PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacroWide, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl4) EvaluateWide(Expression PWSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EvaluateWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl4) ExecuteWide(OutputControl uint32, Command PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) ExecuteCommandFileWide(OutputControl uint32, CommandFile PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFileWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetBreakpointByIndex2(Index uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex2, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetBreakpointById2(Id uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById2, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl4) AddBreakpoint2(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint2, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl4) RemoveBreakpoint2(Bp *IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl4) AddExtensionWide(Path PWSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtensionWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExtensionByPathWide(Path PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl4) CallExtensionWide(Handle uint64, Function PWSTR, Arguments PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtensionWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExtensionFunctionWide(Handle uint64, FuncName PWSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunctionWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetEventFilterTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterTextWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetEventFilterCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetEventFilterCommandWide(Index uint32, Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetSpecificFilterArgumentWide(Index uint32, Buffer PWSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgumentWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetSpecificFilterArgumentWide(Index uint32, Argument PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgumentWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExceptionFilterSecondCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetExceptionFilterSecondCommandWide(Index uint32, Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetLastEventInformationWide(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PWSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformationWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetTextReplacementWide(SrcText PWSTR, Index uint32, SrcBuffer PWSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PWSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacementWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetTextReplacementWide(SrcText PWSTR, DstText PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacementWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl4) SetExpressionSyntaxByNameWide(AbbrevName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntaxByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(AbbrevName)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetExpressionSyntaxNamesWide(Index uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntaxNamesWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetEventIndexDescriptionWide(Index uint32, Which uint32, Buffer PWSTR, BufferSize uint32, DescSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventIndexDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DescSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetLogFile2(Buffer PSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OpenLogFile2(File PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetLogFile2Wide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OpenLogFile2Wide(File PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetSystemVersionValues(PlatformId *uint32, Win32Major *uint32, Win32Minor *uint32, KdMajor *uint32, KdMinor *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionValues, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Win32Major)), uintptr(unsafe.Pointer(Win32Minor)), uintptr(unsafe.Pointer(KdMajor)), uintptr(unsafe.Pointer(KdMinor)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetSystemVersionString(Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionString, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetSystemVersionStringWide(Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionStringWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetContextStackTrace(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextStackTrace, uintptr(unsafe.Pointer(this)), uintptr(StartContext), uintptr(StartContextSize), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl4) OutputContextStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputContextStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetStoredEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, Context unsafe.Pointer, ContextSize uint32, ContextUsed *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStoredEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(Context), uintptr(ContextSize), uintptr(unsafe.Pointer(ContextUsed)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetManagedStatus(Flags *uint32, WhichString uint32, String PSTR, StringSize uint32, StringNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetManagedStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)), uintptr(WhichString), uintptr(unsafe.Pointer(String)), uintptr(StringSize), uintptr(unsafe.Pointer(StringNeeded)))
	return HRESULT(ret)
}

func (this *IDebugControl4) GetManagedStatusWide(Flags *uint32, WhichString uint32, String PWSTR, StringSize uint32, StringNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetManagedStatusWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)), uintptr(WhichString), uintptr(unsafe.Pointer(String)), uintptr(StringSize), uintptr(unsafe.Pointer(StringNeeded)))
	return HRESULT(ret)
}

func (this *IDebugControl4) ResetManagedStatus(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetManagedStatus, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

// B2FFE162-2412-429F-8D1D-5BF6DD824696
var IID_IDebugControl5 = syscall.GUID{0xB2FFE162, 0x2412, 0x429F,
	[8]byte{0x8D, 0x1D, 0x5B, 0xF6, 0xDD, 0x82, 0x46, 0x96}}

type IDebugControl5Interface interface {
	IUnknownInterface
	GetInterrupt() HRESULT
	SetInterrupt(Flags uint32) HRESULT
	GetInterruptTimeout(Seconds *uint32) HRESULT
	SetInterruptTimeout(Seconds uint32) HRESULT
	GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFile(File PSTR, Append BOOL) HRESULT
	CloseLogFile() HRESULT
	GetLogMask(Mask *uint32) HRESULT
	SetLogMask(Mask uint32) HRESULT
	Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInput(Buffer PSTR) HRESULT
	Output(Mask uint32, Format PSTR) HRESULT
	OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT
	ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT
	ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT
	OutputPrompt(OutputControl uint32, Format PSTR) HRESULT
	OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT
	GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT
	OutputVersionInformation(OutputControl uint32) HRESULT
	GetNotifyEventHandle(Handle *uint64) HRESULT
	SetNotifyEventHandle(Handle uint64) HRESULT
	Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT
	Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetDisassembleEffectiveOffset(Offset *uint64) HRESULT
	OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT
	OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT
	GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT
	GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT
	GetReturnOffset(Offset *uint64) HRESULT
	OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT
	GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT
	GetActualProcessorType(Type *uint32) HRESULT
	GetExecutingProcessorType(Type *uint32) HRESULT
	GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT
	GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetNumberProcessors(Number *uint32) HRESULT
	GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT
	GetPageSize(Size *uint32) HRESULT
	IsPointer64Bit() HRESULT
	ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT
	GetNumberSupportedProcessorTypes(Number *uint32) HRESULT
	GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEffectiveProcessorType(Type *uint32) HRESULT
	SetEffectiveProcessorType(Type uint32) HRESULT
	GetExecutionStatus(Status *uint32) HRESULT
	SetExecutionStatus(Status uint32) HRESULT
	GetCodeLevel(Level *uint32) HRESULT
	SetCodeLevel(Level uint32) HRESULT
	GetEngineOptions(Options *uint32) HRESULT
	AddEngineOptions(Options uint32) HRESULT
	RemoveEngineOptions(Options uint32) HRESULT
	SetEngineOptions(Options uint32) HRESULT
	GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT
	SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT
	GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacro(Slot uint32, Macro PSTR) HRESULT
	GetRadix(Radix *uint32) HRESULT
	SetRadix(Radix uint32) HRESULT
	Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT
	CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT
	Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT
	ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT
	GetNumberBreakpoints(Number *uint32) HRESULT
	GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
	AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT
	RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT
	AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT
	RemoveExtension(Handle uint64) HRESULT
	GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT
	CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT
	GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT
	GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT
	GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT
	GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT
	GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommand(Index uint32, Command PSTR) HRESULT
	GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT
	GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT
	WaitForEvent(Flags uint32, Timeout uint32) HRESULT
	GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetCurrentTimeDate(TimeDate *uint32) HRESULT
	GetCurrentSystemUpTime(UpTime *uint32) HRESULT
	GetDumpFormatFlags(FormatFlags *uint32) HRESULT
	GetNumberTextReplacements(NumRepl *uint32) HRESULT
	GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT
	RemoveTextReplacements() HRESULT
	OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT
	GetAssemblyOptions(Options *uint32) HRESULT
	AddAssemblyOptions(Options uint32) HRESULT
	RemoveAssemblyOptions(Options uint32) HRESULT
	SetAssemblyOptions(Options uint32) HRESULT
	GetExpressionSyntax(Flags *uint32) HRESULT
	SetExpressionSyntax(Flags uint32) HRESULT
	SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT
	GetNumberExpressionSyntaxes(Number *uint32) HRESULT
	GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetNumberEvents(Events *uint32) HRESULT
	GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT
	GetCurrentEventIndex(Index *uint32) HRESULT
	SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT
	GetLogFileWide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFileWide(File PWSTR, Append BOOL) HRESULT
	InputWide(Buffer PWSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInputWide(Buffer PWSTR) HRESULT
	OutputWide(Mask uint32, Format PWSTR) HRESULT
	OutputVaListWide(Mask uint32, Format PWSTR, Args *int8) HRESULT
	ControlledOutputWide(OutputControl uint32, Mask uint32, Format PWSTR) HRESULT
	ControlledOutputVaListWide(OutputControl uint32, Mask uint32, Format PWSTR, Args *int8) HRESULT
	OutputPromptWide(OutputControl uint32, Format PWSTR) HRESULT
	OutputPromptVaListWide(OutputControl uint32, Format PWSTR, Args *int8) HRESULT
	GetPromptTextWide(Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT
	AssembleWide(Offset uint64, Instr PWSTR, EndOffset *uint64) HRESULT
	DisassembleWide(Offset uint64, Flags uint32, Buffer PWSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetProcessorTypeNamesWide(Type uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetTextMacroWide(Slot uint32, Buffer PWSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacroWide(Slot uint32, Macro PWSTR) HRESULT
	EvaluateWide(Expression PWSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	ExecuteWide(OutputControl uint32, Command PWSTR, Flags uint32) HRESULT
	ExecuteCommandFileWide(OutputControl uint32, CommandFile PWSTR, Flags uint32) HRESULT
	GetBreakpointByIndex2(Index uint32, Bp **IDebugBreakpoint2) HRESULT
	GetBreakpointById2(Id uint32, Bp **IDebugBreakpoint2) HRESULT
	AddBreakpoint2(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint2) HRESULT
	RemoveBreakpoint2(Bp *IDebugBreakpoint2) HRESULT
	AddExtensionWide(Path PWSTR, Flags uint32, Handle *uint64) HRESULT
	GetExtensionByPathWide(Path PWSTR, Handle *uint64) HRESULT
	CallExtensionWide(Handle uint64, Function PWSTR, Arguments PWSTR) HRESULT
	GetExtensionFunctionWide(Handle uint64, FuncName PWSTR, Function *FARPROC) HRESULT
	GetEventFilterTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommandWide(Index uint32, Command PWSTR) HRESULT
	GetSpecificFilterArgumentWide(Index uint32, Buffer PWSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgumentWide(Index uint32, Argument PWSTR) HRESULT
	GetExceptionFilterSecondCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommandWide(Index uint32, Command PWSTR) HRESULT
	GetLastEventInformationWide(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PWSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetTextReplacementWide(SrcText PWSTR, Index uint32, SrcBuffer PWSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PWSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacementWide(SrcText PWSTR, DstText PWSTR) HRESULT
	SetExpressionSyntaxByNameWide(AbbrevName PWSTR) HRESULT
	GetExpressionSyntaxNamesWide(Index uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEventIndexDescriptionWide(Index uint32, Which uint32, Buffer PWSTR, BufferSize uint32, DescSize *uint32) HRESULT
	GetLogFile2(Buffer PSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT
	OpenLogFile2(File PSTR, Flags uint32) HRESULT
	GetLogFile2Wide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT
	OpenLogFile2Wide(File PWSTR, Flags uint32) HRESULT
	GetSystemVersionValues(PlatformId *uint32, Win32Major *uint32, Win32Minor *uint32, KdMajor *uint32, KdMinor *uint32) HRESULT
	GetSystemVersionString(Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSystemVersionStringWide(Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetContextStackTrace(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT
	OutputContextStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT
	GetStoredEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, Context unsafe.Pointer, ContextSize uint32, ContextUsed *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32) HRESULT
	GetManagedStatus(Flags *uint32, WhichString uint32, String PSTR, StringSize uint32, StringNeeded *uint32) HRESULT
	GetManagedStatusWide(Flags *uint32, WhichString uint32, String PWSTR, StringSize uint32, StringNeeded *uint32) HRESULT
	ResetManagedStatus(Flags uint32) HRESULT
	GetStackTraceEx(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FramesFilled *uint32) HRESULT
	OutputStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, Flags uint32) HRESULT
	GetContextStackTraceEx(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT
	OutputContextStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT
	GetBreakpointByGuid(Guid *syscall.GUID, Bp **IDebugBreakpoint3) HRESULT
}

type IDebugControl5Vtbl struct {
	IUnknownVtbl
	GetInterrupt                             uintptr
	SetInterrupt                             uintptr
	GetInterruptTimeout                      uintptr
	SetInterruptTimeout                      uintptr
	GetLogFile                               uintptr
	OpenLogFile                              uintptr
	CloseLogFile                             uintptr
	GetLogMask                               uintptr
	SetLogMask                               uintptr
	Input                                    uintptr
	ReturnInput                              uintptr
	Output                                   uintptr
	OutputVaList                             uintptr
	ControlledOutput                         uintptr
	ControlledOutputVaList                   uintptr
	OutputPrompt                             uintptr
	OutputPromptVaList                       uintptr
	GetPromptText                            uintptr
	OutputCurrentState                       uintptr
	OutputVersionInformation                 uintptr
	GetNotifyEventHandle                     uintptr
	SetNotifyEventHandle                     uintptr
	Assemble                                 uintptr
	Disassemble                              uintptr
	GetDisassembleEffectiveOffset            uintptr
	OutputDisassembly                        uintptr
	OutputDisassemblyLines                   uintptr
	GetNearInstruction                       uintptr
	GetStackTrace                            uintptr
	GetReturnOffset                          uintptr
	OutputStackTrace                         uintptr
	GetDebuggeeType                          uintptr
	GetActualProcessorType                   uintptr
	GetExecutingProcessorType                uintptr
	GetNumberPossibleExecutingProcessorTypes uintptr
	GetPossibleExecutingProcessorTypes       uintptr
	GetNumberProcessors                      uintptr
	GetSystemVersion                         uintptr
	GetPageSize                              uintptr
	IsPointer64Bit                           uintptr
	ReadBugCheckData                         uintptr
	GetNumberSupportedProcessorTypes         uintptr
	GetSupportedProcessorTypes               uintptr
	GetProcessorTypeNames                    uintptr
	GetEffectiveProcessorType                uintptr
	SetEffectiveProcessorType                uintptr
	GetExecutionStatus                       uintptr
	SetExecutionStatus                       uintptr
	GetCodeLevel                             uintptr
	SetCodeLevel                             uintptr
	GetEngineOptions                         uintptr
	AddEngineOptions                         uintptr
	RemoveEngineOptions                      uintptr
	SetEngineOptions                         uintptr
	GetSystemErrorControl                    uintptr
	SetSystemErrorControl                    uintptr
	GetTextMacro                             uintptr
	SetTextMacro                             uintptr
	GetRadix                                 uintptr
	SetRadix                                 uintptr
	Evaluate                                 uintptr
	CoerceValue                              uintptr
	CoerceValues                             uintptr
	Execute                                  uintptr
	ExecuteCommandFile                       uintptr
	GetNumberBreakpoints                     uintptr
	GetBreakpointByIndex                     uintptr
	GetBreakpointById                        uintptr
	GetBreakpointParameters                  uintptr
	AddBreakpoint                            uintptr
	RemoveBreakpoint                         uintptr
	AddExtension                             uintptr
	RemoveExtension                          uintptr
	GetExtensionByPath                       uintptr
	CallExtension                            uintptr
	GetExtensionFunction                     uintptr
	GetWindbgExtensionApis32                 uintptr
	GetWindbgExtensionApis64                 uintptr
	GetNumberEventFilters                    uintptr
	GetEventFilterText                       uintptr
	GetEventFilterCommand                    uintptr
	SetEventFilterCommand                    uintptr
	GetSpecificFilterParameters              uintptr
	SetSpecificFilterParameters              uintptr
	GetSpecificFilterArgument                uintptr
	SetSpecificFilterArgument                uintptr
	GetExceptionFilterParameters             uintptr
	SetExceptionFilterParameters             uintptr
	GetExceptionFilterSecondCommand          uintptr
	SetExceptionFilterSecondCommand          uintptr
	WaitForEvent                             uintptr
	GetLastEventInformation                  uintptr
	GetCurrentTimeDate                       uintptr
	GetCurrentSystemUpTime                   uintptr
	GetDumpFormatFlags                       uintptr
	GetNumberTextReplacements                uintptr
	GetTextReplacement                       uintptr
	SetTextReplacement                       uintptr
	RemoveTextReplacements                   uintptr
	OutputTextReplacements                   uintptr
	GetAssemblyOptions                       uintptr
	AddAssemblyOptions                       uintptr
	RemoveAssemblyOptions                    uintptr
	SetAssemblyOptions                       uintptr
	GetExpressionSyntax                      uintptr
	SetExpressionSyntax                      uintptr
	SetExpressionSyntaxByName                uintptr
	GetNumberExpressionSyntaxes              uintptr
	GetExpressionSyntaxNames                 uintptr
	GetNumberEvents                          uintptr
	GetEventIndexDescription                 uintptr
	GetCurrentEventIndex                     uintptr
	SetNextEventIndex                        uintptr
	GetLogFileWide                           uintptr
	OpenLogFileWide                          uintptr
	InputWide                                uintptr
	ReturnInputWide                          uintptr
	OutputWide                               uintptr
	OutputVaListWide                         uintptr
	ControlledOutputWide                     uintptr
	ControlledOutputVaListWide               uintptr
	OutputPromptWide                         uintptr
	OutputPromptVaListWide                   uintptr
	GetPromptTextWide                        uintptr
	AssembleWide                             uintptr
	DisassembleWide                          uintptr
	GetProcessorTypeNamesWide                uintptr
	GetTextMacroWide                         uintptr
	SetTextMacroWide                         uintptr
	EvaluateWide                             uintptr
	ExecuteWide                              uintptr
	ExecuteCommandFileWide                   uintptr
	GetBreakpointByIndex2                    uintptr
	GetBreakpointById2                       uintptr
	AddBreakpoint2                           uintptr
	RemoveBreakpoint2                        uintptr
	AddExtensionWide                         uintptr
	GetExtensionByPathWide                   uintptr
	CallExtensionWide                        uintptr
	GetExtensionFunctionWide                 uintptr
	GetEventFilterTextWide                   uintptr
	GetEventFilterCommandWide                uintptr
	SetEventFilterCommandWide                uintptr
	GetSpecificFilterArgumentWide            uintptr
	SetSpecificFilterArgumentWide            uintptr
	GetExceptionFilterSecondCommandWide      uintptr
	SetExceptionFilterSecondCommandWide      uintptr
	GetLastEventInformationWide              uintptr
	GetTextReplacementWide                   uintptr
	SetTextReplacementWide                   uintptr
	SetExpressionSyntaxByNameWide            uintptr
	GetExpressionSyntaxNamesWide             uintptr
	GetEventIndexDescriptionWide             uintptr
	GetLogFile2                              uintptr
	OpenLogFile2                             uintptr
	GetLogFile2Wide                          uintptr
	OpenLogFile2Wide                         uintptr
	GetSystemVersionValues                   uintptr
	GetSystemVersionString                   uintptr
	GetSystemVersionStringWide               uintptr
	GetContextStackTrace                     uintptr
	OutputContextStackTrace                  uintptr
	GetStoredEventInformation                uintptr
	GetManagedStatus                         uintptr
	GetManagedStatusWide                     uintptr
	ResetManagedStatus                       uintptr
	GetStackTraceEx                          uintptr
	OutputStackTraceEx                       uintptr
	GetContextStackTraceEx                   uintptr
	OutputContextStackTraceEx                uintptr
	GetBreakpointByGuid                      uintptr
}

type IDebugControl5 struct {
	IUnknown
}

func (this *IDebugControl5) Vtbl() *IDebugControl5Vtbl {
	return (*IDebugControl5Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugControl5) GetInterrupt() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterrupt, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetInterrupt(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterrupt, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetInterruptTimeout(Seconds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Seconds)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetInterruptTimeout(Seconds uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(Seconds))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OpenLogFile(File PSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl5) CloseLogFile() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CloseLogFile, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetLogMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetLogMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetLogMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugControl5) Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Input, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) ReturnInput(Buffer PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl5) Output(Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaList, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl5) ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutput, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl5) ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputPrompt(OutputControl uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPrompt, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputCurrentState, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputVersionInformation(OutputControl uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(OutputControl))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNotifyEventHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetNotifyEventHandle(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl5) Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Assemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl5) Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Disassemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetDisassembleEffectiveOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDisassembleEffectiveOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassembly, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassemblyLines, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(PreviousLines), uintptr(TotalLines), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(OffsetLine)), uintptr(unsafe.Pointer(StartOffset)), uintptr(unsafe.Pointer(EndOffset)), uintptr(unsafe.Pointer(LineOffsets)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearInstruction, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NearOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTrace, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetReturnOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetReturnOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebuggeeType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Class)), uintptr(unsafe.Pointer(Qualifier)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetActualProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetActualProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExecutingProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutingProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNumberProcessors(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcessors, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersion, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Major)), uintptr(unsafe.Pointer(Minor)), uintptr(unsafe.Pointer(ServicePackString)), uintptr(ServicePackStringSize), uintptr(unsafe.Pointer(ServicePackStringUsed)), uintptr(unsafe.Pointer(ServicePackNumber)), uintptr(unsafe.Pointer(BuildString)), uintptr(BuildStringSize), uintptr(unsafe.Pointer(BuildStringUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetPageSize(Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPageSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugControl5) IsPointer64Bit() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsPointer64Bit, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl5) ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBugCheckData, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)), uintptr(unsafe.Pointer(Arg1)), uintptr(unsafe.Pointer(Arg2)), uintptr(unsafe.Pointer(Arg3)), uintptr(unsafe.Pointer(Arg4)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNumberSupportedProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNames, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetEffectiveProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetEffectiveProcessorType(Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExecutionStatus(Status *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Status)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetExecutionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetCodeLevel(Level *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Level)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetCodeLevel(Level uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(Level))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetEngineOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl5) AddEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl5) RemoveEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(OutputLevel)), uintptr(unsafe.Pointer(BreakLevel)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(OutputLevel), uintptr(BreakLevel))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetTextMacro(Slot uint32, Macro PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetRadix(Radix *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRadix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Radix)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetRadix(Radix uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetRadix, uintptr(unsafe.Pointer(this)), uintptr(Radix))
	return HRESULT(ret)
}

func (this *IDebugControl5) Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Evaluate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl5) CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(In)), uintptr(OutType), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl5) CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(In)), uintptr(unsafe.Pointer(OutTypes)), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl5) Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Execute, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFile, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNumberBreakpoints(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberBreakpoints, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl5) AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl5) RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl5) AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtension, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl5) RemoveExtension(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl5) CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunction, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis32, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis64, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventFilters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SpecificEvents)), uintptr(unsafe.Pointer(SpecificExceptions)), uintptr(unsafe.Pointer(ArbitraryExceptions)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterText, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetEventFilterCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Codes)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl5) WaitForEvent(Flags uint32, Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForEvent, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetCurrentTimeDate(TimeDate *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentTimeDate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(TimeDate)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetCurrentSystemUpTime(UpTime *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemUpTime, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(UpTime)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetDumpFormatFlags(FormatFlags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFormatFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FormatFlags)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNumberTextReplacements(NumRepl *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NumRepl)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl5) RemoveTextReplacements() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTextReplacements, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetAssemblyOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl5) AddAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl5) RemoveAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExpressionSyntax(Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetExpressionSyntax(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntaxByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(AbbrevName)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNumberExpressionSyntaxes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberExpressionSyntaxes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntaxNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetNumberEvents(Events *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEvents, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Events)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventIndexDescription, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DescSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetCurrentEventIndex(Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentEventIndex, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNextEventIndex, uintptr(unsafe.Pointer(this)), uintptr(Relation), uintptr(Value), uintptr(unsafe.Pointer(NextIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetLogFileWide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OpenLogFileWide(File PWSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl5) InputWide(Buffer PWSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InputWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) ReturnInputWide(Buffer PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInputWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputWide(Mask uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputWide, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputVaListWide(Mask uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaListWide, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl5) ControlledOutputWide(OutputControl uint32, Mask uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl5) ControlledOutputVaListWide(OutputControl uint32, Mask uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaListWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputPromptWide(OutputControl uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputPromptVaListWide(OutputControl uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaListWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetPromptTextWide(Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptTextWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) AssembleWide(Offset uint64, Instr PWSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AssembleWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl5) DisassembleWide(Offset uint64, Flags uint32, Buffer PWSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisassembleWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetProcessorTypeNamesWide(Type uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNamesWide, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetTextMacroWide(Slot uint32, Buffer PWSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacroWide, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetTextMacroWide(Slot uint32, Macro PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacroWide, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl5) EvaluateWide(Expression PWSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EvaluateWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl5) ExecuteWide(OutputControl uint32, Command PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) ExecuteCommandFileWide(OutputControl uint32, CommandFile PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFileWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetBreakpointByIndex2(Index uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex2, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetBreakpointById2(Id uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById2, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl5) AddBreakpoint2(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint2, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl5) RemoveBreakpoint2(Bp *IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl5) AddExtensionWide(Path PWSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtensionWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExtensionByPathWide(Path PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl5) CallExtensionWide(Handle uint64, Function PWSTR, Arguments PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtensionWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExtensionFunctionWide(Handle uint64, FuncName PWSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunctionWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetEventFilterTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterTextWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetEventFilterCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetEventFilterCommandWide(Index uint32, Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetSpecificFilterArgumentWide(Index uint32, Buffer PWSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgumentWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetSpecificFilterArgumentWide(Index uint32, Argument PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgumentWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExceptionFilterSecondCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetExceptionFilterSecondCommandWide(Index uint32, Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetLastEventInformationWide(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PWSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformationWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetTextReplacementWide(SrcText PWSTR, Index uint32, SrcBuffer PWSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PWSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacementWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetTextReplacementWide(SrcText PWSTR, DstText PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacementWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl5) SetExpressionSyntaxByNameWide(AbbrevName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntaxByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(AbbrevName)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetExpressionSyntaxNamesWide(Index uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntaxNamesWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetEventIndexDescriptionWide(Index uint32, Which uint32, Buffer PWSTR, BufferSize uint32, DescSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventIndexDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DescSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetLogFile2(Buffer PSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OpenLogFile2(File PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetLogFile2Wide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OpenLogFile2Wide(File PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetSystemVersionValues(PlatformId *uint32, Win32Major *uint32, Win32Minor *uint32, KdMajor *uint32, KdMinor *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionValues, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Win32Major)), uintptr(unsafe.Pointer(Win32Minor)), uintptr(unsafe.Pointer(KdMajor)), uintptr(unsafe.Pointer(KdMinor)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetSystemVersionString(Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionString, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetSystemVersionStringWide(Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionStringWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetContextStackTrace(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextStackTrace, uintptr(unsafe.Pointer(this)), uintptr(StartContext), uintptr(StartContextSize), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputContextStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputContextStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetStoredEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, Context unsafe.Pointer, ContextSize uint32, ContextUsed *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStoredEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(Context), uintptr(ContextSize), uintptr(unsafe.Pointer(ContextUsed)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetManagedStatus(Flags *uint32, WhichString uint32, String PSTR, StringSize uint32, StringNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetManagedStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)), uintptr(WhichString), uintptr(unsafe.Pointer(String)), uintptr(StringSize), uintptr(unsafe.Pointer(StringNeeded)))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetManagedStatusWide(Flags *uint32, WhichString uint32, String PWSTR, StringSize uint32, StringNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetManagedStatusWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)), uintptr(WhichString), uintptr(unsafe.Pointer(String)), uintptr(StringSize), uintptr(unsafe.Pointer(StringNeeded)))
	return HRESULT(ret)
}

func (this *IDebugControl5) ResetManagedStatus(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetManagedStatus, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetStackTraceEx(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetContextStackTraceEx(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(StartContext), uintptr(StartContextSize), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl5) OutputContextStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputContextStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl5) GetBreakpointByGuid(Guid *syscall.GUID, Bp **IDebugBreakpoint3) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByGuid, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Guid)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

// BC0D583F-126D-43A1-9CC4-A860AB1D537B
var IID_IDebugControl6 = syscall.GUID{0xBC0D583F, 0x126D, 0x43A1,
	[8]byte{0x9C, 0xC4, 0xA8, 0x60, 0xAB, 0x1D, 0x53, 0x7B}}

type IDebugControl6Interface interface {
	IUnknownInterface
	GetInterrupt() HRESULT
	SetInterrupt(Flags uint32) HRESULT
	GetInterruptTimeout(Seconds *uint32) HRESULT
	SetInterruptTimeout(Seconds uint32) HRESULT
	GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFile(File PSTR, Append BOOL) HRESULT
	CloseLogFile() HRESULT
	GetLogMask(Mask *uint32) HRESULT
	SetLogMask(Mask uint32) HRESULT
	Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInput(Buffer PSTR) HRESULT
	Output(Mask uint32, Format PSTR) HRESULT
	OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT
	ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT
	ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT
	OutputPrompt(OutputControl uint32, Format PSTR) HRESULT
	OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT
	GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT
	OutputVersionInformation(OutputControl uint32) HRESULT
	GetNotifyEventHandle(Handle *uint64) HRESULT
	SetNotifyEventHandle(Handle uint64) HRESULT
	Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT
	Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetDisassembleEffectiveOffset(Offset *uint64) HRESULT
	OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT
	OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT
	GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT
	GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT
	GetReturnOffset(Offset *uint64) HRESULT
	OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT
	GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT
	GetActualProcessorType(Type *uint32) HRESULT
	GetExecutingProcessorType(Type *uint32) HRESULT
	GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT
	GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetNumberProcessors(Number *uint32) HRESULT
	GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT
	GetPageSize(Size *uint32) HRESULT
	IsPointer64Bit() HRESULT
	ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT
	GetNumberSupportedProcessorTypes(Number *uint32) HRESULT
	GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEffectiveProcessorType(Type *uint32) HRESULT
	SetEffectiveProcessorType(Type uint32) HRESULT
	GetExecutionStatus(Status *uint32) HRESULT
	SetExecutionStatus(Status uint32) HRESULT
	GetCodeLevel(Level *uint32) HRESULT
	SetCodeLevel(Level uint32) HRESULT
	GetEngineOptions(Options *uint32) HRESULT
	AddEngineOptions(Options uint32) HRESULT
	RemoveEngineOptions(Options uint32) HRESULT
	SetEngineOptions(Options uint32) HRESULT
	GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT
	SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT
	GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacro(Slot uint32, Macro PSTR) HRESULT
	GetRadix(Radix *uint32) HRESULT
	SetRadix(Radix uint32) HRESULT
	Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT
	CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT
	Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT
	ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT
	GetNumberBreakpoints(Number *uint32) HRESULT
	GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
	AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT
	RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT
	AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT
	RemoveExtension(Handle uint64) HRESULT
	GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT
	CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT
	GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT
	GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT
	GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT
	GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT
	GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommand(Index uint32, Command PSTR) HRESULT
	GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT
	GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT
	WaitForEvent(Flags uint32, Timeout uint32) HRESULT
	GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetCurrentTimeDate(TimeDate *uint32) HRESULT
	GetCurrentSystemUpTime(UpTime *uint32) HRESULT
	GetDumpFormatFlags(FormatFlags *uint32) HRESULT
	GetNumberTextReplacements(NumRepl *uint32) HRESULT
	GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT
	RemoveTextReplacements() HRESULT
	OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT
	GetAssemblyOptions(Options *uint32) HRESULT
	AddAssemblyOptions(Options uint32) HRESULT
	RemoveAssemblyOptions(Options uint32) HRESULT
	SetAssemblyOptions(Options uint32) HRESULT
	GetExpressionSyntax(Flags *uint32) HRESULT
	SetExpressionSyntax(Flags uint32) HRESULT
	SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT
	GetNumberExpressionSyntaxes(Number *uint32) HRESULT
	GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetNumberEvents(Events *uint32) HRESULT
	GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT
	GetCurrentEventIndex(Index *uint32) HRESULT
	SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT
	GetLogFileWide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFileWide(File PWSTR, Append BOOL) HRESULT
	InputWide(Buffer PWSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInputWide(Buffer PWSTR) HRESULT
	OutputWide(Mask uint32, Format PWSTR) HRESULT
	OutputVaListWide(Mask uint32, Format PWSTR, Args *int8) HRESULT
	ControlledOutputWide(OutputControl uint32, Mask uint32, Format PWSTR) HRESULT
	ControlledOutputVaListWide(OutputControl uint32, Mask uint32, Format PWSTR, Args *int8) HRESULT
	OutputPromptWide(OutputControl uint32, Format PWSTR) HRESULT
	OutputPromptVaListWide(OutputControl uint32, Format PWSTR, Args *int8) HRESULT
	GetPromptTextWide(Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT
	AssembleWide(Offset uint64, Instr PWSTR, EndOffset *uint64) HRESULT
	DisassembleWide(Offset uint64, Flags uint32, Buffer PWSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetProcessorTypeNamesWide(Type uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetTextMacroWide(Slot uint32, Buffer PWSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacroWide(Slot uint32, Macro PWSTR) HRESULT
	EvaluateWide(Expression PWSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	ExecuteWide(OutputControl uint32, Command PWSTR, Flags uint32) HRESULT
	ExecuteCommandFileWide(OutputControl uint32, CommandFile PWSTR, Flags uint32) HRESULT
	GetBreakpointByIndex2(Index uint32, Bp **IDebugBreakpoint2) HRESULT
	GetBreakpointById2(Id uint32, Bp **IDebugBreakpoint2) HRESULT
	AddBreakpoint2(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint2) HRESULT
	RemoveBreakpoint2(Bp *IDebugBreakpoint2) HRESULT
	AddExtensionWide(Path PWSTR, Flags uint32, Handle *uint64) HRESULT
	GetExtensionByPathWide(Path PWSTR, Handle *uint64) HRESULT
	CallExtensionWide(Handle uint64, Function PWSTR, Arguments PWSTR) HRESULT
	GetExtensionFunctionWide(Handle uint64, FuncName PWSTR, Function *FARPROC) HRESULT
	GetEventFilterTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommandWide(Index uint32, Command PWSTR) HRESULT
	GetSpecificFilterArgumentWide(Index uint32, Buffer PWSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgumentWide(Index uint32, Argument PWSTR) HRESULT
	GetExceptionFilterSecondCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommandWide(Index uint32, Command PWSTR) HRESULT
	GetLastEventInformationWide(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PWSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetTextReplacementWide(SrcText PWSTR, Index uint32, SrcBuffer PWSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PWSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacementWide(SrcText PWSTR, DstText PWSTR) HRESULT
	SetExpressionSyntaxByNameWide(AbbrevName PWSTR) HRESULT
	GetExpressionSyntaxNamesWide(Index uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEventIndexDescriptionWide(Index uint32, Which uint32, Buffer PWSTR, BufferSize uint32, DescSize *uint32) HRESULT
	GetLogFile2(Buffer PSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT
	OpenLogFile2(File PSTR, Flags uint32) HRESULT
	GetLogFile2Wide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT
	OpenLogFile2Wide(File PWSTR, Flags uint32) HRESULT
	GetSystemVersionValues(PlatformId *uint32, Win32Major *uint32, Win32Minor *uint32, KdMajor *uint32, KdMinor *uint32) HRESULT
	GetSystemVersionString(Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSystemVersionStringWide(Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetContextStackTrace(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT
	OutputContextStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT
	GetStoredEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, Context unsafe.Pointer, ContextSize uint32, ContextUsed *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32) HRESULT
	GetManagedStatus(Flags *uint32, WhichString uint32, String PSTR, StringSize uint32, StringNeeded *uint32) HRESULT
	GetManagedStatusWide(Flags *uint32, WhichString uint32, String PWSTR, StringSize uint32, StringNeeded *uint32) HRESULT
	ResetManagedStatus(Flags uint32) HRESULT
	GetStackTraceEx(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FramesFilled *uint32) HRESULT
	OutputStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, Flags uint32) HRESULT
	GetContextStackTraceEx(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT
	OutputContextStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT
	GetBreakpointByGuid(Guid *syscall.GUID, Bp **IDebugBreakpoint3) HRESULT
	GetExecutionStatusEx(Status *uint32) HRESULT
	GetSynchronizationStatus(SendsAttempted *uint32, SecondsSinceLastResponse *uint32) HRESULT
}

type IDebugControl6Vtbl struct {
	IUnknownVtbl
	GetInterrupt                             uintptr
	SetInterrupt                             uintptr
	GetInterruptTimeout                      uintptr
	SetInterruptTimeout                      uintptr
	GetLogFile                               uintptr
	OpenLogFile                              uintptr
	CloseLogFile                             uintptr
	GetLogMask                               uintptr
	SetLogMask                               uintptr
	Input                                    uintptr
	ReturnInput                              uintptr
	Output                                   uintptr
	OutputVaList                             uintptr
	ControlledOutput                         uintptr
	ControlledOutputVaList                   uintptr
	OutputPrompt                             uintptr
	OutputPromptVaList                       uintptr
	GetPromptText                            uintptr
	OutputCurrentState                       uintptr
	OutputVersionInformation                 uintptr
	GetNotifyEventHandle                     uintptr
	SetNotifyEventHandle                     uintptr
	Assemble                                 uintptr
	Disassemble                              uintptr
	GetDisassembleEffectiveOffset            uintptr
	OutputDisassembly                        uintptr
	OutputDisassemblyLines                   uintptr
	GetNearInstruction                       uintptr
	GetStackTrace                            uintptr
	GetReturnOffset                          uintptr
	OutputStackTrace                         uintptr
	GetDebuggeeType                          uintptr
	GetActualProcessorType                   uintptr
	GetExecutingProcessorType                uintptr
	GetNumberPossibleExecutingProcessorTypes uintptr
	GetPossibleExecutingProcessorTypes       uintptr
	GetNumberProcessors                      uintptr
	GetSystemVersion                         uintptr
	GetPageSize                              uintptr
	IsPointer64Bit                           uintptr
	ReadBugCheckData                         uintptr
	GetNumberSupportedProcessorTypes         uintptr
	GetSupportedProcessorTypes               uintptr
	GetProcessorTypeNames                    uintptr
	GetEffectiveProcessorType                uintptr
	SetEffectiveProcessorType                uintptr
	GetExecutionStatus                       uintptr
	SetExecutionStatus                       uintptr
	GetCodeLevel                             uintptr
	SetCodeLevel                             uintptr
	GetEngineOptions                         uintptr
	AddEngineOptions                         uintptr
	RemoveEngineOptions                      uintptr
	SetEngineOptions                         uintptr
	GetSystemErrorControl                    uintptr
	SetSystemErrorControl                    uintptr
	GetTextMacro                             uintptr
	SetTextMacro                             uintptr
	GetRadix                                 uintptr
	SetRadix                                 uintptr
	Evaluate                                 uintptr
	CoerceValue                              uintptr
	CoerceValues                             uintptr
	Execute                                  uintptr
	ExecuteCommandFile                       uintptr
	GetNumberBreakpoints                     uintptr
	GetBreakpointByIndex                     uintptr
	GetBreakpointById                        uintptr
	GetBreakpointParameters                  uintptr
	AddBreakpoint                            uintptr
	RemoveBreakpoint                         uintptr
	AddExtension                             uintptr
	RemoveExtension                          uintptr
	GetExtensionByPath                       uintptr
	CallExtension                            uintptr
	GetExtensionFunction                     uintptr
	GetWindbgExtensionApis32                 uintptr
	GetWindbgExtensionApis64                 uintptr
	GetNumberEventFilters                    uintptr
	GetEventFilterText                       uintptr
	GetEventFilterCommand                    uintptr
	SetEventFilterCommand                    uintptr
	GetSpecificFilterParameters              uintptr
	SetSpecificFilterParameters              uintptr
	GetSpecificFilterArgument                uintptr
	SetSpecificFilterArgument                uintptr
	GetExceptionFilterParameters             uintptr
	SetExceptionFilterParameters             uintptr
	GetExceptionFilterSecondCommand          uintptr
	SetExceptionFilterSecondCommand          uintptr
	WaitForEvent                             uintptr
	GetLastEventInformation                  uintptr
	GetCurrentTimeDate                       uintptr
	GetCurrentSystemUpTime                   uintptr
	GetDumpFormatFlags                       uintptr
	GetNumberTextReplacements                uintptr
	GetTextReplacement                       uintptr
	SetTextReplacement                       uintptr
	RemoveTextReplacements                   uintptr
	OutputTextReplacements                   uintptr
	GetAssemblyOptions                       uintptr
	AddAssemblyOptions                       uintptr
	RemoveAssemblyOptions                    uintptr
	SetAssemblyOptions                       uintptr
	GetExpressionSyntax                      uintptr
	SetExpressionSyntax                      uintptr
	SetExpressionSyntaxByName                uintptr
	GetNumberExpressionSyntaxes              uintptr
	GetExpressionSyntaxNames                 uintptr
	GetNumberEvents                          uintptr
	GetEventIndexDescription                 uintptr
	GetCurrentEventIndex                     uintptr
	SetNextEventIndex                        uintptr
	GetLogFileWide                           uintptr
	OpenLogFileWide                          uintptr
	InputWide                                uintptr
	ReturnInputWide                          uintptr
	OutputWide                               uintptr
	OutputVaListWide                         uintptr
	ControlledOutputWide                     uintptr
	ControlledOutputVaListWide               uintptr
	OutputPromptWide                         uintptr
	OutputPromptVaListWide                   uintptr
	GetPromptTextWide                        uintptr
	AssembleWide                             uintptr
	DisassembleWide                          uintptr
	GetProcessorTypeNamesWide                uintptr
	GetTextMacroWide                         uintptr
	SetTextMacroWide                         uintptr
	EvaluateWide                             uintptr
	ExecuteWide                              uintptr
	ExecuteCommandFileWide                   uintptr
	GetBreakpointByIndex2                    uintptr
	GetBreakpointById2                       uintptr
	AddBreakpoint2                           uintptr
	RemoveBreakpoint2                        uintptr
	AddExtensionWide                         uintptr
	GetExtensionByPathWide                   uintptr
	CallExtensionWide                        uintptr
	GetExtensionFunctionWide                 uintptr
	GetEventFilterTextWide                   uintptr
	GetEventFilterCommandWide                uintptr
	SetEventFilterCommandWide                uintptr
	GetSpecificFilterArgumentWide            uintptr
	SetSpecificFilterArgumentWide            uintptr
	GetExceptionFilterSecondCommandWide      uintptr
	SetExceptionFilterSecondCommandWide      uintptr
	GetLastEventInformationWide              uintptr
	GetTextReplacementWide                   uintptr
	SetTextReplacementWide                   uintptr
	SetExpressionSyntaxByNameWide            uintptr
	GetExpressionSyntaxNamesWide             uintptr
	GetEventIndexDescriptionWide             uintptr
	GetLogFile2                              uintptr
	OpenLogFile2                             uintptr
	GetLogFile2Wide                          uintptr
	OpenLogFile2Wide                         uintptr
	GetSystemVersionValues                   uintptr
	GetSystemVersionString                   uintptr
	GetSystemVersionStringWide               uintptr
	GetContextStackTrace                     uintptr
	OutputContextStackTrace                  uintptr
	GetStoredEventInformation                uintptr
	GetManagedStatus                         uintptr
	GetManagedStatusWide                     uintptr
	ResetManagedStatus                       uintptr
	GetStackTraceEx                          uintptr
	OutputStackTraceEx                       uintptr
	GetContextStackTraceEx                   uintptr
	OutputContextStackTraceEx                uintptr
	GetBreakpointByGuid                      uintptr
	GetExecutionStatusEx                     uintptr
	GetSynchronizationStatus                 uintptr
}

type IDebugControl6 struct {
	IUnknown
}

func (this *IDebugControl6) Vtbl() *IDebugControl6Vtbl {
	return (*IDebugControl6Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugControl6) GetInterrupt() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterrupt, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetInterrupt(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterrupt, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetInterruptTimeout(Seconds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Seconds)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetInterruptTimeout(Seconds uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(Seconds))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OpenLogFile(File PSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl6) CloseLogFile() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CloseLogFile, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetLogMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetLogMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetLogMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugControl6) Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Input, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) ReturnInput(Buffer PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl6) Output(Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaList, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl6) ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutput, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl6) ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputPrompt(OutputControl uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPrompt, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputCurrentState, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputVersionInformation(OutputControl uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(OutputControl))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNotifyEventHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetNotifyEventHandle(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl6) Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Assemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl6) Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Disassemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetDisassembleEffectiveOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDisassembleEffectiveOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassembly, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassemblyLines, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(PreviousLines), uintptr(TotalLines), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(OffsetLine)), uintptr(unsafe.Pointer(StartOffset)), uintptr(unsafe.Pointer(EndOffset)), uintptr(unsafe.Pointer(LineOffsets)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearInstruction, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NearOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTrace, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetReturnOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetReturnOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebuggeeType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Class)), uintptr(unsafe.Pointer(Qualifier)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetActualProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetActualProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExecutingProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutingProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNumberProcessors(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcessors, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersion, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Major)), uintptr(unsafe.Pointer(Minor)), uintptr(unsafe.Pointer(ServicePackString)), uintptr(ServicePackStringSize), uintptr(unsafe.Pointer(ServicePackStringUsed)), uintptr(unsafe.Pointer(ServicePackNumber)), uintptr(unsafe.Pointer(BuildString)), uintptr(BuildStringSize), uintptr(unsafe.Pointer(BuildStringUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetPageSize(Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPageSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugControl6) IsPointer64Bit() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsPointer64Bit, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl6) ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBugCheckData, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)), uintptr(unsafe.Pointer(Arg1)), uintptr(unsafe.Pointer(Arg2)), uintptr(unsafe.Pointer(Arg3)), uintptr(unsafe.Pointer(Arg4)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNumberSupportedProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNames, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetEffectiveProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetEffectiveProcessorType(Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExecutionStatus(Status *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Status)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetExecutionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetCodeLevel(Level *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Level)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetCodeLevel(Level uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(Level))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetEngineOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl6) AddEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl6) RemoveEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(OutputLevel)), uintptr(unsafe.Pointer(BreakLevel)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(OutputLevel), uintptr(BreakLevel))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetTextMacro(Slot uint32, Macro PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetRadix(Radix *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRadix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Radix)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetRadix(Radix uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetRadix, uintptr(unsafe.Pointer(this)), uintptr(Radix))
	return HRESULT(ret)
}

func (this *IDebugControl6) Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Evaluate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl6) CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(In)), uintptr(OutType), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl6) CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(In)), uintptr(unsafe.Pointer(OutTypes)), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl6) Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Execute, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFile, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNumberBreakpoints(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberBreakpoints, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl6) AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl6) RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl6) AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtension, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl6) RemoveExtension(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl6) CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunction, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis32, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis64, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventFilters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SpecificEvents)), uintptr(unsafe.Pointer(SpecificExceptions)), uintptr(unsafe.Pointer(ArbitraryExceptions)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterText, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetEventFilterCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Codes)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl6) WaitForEvent(Flags uint32, Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForEvent, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetCurrentTimeDate(TimeDate *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentTimeDate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(TimeDate)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetCurrentSystemUpTime(UpTime *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemUpTime, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(UpTime)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetDumpFormatFlags(FormatFlags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFormatFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FormatFlags)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNumberTextReplacements(NumRepl *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NumRepl)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl6) RemoveTextReplacements() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTextReplacements, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetAssemblyOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl6) AddAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl6) RemoveAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExpressionSyntax(Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetExpressionSyntax(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntaxByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(AbbrevName)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNumberExpressionSyntaxes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberExpressionSyntaxes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntaxNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetNumberEvents(Events *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEvents, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Events)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventIndexDescription, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DescSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetCurrentEventIndex(Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentEventIndex, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNextEventIndex, uintptr(unsafe.Pointer(this)), uintptr(Relation), uintptr(Value), uintptr(unsafe.Pointer(NextIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetLogFileWide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OpenLogFileWide(File PWSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl6) InputWide(Buffer PWSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InputWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) ReturnInputWide(Buffer PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInputWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputWide(Mask uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputWide, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputVaListWide(Mask uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaListWide, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl6) ControlledOutputWide(OutputControl uint32, Mask uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl6) ControlledOutputVaListWide(OutputControl uint32, Mask uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaListWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputPromptWide(OutputControl uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputPromptVaListWide(OutputControl uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaListWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetPromptTextWide(Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptTextWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) AssembleWide(Offset uint64, Instr PWSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AssembleWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl6) DisassembleWide(Offset uint64, Flags uint32, Buffer PWSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisassembleWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetProcessorTypeNamesWide(Type uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNamesWide, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetTextMacroWide(Slot uint32, Buffer PWSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacroWide, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetTextMacroWide(Slot uint32, Macro PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacroWide, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl6) EvaluateWide(Expression PWSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EvaluateWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl6) ExecuteWide(OutputControl uint32, Command PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) ExecuteCommandFileWide(OutputControl uint32, CommandFile PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFileWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetBreakpointByIndex2(Index uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex2, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetBreakpointById2(Id uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById2, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl6) AddBreakpoint2(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint2, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl6) RemoveBreakpoint2(Bp *IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl6) AddExtensionWide(Path PWSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtensionWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExtensionByPathWide(Path PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl6) CallExtensionWide(Handle uint64, Function PWSTR, Arguments PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtensionWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExtensionFunctionWide(Handle uint64, FuncName PWSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunctionWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetEventFilterTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterTextWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetEventFilterCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetEventFilterCommandWide(Index uint32, Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSpecificFilterArgumentWide(Index uint32, Buffer PWSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgumentWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetSpecificFilterArgumentWide(Index uint32, Argument PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgumentWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExceptionFilterSecondCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetExceptionFilterSecondCommandWide(Index uint32, Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetLastEventInformationWide(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PWSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformationWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetTextReplacementWide(SrcText PWSTR, Index uint32, SrcBuffer PWSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PWSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacementWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetTextReplacementWide(SrcText PWSTR, DstText PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacementWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl6) SetExpressionSyntaxByNameWide(AbbrevName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntaxByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(AbbrevName)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExpressionSyntaxNamesWide(Index uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntaxNamesWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetEventIndexDescriptionWide(Index uint32, Which uint32, Buffer PWSTR, BufferSize uint32, DescSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventIndexDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DescSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetLogFile2(Buffer PSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OpenLogFile2(File PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetLogFile2Wide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OpenLogFile2Wide(File PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSystemVersionValues(PlatformId *uint32, Win32Major *uint32, Win32Minor *uint32, KdMajor *uint32, KdMinor *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionValues, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Win32Major)), uintptr(unsafe.Pointer(Win32Minor)), uintptr(unsafe.Pointer(KdMajor)), uintptr(unsafe.Pointer(KdMinor)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSystemVersionString(Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionString, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSystemVersionStringWide(Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionStringWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetContextStackTrace(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextStackTrace, uintptr(unsafe.Pointer(this)), uintptr(StartContext), uintptr(StartContextSize), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputContextStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputContextStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetStoredEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, Context unsafe.Pointer, ContextSize uint32, ContextUsed *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStoredEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(Context), uintptr(ContextSize), uintptr(unsafe.Pointer(ContextUsed)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetManagedStatus(Flags *uint32, WhichString uint32, String PSTR, StringSize uint32, StringNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetManagedStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)), uintptr(WhichString), uintptr(unsafe.Pointer(String)), uintptr(StringSize), uintptr(unsafe.Pointer(StringNeeded)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetManagedStatusWide(Flags *uint32, WhichString uint32, String PWSTR, StringSize uint32, StringNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetManagedStatusWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)), uintptr(WhichString), uintptr(unsafe.Pointer(String)), uintptr(StringSize), uintptr(unsafe.Pointer(StringNeeded)))
	return HRESULT(ret)
}

func (this *IDebugControl6) ResetManagedStatus(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetManagedStatus, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetStackTraceEx(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetContextStackTraceEx(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(StartContext), uintptr(StartContextSize), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl6) OutputContextStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputContextStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetBreakpointByGuid(Guid *syscall.GUID, Bp **IDebugBreakpoint3) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByGuid, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Guid)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetExecutionStatusEx(Status *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutionStatusEx, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Status)))
	return HRESULT(ret)
}

func (this *IDebugControl6) GetSynchronizationStatus(SendsAttempted *uint32, SecondsSinceLastResponse *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSynchronizationStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SendsAttempted)), uintptr(unsafe.Pointer(SecondsSinceLastResponse)))
	return HRESULT(ret)
}

// B86FB3B1-80D4-475B-AEA3-CF06539CF63A
var IID_IDebugControl7 = syscall.GUID{0xB86FB3B1, 0x80D4, 0x475B,
	[8]byte{0xAE, 0xA3, 0xCF, 0x06, 0x53, 0x9C, 0xF6, 0x3A}}

type IDebugControl7Interface interface {
	IUnknownInterface
	GetInterrupt() HRESULT
	SetInterrupt(Flags uint32) HRESULT
	GetInterruptTimeout(Seconds *uint32) HRESULT
	SetInterruptTimeout(Seconds uint32) HRESULT
	GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFile(File PSTR, Append BOOL) HRESULT
	CloseLogFile() HRESULT
	GetLogMask(Mask *uint32) HRESULT
	SetLogMask(Mask uint32) HRESULT
	Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInput(Buffer PSTR) HRESULT
	Output(Mask uint32, Format PSTR) HRESULT
	OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT
	ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT
	ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT
	OutputPrompt(OutputControl uint32, Format PSTR) HRESULT
	OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT
	GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT
	OutputVersionInformation(OutputControl uint32) HRESULT
	GetNotifyEventHandle(Handle *uint64) HRESULT
	SetNotifyEventHandle(Handle uint64) HRESULT
	Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT
	Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetDisassembleEffectiveOffset(Offset *uint64) HRESULT
	OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT
	OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT
	GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT
	GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT
	GetReturnOffset(Offset *uint64) HRESULT
	OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT
	GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT
	GetActualProcessorType(Type *uint32) HRESULT
	GetExecutingProcessorType(Type *uint32) HRESULT
	GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT
	GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetNumberProcessors(Number *uint32) HRESULT
	GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT
	GetPageSize(Size *uint32) HRESULT
	IsPointer64Bit() HRESULT
	ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT
	GetNumberSupportedProcessorTypes(Number *uint32) HRESULT
	GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT
	GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEffectiveProcessorType(Type *uint32) HRESULT
	SetEffectiveProcessorType(Type uint32) HRESULT
	GetExecutionStatus(Status *uint32) HRESULT
	SetExecutionStatus(Status uint32) HRESULT
	GetCodeLevel(Level *uint32) HRESULT
	SetCodeLevel(Level uint32) HRESULT
	GetEngineOptions(Options *uint32) HRESULT
	AddEngineOptions(Options uint32) HRESULT
	RemoveEngineOptions(Options uint32) HRESULT
	SetEngineOptions(Options uint32) HRESULT
	GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT
	SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT
	GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacro(Slot uint32, Macro PSTR) HRESULT
	GetRadix(Radix *uint32) HRESULT
	SetRadix(Radix uint32) HRESULT
	Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT
	CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT
	Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT
	ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT
	GetNumberBreakpoints(Number *uint32) HRESULT
	GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT
	GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT
	AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT
	RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT
	AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT
	RemoveExtension(Handle uint64) HRESULT
	GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT
	CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT
	GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT
	GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT
	GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT
	GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT
	GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommand(Index uint32, Command PSTR) HRESULT
	GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT
	GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT
	GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT
	GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT
	WaitForEvent(Flags uint32, Timeout uint32) HRESULT
	GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetCurrentTimeDate(TimeDate *uint32) HRESULT
	GetCurrentSystemUpTime(UpTime *uint32) HRESULT
	GetDumpFormatFlags(FormatFlags *uint32) HRESULT
	GetNumberTextReplacements(NumRepl *uint32) HRESULT
	GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT
	RemoveTextReplacements() HRESULT
	OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT
	GetAssemblyOptions(Options *uint32) HRESULT
	AddAssemblyOptions(Options uint32) HRESULT
	RemoveAssemblyOptions(Options uint32) HRESULT
	SetAssemblyOptions(Options uint32) HRESULT
	GetExpressionSyntax(Flags *uint32) HRESULT
	SetExpressionSyntax(Flags uint32) HRESULT
	SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT
	GetNumberExpressionSyntaxes(Number *uint32) HRESULT
	GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetNumberEvents(Events *uint32) HRESULT
	GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT
	GetCurrentEventIndex(Index *uint32) HRESULT
	SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT
	GetLogFileWide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT
	OpenLogFileWide(File PWSTR, Append BOOL) HRESULT
	InputWide(Buffer PWSTR, BufferSize uint32, InputSize *uint32) HRESULT
	ReturnInputWide(Buffer PWSTR) HRESULT
	OutputWide(Mask uint32, Format PWSTR) HRESULT
	OutputVaListWide(Mask uint32, Format PWSTR, Args *int8) HRESULT
	ControlledOutputWide(OutputControl uint32, Mask uint32, Format PWSTR) HRESULT
	ControlledOutputVaListWide(OutputControl uint32, Mask uint32, Format PWSTR, Args *int8) HRESULT
	OutputPromptWide(OutputControl uint32, Format PWSTR) HRESULT
	OutputPromptVaListWide(OutputControl uint32, Format PWSTR, Args *int8) HRESULT
	GetPromptTextWide(Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT
	AssembleWide(Offset uint64, Instr PWSTR, EndOffset *uint64) HRESULT
	DisassembleWide(Offset uint64, Flags uint32, Buffer PWSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT
	GetProcessorTypeNamesWide(Type uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetTextMacroWide(Slot uint32, Buffer PWSTR, BufferSize uint32, MacroSize *uint32) HRESULT
	SetTextMacroWide(Slot uint32, Macro PWSTR) HRESULT
	EvaluateWide(Expression PWSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT
	ExecuteWide(OutputControl uint32, Command PWSTR, Flags uint32) HRESULT
	ExecuteCommandFileWide(OutputControl uint32, CommandFile PWSTR, Flags uint32) HRESULT
	GetBreakpointByIndex2(Index uint32, Bp **IDebugBreakpoint2) HRESULT
	GetBreakpointById2(Id uint32, Bp **IDebugBreakpoint2) HRESULT
	AddBreakpoint2(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint2) HRESULT
	RemoveBreakpoint2(Bp *IDebugBreakpoint2) HRESULT
	AddExtensionWide(Path PWSTR, Flags uint32, Handle *uint64) HRESULT
	GetExtensionByPathWide(Path PWSTR, Handle *uint64) HRESULT
	CallExtensionWide(Handle uint64, Function PWSTR, Arguments PWSTR) HRESULT
	GetExtensionFunctionWide(Handle uint64, FuncName PWSTR, Function *FARPROC) HRESULT
	GetEventFilterTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT
	GetEventFilterCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetEventFilterCommandWide(Index uint32, Command PWSTR) HRESULT
	GetSpecificFilterArgumentWide(Index uint32, Buffer PWSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT
	SetSpecificFilterArgumentWide(Index uint32, Argument PWSTR) HRESULT
	GetExceptionFilterSecondCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT
	SetExceptionFilterSecondCommandWide(Index uint32, Command PWSTR) HRESULT
	GetLastEventInformationWide(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PWSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT
	GetTextReplacementWide(SrcText PWSTR, Index uint32, SrcBuffer PWSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PWSTR, DstBufferSize uint32, DstSize *uint32) HRESULT
	SetTextReplacementWide(SrcText PWSTR, DstText PWSTR) HRESULT
	SetExpressionSyntaxByNameWide(AbbrevName PWSTR) HRESULT
	GetExpressionSyntaxNamesWide(Index uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT
	GetEventIndexDescriptionWide(Index uint32, Which uint32, Buffer PWSTR, BufferSize uint32, DescSize *uint32) HRESULT
	GetLogFile2(Buffer PSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT
	OpenLogFile2(File PSTR, Flags uint32) HRESULT
	GetLogFile2Wide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT
	OpenLogFile2Wide(File PWSTR, Flags uint32) HRESULT
	GetSystemVersionValues(PlatformId *uint32, Win32Major *uint32, Win32Minor *uint32, KdMajor *uint32, KdMinor *uint32) HRESULT
	GetSystemVersionString(Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSystemVersionStringWide(Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetContextStackTrace(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT
	OutputContextStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT
	GetStoredEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, Context unsafe.Pointer, ContextSize uint32, ContextUsed *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32) HRESULT
	GetManagedStatus(Flags *uint32, WhichString uint32, String PSTR, StringSize uint32, StringNeeded *uint32) HRESULT
	GetManagedStatusWide(Flags *uint32, WhichString uint32, String PWSTR, StringSize uint32, StringNeeded *uint32) HRESULT
	ResetManagedStatus(Flags uint32) HRESULT
	GetStackTraceEx(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FramesFilled *uint32) HRESULT
	OutputStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, Flags uint32) HRESULT
	GetContextStackTraceEx(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT
	OutputContextStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT
	GetBreakpointByGuid(Guid *syscall.GUID, Bp **IDebugBreakpoint3) HRESULT
	GetExecutionStatusEx(Status *uint32) HRESULT
	GetSynchronizationStatus(SendsAttempted *uint32, SecondsSinceLastResponse *uint32) HRESULT
	GetDebuggeeType2(Flags uint32, Class *uint32, Qualifier *uint32) HRESULT
}

type IDebugControl7Vtbl struct {
	IUnknownVtbl
	GetInterrupt                             uintptr
	SetInterrupt                             uintptr
	GetInterruptTimeout                      uintptr
	SetInterruptTimeout                      uintptr
	GetLogFile                               uintptr
	OpenLogFile                              uintptr
	CloseLogFile                             uintptr
	GetLogMask                               uintptr
	SetLogMask                               uintptr
	Input                                    uintptr
	ReturnInput                              uintptr
	Output                                   uintptr
	OutputVaList                             uintptr
	ControlledOutput                         uintptr
	ControlledOutputVaList                   uintptr
	OutputPrompt                             uintptr
	OutputPromptVaList                       uintptr
	GetPromptText                            uintptr
	OutputCurrentState                       uintptr
	OutputVersionInformation                 uintptr
	GetNotifyEventHandle                     uintptr
	SetNotifyEventHandle                     uintptr
	Assemble                                 uintptr
	Disassemble                              uintptr
	GetDisassembleEffectiveOffset            uintptr
	OutputDisassembly                        uintptr
	OutputDisassemblyLines                   uintptr
	GetNearInstruction                       uintptr
	GetStackTrace                            uintptr
	GetReturnOffset                          uintptr
	OutputStackTrace                         uintptr
	GetDebuggeeType                          uintptr
	GetActualProcessorType                   uintptr
	GetExecutingProcessorType                uintptr
	GetNumberPossibleExecutingProcessorTypes uintptr
	GetPossibleExecutingProcessorTypes       uintptr
	GetNumberProcessors                      uintptr
	GetSystemVersion                         uintptr
	GetPageSize                              uintptr
	IsPointer64Bit                           uintptr
	ReadBugCheckData                         uintptr
	GetNumberSupportedProcessorTypes         uintptr
	GetSupportedProcessorTypes               uintptr
	GetProcessorTypeNames                    uintptr
	GetEffectiveProcessorType                uintptr
	SetEffectiveProcessorType                uintptr
	GetExecutionStatus                       uintptr
	SetExecutionStatus                       uintptr
	GetCodeLevel                             uintptr
	SetCodeLevel                             uintptr
	GetEngineOptions                         uintptr
	AddEngineOptions                         uintptr
	RemoveEngineOptions                      uintptr
	SetEngineOptions                         uintptr
	GetSystemErrorControl                    uintptr
	SetSystemErrorControl                    uintptr
	GetTextMacro                             uintptr
	SetTextMacro                             uintptr
	GetRadix                                 uintptr
	SetRadix                                 uintptr
	Evaluate                                 uintptr
	CoerceValue                              uintptr
	CoerceValues                             uintptr
	Execute                                  uintptr
	ExecuteCommandFile                       uintptr
	GetNumberBreakpoints                     uintptr
	GetBreakpointByIndex                     uintptr
	GetBreakpointById                        uintptr
	GetBreakpointParameters                  uintptr
	AddBreakpoint                            uintptr
	RemoveBreakpoint                         uintptr
	AddExtension                             uintptr
	RemoveExtension                          uintptr
	GetExtensionByPath                       uintptr
	CallExtension                            uintptr
	GetExtensionFunction                     uintptr
	GetWindbgExtensionApis32                 uintptr
	GetWindbgExtensionApis64                 uintptr
	GetNumberEventFilters                    uintptr
	GetEventFilterText                       uintptr
	GetEventFilterCommand                    uintptr
	SetEventFilterCommand                    uintptr
	GetSpecificFilterParameters              uintptr
	SetSpecificFilterParameters              uintptr
	GetSpecificFilterArgument                uintptr
	SetSpecificFilterArgument                uintptr
	GetExceptionFilterParameters             uintptr
	SetExceptionFilterParameters             uintptr
	GetExceptionFilterSecondCommand          uintptr
	SetExceptionFilterSecondCommand          uintptr
	WaitForEvent                             uintptr
	GetLastEventInformation                  uintptr
	GetCurrentTimeDate                       uintptr
	GetCurrentSystemUpTime                   uintptr
	GetDumpFormatFlags                       uintptr
	GetNumberTextReplacements                uintptr
	GetTextReplacement                       uintptr
	SetTextReplacement                       uintptr
	RemoveTextReplacements                   uintptr
	OutputTextReplacements                   uintptr
	GetAssemblyOptions                       uintptr
	AddAssemblyOptions                       uintptr
	RemoveAssemblyOptions                    uintptr
	SetAssemblyOptions                       uintptr
	GetExpressionSyntax                      uintptr
	SetExpressionSyntax                      uintptr
	SetExpressionSyntaxByName                uintptr
	GetNumberExpressionSyntaxes              uintptr
	GetExpressionSyntaxNames                 uintptr
	GetNumberEvents                          uintptr
	GetEventIndexDescription                 uintptr
	GetCurrentEventIndex                     uintptr
	SetNextEventIndex                        uintptr
	GetLogFileWide                           uintptr
	OpenLogFileWide                          uintptr
	InputWide                                uintptr
	ReturnInputWide                          uintptr
	OutputWide                               uintptr
	OutputVaListWide                         uintptr
	ControlledOutputWide                     uintptr
	ControlledOutputVaListWide               uintptr
	OutputPromptWide                         uintptr
	OutputPromptVaListWide                   uintptr
	GetPromptTextWide                        uintptr
	AssembleWide                             uintptr
	DisassembleWide                          uintptr
	GetProcessorTypeNamesWide                uintptr
	GetTextMacroWide                         uintptr
	SetTextMacroWide                         uintptr
	EvaluateWide                             uintptr
	ExecuteWide                              uintptr
	ExecuteCommandFileWide                   uintptr
	GetBreakpointByIndex2                    uintptr
	GetBreakpointById2                       uintptr
	AddBreakpoint2                           uintptr
	RemoveBreakpoint2                        uintptr
	AddExtensionWide                         uintptr
	GetExtensionByPathWide                   uintptr
	CallExtensionWide                        uintptr
	GetExtensionFunctionWide                 uintptr
	GetEventFilterTextWide                   uintptr
	GetEventFilterCommandWide                uintptr
	SetEventFilterCommandWide                uintptr
	GetSpecificFilterArgumentWide            uintptr
	SetSpecificFilterArgumentWide            uintptr
	GetExceptionFilterSecondCommandWide      uintptr
	SetExceptionFilterSecondCommandWide      uintptr
	GetLastEventInformationWide              uintptr
	GetTextReplacementWide                   uintptr
	SetTextReplacementWide                   uintptr
	SetExpressionSyntaxByNameWide            uintptr
	GetExpressionSyntaxNamesWide             uintptr
	GetEventIndexDescriptionWide             uintptr
	GetLogFile2                              uintptr
	OpenLogFile2                             uintptr
	GetLogFile2Wide                          uintptr
	OpenLogFile2Wide                         uintptr
	GetSystemVersionValues                   uintptr
	GetSystemVersionString                   uintptr
	GetSystemVersionStringWide               uintptr
	GetContextStackTrace                     uintptr
	OutputContextStackTrace                  uintptr
	GetStoredEventInformation                uintptr
	GetManagedStatus                         uintptr
	GetManagedStatusWide                     uintptr
	ResetManagedStatus                       uintptr
	GetStackTraceEx                          uintptr
	OutputStackTraceEx                       uintptr
	GetContextStackTraceEx                   uintptr
	OutputContextStackTraceEx                uintptr
	GetBreakpointByGuid                      uintptr
	GetExecutionStatusEx                     uintptr
	GetSynchronizationStatus                 uintptr
	GetDebuggeeType2                         uintptr
}

type IDebugControl7 struct {
	IUnknown
}

func (this *IDebugControl7) Vtbl() *IDebugControl7Vtbl {
	return (*IDebugControl7Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugControl7) GetInterrupt() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterrupt, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetInterrupt(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterrupt, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetInterruptTimeout(Seconds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Seconds)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetInterruptTimeout(Seconds uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterruptTimeout, uintptr(unsafe.Pointer(this)), uintptr(Seconds))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetLogFile(Buffer PSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OpenLogFile(File PSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl7) CloseLogFile() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CloseLogFile, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetLogMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetLogMask(Mask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetLogMask, uintptr(unsafe.Pointer(this)), uintptr(Mask))
	return HRESULT(ret)
}

func (this *IDebugControl7) Input(Buffer PSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Input, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) ReturnInput(Buffer PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl7) Output(Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputVaList(Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaList, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl7) ControlledOutput(OutputControl uint32, Mask uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutput, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl7) ControlledOutputVaList(OutputControl uint32, Mask uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputPrompt(OutputControl uint32, Format PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPrompt, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputPromptVaList(OutputControl uint32, Format PSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaList, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetPromptText(Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputCurrentState(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputCurrentState, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputVersionInformation(OutputControl uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(OutputControl))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNotifyEventHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetNotifyEventHandle(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNotifyEventHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl7) Assemble(Offset uint64, Instr PSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Assemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl7) Disassemble(Offset uint64, Flags uint32, Buffer PSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Disassemble, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetDisassembleEffectiveOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDisassembleEffectiveOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputDisassembly(OutputControl uint32, Offset uint64, Flags uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassembly, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputDisassemblyLines(OutputControl uint32, PreviousLines uint32, TotalLines uint32, Offset uint64, Flags uint32, OffsetLine *uint32, StartOffset *uint64, EndOffset *uint64, LineOffsets *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputDisassemblyLines, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(PreviousLines), uintptr(TotalLines), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(OffsetLine)), uintptr(unsafe.Pointer(StartOffset)), uintptr(unsafe.Pointer(EndOffset)), uintptr(unsafe.Pointer(LineOffsets)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNearInstruction(Offset uint64, Delta int32, NearOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearInstruction, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NearOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetStackTrace(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTrace, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetReturnOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetReturnOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetDebuggeeType(Class *uint32, Qualifier *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebuggeeType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Class)), uintptr(unsafe.Pointer(Qualifier)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetActualProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetActualProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExecutingProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutingProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNumberPossibleExecutingProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetPossibleExecutingProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPossibleExecutingProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNumberProcessors(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcessors, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSystemVersion(PlatformId *uint32, Major *uint32, Minor *uint32, ServicePackString PSTR, ServicePackStringSize uint32, ServicePackStringUsed *uint32, ServicePackNumber *uint32, BuildString PSTR, BuildStringSize uint32, BuildStringUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersion, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Major)), uintptr(unsafe.Pointer(Minor)), uintptr(unsafe.Pointer(ServicePackString)), uintptr(ServicePackStringSize), uintptr(unsafe.Pointer(ServicePackStringUsed)), uintptr(unsafe.Pointer(ServicePackNumber)), uintptr(unsafe.Pointer(BuildString)), uintptr(BuildStringSize), uintptr(unsafe.Pointer(BuildStringUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetPageSize(Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPageSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugControl7) IsPointer64Bit() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsPointer64Bit, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl7) ReadBugCheckData(Code *uint32, Arg1 *uint64, Arg2 *uint64, Arg3 *uint64, Arg4 *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBugCheckData, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Code)), uintptr(unsafe.Pointer(Arg1)), uintptr(unsafe.Pointer(Arg2)), uintptr(unsafe.Pointer(Arg3)), uintptr(unsafe.Pointer(Arg4)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNumberSupportedProcessorTypes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSupportedProcessorTypes(Start uint32, Count uint32, Types *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSupportedProcessorTypes, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Types)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetProcessorTypeNames(Type uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNames, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetEffectiveProcessorType(Type *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetEffectiveProcessorType(Type uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEffectiveProcessorType, uintptr(unsafe.Pointer(this)), uintptr(Type))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExecutionStatus(Status *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Status)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetExecutionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExecutionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetCodeLevel(Level *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Level)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetCodeLevel(Level uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCodeLevel, uintptr(unsafe.Pointer(this)), uintptr(Level))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetEngineOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl7) AddEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl7) RemoveEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetEngineOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEngineOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSystemErrorControl(OutputLevel *uint32, BreakLevel *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(OutputLevel)), uintptr(unsafe.Pointer(BreakLevel)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetSystemErrorControl(OutputLevel uint32, BreakLevel uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSystemErrorControl, uintptr(unsafe.Pointer(this)), uintptr(OutputLevel), uintptr(BreakLevel))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetTextMacro(Slot uint32, Buffer PSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetTextMacro(Slot uint32, Macro PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacro, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetRadix(Radix *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRadix, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Radix)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetRadix(Radix uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetRadix, uintptr(unsafe.Pointer(this)), uintptr(Radix))
	return HRESULT(ret)
}

func (this *IDebugControl7) Evaluate(Expression PSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Evaluate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl7) CoerceValue(In *DEBUG_VALUE, OutType uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(In)), uintptr(OutType), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl7) CoerceValues(Count uint32, In *DEBUG_VALUE, OutTypes *uint32, Out *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CoerceValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(In)), uintptr(unsafe.Pointer(OutTypes)), uintptr(unsafe.Pointer(Out)))
	return HRESULT(ret)
}

func (this *IDebugControl7) Execute(OutputControl uint32, Command PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Execute, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) ExecuteCommandFile(OutputControl uint32, CommandFile PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFile, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNumberBreakpoints(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberBreakpoints, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetBreakpointByIndex(Index uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetBreakpointById(Id uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetBreakpointParameters(Count uint32, Ids *uint32, Start uint32, Params *DEBUG_BREAKPOINT_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl7) AddBreakpoint(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl7) RemoveBreakpoint(Bp *IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl7) AddExtension(Path PSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtension, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl7) RemoveExtension(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExtensionByPath(Path PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl7) CallExtension(Handle uint64, Function PSTR, Arguments PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtension, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExtensionFunction(Handle uint64, FuncName PSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunction, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetWindbgExtensionApis32(Api *WINDBG_EXTENSION_APIS32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis32, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetWindbgExtensionApis64(Api *WINDBG_EXTENSION_APIS64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindbgExtensionApis64, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Api)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNumberEventFilters(SpecificEvents *uint32, SpecificExceptions *uint32, ArbitraryExceptions *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEventFilters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SpecificEvents)), uintptr(unsafe.Pointer(SpecificExceptions)), uintptr(unsafe.Pointer(ArbitraryExceptions)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetEventFilterText(Index uint32, Buffer PSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterText, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetEventFilterCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetEventFilterCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetSpecificFilterParameters(Start uint32, Count uint32, Params *DEBUG_SPECIFIC_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSpecificFilterArgument(Index uint32, Buffer PSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetSpecificFilterArgument(Index uint32, Argument PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgument, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExceptionFilterParameters(Count uint32, Codes *uint32, Start uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Codes)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetExceptionFilterParameters(Count uint32, Params *DEBUG_EXCEPTION_FILTER_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExceptionFilterSecondCommand(Index uint32, Buffer PSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetExceptionFilterSecondCommand(Index uint32, Command PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommand, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl7) WaitForEvent(Flags uint32, Timeout uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WaitForEvent, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Timeout))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetLastEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetCurrentTimeDate(TimeDate *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentTimeDate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(TimeDate)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetCurrentSystemUpTime(UpTime *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemUpTime, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(UpTime)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetDumpFormatFlags(FormatFlags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDumpFormatFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FormatFlags)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNumberTextReplacements(NumRepl *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(NumRepl)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetTextReplacement(SrcText PSTR, Index uint32, SrcBuffer PSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetTextReplacement(SrcText PSTR, DstText PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl7) RemoveTextReplacements() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTextReplacements, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputTextReplacements(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTextReplacements, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetAssemblyOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugControl7) AddAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl7) RemoveAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetAssemblyOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetAssemblyOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExpressionSyntax(Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetExpressionSyntax(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntax, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetExpressionSyntaxByName(AbbrevName PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntaxByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(AbbrevName)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNumberExpressionSyntaxes(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberExpressionSyntaxes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExpressionSyntaxNames(Index uint32, FullNameBuffer PSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntaxNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetNumberEvents(Events *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberEvents, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Events)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetEventIndexDescription(Index uint32, Which uint32, Buffer PSTR, BufferSize uint32, DescSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventIndexDescription, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DescSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetCurrentEventIndex(Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentEventIndex, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetNextEventIndex(Relation uint32, Value uint32, NextIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNextEventIndex, uintptr(unsafe.Pointer(this)), uintptr(Relation), uintptr(Value), uintptr(unsafe.Pointer(NextIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetLogFileWide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Append *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Append)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OpenLogFileWide(File PWSTR, Append BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFileWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Append))
	return HRESULT(ret)
}

func (this *IDebugControl7) InputWide(Buffer PWSTR, BufferSize uint32, InputSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InputWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(InputSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) ReturnInputWide(Buffer PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReturnInputWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputWide(Mask uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputWide, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputVaListWide(Mask uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputVaListWide, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl7) ControlledOutputWide(OutputControl uint32, Mask uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl7) ControlledOutputVaListWide(OutputControl uint32, Mask uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ControlledOutputVaListWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Mask), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputPromptWide(OutputControl uint32, Format PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputPromptVaListWide(OutputControl uint32, Format PWSTR, Args *int8) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputPromptVaListWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Format)), uintptr(unsafe.Pointer(Args)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetPromptTextWide(Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPromptTextWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) AssembleWide(Offset uint64, Instr PWSTR, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AssembleWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Instr)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl7) DisassembleWide(Offset uint64, Flags uint32, Buffer PWSTR, BufferSize uint32, DisassemblySize *uint32, EndOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisassembleWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DisassemblySize)), uintptr(unsafe.Pointer(EndOffset)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetProcessorTypeNamesWide(Type uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessorTypeNamesWide, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetTextMacroWide(Slot uint32, Buffer PWSTR, BufferSize uint32, MacroSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextMacroWide, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MacroSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetTextMacroWide(Slot uint32, Macro PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextMacroWide, uintptr(unsafe.Pointer(this)), uintptr(Slot), uintptr(unsafe.Pointer(Macro)))
	return HRESULT(ret)
}

func (this *IDebugControl7) EvaluateWide(Expression PWSTR, DesiredType uint32, Value *DEBUG_VALUE, RemainderIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EvaluateWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Expression)), uintptr(DesiredType), uintptr(unsafe.Pointer(Value)), uintptr(unsafe.Pointer(RemainderIndex)))
	return HRESULT(ret)
}

func (this *IDebugControl7) ExecuteWide(OutputControl uint32, Command PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Command)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) ExecuteCommandFileWide(OutputControl uint32, CommandFile PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExecuteCommandFileWide, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(CommandFile)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetBreakpointByIndex2(Index uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByIndex2, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetBreakpointById2(Id uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointById2, uintptr(unsafe.Pointer(this)), uintptr(Id), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl7) AddBreakpoint2(Type uint32, DesiredId uint32, Bp **IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddBreakpoint2, uintptr(unsafe.Pointer(this)), uintptr(Type), uintptr(DesiredId), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl7) RemoveBreakpoint2(Bp *IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveBreakpoint2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl7) AddExtensionWide(Path PWSTR, Flags uint32, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddExtensionWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(Flags), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExtensionByPathWide(Path PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionByPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugControl7) CallExtensionWide(Handle uint64, Function PWSTR, Arguments PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallExtensionWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Function)), uintptr(unsafe.Pointer(Arguments)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExtensionFunctionWide(Handle uint64, FuncName PWSTR, Function *FARPROC) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtensionFunctionWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(FuncName)), uintptr(unsafe.Pointer(Function)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetEventFilterTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, TextSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterTextWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(TextSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetEventFilterCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilterCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetEventFilterCommandWide(Index uint32, Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilterCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSpecificFilterArgumentWide(Index uint32, Buffer PWSTR, BufferSize uint32, ArgumentSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSpecificFilterArgumentWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ArgumentSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetSpecificFilterArgumentWide(Index uint32, Argument PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSpecificFilterArgumentWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Argument)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExceptionFilterSecondCommandWide(Index uint32, Buffer PWSTR, BufferSize uint32, CommandSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionFilterSecondCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(CommandSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetExceptionFilterSecondCommandWide(Index uint32, Command PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExceptionFilterSecondCommandWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Command)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetLastEventInformationWide(Type *uint32, ProcessId *uint32, ThreadId *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32, Description PWSTR, DescriptionSize uint32, DescriptionUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLastEventInformationWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)), uintptr(unsafe.Pointer(Description)), uintptr(DescriptionSize), uintptr(unsafe.Pointer(DescriptionUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetTextReplacementWide(SrcText PWSTR, Index uint32, SrcBuffer PWSTR, SrcBufferSize uint32, SrcSize *uint32, DstBuffer PWSTR, DstBufferSize uint32, DstSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTextReplacementWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(Index), uintptr(unsafe.Pointer(SrcBuffer)), uintptr(SrcBufferSize), uintptr(unsafe.Pointer(SrcSize)), uintptr(unsafe.Pointer(DstBuffer)), uintptr(DstBufferSize), uintptr(unsafe.Pointer(DstSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetTextReplacementWide(SrcText PWSTR, DstText PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextReplacementWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SrcText)), uintptr(unsafe.Pointer(DstText)))
	return HRESULT(ret)
}

func (this *IDebugControl7) SetExpressionSyntaxByNameWide(AbbrevName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetExpressionSyntaxByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(AbbrevName)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExpressionSyntaxNamesWide(Index uint32, FullNameBuffer PWSTR, FullNameBufferSize uint32, FullNameSize *uint32, AbbrevNameBuffer PWSTR, AbbrevNameBufferSize uint32, AbbrevNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExpressionSyntaxNamesWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(FullNameBuffer)), uintptr(FullNameBufferSize), uintptr(unsafe.Pointer(FullNameSize)), uintptr(unsafe.Pointer(AbbrevNameBuffer)), uintptr(AbbrevNameBufferSize), uintptr(unsafe.Pointer(AbbrevNameSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetEventIndexDescriptionWide(Index uint32, Which uint32, Buffer PWSTR, BufferSize uint32, DescSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventIndexDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(DescSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetLogFile2(Buffer PSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OpenLogFile2(File PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetLogFile2Wide(Buffer PWSTR, BufferSize uint32, FileSize *uint32, Flags *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLogFile2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Flags)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OpenLogFile2Wide(File PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenLogFile2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSystemVersionValues(PlatformId *uint32, Win32Major *uint32, Win32Minor *uint32, KdMajor *uint32, KdMinor *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionValues, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(PlatformId)), uintptr(unsafe.Pointer(Win32Major)), uintptr(unsafe.Pointer(Win32Minor)), uintptr(unsafe.Pointer(KdMajor)), uintptr(unsafe.Pointer(KdMinor)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSystemVersionString(Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionString, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSystemVersionStringWide(Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemVersionStringWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetContextStackTrace(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextStackTrace, uintptr(unsafe.Pointer(this)), uintptr(StartContext), uintptr(StartContextSize), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputContextStackTrace(OutputControl uint32, Frames *DEBUG_STACK_FRAME, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputContextStackTrace, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetStoredEventInformation(Type *uint32, ProcessId *uint32, ThreadId *uint32, Context unsafe.Pointer, ContextSize uint32, ContextUsed *uint32, ExtraInformation unsafe.Pointer, ExtraInformationSize uint32, ExtraInformationUsed *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStoredEventInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Type)), uintptr(unsafe.Pointer(ProcessId)), uintptr(unsafe.Pointer(ThreadId)), uintptr(Context), uintptr(ContextSize), uintptr(unsafe.Pointer(ContextUsed)), uintptr(ExtraInformation), uintptr(ExtraInformationSize), uintptr(unsafe.Pointer(ExtraInformationUsed)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetManagedStatus(Flags *uint32, WhichString uint32, String PSTR, StringSize uint32, StringNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetManagedStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)), uintptr(WhichString), uintptr(unsafe.Pointer(String)), uintptr(StringSize), uintptr(unsafe.Pointer(StringNeeded)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetManagedStatusWide(Flags *uint32, WhichString uint32, String PWSTR, StringSize uint32, StringNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetManagedStatusWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Flags)), uintptr(WhichString), uintptr(unsafe.Pointer(String)), uintptr(StringSize), uintptr(unsafe.Pointer(StringNeeded)))
	return HRESULT(ret)
}

func (this *IDebugControl7) ResetManagedStatus(Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetManagedStatus, uintptr(unsafe.Pointer(this)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetStackTraceEx(FrameOffset uint64, StackOffset uint64, InstructionOffset uint64, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(FrameOffset), uintptr(StackOffset), uintptr(InstructionOffset), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetContextStackTraceEx(StartContext unsafe.Pointer, StartContextSize uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, FramesFilled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(StartContext), uintptr(StartContextSize), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(unsafe.Pointer(FramesFilled)))
	return HRESULT(ret)
}

func (this *IDebugControl7) OutputContextStackTraceEx(OutputControl uint32, Frames *DEBUG_STACK_FRAME_EX, FramesSize uint32, FrameContexts unsafe.Pointer, FrameContextsSize uint32, FrameContextsEntrySize uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputContextStackTraceEx, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(unsafe.Pointer(Frames)), uintptr(FramesSize), uintptr(FrameContexts), uintptr(FrameContextsSize), uintptr(FrameContextsEntrySize), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetBreakpointByGuid(Guid *syscall.GUID, Bp **IDebugBreakpoint3) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakpointByGuid, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Guid)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetExecutionStatusEx(Status *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExecutionStatusEx, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Status)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetSynchronizationStatus(SendsAttempted *uint32, SecondsSinceLastResponse *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSynchronizationStatus, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SendsAttempted)), uintptr(unsafe.Pointer(SecondsSinceLastResponse)))
	return HRESULT(ret)
}

func (this *IDebugControl7) GetDebuggeeType2(Flags uint32, Class *uint32, Qualifier *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebuggeeType2, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Class)), uintptr(unsafe.Pointer(Qualifier)))
	return HRESULT(ret)
}

// 88F7DFAB-3EA7-4C3A-AEFB-C4E8106173AA
var IID_IDebugDataSpaces = syscall.GUID{0x88F7DFAB, 0x3EA7, 0x4C3A,
	[8]byte{0xAE, 0xFB, 0xC4, 0xE8, 0x10, 0x61, 0x73, 0xAA}}

type IDebugDataSpacesInterface interface {
	IUnknownInterface
	ReadVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	SearchVirtual(Offset uint64, Length uint64, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT
	ReadVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadPointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT
	WritePointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT
	ReadPhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WritePhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadMsr(Msr uint32, Value *uint64) HRESULT
	WriteMsr(Msr uint32, Value uint64) HRESULT
	ReadBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	CheckLowMemory() HRESULT
	ReadDebuggerData(Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	ReadProcessorSystemData(Processor uint32, Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
}

type IDebugDataSpacesVtbl struct {
	IUnknownVtbl
	ReadVirtual             uintptr
	WriteVirtual            uintptr
	SearchVirtual           uintptr
	ReadVirtualUncached     uintptr
	WriteVirtualUncached    uintptr
	ReadPointersVirtual     uintptr
	WritePointersVirtual    uintptr
	ReadPhysical            uintptr
	WritePhysical           uintptr
	ReadControl             uintptr
	WriteControl            uintptr
	ReadIo                  uintptr
	WriteIo                 uintptr
	ReadMsr                 uintptr
	WriteMsr                uintptr
	ReadBusData             uintptr
	WriteBusData            uintptr
	CheckLowMemory          uintptr
	ReadDebuggerData        uintptr
	ReadProcessorSystemData uintptr
}

type IDebugDataSpaces struct {
	IUnknown
}

func (this *IDebugDataSpaces) Vtbl() *IDebugDataSpacesVtbl {
	return (*IDebugDataSpacesVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDataSpaces) ReadVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) WriteVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) SearchVirtual(Offset uint64, Length uint64, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SearchVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Length), uintptr(Pattern), uintptr(PatternSize), uintptr(PatternGranularity), uintptr(unsafe.Pointer(MatchOffset)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) ReadVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadVirtualUncached, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) WriteVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteVirtualUncached, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) ReadPointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPointersVirtual, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(Offset), uintptr(unsafe.Pointer(Ptrs)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) WritePointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePointersVirtual, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(Offset), uintptr(unsafe.Pointer(Ptrs)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) ReadPhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) WritePhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) ReadControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadControl, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) WriteControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteControl, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) ReadIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadIo, uintptr(unsafe.Pointer(this)), uintptr(InterfaceType), uintptr(BusNumber), uintptr(AddressSpace), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) WriteIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteIo, uintptr(unsafe.Pointer(this)), uintptr(InterfaceType), uintptr(BusNumber), uintptr(AddressSpace), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) ReadMsr(Msr uint32, Value *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadMsr, uintptr(unsafe.Pointer(this)), uintptr(Msr), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) WriteMsr(Msr uint32, Value uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteMsr, uintptr(unsafe.Pointer(this)), uintptr(Msr), uintptr(Value))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) ReadBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBusData, uintptr(unsafe.Pointer(this)), uintptr(BusDataType), uintptr(BusNumber), uintptr(SlotNumber), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) WriteBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteBusData, uintptr(unsafe.Pointer(this)), uintptr(BusDataType), uintptr(BusNumber), uintptr(SlotNumber), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) CheckLowMemory() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CheckLowMemory, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) ReadDebuggerData(Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadDebuggerData, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces) ReadProcessorSystemData(Processor uint32, Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadProcessorSystemData, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Index), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

// 7A5E852F-96E9-468F-AC1B-0B3ADDC4A049
var IID_IDebugDataSpaces2 = syscall.GUID{0x7A5E852F, 0x96E9, 0x468F,
	[8]byte{0xAC, 0x1B, 0x0B, 0x3A, 0xDD, 0xC4, 0xA0, 0x49}}

type IDebugDataSpaces2Interface interface {
	IUnknownInterface
	ReadVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	SearchVirtual(Offset uint64, Length uint64, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT
	ReadVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadPointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT
	WritePointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT
	ReadPhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WritePhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadMsr(Msr uint32, Value *uint64) HRESULT
	WriteMsr(Msr uint32, Value uint64) HRESULT
	ReadBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	CheckLowMemory() HRESULT
	ReadDebuggerData(Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	ReadProcessorSystemData(Processor uint32, Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	VirtualToPhysical(Virtual uint64, Physical *uint64) HRESULT
	GetVirtualTranslationPhysicalOffsets(Virtual uint64, Offsets *uint64, OffsetsSize uint32, Levels *uint32) HRESULT
	ReadHandleData(Handle uint64, DataType uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	FillVirtual(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT
	FillPhysical(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT
	QueryVirtual(Offset uint64, Info *MEMORY_BASIC_INFORMATION64) HRESULT
}

type IDebugDataSpaces2Vtbl struct {
	IUnknownVtbl
	ReadVirtual                          uintptr
	WriteVirtual                         uintptr
	SearchVirtual                        uintptr
	ReadVirtualUncached                  uintptr
	WriteVirtualUncached                 uintptr
	ReadPointersVirtual                  uintptr
	WritePointersVirtual                 uintptr
	ReadPhysical                         uintptr
	WritePhysical                        uintptr
	ReadControl                          uintptr
	WriteControl                         uintptr
	ReadIo                               uintptr
	WriteIo                              uintptr
	ReadMsr                              uintptr
	WriteMsr                             uintptr
	ReadBusData                          uintptr
	WriteBusData                         uintptr
	CheckLowMemory                       uintptr
	ReadDebuggerData                     uintptr
	ReadProcessorSystemData              uintptr
	VirtualToPhysical                    uintptr
	GetVirtualTranslationPhysicalOffsets uintptr
	ReadHandleData                       uintptr
	FillVirtual                          uintptr
	FillPhysical                         uintptr
	QueryVirtual                         uintptr
}

type IDebugDataSpaces2 struct {
	IUnknown
}

func (this *IDebugDataSpaces2) Vtbl() *IDebugDataSpaces2Vtbl {
	return (*IDebugDataSpaces2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDataSpaces2) ReadVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) WriteVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) SearchVirtual(Offset uint64, Length uint64, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SearchVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Length), uintptr(Pattern), uintptr(PatternSize), uintptr(PatternGranularity), uintptr(unsafe.Pointer(MatchOffset)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadVirtualUncached, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) WriteVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteVirtualUncached, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadPointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPointersVirtual, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(Offset), uintptr(unsafe.Pointer(Ptrs)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) WritePointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePointersVirtual, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(Offset), uintptr(unsafe.Pointer(Ptrs)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadPhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) WritePhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadControl, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) WriteControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteControl, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadIo, uintptr(unsafe.Pointer(this)), uintptr(InterfaceType), uintptr(BusNumber), uintptr(AddressSpace), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) WriteIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteIo, uintptr(unsafe.Pointer(this)), uintptr(InterfaceType), uintptr(BusNumber), uintptr(AddressSpace), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadMsr(Msr uint32, Value *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadMsr, uintptr(unsafe.Pointer(this)), uintptr(Msr), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) WriteMsr(Msr uint32, Value uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteMsr, uintptr(unsafe.Pointer(this)), uintptr(Msr), uintptr(Value))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBusData, uintptr(unsafe.Pointer(this)), uintptr(BusDataType), uintptr(BusNumber), uintptr(SlotNumber), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) WriteBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteBusData, uintptr(unsafe.Pointer(this)), uintptr(BusDataType), uintptr(BusNumber), uintptr(SlotNumber), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) CheckLowMemory() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CheckLowMemory, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadDebuggerData(Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadDebuggerData, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadProcessorSystemData(Processor uint32, Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadProcessorSystemData, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Index), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) VirtualToPhysical(Virtual uint64, Physical *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().VirtualToPhysical, uintptr(unsafe.Pointer(this)), uintptr(Virtual), uintptr(unsafe.Pointer(Physical)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) GetVirtualTranslationPhysicalOffsets(Virtual uint64, Offsets *uint64, OffsetsSize uint32, Levels *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetVirtualTranslationPhysicalOffsets, uintptr(unsafe.Pointer(this)), uintptr(Virtual), uintptr(unsafe.Pointer(Offsets)), uintptr(OffsetsSize), uintptr(unsafe.Pointer(Levels)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) ReadHandleData(Handle uint64, DataType uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadHandleData, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(DataType), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) FillVirtual(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FillVirtual, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Size), uintptr(Pattern), uintptr(PatternSize), uintptr(unsafe.Pointer(Filled)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) FillPhysical(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FillPhysical, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Size), uintptr(Pattern), uintptr(PatternSize), uintptr(unsafe.Pointer(Filled)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces2) QueryVirtual(Offset uint64, Info *MEMORY_BASIC_INFORMATION64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Info)))
	return HRESULT(ret)
}

// 23F79D6C-8AAF-4F7C-A607-9995F5407E63
var IID_IDebugDataSpaces3 = syscall.GUID{0x23F79D6C, 0x8AAF, 0x4F7C,
	[8]byte{0xA6, 0x07, 0x99, 0x95, 0xF5, 0x40, 0x7E, 0x63}}

type IDebugDataSpaces3Interface interface {
	IUnknownInterface
	ReadVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	SearchVirtual(Offset uint64, Length uint64, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT
	ReadVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadPointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT
	WritePointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT
	ReadPhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WritePhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadMsr(Msr uint32, Value *uint64) HRESULT
	WriteMsr(Msr uint32, Value uint64) HRESULT
	ReadBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	CheckLowMemory() HRESULT
	ReadDebuggerData(Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	ReadProcessorSystemData(Processor uint32, Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	VirtualToPhysical(Virtual uint64, Physical *uint64) HRESULT
	GetVirtualTranslationPhysicalOffsets(Virtual uint64, Offsets *uint64, OffsetsSize uint32, Levels *uint32) HRESULT
	ReadHandleData(Handle uint64, DataType uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	FillVirtual(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT
	FillPhysical(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT
	QueryVirtual(Offset uint64, Info *MEMORY_BASIC_INFORMATION64) HRESULT
	ReadImageNtHeaders(ImageBase uint64, Headers *IMAGE_NT_HEADERS64) HRESULT
	ReadTagged(Tag *syscall.GUID, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, TotalSize *uint32) HRESULT
	StartEnumTagged(Handle *uint64) HRESULT
	GetNextTagged(Handle uint64, Tag *syscall.GUID, Size *uint32) HRESULT
	EndEnumTagged(Handle uint64) HRESULT
}

type IDebugDataSpaces3Vtbl struct {
	IUnknownVtbl
	ReadVirtual                          uintptr
	WriteVirtual                         uintptr
	SearchVirtual                        uintptr
	ReadVirtualUncached                  uintptr
	WriteVirtualUncached                 uintptr
	ReadPointersVirtual                  uintptr
	WritePointersVirtual                 uintptr
	ReadPhysical                         uintptr
	WritePhysical                        uintptr
	ReadControl                          uintptr
	WriteControl                         uintptr
	ReadIo                               uintptr
	WriteIo                              uintptr
	ReadMsr                              uintptr
	WriteMsr                             uintptr
	ReadBusData                          uintptr
	WriteBusData                         uintptr
	CheckLowMemory                       uintptr
	ReadDebuggerData                     uintptr
	ReadProcessorSystemData              uintptr
	VirtualToPhysical                    uintptr
	GetVirtualTranslationPhysicalOffsets uintptr
	ReadHandleData                       uintptr
	FillVirtual                          uintptr
	FillPhysical                         uintptr
	QueryVirtual                         uintptr
	ReadImageNtHeaders                   uintptr
	ReadTagged                           uintptr
	StartEnumTagged                      uintptr
	GetNextTagged                        uintptr
	EndEnumTagged                        uintptr
}

type IDebugDataSpaces3 struct {
	IUnknown
}

func (this *IDebugDataSpaces3) Vtbl() *IDebugDataSpaces3Vtbl {
	return (*IDebugDataSpaces3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDataSpaces3) ReadVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) WriteVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) SearchVirtual(Offset uint64, Length uint64, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SearchVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Length), uintptr(Pattern), uintptr(PatternSize), uintptr(PatternGranularity), uintptr(unsafe.Pointer(MatchOffset)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadVirtualUncached, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) WriteVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteVirtualUncached, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadPointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPointersVirtual, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(Offset), uintptr(unsafe.Pointer(Ptrs)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) WritePointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePointersVirtual, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(Offset), uintptr(unsafe.Pointer(Ptrs)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadPhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) WritePhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadControl, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) WriteControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteControl, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadIo, uintptr(unsafe.Pointer(this)), uintptr(InterfaceType), uintptr(BusNumber), uintptr(AddressSpace), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) WriteIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteIo, uintptr(unsafe.Pointer(this)), uintptr(InterfaceType), uintptr(BusNumber), uintptr(AddressSpace), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadMsr(Msr uint32, Value *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadMsr, uintptr(unsafe.Pointer(this)), uintptr(Msr), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) WriteMsr(Msr uint32, Value uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteMsr, uintptr(unsafe.Pointer(this)), uintptr(Msr), uintptr(Value))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBusData, uintptr(unsafe.Pointer(this)), uintptr(BusDataType), uintptr(BusNumber), uintptr(SlotNumber), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) WriteBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteBusData, uintptr(unsafe.Pointer(this)), uintptr(BusDataType), uintptr(BusNumber), uintptr(SlotNumber), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) CheckLowMemory() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CheckLowMemory, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadDebuggerData(Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadDebuggerData, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadProcessorSystemData(Processor uint32, Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadProcessorSystemData, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Index), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) VirtualToPhysical(Virtual uint64, Physical *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().VirtualToPhysical, uintptr(unsafe.Pointer(this)), uintptr(Virtual), uintptr(unsafe.Pointer(Physical)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) GetVirtualTranslationPhysicalOffsets(Virtual uint64, Offsets *uint64, OffsetsSize uint32, Levels *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetVirtualTranslationPhysicalOffsets, uintptr(unsafe.Pointer(this)), uintptr(Virtual), uintptr(unsafe.Pointer(Offsets)), uintptr(OffsetsSize), uintptr(unsafe.Pointer(Levels)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadHandleData(Handle uint64, DataType uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadHandleData, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(DataType), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) FillVirtual(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FillVirtual, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Size), uintptr(Pattern), uintptr(PatternSize), uintptr(unsafe.Pointer(Filled)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) FillPhysical(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FillPhysical, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Size), uintptr(Pattern), uintptr(PatternSize), uintptr(unsafe.Pointer(Filled)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) QueryVirtual(Offset uint64, Info *MEMORY_BASIC_INFORMATION64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Info)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadImageNtHeaders(ImageBase uint64, Headers *IMAGE_NT_HEADERS64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadImageNtHeaders, uintptr(unsafe.Pointer(this)), uintptr(ImageBase), uintptr(unsafe.Pointer(Headers)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) ReadTagged(Tag *syscall.GUID, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, TotalSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTagged, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Tag)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(TotalSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) StartEnumTagged(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartEnumTagged, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) GetNextTagged(Handle uint64, Tag *syscall.GUID, Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextTagged, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Tag)), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces3) EndEnumTagged(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndEnumTagged, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

// D98ADA1F-29E9-4EF5-A6C0-E53349883212
var IID_IDebugDataSpaces4 = syscall.GUID{0xD98ADA1F, 0x29E9, 0x4EF5,
	[8]byte{0xA6, 0xC0, 0xE5, 0x33, 0x49, 0x88, 0x32, 0x12}}

type IDebugDataSpaces4Interface interface {
	IUnknownInterface
	ReadVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	SearchVirtual(Offset uint64, Length uint64, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT
	ReadVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadPointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT
	WritePointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT
	ReadPhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WritePhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	ReadMsr(Msr uint32, Value *uint64) HRESULT
	WriteMsr(Msr uint32, Value uint64) HRESULT
	ReadBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	CheckLowMemory() HRESULT
	ReadDebuggerData(Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	ReadProcessorSystemData(Processor uint32, Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	VirtualToPhysical(Virtual uint64, Physical *uint64) HRESULT
	GetVirtualTranslationPhysicalOffsets(Virtual uint64, Offsets *uint64, OffsetsSize uint32, Levels *uint32) HRESULT
	ReadHandleData(Handle uint64, DataType uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT
	FillVirtual(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT
	FillPhysical(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT
	QueryVirtual(Offset uint64, Info *MEMORY_BASIC_INFORMATION64) HRESULT
	ReadImageNtHeaders(ImageBase uint64, Headers *IMAGE_NT_HEADERS64) HRESULT
	ReadTagged(Tag *syscall.GUID, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, TotalSize *uint32) HRESULT
	StartEnumTagged(Handle *uint64) HRESULT
	GetNextTagged(Handle uint64, Tag *syscall.GUID, Size *uint32) HRESULT
	EndEnumTagged(Handle uint64) HRESULT
	GetOffsetInformation(Space uint32, Which uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT
	GetNextDifferentlyValidOffsetVirtual(Offset uint64, NextOffset *uint64) HRESULT
	GetValidRegionVirtual(Base uint64, Size uint32, ValidBase *uint64, ValidSize *uint32) HRESULT
	SearchVirtual2(Offset uint64, Length uint64, Flags uint32, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT
	ReadMultiByteStringVirtual(Offset uint64, MaxBytes uint32, Buffer PSTR, BufferSize uint32, StringBytes *uint32) HRESULT
	ReadMultiByteStringVirtualWide(Offset uint64, MaxBytes uint32, CodePage uint32, Buffer PWSTR, BufferSize uint32, StringBytes *uint32) HRESULT
	ReadUnicodeStringVirtual(Offset uint64, MaxBytes uint32, CodePage uint32, Buffer PSTR, BufferSize uint32, StringBytes *uint32) HRESULT
	ReadUnicodeStringVirtualWide(Offset uint64, MaxBytes uint32, Buffer PWSTR, BufferSize uint32, StringBytes *uint32) HRESULT
	ReadPhysical2(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WritePhysical2(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
}

type IDebugDataSpaces4Vtbl struct {
	IUnknownVtbl
	ReadVirtual                          uintptr
	WriteVirtual                         uintptr
	SearchVirtual                        uintptr
	ReadVirtualUncached                  uintptr
	WriteVirtualUncached                 uintptr
	ReadPointersVirtual                  uintptr
	WritePointersVirtual                 uintptr
	ReadPhysical                         uintptr
	WritePhysical                        uintptr
	ReadControl                          uintptr
	WriteControl                         uintptr
	ReadIo                               uintptr
	WriteIo                              uintptr
	ReadMsr                              uintptr
	WriteMsr                             uintptr
	ReadBusData                          uintptr
	WriteBusData                         uintptr
	CheckLowMemory                       uintptr
	ReadDebuggerData                     uintptr
	ReadProcessorSystemData              uintptr
	VirtualToPhysical                    uintptr
	GetVirtualTranslationPhysicalOffsets uintptr
	ReadHandleData                       uintptr
	FillVirtual                          uintptr
	FillPhysical                         uintptr
	QueryVirtual                         uintptr
	ReadImageNtHeaders                   uintptr
	ReadTagged                           uintptr
	StartEnumTagged                      uintptr
	GetNextTagged                        uintptr
	EndEnumTagged                        uintptr
	GetOffsetInformation                 uintptr
	GetNextDifferentlyValidOffsetVirtual uintptr
	GetValidRegionVirtual                uintptr
	SearchVirtual2                       uintptr
	ReadMultiByteStringVirtual           uintptr
	ReadMultiByteStringVirtualWide       uintptr
	ReadUnicodeStringVirtual             uintptr
	ReadUnicodeStringVirtualWide         uintptr
	ReadPhysical2                        uintptr
	WritePhysical2                       uintptr
}

type IDebugDataSpaces4 struct {
	IUnknown
}

func (this *IDebugDataSpaces4) Vtbl() *IDebugDataSpaces4Vtbl {
	return (*IDebugDataSpaces4Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDataSpaces4) ReadVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) WriteVirtual(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) SearchVirtual(Offset uint64, Length uint64, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SearchVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Length), uintptr(Pattern), uintptr(PatternSize), uintptr(PatternGranularity), uintptr(unsafe.Pointer(MatchOffset)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadVirtualUncached, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) WriteVirtualUncached(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteVirtualUncached, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadPointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPointersVirtual, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(Offset), uintptr(unsafe.Pointer(Ptrs)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) WritePointersVirtual(Count uint32, Offset uint64, Ptrs *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePointersVirtual, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(Offset), uintptr(unsafe.Pointer(Ptrs)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadPhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) WritePhysical(Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadControl, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) WriteControl(Processor uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteControl, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadIo, uintptr(unsafe.Pointer(this)), uintptr(InterfaceType), uintptr(BusNumber), uintptr(AddressSpace), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) WriteIo(InterfaceType uint32, BusNumber uint32, AddressSpace uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteIo, uintptr(unsafe.Pointer(this)), uintptr(InterfaceType), uintptr(BusNumber), uintptr(AddressSpace), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadMsr(Msr uint32, Value *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadMsr, uintptr(unsafe.Pointer(this)), uintptr(Msr), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) WriteMsr(Msr uint32, Value uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteMsr, uintptr(unsafe.Pointer(this)), uintptr(Msr), uintptr(Value))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBusData, uintptr(unsafe.Pointer(this)), uintptr(BusDataType), uintptr(BusNumber), uintptr(SlotNumber), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) WriteBusData(BusDataType uint32, BusNumber uint32, SlotNumber uint32, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteBusData, uintptr(unsafe.Pointer(this)), uintptr(BusDataType), uintptr(BusNumber), uintptr(SlotNumber), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) CheckLowMemory() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CheckLowMemory, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadDebuggerData(Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadDebuggerData, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadProcessorSystemData(Processor uint32, Index uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadProcessorSystemData, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(Index), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) VirtualToPhysical(Virtual uint64, Physical *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().VirtualToPhysical, uintptr(unsafe.Pointer(this)), uintptr(Virtual), uintptr(unsafe.Pointer(Physical)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) GetVirtualTranslationPhysicalOffsets(Virtual uint64, Offsets *uint64, OffsetsSize uint32, Levels *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetVirtualTranslationPhysicalOffsets, uintptr(unsafe.Pointer(this)), uintptr(Virtual), uintptr(unsafe.Pointer(Offsets)), uintptr(OffsetsSize), uintptr(unsafe.Pointer(Levels)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadHandleData(Handle uint64, DataType uint32, Buffer unsafe.Pointer, BufferSize uint32, DataSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadHandleData, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(DataType), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(DataSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) FillVirtual(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FillVirtual, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Size), uintptr(Pattern), uintptr(PatternSize), uintptr(unsafe.Pointer(Filled)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) FillPhysical(Start uint64, Size uint32, Pattern unsafe.Pointer, PatternSize uint32, Filled *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FillPhysical, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Size), uintptr(Pattern), uintptr(PatternSize), uintptr(unsafe.Pointer(Filled)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) QueryVirtual(Offset uint64, Info *MEMORY_BASIC_INFORMATION64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Info)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadImageNtHeaders(ImageBase uint64, Headers *IMAGE_NT_HEADERS64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadImageNtHeaders, uintptr(unsafe.Pointer(this)), uintptr(ImageBase), uintptr(unsafe.Pointer(Headers)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadTagged(Tag *syscall.GUID, Offset uint32, Buffer unsafe.Pointer, BufferSize uint32, TotalSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTagged, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Tag)), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(TotalSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) StartEnumTagged(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartEnumTagged, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) GetNextTagged(Handle uint64, Tag *syscall.GUID, Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextTagged, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Tag)), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) EndEnumTagged(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndEnumTagged, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) GetOffsetInformation(Space uint32, Which uint32, Offset uint64, Buffer unsafe.Pointer, BufferSize uint32, InfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetInformation, uintptr(unsafe.Pointer(this)), uintptr(Space), uintptr(Which), uintptr(Offset), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(InfoSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) GetNextDifferentlyValidOffsetVirtual(Offset uint64, NextOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextDifferentlyValidOffsetVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(NextOffset)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) GetValidRegionVirtual(Base uint64, Size uint32, ValidBase *uint64, ValidSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValidRegionVirtual, uintptr(unsafe.Pointer(this)), uintptr(Base), uintptr(Size), uintptr(unsafe.Pointer(ValidBase)), uintptr(unsafe.Pointer(ValidSize)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) SearchVirtual2(Offset uint64, Length uint64, Flags uint32, Pattern unsafe.Pointer, PatternSize uint32, PatternGranularity uint32, MatchOffset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SearchVirtual2, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Length), uintptr(Flags), uintptr(Pattern), uintptr(PatternSize), uintptr(PatternGranularity), uintptr(unsafe.Pointer(MatchOffset)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadMultiByteStringVirtual(Offset uint64, MaxBytes uint32, Buffer PSTR, BufferSize uint32, StringBytes *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadMultiByteStringVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(MaxBytes), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringBytes)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadMultiByteStringVirtualWide(Offset uint64, MaxBytes uint32, CodePage uint32, Buffer PWSTR, BufferSize uint32, StringBytes *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadMultiByteStringVirtualWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(MaxBytes), uintptr(CodePage), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringBytes)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadUnicodeStringVirtual(Offset uint64, MaxBytes uint32, CodePage uint32, Buffer PSTR, BufferSize uint32, StringBytes *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadUnicodeStringVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(MaxBytes), uintptr(CodePage), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringBytes)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadUnicodeStringVirtualWide(Offset uint64, MaxBytes uint32, Buffer PWSTR, BufferSize uint32, StringBytes *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadUnicodeStringVirtualWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(MaxBytes), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringBytes)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) ReadPhysical2(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPhysical2, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugDataSpaces4) WritePhysical2(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePhysical2, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

// 337BE28B-5036-4D72-B6BF-C45FBB9F2EAA
var IID_IDebugEventCallbacks = syscall.GUID{0x337BE28B, 0x5036, 0x4D72,
	[8]byte{0xB6, 0xBF, 0xC4, 0x5F, 0xBB, 0x9F, 0x2E, 0xAA}}

type IDebugEventCallbacksInterface interface {
	IUnknownInterface
	GetInterestMask(Mask *uint32) HRESULT
	Breakpoint(Bp *IDebugBreakpoint) HRESULT
	Exception(Exception *EXCEPTION_RECORD64, FirstChance uint32) HRESULT
	CreateThread(Handle uint64, DataOffset uint64, StartOffset uint64) HRESULT
	ExitThread(ExitCode uint32) HRESULT
	CreateProcessA(ImageFileHandle uint64, Handle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PSTR, ImageName PSTR, CheckSum uint32, TimeDateStamp uint32, InitialThreadHandle uint64, ThreadDataOffset uint64, StartOffset uint64) HRESULT
	ExitProcess(ExitCode uint32) HRESULT
	LoadModule(ImageFileHandle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PSTR, ImageName PSTR, CheckSum uint32, TimeDateStamp uint32) HRESULT
	UnloadModule(ImageBaseName PSTR, BaseOffset uint64) HRESULT
	SystemError(Error uint32, Level uint32) HRESULT
	SessionStatus(Status uint32) HRESULT
	ChangeDebuggeeState(Flags uint32, Argument uint64) HRESULT
	ChangeEngineState(Flags uint32, Argument uint64) HRESULT
	ChangeSymbolState(Flags uint32, Argument uint64) HRESULT
}

type IDebugEventCallbacksVtbl struct {
	IUnknownVtbl
	GetInterestMask     uintptr
	Breakpoint          uintptr
	Exception           uintptr
	CreateThread        uintptr
	ExitThread          uintptr
	CreateProcessA      uintptr
	ExitProcess         uintptr
	LoadModule          uintptr
	UnloadModule        uintptr
	SystemError         uintptr
	SessionStatus       uintptr
	ChangeDebuggeeState uintptr
	ChangeEngineState   uintptr
	ChangeSymbolState   uintptr
}

type IDebugEventCallbacks struct {
	IUnknown
}

func (this *IDebugEventCallbacks) Vtbl() *IDebugEventCallbacksVtbl {
	return (*IDebugEventCallbacksVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugEventCallbacks) GetInterestMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterestMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) Breakpoint(Bp *IDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Breakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) Exception(Exception *EXCEPTION_RECORD64, FirstChance uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Exception, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Exception)), uintptr(FirstChance))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) CreateThread(Handle uint64, DataOffset uint64, StartOffset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateThread, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(DataOffset), uintptr(StartOffset))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) ExitThread(ExitCode uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitThread, uintptr(unsafe.Pointer(this)), uintptr(ExitCode))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) CreateProcessA(ImageFileHandle uint64, Handle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PSTR, ImageName PSTR, CheckSum uint32, TimeDateStamp uint32, InitialThreadHandle uint64, ThreadDataOffset uint64, StartOffset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(ImageFileHandle), uintptr(Handle), uintptr(BaseOffset), uintptr(ModuleSize), uintptr(unsafe.Pointer(ModuleName)), uintptr(unsafe.Pointer(ImageName)), uintptr(CheckSum), uintptr(TimeDateStamp), uintptr(InitialThreadHandle), uintptr(ThreadDataOffset), uintptr(StartOffset))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) ExitProcess(ExitCode uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitProcess, uintptr(unsafe.Pointer(this)), uintptr(ExitCode))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) LoadModule(ImageFileHandle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PSTR, ImageName PSTR, CheckSum uint32, TimeDateStamp uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LoadModule, uintptr(unsafe.Pointer(this)), uintptr(ImageFileHandle), uintptr(BaseOffset), uintptr(ModuleSize), uintptr(unsafe.Pointer(ModuleName)), uintptr(unsafe.Pointer(ImageName)), uintptr(CheckSum), uintptr(TimeDateStamp))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) UnloadModule(ImageBaseName PSTR, BaseOffset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().UnloadModule, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ImageBaseName)), uintptr(BaseOffset))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) SystemError(Error uint32, Level uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SystemError, uintptr(unsafe.Pointer(this)), uintptr(Error), uintptr(Level))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) SessionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SessionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) ChangeDebuggeeState(Flags uint32, Argument uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ChangeDebuggeeState, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Argument))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) ChangeEngineState(Flags uint32, Argument uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ChangeEngineState, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Argument))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacks) ChangeSymbolState(Flags uint32, Argument uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ChangeSymbolState, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Argument))
	return HRESULT(ret)
}

// 0690E046-9C23-45AC-A04F-987AC29AD0D3
var IID_IDebugEventCallbacksWide = syscall.GUID{0x0690E046, 0x9C23, 0x45AC,
	[8]byte{0xA0, 0x4F, 0x98, 0x7A, 0xC2, 0x9A, 0xD0, 0xD3}}

type IDebugEventCallbacksWideInterface interface {
	IUnknownInterface
	GetInterestMask(Mask *uint32) HRESULT
	Breakpoint(Bp *IDebugBreakpoint2) HRESULT
	Exception(Exception *EXCEPTION_RECORD64, FirstChance uint32) HRESULT
	CreateThread(Handle uint64, DataOffset uint64, StartOffset uint64) HRESULT
	ExitThread(ExitCode uint32) HRESULT
	CreateProcessA(ImageFileHandle uint64, Handle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PWSTR, ImageName PWSTR, CheckSum uint32, TimeDateStamp uint32, InitialThreadHandle uint64, ThreadDataOffset uint64, StartOffset uint64) HRESULT
	ExitProcess(ExitCode uint32) HRESULT
	LoadModule(ImageFileHandle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PWSTR, ImageName PWSTR, CheckSum uint32, TimeDateStamp uint32) HRESULT
	UnloadModule(ImageBaseName PWSTR, BaseOffset uint64) HRESULT
	SystemError(Error uint32, Level uint32) HRESULT
	SessionStatus(Status uint32) HRESULT
	ChangeDebuggeeState(Flags uint32, Argument uint64) HRESULT
	ChangeEngineState(Flags uint32, Argument uint64) HRESULT
	ChangeSymbolState(Flags uint32, Argument uint64) HRESULT
}

type IDebugEventCallbacksWideVtbl struct {
	IUnknownVtbl
	GetInterestMask     uintptr
	Breakpoint          uintptr
	Exception           uintptr
	CreateThread        uintptr
	ExitThread          uintptr
	CreateProcessA      uintptr
	ExitProcess         uintptr
	LoadModule          uintptr
	UnloadModule        uintptr
	SystemError         uintptr
	SessionStatus       uintptr
	ChangeDebuggeeState uintptr
	ChangeEngineState   uintptr
	ChangeSymbolState   uintptr
}

type IDebugEventCallbacksWide struct {
	IUnknown
}

func (this *IDebugEventCallbacksWide) Vtbl() *IDebugEventCallbacksWideVtbl {
	return (*IDebugEventCallbacksWideVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugEventCallbacksWide) GetInterestMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterestMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) Breakpoint(Bp *IDebugBreakpoint2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Breakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) Exception(Exception *EXCEPTION_RECORD64, FirstChance uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Exception, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Exception)), uintptr(FirstChance))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) CreateThread(Handle uint64, DataOffset uint64, StartOffset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateThread, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(DataOffset), uintptr(StartOffset))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) ExitThread(ExitCode uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitThread, uintptr(unsafe.Pointer(this)), uintptr(ExitCode))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) CreateProcessA(ImageFileHandle uint64, Handle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PWSTR, ImageName PWSTR, CheckSum uint32, TimeDateStamp uint32, InitialThreadHandle uint64, ThreadDataOffset uint64, StartOffset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(ImageFileHandle), uintptr(Handle), uintptr(BaseOffset), uintptr(ModuleSize), uintptr(unsafe.Pointer(ModuleName)), uintptr(unsafe.Pointer(ImageName)), uintptr(CheckSum), uintptr(TimeDateStamp), uintptr(InitialThreadHandle), uintptr(ThreadDataOffset), uintptr(StartOffset))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) ExitProcess(ExitCode uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitProcess, uintptr(unsafe.Pointer(this)), uintptr(ExitCode))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) LoadModule(ImageFileHandle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PWSTR, ImageName PWSTR, CheckSum uint32, TimeDateStamp uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LoadModule, uintptr(unsafe.Pointer(this)), uintptr(ImageFileHandle), uintptr(BaseOffset), uintptr(ModuleSize), uintptr(unsafe.Pointer(ModuleName)), uintptr(unsafe.Pointer(ImageName)), uintptr(CheckSum), uintptr(TimeDateStamp))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) UnloadModule(ImageBaseName PWSTR, BaseOffset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().UnloadModule, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ImageBaseName)), uintptr(BaseOffset))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) SystemError(Error uint32, Level uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SystemError, uintptr(unsafe.Pointer(this)), uintptr(Error), uintptr(Level))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) SessionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SessionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) ChangeDebuggeeState(Flags uint32, Argument uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ChangeDebuggeeState, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Argument))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) ChangeEngineState(Flags uint32, Argument uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ChangeEngineState, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Argument))
	return HRESULT(ret)
}

func (this *IDebugEventCallbacksWide) ChangeSymbolState(Flags uint32, Argument uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ChangeSymbolState, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Argument))
	return HRESULT(ret)
}

// 61A4905B-23F9-4247-B3C5-53D087529AB7
var IID_IDebugEventContextCallbacks = syscall.GUID{0x61A4905B, 0x23F9, 0x4247,
	[8]byte{0xB3, 0xC5, 0x53, 0xD0, 0x87, 0x52, 0x9A, 0xB7}}

type IDebugEventContextCallbacksInterface interface {
	IUnknownInterface
	GetInterestMask(Mask *uint32) HRESULT
	Breakpoint(Bp *IDebugBreakpoint2, Context unsafe.Pointer, ContextSize uint32) HRESULT
	Exception(Exception *EXCEPTION_RECORD64, FirstChance uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT
	CreateThread(Handle uint64, DataOffset uint64, StartOffset uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT
	ExitThread(ExitCode uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT
	CreateProcessA(ImageFileHandle uint64, Handle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PWSTR, ImageName PWSTR, CheckSum uint32, TimeDateStamp uint32, InitialThreadHandle uint64, ThreadDataOffset uint64, StartOffset uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT
	ExitProcess(ExitCode uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT
	LoadModule(ImageFileHandle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PWSTR, ImageName PWSTR, CheckSum uint32, TimeDateStamp uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT
	UnloadModule(ImageBaseName PWSTR, BaseOffset uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT
	SystemError(Error uint32, Level uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT
	SessionStatus(Status uint32) HRESULT
	ChangeDebuggeeState(Flags uint32, Argument uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT
	ChangeEngineState(Flags uint32, Argument uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT
	ChangeSymbolState(Flags uint32, Argument uint64) HRESULT
}

type IDebugEventContextCallbacksVtbl struct {
	IUnknownVtbl
	GetInterestMask     uintptr
	Breakpoint          uintptr
	Exception           uintptr
	CreateThread        uintptr
	ExitThread          uintptr
	CreateProcessA      uintptr
	ExitProcess         uintptr
	LoadModule          uintptr
	UnloadModule        uintptr
	SystemError         uintptr
	SessionStatus       uintptr
	ChangeDebuggeeState uintptr
	ChangeEngineState   uintptr
	ChangeSymbolState   uintptr
}

type IDebugEventContextCallbacks struct {
	IUnknown
}

func (this *IDebugEventContextCallbacks) Vtbl() *IDebugEventContextCallbacksVtbl {
	return (*IDebugEventContextCallbacksVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugEventContextCallbacks) GetInterestMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterestMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) Breakpoint(Bp *IDebugBreakpoint2, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Breakpoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Bp)), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) Exception(Exception *EXCEPTION_RECORD64, FirstChance uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Exception, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Exception)), uintptr(FirstChance), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) CreateThread(Handle uint64, DataOffset uint64, StartOffset uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateThread, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(DataOffset), uintptr(StartOffset), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) ExitThread(ExitCode uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitThread, uintptr(unsafe.Pointer(this)), uintptr(ExitCode), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) CreateProcessA(ImageFileHandle uint64, Handle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PWSTR, ImageName PWSTR, CheckSum uint32, TimeDateStamp uint32, InitialThreadHandle uint64, ThreadDataOffset uint64, StartOffset uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateProcessA, uintptr(unsafe.Pointer(this)), uintptr(ImageFileHandle), uintptr(Handle), uintptr(BaseOffset), uintptr(ModuleSize), uintptr(unsafe.Pointer(ModuleName)), uintptr(unsafe.Pointer(ImageName)), uintptr(CheckSum), uintptr(TimeDateStamp), uintptr(InitialThreadHandle), uintptr(ThreadDataOffset), uintptr(StartOffset), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) ExitProcess(ExitCode uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExitProcess, uintptr(unsafe.Pointer(this)), uintptr(ExitCode), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) LoadModule(ImageFileHandle uint64, BaseOffset uint64, ModuleSize uint32, ModuleName PWSTR, ImageName PWSTR, CheckSum uint32, TimeDateStamp uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LoadModule, uintptr(unsafe.Pointer(this)), uintptr(ImageFileHandle), uintptr(BaseOffset), uintptr(ModuleSize), uintptr(unsafe.Pointer(ModuleName)), uintptr(unsafe.Pointer(ImageName)), uintptr(CheckSum), uintptr(TimeDateStamp), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) UnloadModule(ImageBaseName PWSTR, BaseOffset uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().UnloadModule, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ImageBaseName)), uintptr(BaseOffset), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) SystemError(Error uint32, Level uint32, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SystemError, uintptr(unsafe.Pointer(this)), uintptr(Error), uintptr(Level), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) SessionStatus(Status uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SessionStatus, uintptr(unsafe.Pointer(this)), uintptr(Status))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) ChangeDebuggeeState(Flags uint32, Argument uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ChangeDebuggeeState, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Argument), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) ChangeEngineState(Flags uint32, Argument uint64, Context unsafe.Pointer, ContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ChangeEngineState, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Argument), uintptr(Context), uintptr(ContextSize))
	return HRESULT(ret)
}

func (this *IDebugEventContextCallbacks) ChangeSymbolState(Flags uint32, Argument uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ChangeSymbolState, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Argument))
	return HRESULT(ret)
}

// 9F50E42C-F136-499E-9A97-73036C94ED2D
var IID_IDebugInputCallbacks = syscall.GUID{0x9F50E42C, 0xF136, 0x499E,
	[8]byte{0x9A, 0x97, 0x73, 0x03, 0x6C, 0x94, 0xED, 0x2D}}

type IDebugInputCallbacksInterface interface {
	IUnknownInterface
	StartInput(BufferSize uint32) HRESULT
	EndInput() HRESULT
}

type IDebugInputCallbacksVtbl struct {
	IUnknownVtbl
	StartInput uintptr
	EndInput   uintptr
}

type IDebugInputCallbacks struct {
	IUnknown
}

func (this *IDebugInputCallbacks) Vtbl() *IDebugInputCallbacksVtbl {
	return (*IDebugInputCallbacksVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugInputCallbacks) StartInput(BufferSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartInput, uintptr(unsafe.Pointer(this)), uintptr(BufferSize))
	return HRESULT(ret)
}

func (this *IDebugInputCallbacks) EndInput() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndInput, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 4BF58045-D654-4C40-B0AF-683090F356DC
var IID_IDebugOutputCallbacks = syscall.GUID{0x4BF58045, 0xD654, 0x4C40,
	[8]byte{0xB0, 0xAF, 0x68, 0x30, 0x90, 0xF3, 0x56, 0xDC}}

type IDebugOutputCallbacksInterface interface {
	IUnknownInterface
	Output(Mask uint32, Text PSTR) HRESULT
}

type IDebugOutputCallbacksVtbl struct {
	IUnknownVtbl
	Output uintptr
}

type IDebugOutputCallbacks struct {
	IUnknown
}

func (this *IDebugOutputCallbacks) Vtbl() *IDebugOutputCallbacksVtbl {
	return (*IDebugOutputCallbacksVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugOutputCallbacks) Output(Mask uint32, Text PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Text)))
	return HRESULT(ret)
}

// 4C7FD663-C394-4E26-8EF1-34AD5ED3764C
var IID_IDebugOutputCallbacksWide = syscall.GUID{0x4C7FD663, 0xC394, 0x4E26,
	[8]byte{0x8E, 0xF1, 0x34, 0xAD, 0x5E, 0xD3, 0x76, 0x4C}}

type IDebugOutputCallbacksWideInterface interface {
	IUnknownInterface
	Output(Mask uint32, Text PWSTR) HRESULT
}

type IDebugOutputCallbacksWideVtbl struct {
	IUnknownVtbl
	Output uintptr
}

type IDebugOutputCallbacksWide struct {
	IUnknown
}

func (this *IDebugOutputCallbacksWide) Vtbl() *IDebugOutputCallbacksWideVtbl {
	return (*IDebugOutputCallbacksWideVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugOutputCallbacksWide) Output(Mask uint32, Text PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Text)))
	return HRESULT(ret)
}

// 67721FE9-56D2-4A44-A325-2B65513CE6EB
var IID_IDebugOutputCallbacks2 = syscall.GUID{0x67721FE9, 0x56D2, 0x4A44,
	[8]byte{0xA3, 0x25, 0x2B, 0x65, 0x51, 0x3C, 0xE6, 0xEB}}

type IDebugOutputCallbacks2Interface interface {
	IUnknownInterface
	Output(Mask uint32, Text PSTR) HRESULT
	GetInterestMask(Mask *uint32) HRESULT
	Output2(Which uint32, Flags uint32, Arg uint64, Text PWSTR) HRESULT
}

type IDebugOutputCallbacks2Vtbl struct {
	IUnknownVtbl
	Output          uintptr
	GetInterestMask uintptr
	Output2         uintptr
}

type IDebugOutputCallbacks2 struct {
	IUnknown
}

func (this *IDebugOutputCallbacks2) Vtbl() *IDebugOutputCallbacks2Vtbl {
	return (*IDebugOutputCallbacks2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugOutputCallbacks2) Output(Mask uint32, Text PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output, uintptr(unsafe.Pointer(this)), uintptr(Mask), uintptr(unsafe.Pointer(Text)))
	return HRESULT(ret)
}

func (this *IDebugOutputCallbacks2) GetInterestMask(Mask *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterestMask, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Mask)))
	return HRESULT(ret)
}

func (this *IDebugOutputCallbacks2) Output2(Which uint32, Flags uint32, Arg uint64, Text PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Output2, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Flags), uintptr(Arg), uintptr(unsafe.Pointer(Text)))
	return HRESULT(ret)
}

// CE289126-9E84-45A7-937E-67BB18691493
var IID_IDebugRegisters = syscall.GUID{0xCE289126, 0x9E84, 0x45A7,
	[8]byte{0x93, 0x7E, 0x67, 0xBB, 0x18, 0x69, 0x14, 0x93}}

type IDebugRegistersInterface interface {
	IUnknownInterface
	GetNumberRegisters(Number *uint32) HRESULT
	GetDescription(Register uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Desc *DEBUG_REGISTER_DESCRIPTION) HRESULT
	GetIndexByName(Name PSTR, Index *uint32) HRESULT
	GetValue(Register uint32, Value *DEBUG_VALUE) HRESULT
	SetValue(Register uint32, Value *DEBUG_VALUE) HRESULT
	GetValues(Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT
	SetValues(Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT
	OutputRegisters(OutputControl uint32, Flags uint32) HRESULT
	GetInstructionOffset(Offset *uint64) HRESULT
	GetStackOffset(Offset *uint64) HRESULT
	GetFrameOffset(Offset *uint64) HRESULT
}

type IDebugRegistersVtbl struct {
	IUnknownVtbl
	GetNumberRegisters   uintptr
	GetDescription       uintptr
	GetIndexByName       uintptr
	GetValue             uintptr
	SetValue             uintptr
	GetValues            uintptr
	SetValues            uintptr
	OutputRegisters      uintptr
	GetInstructionOffset uintptr
	GetStackOffset       uintptr
	GetFrameOffset       uintptr
}

type IDebugRegisters struct {
	IUnknown
}

func (this *IDebugRegisters) Vtbl() *IDebugRegistersVtbl {
	return (*IDebugRegistersVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugRegisters) GetNumberRegisters(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberRegisters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugRegisters) GetDescription(Register uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Desc *DEBUG_REGISTER_DESCRIPTION) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDescription, uintptr(unsafe.Pointer(this)), uintptr(Register), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Desc)))
	return HRESULT(ret)
}

func (this *IDebugRegisters) GetIndexByName(Name PSTR, Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIndexByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugRegisters) GetValue(Register uint32, Value *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValue, uintptr(unsafe.Pointer(this)), uintptr(Register), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugRegisters) SetValue(Register uint32, Value *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetValue, uintptr(unsafe.Pointer(this)), uintptr(Register), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugRegisters) GetValues(Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Indices)), uintptr(Start), uintptr(unsafe.Pointer(Values)))
	return HRESULT(ret)
}

func (this *IDebugRegisters) SetValues(Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Indices)), uintptr(Start), uintptr(unsafe.Pointer(Values)))
	return HRESULT(ret)
}

func (this *IDebugRegisters) OutputRegisters(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputRegisters, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugRegisters) GetInstructionOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInstructionOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugRegisters) GetStackOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugRegisters) GetFrameOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFrameOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

// 1656AFA9-19C6-4E3A-97E7-5DC9160CF9C4
var IID_IDebugRegisters2 = syscall.GUID{0x1656AFA9, 0x19C6, 0x4E3A,
	[8]byte{0x97, 0xE7, 0x5D, 0xC9, 0x16, 0x0C, 0xF9, 0xC4}}

type IDebugRegisters2Interface interface {
	IUnknownInterface
	GetNumberRegisters(Number *uint32) HRESULT
	GetDescription(Register uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Desc *DEBUG_REGISTER_DESCRIPTION) HRESULT
	GetIndexByName(Name PSTR, Index *uint32) HRESULT
	GetValue(Register uint32, Value *DEBUG_VALUE) HRESULT
	SetValue(Register uint32, Value *DEBUG_VALUE) HRESULT
	GetValues(Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT
	SetValues(Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT
	OutputRegisters(OutputControl uint32, Flags uint32) HRESULT
	GetInstructionOffset(Offset *uint64) HRESULT
	GetStackOffset(Offset *uint64) HRESULT
	GetFrameOffset(Offset *uint64) HRESULT
	GetDescriptionWide(Register uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Desc *DEBUG_REGISTER_DESCRIPTION) HRESULT
	GetIndexByNameWide(Name PWSTR, Index *uint32) HRESULT
	GetNumberPseudoRegisters(Number *uint32) HRESULT
	GetPseudoDescription(Register uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, TypeModule *uint64, TypeId *uint32) HRESULT
	GetPseudoDescriptionWide(Register uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, TypeModule *uint64, TypeId *uint32) HRESULT
	GetPseudoIndexByName(Name PSTR, Index *uint32) HRESULT
	GetPseudoIndexByNameWide(Name PWSTR, Index *uint32) HRESULT
	GetPseudoValues(Source uint32, Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT
	SetPseudoValues(Source uint32, Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT
	GetValues2(Source uint32, Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT
	SetValues2(Source uint32, Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT
	OutputRegisters2(OutputControl uint32, Source uint32, Flags uint32) HRESULT
	GetInstructionOffset2(Source uint32, Offset *uint64) HRESULT
	GetStackOffset2(Source uint32, Offset *uint64) HRESULT
	GetFrameOffset2(Source uint32, Offset *uint64) HRESULT
}

type IDebugRegisters2Vtbl struct {
	IUnknownVtbl
	GetNumberRegisters       uintptr
	GetDescription           uintptr
	GetIndexByName           uintptr
	GetValue                 uintptr
	SetValue                 uintptr
	GetValues                uintptr
	SetValues                uintptr
	OutputRegisters          uintptr
	GetInstructionOffset     uintptr
	GetStackOffset           uintptr
	GetFrameOffset           uintptr
	GetDescriptionWide       uintptr
	GetIndexByNameWide       uintptr
	GetNumberPseudoRegisters uintptr
	GetPseudoDescription     uintptr
	GetPseudoDescriptionWide uintptr
	GetPseudoIndexByName     uintptr
	GetPseudoIndexByNameWide uintptr
	GetPseudoValues          uintptr
	SetPseudoValues          uintptr
	GetValues2               uintptr
	SetValues2               uintptr
	OutputRegisters2         uintptr
	GetInstructionOffset2    uintptr
	GetStackOffset2          uintptr
	GetFrameOffset2          uintptr
}

type IDebugRegisters2 struct {
	IUnknown
}

func (this *IDebugRegisters2) Vtbl() *IDebugRegisters2Vtbl {
	return (*IDebugRegisters2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugRegisters2) GetNumberRegisters(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberRegisters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetDescription(Register uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Desc *DEBUG_REGISTER_DESCRIPTION) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDescription, uintptr(unsafe.Pointer(this)), uintptr(Register), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Desc)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetIndexByName(Name PSTR, Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIndexByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetValue(Register uint32, Value *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValue, uintptr(unsafe.Pointer(this)), uintptr(Register), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) SetValue(Register uint32, Value *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetValue, uintptr(unsafe.Pointer(this)), uintptr(Register), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetValues(Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Indices)), uintptr(Start), uintptr(unsafe.Pointer(Values)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) SetValues(Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetValues, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Indices)), uintptr(Start), uintptr(unsafe.Pointer(Values)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) OutputRegisters(OutputControl uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputRegisters, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetInstructionOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInstructionOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetStackOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetFrameOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFrameOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetDescriptionWide(Register uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Desc *DEBUG_REGISTER_DESCRIPTION) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Register), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Desc)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetIndexByNameWide(Name PWSTR, Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIndexByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetNumberPseudoRegisters(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberPseudoRegisters, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetPseudoDescription(Register uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, TypeModule *uint64, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPseudoDescription, uintptr(unsafe.Pointer(this)), uintptr(Register), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(TypeModule)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetPseudoDescriptionWide(Register uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, TypeModule *uint64, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPseudoDescriptionWide, uintptr(unsafe.Pointer(this)), uintptr(Register), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(TypeModule)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetPseudoIndexByName(Name PSTR, Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPseudoIndexByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetPseudoIndexByNameWide(Name PWSTR, Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPseudoIndexByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetPseudoValues(Source uint32, Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPseudoValues, uintptr(unsafe.Pointer(this)), uintptr(Source), uintptr(Count), uintptr(unsafe.Pointer(Indices)), uintptr(Start), uintptr(unsafe.Pointer(Values)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) SetPseudoValues(Source uint32, Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetPseudoValues, uintptr(unsafe.Pointer(this)), uintptr(Source), uintptr(Count), uintptr(unsafe.Pointer(Indices)), uintptr(Start), uintptr(unsafe.Pointer(Values)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetValues2(Source uint32, Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValues2, uintptr(unsafe.Pointer(this)), uintptr(Source), uintptr(Count), uintptr(unsafe.Pointer(Indices)), uintptr(Start), uintptr(unsafe.Pointer(Values)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) SetValues2(Source uint32, Count uint32, Indices *uint32, Start uint32, Values *DEBUG_VALUE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetValues2, uintptr(unsafe.Pointer(this)), uintptr(Source), uintptr(Count), uintptr(unsafe.Pointer(Indices)), uintptr(Start), uintptr(unsafe.Pointer(Values)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) OutputRegisters2(OutputControl uint32, Source uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputRegisters2, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Source), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetInstructionOffset2(Source uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInstructionOffset2, uintptr(unsafe.Pointer(this)), uintptr(Source), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetStackOffset2(Source uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackOffset2, uintptr(unsafe.Pointer(this)), uintptr(Source), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugRegisters2) GetFrameOffset2(Source uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFrameOffset2, uintptr(unsafe.Pointer(this)), uintptr(Source), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

// F2528316-0F1A-4431-AEED-11D096E1E2AB
var IID_IDebugSymbolGroup = syscall.GUID{0xF2528316, 0x0F1A, 0x4431,
	[8]byte{0xAE, 0xED, 0x11, 0xD0, 0x96, 0xE1, 0xE2, 0xAB}}

type IDebugSymbolGroupInterface interface {
	IUnknownInterface
	GetNumberSymbols(Number *uint32) HRESULT
	AddSymbol(Name PSTR, Index *uint32) HRESULT
	RemoveSymbolByName(Name PSTR) HRESULT
	RemoveSymbolByIndex(Index uint32) HRESULT
	GetSymbolName(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetSymbolParameters(Start uint32, Count uint32, Params *DEBUG_SYMBOL_PARAMETERS) HRESULT
	ExpandSymbol(Index uint32, Expand BOOL) HRESULT
	OutputSymbols(OutputControl uint32, Flags uint32, Start uint32, Count uint32) HRESULT
	WriteSymbol(Index uint32, Value PSTR) HRESULT
	OutputAsType(Index uint32, Type PSTR) HRESULT
}

type IDebugSymbolGroupVtbl struct {
	IUnknownVtbl
	GetNumberSymbols    uintptr
	AddSymbol           uintptr
	RemoveSymbolByName  uintptr
	RemoveSymbolByIndex uintptr
	GetSymbolName       uintptr
	GetSymbolParameters uintptr
	ExpandSymbol        uintptr
	OutputSymbols       uintptr
	WriteSymbol         uintptr
	OutputAsType        uintptr
}

type IDebugSymbolGroup struct {
	IUnknown
}

func (this *IDebugSymbolGroup) Vtbl() *IDebugSymbolGroupVtbl {
	return (*IDebugSymbolGroupVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSymbolGroup) GetNumberSymbols(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSymbols, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup) AddSymbol(Name PSTR, Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSymbol, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup) RemoveSymbolByName(Name PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup) RemoveSymbolByIndex(Index uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup) GetSymbolName(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolName, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup) GetSymbolParameters(Start uint32, Count uint32, Params *DEBUG_SYMBOL_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup) ExpandSymbol(Index uint32, Expand BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExpandSymbol, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Expand))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup) OutputSymbols(OutputControl uint32, Flags uint32, Start uint32, Count uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputSymbols, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(Start), uintptr(Count))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup) WriteSymbol(Index uint32, Value PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteSymbol, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup) OutputAsType(Index uint32, Type PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputAsType, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

// 6A7CCC5F-FB5E-4DCC-B41C-6C20307BCCC7
var IID_IDebugSymbolGroup2 = syscall.GUID{0x6A7CCC5F, 0xFB5E, 0x4DCC,
	[8]byte{0xB4, 0x1C, 0x6C, 0x20, 0x30, 0x7B, 0xCC, 0xC7}}

type IDebugSymbolGroup2Interface interface {
	IUnknownInterface
	GetNumberSymbols(Number *uint32) HRESULT
	AddSymbol(Name PSTR, Index *uint32) HRESULT
	RemoveSymbolByName(Name PSTR) HRESULT
	RemoveSymbolByIndex(Index uint32) HRESULT
	GetSymbolName(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetSymbolParameters(Start uint32, Count uint32, Params *DEBUG_SYMBOL_PARAMETERS) HRESULT
	ExpandSymbol(Index uint32, Expand BOOL) HRESULT
	OutputSymbols(OutputControl uint32, Flags uint32, Start uint32, Count uint32) HRESULT
	WriteSymbol(Index uint32, Value PSTR) HRESULT
	OutputAsType(Index uint32, Type PSTR) HRESULT
	AddSymbolWide(Name PWSTR, Index *uint32) HRESULT
	RemoveSymbolByNameWide(Name PWSTR) HRESULT
	GetSymbolNameWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT
	WriteSymbolWide(Index uint32, Value PWSTR) HRESULT
	OutputAsTypeWide(Index uint32, Type PWSTR) HRESULT
	GetSymbolTypeName(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetSymbolTypeNameWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetSymbolSize(Index uint32, Size *uint32) HRESULT
	GetSymbolOffset(Index uint32, Offset *uint64) HRESULT
	GetSymbolRegister(Index uint32, Register *uint32) HRESULT
	GetSymbolValueText(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetSymbolValueTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetSymbolEntryInformation(Index uint32, Entry *DEBUG_SYMBOL_ENTRY) HRESULT
}

type IDebugSymbolGroup2Vtbl struct {
	IUnknownVtbl
	GetNumberSymbols          uintptr
	AddSymbol                 uintptr
	RemoveSymbolByName        uintptr
	RemoveSymbolByIndex       uintptr
	GetSymbolName             uintptr
	GetSymbolParameters       uintptr
	ExpandSymbol              uintptr
	OutputSymbols             uintptr
	WriteSymbol               uintptr
	OutputAsType              uintptr
	AddSymbolWide             uintptr
	RemoveSymbolByNameWide    uintptr
	GetSymbolNameWide         uintptr
	WriteSymbolWide           uintptr
	OutputAsTypeWide          uintptr
	GetSymbolTypeName         uintptr
	GetSymbolTypeNameWide     uintptr
	GetSymbolSize             uintptr
	GetSymbolOffset           uintptr
	GetSymbolRegister         uintptr
	GetSymbolValueText        uintptr
	GetSymbolValueTextWide    uintptr
	GetSymbolEntryInformation uintptr
}

type IDebugSymbolGroup2 struct {
	IUnknown
}

func (this *IDebugSymbolGroup2) Vtbl() *IDebugSymbolGroup2Vtbl {
	return (*IDebugSymbolGroup2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSymbolGroup2) GetNumberSymbols(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSymbols, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) AddSymbol(Name PSTR, Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSymbol, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) RemoveSymbolByName(Name PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) RemoveSymbolByIndex(Index uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolName(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolName, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolParameters(Start uint32, Count uint32, Params *DEBUG_SYMBOL_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolParameters, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) ExpandSymbol(Index uint32, Expand BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ExpandSymbol, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Expand))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) OutputSymbols(OutputControl uint32, Flags uint32, Start uint32, Count uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputSymbols, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(Start), uintptr(Count))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) WriteSymbol(Index uint32, Value PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteSymbol, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) OutputAsType(Index uint32, Type PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputAsType, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) AddSymbolWide(Name PWSTR, Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSymbolWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) RemoveSymbolByNameWide(Name PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolNameWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolNameWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) WriteSymbolWide(Index uint32, Value PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteSymbolWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Value)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) OutputAsTypeWide(Index uint32, Type PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputAsTypeWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Type)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolTypeName(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeName, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolTypeNameWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeNameWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolSize(Index uint32, Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolSize, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolOffset(Index uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolOffset, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolRegister(Index uint32, Register *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolRegister, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Register)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolValueText(Index uint32, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolValueText, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolValueTextWide(Index uint32, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolValueTextWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbolGroup2) GetSymbolEntryInformation(Index uint32, Entry *DEBUG_SYMBOL_ENTRY) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryInformation, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Entry)))
	return HRESULT(ret)
}

// 8C31E98C-983A-48A5-9016-6FE5D667A950
var IID_IDebugSymbols = syscall.GUID{0x8C31E98C, 0x983A, 0x48A5,
	[8]byte{0x90, 0x16, 0x6F, 0xE5, 0xD6, 0x67, 0xA9, 0x50}}

type IDebugSymbolsInterface interface {
	IUnknownInterface
	GetSymbolOptions(Options *uint32) HRESULT
	AddSymbolOptions(Options uint32) HRESULT
	RemoveSymbolOptions(Options uint32) HRESULT
	SetSymbolOptions(Options uint32) HRESULT
	GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT
	GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT
	GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT
	GetModuleByIndex(Index uint32, Base *uint64) HRESULT
	GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT
	GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT
	GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT
	GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT
	GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT
	GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT
	GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT
	GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT
	ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	ResetScope() HRESULT
	GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT
	CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT
	StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT
	GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT
	EndSymbolMatch(Handle uint64) HRESULT
	Reload(Module PSTR) HRESULT
	GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetSymbolPath(Path PSTR) HRESULT
	AppendSymbolPath(Addition PSTR) HRESULT
	GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetImagePath(Path PSTR) HRESULT
	AppendImagePath(Addition PSTR) HRESULT
	GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT
	SetSourcePath(Path PSTR) HRESULT
	AppendSourcePath(Addition PSTR) HRESULT
	FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT
}

type IDebugSymbolsVtbl struct {
	IUnknownVtbl
	GetSymbolOptions         uintptr
	AddSymbolOptions         uintptr
	RemoveSymbolOptions      uintptr
	SetSymbolOptions         uintptr
	GetNameByOffset          uintptr
	GetOffsetByName          uintptr
	GetNearNameByOffset      uintptr
	GetLineByOffset          uintptr
	GetOffsetByLine          uintptr
	GetNumberModules         uintptr
	GetModuleByIndex         uintptr
	GetModuleByModuleName    uintptr
	GetModuleByOffset        uintptr
	GetModuleNames           uintptr
	GetModuleParameters      uintptr
	GetSymbolModule          uintptr
	GetTypeName              uintptr
	GetTypeId                uintptr
	GetTypeSize              uintptr
	GetFieldOffset           uintptr
	GetSymbolTypeId          uintptr
	GetOffsetTypeId          uintptr
	ReadTypedDataVirtual     uintptr
	WriteTypedDataVirtual    uintptr
	OutputTypedDataVirtual   uintptr
	ReadTypedDataPhysical    uintptr
	WriteTypedDataPhysical   uintptr
	OutputTypedDataPhysical  uintptr
	GetScope                 uintptr
	SetScope                 uintptr
	ResetScope               uintptr
	GetScopeSymbolGroup      uintptr
	CreateSymbolGroup        uintptr
	StartSymbolMatch         uintptr
	GetNextSymbolMatch       uintptr
	EndSymbolMatch           uintptr
	Reload                   uintptr
	GetSymbolPath            uintptr
	SetSymbolPath            uintptr
	AppendSymbolPath         uintptr
	GetImagePath             uintptr
	SetImagePath             uintptr
	AppendImagePath          uintptr
	GetSourcePath            uintptr
	GetSourcePathElement     uintptr
	SetSourcePath            uintptr
	AppendSourcePath         uintptr
	FindSourceFile           uintptr
	GetSourceFileLineOffsets uintptr
}

type IDebugSymbols struct {
	IUnknown
}

func (this *IDebugSymbols) Vtbl() *IDebugSymbolsVtbl {
	return (*IDebugSymbolsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSymbols) GetSymbolOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) AddSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols) RemoveSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols) SetSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByLine, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberModules, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Loaded)), uintptr(unsafe.Pointer(Unloaded)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetModuleByIndex(Index uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(ImageNameBuffer)), uintptr(ImageNameBufferSize), uintptr(unsafe.Pointer(ImageNameSize)), uintptr(unsafe.Pointer(ModuleNameBuffer)), uintptr(ModuleNameBufferSize), uintptr(unsafe.Pointer(ModuleNameSize)), uintptr(unsafe.Pointer(LoadedImageNameBuffer)), uintptr(LoadedImageNameBufferSize), uintptr(unsafe.Pointer(LoadedImageNameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Bases)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolModule, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeSize, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldOffset, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols) ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScope, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InstructionOffset)), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols) SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScope, uintptr(unsafe.Pointer(this)), uintptr(InstructionOffset), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols) ResetScope() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetScope, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Update)), uintptr(unsafe.Pointer(Symbols)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Group)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Pattern)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MatchSize)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) EndSymbolMatch(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugSymbols) Reload(Module PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reload, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) SetSymbolPath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) AppendSymbolPath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) SetImagePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) AppendImagePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathElement, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ElementSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) SetSourcePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) AppendSourcePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFile, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols) GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileLineOffsets, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferLines), uintptr(unsafe.Pointer(FileLines)))
	return HRESULT(ret)
}

// 3A707211-AFDD-4495-AD4F-56FECDF8163F
var IID_IDebugSymbols2 = syscall.GUID{0x3A707211, 0xAFDD, 0x4495,
	[8]byte{0xAD, 0x4F, 0x56, 0xFE, 0xCD, 0xF8, 0x16, 0x3F}}

type IDebugSymbols2Interface interface {
	IUnknownInterface
	GetSymbolOptions(Options *uint32) HRESULT
	AddSymbolOptions(Options uint32) HRESULT
	RemoveSymbolOptions(Options uint32) HRESULT
	SetSymbolOptions(Options uint32) HRESULT
	GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT
	GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT
	GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT
	GetModuleByIndex(Index uint32, Base *uint64) HRESULT
	GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT
	GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT
	GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT
	GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT
	GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT
	GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT
	GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT
	GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT
	ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	ResetScope() HRESULT
	GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT
	CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT
	StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT
	GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT
	EndSymbolMatch(Handle uint64) HRESULT
	Reload(Module PSTR) HRESULT
	GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetSymbolPath(Path PSTR) HRESULT
	AppendSymbolPath(Addition PSTR) HRESULT
	GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetImagePath(Path PSTR) HRESULT
	AppendImagePath(Addition PSTR) HRESULT
	GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT
	SetSourcePath(Path PSTR) HRESULT
	AppendSourcePath(Addition PSTR) HRESULT
	FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT
	GetModuleVersionInformation(Index uint32, Base uint64, Item PSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT
	GetModuleNameString(Which uint32, Index uint32, Base uint64, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetConstantName(Module uint64, TypeId uint32, Value uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetFieldName(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeOptions(Options *uint32) HRESULT
	AddTypeOptions(Options uint32) HRESULT
	RemoveTypeOptions(Options uint32) HRESULT
	SetTypeOptions(Options uint32) HRESULT
}

type IDebugSymbols2Vtbl struct {
	IUnknownVtbl
	GetSymbolOptions            uintptr
	AddSymbolOptions            uintptr
	RemoveSymbolOptions         uintptr
	SetSymbolOptions            uintptr
	GetNameByOffset             uintptr
	GetOffsetByName             uintptr
	GetNearNameByOffset         uintptr
	GetLineByOffset             uintptr
	GetOffsetByLine             uintptr
	GetNumberModules            uintptr
	GetModuleByIndex            uintptr
	GetModuleByModuleName       uintptr
	GetModuleByOffset           uintptr
	GetModuleNames              uintptr
	GetModuleParameters         uintptr
	GetSymbolModule             uintptr
	GetTypeName                 uintptr
	GetTypeId                   uintptr
	GetTypeSize                 uintptr
	GetFieldOffset              uintptr
	GetSymbolTypeId             uintptr
	GetOffsetTypeId             uintptr
	ReadTypedDataVirtual        uintptr
	WriteTypedDataVirtual       uintptr
	OutputTypedDataVirtual      uintptr
	ReadTypedDataPhysical       uintptr
	WriteTypedDataPhysical      uintptr
	OutputTypedDataPhysical     uintptr
	GetScope                    uintptr
	SetScope                    uintptr
	ResetScope                  uintptr
	GetScopeSymbolGroup         uintptr
	CreateSymbolGroup           uintptr
	StartSymbolMatch            uintptr
	GetNextSymbolMatch          uintptr
	EndSymbolMatch              uintptr
	Reload                      uintptr
	GetSymbolPath               uintptr
	SetSymbolPath               uintptr
	AppendSymbolPath            uintptr
	GetImagePath                uintptr
	SetImagePath                uintptr
	AppendImagePath             uintptr
	GetSourcePath               uintptr
	GetSourcePathElement        uintptr
	SetSourcePath               uintptr
	AppendSourcePath            uintptr
	FindSourceFile              uintptr
	GetSourceFileLineOffsets    uintptr
	GetModuleVersionInformation uintptr
	GetModuleNameString         uintptr
	GetConstantName             uintptr
	GetFieldName                uintptr
	GetTypeOptions              uintptr
	AddTypeOptions              uintptr
	RemoveTypeOptions           uintptr
	SetTypeOptions              uintptr
}

type IDebugSymbols2 struct {
	IUnknown
}

func (this *IDebugSymbols2) Vtbl() *IDebugSymbols2Vtbl {
	return (*IDebugSymbols2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSymbols2) GetSymbolOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) AddSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) RemoveSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) SetSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByLine, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberModules, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Loaded)), uintptr(unsafe.Pointer(Unloaded)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetModuleByIndex(Index uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(ImageNameBuffer)), uintptr(ImageNameBufferSize), uintptr(unsafe.Pointer(ImageNameSize)), uintptr(unsafe.Pointer(ModuleNameBuffer)), uintptr(ModuleNameBufferSize), uintptr(unsafe.Pointer(ModuleNameSize)), uintptr(unsafe.Pointer(LoadedImageNameBuffer)), uintptr(LoadedImageNameBufferSize), uintptr(unsafe.Pointer(LoadedImageNameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Bases)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolModule, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeSize, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldOffset, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScope, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InstructionOffset)), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScope, uintptr(unsafe.Pointer(this)), uintptr(InstructionOffset), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) ResetScope() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetScope, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Update)), uintptr(unsafe.Pointer(Symbols)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Group)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Pattern)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MatchSize)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) EndSymbolMatch(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) Reload(Module PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reload, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) SetSymbolPath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) AppendSymbolPath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) SetImagePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) AppendImagePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathElement, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ElementSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) SetSourcePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) AppendSourcePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFile, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileLineOffsets, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferLines), uintptr(unsafe.Pointer(FileLines)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetModuleVersionInformation(Index uint32, Base uint64, Item PSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Item)), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(VerInfoSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetModuleNameString(Which uint32, Index uint32, Base uint64, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNameString, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetConstantName(Module uint64, TypeId uint32, Value uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetConstantName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(Value), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetFieldName(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(FieldIndex), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) GetTypeOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) AddTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) RemoveTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols2) SetTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

// F02FBECC-50AC-4F36-9AD9-C975E8F32FF8
var IID_IDebugSymbols3 = syscall.GUID{0xF02FBECC, 0x50AC, 0x4F36,
	[8]byte{0x9A, 0xD9, 0xC9, 0x75, 0xE8, 0xF3, 0x2F, 0xF8}}

type IDebugSymbols3Interface interface {
	IUnknownInterface
	GetSymbolOptions(Options *uint32) HRESULT
	AddSymbolOptions(Options uint32) HRESULT
	RemoveSymbolOptions(Options uint32) HRESULT
	SetSymbolOptions(Options uint32) HRESULT
	GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT
	GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT
	GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT
	GetModuleByIndex(Index uint32, Base *uint64) HRESULT
	GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT
	GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT
	GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT
	GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT
	GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT
	GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT
	GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT
	GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT
	ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	ResetScope() HRESULT
	GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT
	CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT
	StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT
	GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT
	EndSymbolMatch(Handle uint64) HRESULT
	Reload(Module PSTR) HRESULT
	GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetSymbolPath(Path PSTR) HRESULT
	AppendSymbolPath(Addition PSTR) HRESULT
	GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetImagePath(Path PSTR) HRESULT
	AppendImagePath(Addition PSTR) HRESULT
	GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT
	SetSourcePath(Path PSTR) HRESULT
	AppendSourcePath(Addition PSTR) HRESULT
	FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT
	GetModuleVersionInformation(Index uint32, Base uint64, Item PSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT
	GetModuleNameString(Which uint32, Index uint32, Base uint64, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetConstantName(Module uint64, TypeId uint32, Value uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetFieldName(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeOptions(Options *uint32) HRESULT
	AddTypeOptions(Options uint32) HRESULT
	RemoveTypeOptions(Options uint32) HRESULT
	SetTypeOptions(Options uint32) HRESULT
	GetNameByOffsetWide(Offset uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByNameWide(Symbol PWSTR, Offset *uint64) HRESULT
	GetNearNameByOffsetWide(Offset uint64, Delta int32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByOffsetWide(Offset uint64, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByLineWide(Line uint32, File PWSTR, Offset *uint64) HRESULT
	GetModuleByModuleNameWide(Name PWSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetSymbolModuleWide(Symbol PWSTR, Base *uint64) HRESULT
	GetTypeNameWide(Module uint64, TypeId uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeIdWide(Module uint64, Name PWSTR, TypeId *uint32) HRESULT
	GetFieldOffsetWide(Module uint64, TypeId uint32, Field PWSTR, Offset *uint32) HRESULT
	GetSymbolTypeIdWide(Symbol PWSTR, TypeId *uint32, Module *uint64) HRESULT
	GetScopeSymbolGroup2(Flags uint32, Update *IDebugSymbolGroup2, Symbols **IDebugSymbolGroup2) HRESULT
	CreateSymbolGroup2(Group **IDebugSymbolGroup2) HRESULT
	StartSymbolMatchWide(Pattern PWSTR, Handle *uint64) HRESULT
	GetNextSymbolMatchWide(Handle uint64, Buffer PWSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT
	ReloadWide(Module PWSTR) HRESULT
	GetSymbolPathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetSymbolPathWide(Path PWSTR) HRESULT
	AppendSymbolPathWide(Addition PWSTR) HRESULT
	GetImagePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetImagePathWide(Path PWSTR) HRESULT
	AppendImagePathWide(Addition PWSTR) HRESULT
	GetSourcePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT
	GetSourcePathElementWide(Index uint32, Buffer PWSTR, BufferSize uint32, ElementSize *uint32) HRESULT
	SetSourcePathWide(Path PWSTR) HRESULT
	AppendSourcePathWide(Addition PWSTR) HRESULT
	FindSourceFileWide(StartElement uint32, File PWSTR, Flags uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSourceFileLineOffsetsWide(File PWSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT
	GetModuleVersionInformationWide(Index uint32, Base uint64, Item PWSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT
	GetModuleNameStringWide(Which uint32, Index uint32, Base uint64, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetConstantNameWide(Module uint64, TypeId uint32, Value uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetFieldNameWide(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	IsManagedModule(Index uint32, Base uint64) HRESULT
	GetModuleByModuleName2(Name PSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByModuleName2Wide(Name PWSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByOffset2(Offset uint64, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT
	AddSyntheticModule(Base uint64, Size uint32, ImagePath PSTR, ModuleName PSTR, Flags uint32) HRESULT
	AddSyntheticModuleWide(Base uint64, Size uint32, ImagePath PWSTR, ModuleName PWSTR, Flags uint32) HRESULT
	RemoveSyntheticModule(Base uint64) HRESULT
	GetCurrentScopeFrameIndex(Index *uint32) HRESULT
	SetScopeFrameByIndex(Index uint32) HRESULT
	SetScopeFromJitDebugInfo(OutputControl uint32, InfoOffset uint64) HRESULT
	SetScopeFromStoredEvent() HRESULT
	OutputSymbolByOffset(OutputControl uint32, Flags uint32, Offset uint64) HRESULT
	GetFunctionEntryByOffset(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BufferNeeded *uint32) HRESULT
	GetFieldTypeAndOffset(Module uint64, ContainerTypeId uint32, Field PSTR, FieldTypeId *uint32, Offset *uint32) HRESULT
	GetFieldTypeAndOffsetWide(Module uint64, ContainerTypeId uint32, Field PWSTR, FieldTypeId *uint32, Offset *uint32) HRESULT
	AddSyntheticSymbol(Offset uint64, Size uint32, Name PSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT
	AddSyntheticSymbolWide(Offset uint64, Size uint32, Name PWSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT
	RemoveSyntheticSymbol(Id *DEBUG_MODULE_AND_ID) HRESULT
	GetSymbolEntriesByOffset(Offset uint64, Flags uint32, Ids *DEBUG_MODULE_AND_ID, Displacements *uint64, IdsCount uint32, Entries *uint32) HRESULT
	GetSymbolEntriesByName(Symbol PSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT
	GetSymbolEntriesByNameWide(Symbol PWSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT
	GetSymbolEntryByToken(ModuleBase uint64, Token uint32, Id *DEBUG_MODULE_AND_ID) HRESULT
	GetSymbolEntryInformation(Id *DEBUG_MODULE_AND_ID, Info *DEBUG_SYMBOL_ENTRY) HRESULT
	GetSymbolEntryString(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSymbolEntryStringWide(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSymbolEntryOffsetRegions(Id *DEBUG_MODULE_AND_ID, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT
	GetSymbolEntryBySymbolEntry(FromId *DEBUG_MODULE_AND_ID, Flags uint32, ToId *DEBUG_MODULE_AND_ID) HRESULT
	GetSourceEntriesByOffset(Offset uint64, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT
	GetSourceEntriesByLine(Line uint32, File PSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT
	GetSourceEntriesByLineWide(Line uint32, File PWSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT
	GetSourceEntryString(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSourceEntryStringWide(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSourceEntryOffsetRegions(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT
	GetSourceEntryBySourceEntry(FromEntry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, ToEntry *DEBUG_SYMBOL_SOURCE_ENTRY) HRESULT
}

type IDebugSymbols3Vtbl struct {
	IUnknownVtbl
	GetSymbolOptions                uintptr
	AddSymbolOptions                uintptr
	RemoveSymbolOptions             uintptr
	SetSymbolOptions                uintptr
	GetNameByOffset                 uintptr
	GetOffsetByName                 uintptr
	GetNearNameByOffset             uintptr
	GetLineByOffset                 uintptr
	GetOffsetByLine                 uintptr
	GetNumberModules                uintptr
	GetModuleByIndex                uintptr
	GetModuleByModuleName           uintptr
	GetModuleByOffset               uintptr
	GetModuleNames                  uintptr
	GetModuleParameters             uintptr
	GetSymbolModule                 uintptr
	GetTypeName                     uintptr
	GetTypeId                       uintptr
	GetTypeSize                     uintptr
	GetFieldOffset                  uintptr
	GetSymbolTypeId                 uintptr
	GetOffsetTypeId                 uintptr
	ReadTypedDataVirtual            uintptr
	WriteTypedDataVirtual           uintptr
	OutputTypedDataVirtual          uintptr
	ReadTypedDataPhysical           uintptr
	WriteTypedDataPhysical          uintptr
	OutputTypedDataPhysical         uintptr
	GetScope                        uintptr
	SetScope                        uintptr
	ResetScope                      uintptr
	GetScopeSymbolGroup             uintptr
	CreateSymbolGroup               uintptr
	StartSymbolMatch                uintptr
	GetNextSymbolMatch              uintptr
	EndSymbolMatch                  uintptr
	Reload                          uintptr
	GetSymbolPath                   uintptr
	SetSymbolPath                   uintptr
	AppendSymbolPath                uintptr
	GetImagePath                    uintptr
	SetImagePath                    uintptr
	AppendImagePath                 uintptr
	GetSourcePath                   uintptr
	GetSourcePathElement            uintptr
	SetSourcePath                   uintptr
	AppendSourcePath                uintptr
	FindSourceFile                  uintptr
	GetSourceFileLineOffsets        uintptr
	GetModuleVersionInformation     uintptr
	GetModuleNameString             uintptr
	GetConstantName                 uintptr
	GetFieldName                    uintptr
	GetTypeOptions                  uintptr
	AddTypeOptions                  uintptr
	RemoveTypeOptions               uintptr
	SetTypeOptions                  uintptr
	GetNameByOffsetWide             uintptr
	GetOffsetByNameWide             uintptr
	GetNearNameByOffsetWide         uintptr
	GetLineByOffsetWide             uintptr
	GetOffsetByLineWide             uintptr
	GetModuleByModuleNameWide       uintptr
	GetSymbolModuleWide             uintptr
	GetTypeNameWide                 uintptr
	GetTypeIdWide                   uintptr
	GetFieldOffsetWide              uintptr
	GetSymbolTypeIdWide             uintptr
	GetScopeSymbolGroup2            uintptr
	CreateSymbolGroup2              uintptr
	StartSymbolMatchWide            uintptr
	GetNextSymbolMatchWide          uintptr
	ReloadWide                      uintptr
	GetSymbolPathWide               uintptr
	SetSymbolPathWide               uintptr
	AppendSymbolPathWide            uintptr
	GetImagePathWide                uintptr
	SetImagePathWide                uintptr
	AppendImagePathWide             uintptr
	GetSourcePathWide               uintptr
	GetSourcePathElementWide        uintptr
	SetSourcePathWide               uintptr
	AppendSourcePathWide            uintptr
	FindSourceFileWide              uintptr
	GetSourceFileLineOffsetsWide    uintptr
	GetModuleVersionInformationWide uintptr
	GetModuleNameStringWide         uintptr
	GetConstantNameWide             uintptr
	GetFieldNameWide                uintptr
	IsManagedModule                 uintptr
	GetModuleByModuleName2          uintptr
	GetModuleByModuleName2Wide      uintptr
	GetModuleByOffset2              uintptr
	AddSyntheticModule              uintptr
	AddSyntheticModuleWide          uintptr
	RemoveSyntheticModule           uintptr
	GetCurrentScopeFrameIndex       uintptr
	SetScopeFrameByIndex            uintptr
	SetScopeFromJitDebugInfo        uintptr
	SetScopeFromStoredEvent         uintptr
	OutputSymbolByOffset            uintptr
	GetFunctionEntryByOffset        uintptr
	GetFieldTypeAndOffset           uintptr
	GetFieldTypeAndOffsetWide       uintptr
	AddSyntheticSymbol              uintptr
	AddSyntheticSymbolWide          uintptr
	RemoveSyntheticSymbol           uintptr
	GetSymbolEntriesByOffset        uintptr
	GetSymbolEntriesByName          uintptr
	GetSymbolEntriesByNameWide      uintptr
	GetSymbolEntryByToken           uintptr
	GetSymbolEntryInformation       uintptr
	GetSymbolEntryString            uintptr
	GetSymbolEntryStringWide        uintptr
	GetSymbolEntryOffsetRegions     uintptr
	GetSymbolEntryBySymbolEntry     uintptr
	GetSourceEntriesByOffset        uintptr
	GetSourceEntriesByLine          uintptr
	GetSourceEntriesByLineWide      uintptr
	GetSourceEntryString            uintptr
	GetSourceEntryStringWide        uintptr
	GetSourceEntryOffsetRegions     uintptr
	GetSourceEntryBySourceEntry     uintptr
}

type IDebugSymbols3 struct {
	IUnknown
}

func (this *IDebugSymbols3) Vtbl() *IDebugSymbols3Vtbl {
	return (*IDebugSymbols3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSymbols3) GetSymbolOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AddSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) RemoveSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByLine, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberModules, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Loaded)), uintptr(unsafe.Pointer(Unloaded)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleByIndex(Index uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(ImageNameBuffer)), uintptr(ImageNameBufferSize), uintptr(unsafe.Pointer(ImageNameSize)), uintptr(unsafe.Pointer(ModuleNameBuffer)), uintptr(ModuleNameBufferSize), uintptr(unsafe.Pointer(ModuleNameSize)), uintptr(unsafe.Pointer(LoadedImageNameBuffer)), uintptr(LoadedImageNameBufferSize), uintptr(unsafe.Pointer(LoadedImageNameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Bases)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolModule, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeSize, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldOffset, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScope, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InstructionOffset)), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScope, uintptr(unsafe.Pointer(this)), uintptr(InstructionOffset), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) ResetScope() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetScope, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Update)), uintptr(unsafe.Pointer(Symbols)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Group)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Pattern)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MatchSize)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) EndSymbolMatch(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) Reload(Module PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reload, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetSymbolPath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AppendSymbolPath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetImagePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AppendImagePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathElement, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ElementSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetSourcePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AppendSourcePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFile, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileLineOffsets, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferLines), uintptr(unsafe.Pointer(FileLines)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleVersionInformation(Index uint32, Base uint64, Item PSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Item)), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(VerInfoSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleNameString(Which uint32, Index uint32, Base uint64, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNameString, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetConstantName(Module uint64, TypeId uint32, Value uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetConstantName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(Value), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetFieldName(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(FieldIndex), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetTypeOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AddTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) RemoveTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetNameByOffsetWide(Offset uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetOffsetByNameWide(Symbol PWSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetNearNameByOffsetWide(Offset uint64, Delta int32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearNameByOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetLineByOffsetWide(Offset uint64, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetOffsetByLineWide(Line uint32, File PWSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByLineWide, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleByModuleNameWide(Name PWSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolModuleWide(Symbol PWSTR, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolModuleWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetTypeNameWide(Module uint64, TypeId uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeNameWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetTypeIdWide(Module uint64, Name PWSTR, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeIdWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetFieldOffsetWide(Module uint64, TypeId uint32, Field PWSTR, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolTypeIdWide(Symbol PWSTR, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeIdWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetScopeSymbolGroup2(Flags uint32, Update *IDebugSymbolGroup2, Symbols **IDebugSymbolGroup2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeSymbolGroup2, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Update)), uintptr(unsafe.Pointer(Symbols)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) CreateSymbolGroup2(Group **IDebugSymbolGroup2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSymbolGroup2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Group)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) StartSymbolMatchWide(Pattern PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartSymbolMatchWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Pattern)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetNextSymbolMatchWide(Handle uint64, Buffer PWSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextSymbolMatchWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MatchSize)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) ReloadWide(Module PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReloadWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolPathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetSymbolPathWide(Path PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AppendSymbolPathWide(Addition PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSymbolPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetImagePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImagePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetImagePathWide(Path PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImagePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AppendImagePathWide(Addition PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendImagePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourcePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourcePathElementWide(Index uint32, Buffer PWSTR, BufferSize uint32, ElementSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathElementWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ElementSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetSourcePathWide(Path PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSourcePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AppendSourcePathWide(Addition PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSourcePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) FindSourceFileWide(StartElement uint32, File PWSTR, Flags uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFileWide, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourceFileLineOffsetsWide(File PWSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileLineOffsetsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferLines), uintptr(unsafe.Pointer(FileLines)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleVersionInformationWide(Index uint32, Base uint64, Item PWSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleVersionInformationWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Item)), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(VerInfoSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleNameStringWide(Which uint32, Index uint32, Base uint64, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNameStringWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetConstantNameWide(Module uint64, TypeId uint32, Value uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetConstantNameWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(Value), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetFieldNameWide(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldNameWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(FieldIndex), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) IsManagedModule(Index uint32, Base uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsManagedModule, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleByModuleName2(Name PSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(Flags), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleByModuleName2Wide(Name PWSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(Flags), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetModuleByOffset2(Offset uint64, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByOffset2, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(StartIndex), uintptr(Flags), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AddSyntheticModule(Base uint64, Size uint32, ImagePath PSTR, ModuleName PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticModule, uintptr(unsafe.Pointer(this)), uintptr(Base), uintptr(Size), uintptr(unsafe.Pointer(ImagePath)), uintptr(unsafe.Pointer(ModuleName)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AddSyntheticModuleWide(Base uint64, Size uint32, ImagePath PWSTR, ModuleName PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticModuleWide, uintptr(unsafe.Pointer(this)), uintptr(Base), uintptr(Size), uintptr(unsafe.Pointer(ImagePath)), uintptr(unsafe.Pointer(ModuleName)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) RemoveSyntheticModule(Base uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSyntheticModule, uintptr(unsafe.Pointer(this)), uintptr(Base))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetCurrentScopeFrameIndex(Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentScopeFrameIndex, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetScopeFrameByIndex(Index uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFrameByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetScopeFromJitDebugInfo(OutputControl uint32, InfoOffset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFromJitDebugInfo, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(InfoOffset))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) SetScopeFromStoredEvent() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFromStoredEvent, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) OutputSymbolByOffset(OutputControl uint32, Flags uint32, Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputSymbolByOffset, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetFunctionEntryByOffset(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BufferNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFunctionEntryByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BufferNeeded)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetFieldTypeAndOffset(Module uint64, ContainerTypeId uint32, Field PSTR, FieldTypeId *uint32, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldTypeAndOffset, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(ContainerTypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(FieldTypeId)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetFieldTypeAndOffsetWide(Module uint64, ContainerTypeId uint32, Field PWSTR, FieldTypeId *uint32, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldTypeAndOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(ContainerTypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(FieldTypeId)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AddSyntheticSymbol(Offset uint64, Size uint32, Name PSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticSymbol, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Size), uintptr(unsafe.Pointer(Name)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) AddSyntheticSymbolWide(Offset uint64, Size uint32, Name PWSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticSymbolWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Size), uintptr(unsafe.Pointer(Name)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) RemoveSyntheticSymbol(Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSyntheticSymbol, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolEntriesByOffset(Offset uint64, Flags uint32, Ids *DEBUG_MODULE_AND_ID, Displacements *uint64, IdsCount uint32, Entries *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntriesByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(Displacements)), uintptr(IdsCount), uintptr(unsafe.Pointer(Entries)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolEntriesByName(Symbol PSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntriesByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(Flags), uintptr(unsafe.Pointer(Ids)), uintptr(IdsCount), uintptr(unsafe.Pointer(Entries)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolEntriesByNameWide(Symbol PWSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntriesByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(Flags), uintptr(unsafe.Pointer(Ids)), uintptr(IdsCount), uintptr(unsafe.Pointer(Entries)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolEntryByToken(ModuleBase uint64, Token uint32, Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryByToken, uintptr(unsafe.Pointer(this)), uintptr(ModuleBase), uintptr(Token), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolEntryInformation(Id *DEBUG_MODULE_AND_ID, Info *DEBUG_SYMBOL_ENTRY) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(unsafe.Pointer(Info)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolEntryString(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolEntryStringWide(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolEntryOffsetRegions(Id *DEBUG_MODULE_AND_ID, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryOffsetRegions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(Flags), uintptr(unsafe.Pointer(Regions)), uintptr(RegionsCount), uintptr(unsafe.Pointer(RegionsAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSymbolEntryBySymbolEntry(FromId *DEBUG_MODULE_AND_ID, Flags uint32, ToId *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryBySymbolEntry, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FromId)), uintptr(Flags), uintptr(unsafe.Pointer(ToId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourceEntriesByOffset(Offset uint64, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntriesByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Entries)), uintptr(EntriesCount), uintptr(unsafe.Pointer(EntriesAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourceEntriesByLine(Line uint32, File PSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntriesByLine, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(Entries)), uintptr(EntriesCount), uintptr(unsafe.Pointer(EntriesAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourceEntriesByLineWide(Line uint32, File PWSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntriesByLineWide, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(Entries)), uintptr(EntriesCount), uintptr(unsafe.Pointer(EntriesAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourceEntryString(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Entry)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourceEntryStringWide(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Entry)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourceEntryOffsetRegions(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryOffsetRegions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Entry)), uintptr(Flags), uintptr(unsafe.Pointer(Regions)), uintptr(RegionsCount), uintptr(unsafe.Pointer(RegionsAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols3) GetSourceEntryBySourceEntry(FromEntry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, ToEntry *DEBUG_SYMBOL_SOURCE_ENTRY) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryBySourceEntry, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FromEntry)), uintptr(Flags), uintptr(unsafe.Pointer(ToEntry)))
	return HRESULT(ret)
}

// E391BBD8-9D8C-4418-840B-C006592A1752
var IID_IDebugSymbols4 = syscall.GUID{0xE391BBD8, 0x9D8C, 0x4418,
	[8]byte{0x84, 0x0B, 0xC0, 0x06, 0x59, 0x2A, 0x17, 0x52}}

type IDebugSymbols4Interface interface {
	IUnknownInterface
	GetSymbolOptions(Options *uint32) HRESULT
	AddSymbolOptions(Options uint32) HRESULT
	RemoveSymbolOptions(Options uint32) HRESULT
	SetSymbolOptions(Options uint32) HRESULT
	GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT
	GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT
	GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT
	GetModuleByIndex(Index uint32, Base *uint64) HRESULT
	GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT
	GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT
	GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT
	GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT
	GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT
	GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT
	GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT
	GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT
	ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	ResetScope() HRESULT
	GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT
	CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT
	StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT
	GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT
	EndSymbolMatch(Handle uint64) HRESULT
	Reload(Module PSTR) HRESULT
	GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetSymbolPath(Path PSTR) HRESULT
	AppendSymbolPath(Addition PSTR) HRESULT
	GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetImagePath(Path PSTR) HRESULT
	AppendImagePath(Addition PSTR) HRESULT
	GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT
	SetSourcePath(Path PSTR) HRESULT
	AppendSourcePath(Addition PSTR) HRESULT
	FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT
	GetModuleVersionInformation(Index uint32, Base uint64, Item PSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT
	GetModuleNameString(Which uint32, Index uint32, Base uint64, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetConstantName(Module uint64, TypeId uint32, Value uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetFieldName(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeOptions(Options *uint32) HRESULT
	AddTypeOptions(Options uint32) HRESULT
	RemoveTypeOptions(Options uint32) HRESULT
	SetTypeOptions(Options uint32) HRESULT
	GetNameByOffsetWide(Offset uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByNameWide(Symbol PWSTR, Offset *uint64) HRESULT
	GetNearNameByOffsetWide(Offset uint64, Delta int32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByOffsetWide(Offset uint64, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByLineWide(Line uint32, File PWSTR, Offset *uint64) HRESULT
	GetModuleByModuleNameWide(Name PWSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetSymbolModuleWide(Symbol PWSTR, Base *uint64) HRESULT
	GetTypeNameWide(Module uint64, TypeId uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeIdWide(Module uint64, Name PWSTR, TypeId *uint32) HRESULT
	GetFieldOffsetWide(Module uint64, TypeId uint32, Field PWSTR, Offset *uint32) HRESULT
	GetSymbolTypeIdWide(Symbol PWSTR, TypeId *uint32, Module *uint64) HRESULT
	GetScopeSymbolGroup2(Flags uint32, Update *IDebugSymbolGroup2, Symbols **IDebugSymbolGroup2) HRESULT
	CreateSymbolGroup2(Group **IDebugSymbolGroup2) HRESULT
	StartSymbolMatchWide(Pattern PWSTR, Handle *uint64) HRESULT
	GetNextSymbolMatchWide(Handle uint64, Buffer PWSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT
	ReloadWide(Module PWSTR) HRESULT
	GetSymbolPathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetSymbolPathWide(Path PWSTR) HRESULT
	AppendSymbolPathWide(Addition PWSTR) HRESULT
	GetImagePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetImagePathWide(Path PWSTR) HRESULT
	AppendImagePathWide(Addition PWSTR) HRESULT
	GetSourcePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT
	GetSourcePathElementWide(Index uint32, Buffer PWSTR, BufferSize uint32, ElementSize *uint32) HRESULT
	SetSourcePathWide(Path PWSTR) HRESULT
	AppendSourcePathWide(Addition PWSTR) HRESULT
	FindSourceFileWide(StartElement uint32, File PWSTR, Flags uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSourceFileLineOffsetsWide(File PWSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT
	GetModuleVersionInformationWide(Index uint32, Base uint64, Item PWSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT
	GetModuleNameStringWide(Which uint32, Index uint32, Base uint64, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetConstantNameWide(Module uint64, TypeId uint32, Value uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetFieldNameWide(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	IsManagedModule(Index uint32, Base uint64) HRESULT
	GetModuleByModuleName2(Name PSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByModuleName2Wide(Name PWSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByOffset2(Offset uint64, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT
	AddSyntheticModule(Base uint64, Size uint32, ImagePath PSTR, ModuleName PSTR, Flags uint32) HRESULT
	AddSyntheticModuleWide(Base uint64, Size uint32, ImagePath PWSTR, ModuleName PWSTR, Flags uint32) HRESULT
	RemoveSyntheticModule(Base uint64) HRESULT
	GetCurrentScopeFrameIndex(Index *uint32) HRESULT
	SetScopeFrameByIndex(Index uint32) HRESULT
	SetScopeFromJitDebugInfo(OutputControl uint32, InfoOffset uint64) HRESULT
	SetScopeFromStoredEvent() HRESULT
	OutputSymbolByOffset(OutputControl uint32, Flags uint32, Offset uint64) HRESULT
	GetFunctionEntryByOffset(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BufferNeeded *uint32) HRESULT
	GetFieldTypeAndOffset(Module uint64, ContainerTypeId uint32, Field PSTR, FieldTypeId *uint32, Offset *uint32) HRESULT
	GetFieldTypeAndOffsetWide(Module uint64, ContainerTypeId uint32, Field PWSTR, FieldTypeId *uint32, Offset *uint32) HRESULT
	AddSyntheticSymbol(Offset uint64, Size uint32, Name PSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT
	AddSyntheticSymbolWide(Offset uint64, Size uint32, Name PWSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT
	RemoveSyntheticSymbol(Id *DEBUG_MODULE_AND_ID) HRESULT
	GetSymbolEntriesByOffset(Offset uint64, Flags uint32, Ids *DEBUG_MODULE_AND_ID, Displacements *uint64, IdsCount uint32, Entries *uint32) HRESULT
	GetSymbolEntriesByName(Symbol PSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT
	GetSymbolEntriesByNameWide(Symbol PWSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT
	GetSymbolEntryByToken(ModuleBase uint64, Token uint32, Id *DEBUG_MODULE_AND_ID) HRESULT
	GetSymbolEntryInformation(Id *DEBUG_MODULE_AND_ID, Info *DEBUG_SYMBOL_ENTRY) HRESULT
	GetSymbolEntryString(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSymbolEntryStringWide(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSymbolEntryOffsetRegions(Id *DEBUG_MODULE_AND_ID, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT
	GetSymbolEntryBySymbolEntry(FromId *DEBUG_MODULE_AND_ID, Flags uint32, ToId *DEBUG_MODULE_AND_ID) HRESULT
	GetSourceEntriesByOffset(Offset uint64, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT
	GetSourceEntriesByLine(Line uint32, File PSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT
	GetSourceEntriesByLineWide(Line uint32, File PWSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT
	GetSourceEntryString(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSourceEntryStringWide(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSourceEntryOffsetRegions(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT
	GetSourceEntryBySourceEntry(FromEntry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, ToEntry *DEBUG_SYMBOL_SOURCE_ENTRY) HRESULT
	GetScopeEx(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME_EX, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	SetScopeEx(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME_EX, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	GetNameByInlineContext(Offset uint64, InlineContext uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetNameByInlineContextWide(Offset uint64, InlineContext uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByInlineContext(Offset uint64, InlineContext uint32, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetLineByInlineContextWide(Offset uint64, InlineContext uint32, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	OutputSymbolByInlineContext(OutputControl uint32, Flags uint32, Offset uint64, InlineContext uint32) HRESULT
}

type IDebugSymbols4Vtbl struct {
	IUnknownVtbl
	GetSymbolOptions                uintptr
	AddSymbolOptions                uintptr
	RemoveSymbolOptions             uintptr
	SetSymbolOptions                uintptr
	GetNameByOffset                 uintptr
	GetOffsetByName                 uintptr
	GetNearNameByOffset             uintptr
	GetLineByOffset                 uintptr
	GetOffsetByLine                 uintptr
	GetNumberModules                uintptr
	GetModuleByIndex                uintptr
	GetModuleByModuleName           uintptr
	GetModuleByOffset               uintptr
	GetModuleNames                  uintptr
	GetModuleParameters             uintptr
	GetSymbolModule                 uintptr
	GetTypeName                     uintptr
	GetTypeId                       uintptr
	GetTypeSize                     uintptr
	GetFieldOffset                  uintptr
	GetSymbolTypeId                 uintptr
	GetOffsetTypeId                 uintptr
	ReadTypedDataVirtual            uintptr
	WriteTypedDataVirtual           uintptr
	OutputTypedDataVirtual          uintptr
	ReadTypedDataPhysical           uintptr
	WriteTypedDataPhysical          uintptr
	OutputTypedDataPhysical         uintptr
	GetScope                        uintptr
	SetScope                        uintptr
	ResetScope                      uintptr
	GetScopeSymbolGroup             uintptr
	CreateSymbolGroup               uintptr
	StartSymbolMatch                uintptr
	GetNextSymbolMatch              uintptr
	EndSymbolMatch                  uintptr
	Reload                          uintptr
	GetSymbolPath                   uintptr
	SetSymbolPath                   uintptr
	AppendSymbolPath                uintptr
	GetImagePath                    uintptr
	SetImagePath                    uintptr
	AppendImagePath                 uintptr
	GetSourcePath                   uintptr
	GetSourcePathElement            uintptr
	SetSourcePath                   uintptr
	AppendSourcePath                uintptr
	FindSourceFile                  uintptr
	GetSourceFileLineOffsets        uintptr
	GetModuleVersionInformation     uintptr
	GetModuleNameString             uintptr
	GetConstantName                 uintptr
	GetFieldName                    uintptr
	GetTypeOptions                  uintptr
	AddTypeOptions                  uintptr
	RemoveTypeOptions               uintptr
	SetTypeOptions                  uintptr
	GetNameByOffsetWide             uintptr
	GetOffsetByNameWide             uintptr
	GetNearNameByOffsetWide         uintptr
	GetLineByOffsetWide             uintptr
	GetOffsetByLineWide             uintptr
	GetModuleByModuleNameWide       uintptr
	GetSymbolModuleWide             uintptr
	GetTypeNameWide                 uintptr
	GetTypeIdWide                   uintptr
	GetFieldOffsetWide              uintptr
	GetSymbolTypeIdWide             uintptr
	GetScopeSymbolGroup2            uintptr
	CreateSymbolGroup2              uintptr
	StartSymbolMatchWide            uintptr
	GetNextSymbolMatchWide          uintptr
	ReloadWide                      uintptr
	GetSymbolPathWide               uintptr
	SetSymbolPathWide               uintptr
	AppendSymbolPathWide            uintptr
	GetImagePathWide                uintptr
	SetImagePathWide                uintptr
	AppendImagePathWide             uintptr
	GetSourcePathWide               uintptr
	GetSourcePathElementWide        uintptr
	SetSourcePathWide               uintptr
	AppendSourcePathWide            uintptr
	FindSourceFileWide              uintptr
	GetSourceFileLineOffsetsWide    uintptr
	GetModuleVersionInformationWide uintptr
	GetModuleNameStringWide         uintptr
	GetConstantNameWide             uintptr
	GetFieldNameWide                uintptr
	IsManagedModule                 uintptr
	GetModuleByModuleName2          uintptr
	GetModuleByModuleName2Wide      uintptr
	GetModuleByOffset2              uintptr
	AddSyntheticModule              uintptr
	AddSyntheticModuleWide          uintptr
	RemoveSyntheticModule           uintptr
	GetCurrentScopeFrameIndex       uintptr
	SetScopeFrameByIndex            uintptr
	SetScopeFromJitDebugInfo        uintptr
	SetScopeFromStoredEvent         uintptr
	OutputSymbolByOffset            uintptr
	GetFunctionEntryByOffset        uintptr
	GetFieldTypeAndOffset           uintptr
	GetFieldTypeAndOffsetWide       uintptr
	AddSyntheticSymbol              uintptr
	AddSyntheticSymbolWide          uintptr
	RemoveSyntheticSymbol           uintptr
	GetSymbolEntriesByOffset        uintptr
	GetSymbolEntriesByName          uintptr
	GetSymbolEntriesByNameWide      uintptr
	GetSymbolEntryByToken           uintptr
	GetSymbolEntryInformation       uintptr
	GetSymbolEntryString            uintptr
	GetSymbolEntryStringWide        uintptr
	GetSymbolEntryOffsetRegions     uintptr
	GetSymbolEntryBySymbolEntry     uintptr
	GetSourceEntriesByOffset        uintptr
	GetSourceEntriesByLine          uintptr
	GetSourceEntriesByLineWide      uintptr
	GetSourceEntryString            uintptr
	GetSourceEntryStringWide        uintptr
	GetSourceEntryOffsetRegions     uintptr
	GetSourceEntryBySourceEntry     uintptr
	GetScopeEx                      uintptr
	SetScopeEx                      uintptr
	GetNameByInlineContext          uintptr
	GetNameByInlineContextWide      uintptr
	GetLineByInlineContext          uintptr
	GetLineByInlineContextWide      uintptr
	OutputSymbolByInlineContext     uintptr
}

type IDebugSymbols4 struct {
	IUnknown
}

func (this *IDebugSymbols4) Vtbl() *IDebugSymbols4Vtbl {
	return (*IDebugSymbols4Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSymbols4) GetSymbolOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AddSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) RemoveSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByLine, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberModules, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Loaded)), uintptr(unsafe.Pointer(Unloaded)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleByIndex(Index uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(ImageNameBuffer)), uintptr(ImageNameBufferSize), uintptr(unsafe.Pointer(ImageNameSize)), uintptr(unsafe.Pointer(ModuleNameBuffer)), uintptr(ModuleNameBufferSize), uintptr(unsafe.Pointer(ModuleNameSize)), uintptr(unsafe.Pointer(LoadedImageNameBuffer)), uintptr(LoadedImageNameBufferSize), uintptr(unsafe.Pointer(LoadedImageNameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Bases)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolModule, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeSize, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldOffset, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScope, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InstructionOffset)), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScope, uintptr(unsafe.Pointer(this)), uintptr(InstructionOffset), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) ResetScope() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetScope, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Update)), uintptr(unsafe.Pointer(Symbols)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Group)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Pattern)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MatchSize)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) EndSymbolMatch(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) Reload(Module PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reload, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetSymbolPath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AppendSymbolPath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetImagePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AppendImagePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathElement, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ElementSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetSourcePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AppendSourcePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFile, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileLineOffsets, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferLines), uintptr(unsafe.Pointer(FileLines)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleVersionInformation(Index uint32, Base uint64, Item PSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Item)), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(VerInfoSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleNameString(Which uint32, Index uint32, Base uint64, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNameString, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetConstantName(Module uint64, TypeId uint32, Value uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetConstantName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(Value), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetFieldName(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(FieldIndex), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetTypeOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AddTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) RemoveTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetNameByOffsetWide(Offset uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetOffsetByNameWide(Symbol PWSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetNearNameByOffsetWide(Offset uint64, Delta int32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearNameByOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetLineByOffsetWide(Offset uint64, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetOffsetByLineWide(Line uint32, File PWSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByLineWide, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleByModuleNameWide(Name PWSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolModuleWide(Symbol PWSTR, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolModuleWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetTypeNameWide(Module uint64, TypeId uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeNameWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetTypeIdWide(Module uint64, Name PWSTR, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeIdWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetFieldOffsetWide(Module uint64, TypeId uint32, Field PWSTR, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolTypeIdWide(Symbol PWSTR, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeIdWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetScopeSymbolGroup2(Flags uint32, Update *IDebugSymbolGroup2, Symbols **IDebugSymbolGroup2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeSymbolGroup2, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Update)), uintptr(unsafe.Pointer(Symbols)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) CreateSymbolGroup2(Group **IDebugSymbolGroup2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSymbolGroup2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Group)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) StartSymbolMatchWide(Pattern PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartSymbolMatchWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Pattern)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetNextSymbolMatchWide(Handle uint64, Buffer PWSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextSymbolMatchWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MatchSize)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) ReloadWide(Module PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReloadWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolPathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetSymbolPathWide(Path PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AppendSymbolPathWide(Addition PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSymbolPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetImagePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImagePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetImagePathWide(Path PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImagePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AppendImagePathWide(Addition PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendImagePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourcePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourcePathElementWide(Index uint32, Buffer PWSTR, BufferSize uint32, ElementSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathElementWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ElementSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetSourcePathWide(Path PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSourcePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AppendSourcePathWide(Addition PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSourcePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) FindSourceFileWide(StartElement uint32, File PWSTR, Flags uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFileWide, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourceFileLineOffsetsWide(File PWSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileLineOffsetsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferLines), uintptr(unsafe.Pointer(FileLines)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleVersionInformationWide(Index uint32, Base uint64, Item PWSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleVersionInformationWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Item)), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(VerInfoSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleNameStringWide(Which uint32, Index uint32, Base uint64, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNameStringWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetConstantNameWide(Module uint64, TypeId uint32, Value uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetConstantNameWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(Value), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetFieldNameWide(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldNameWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(FieldIndex), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) IsManagedModule(Index uint32, Base uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsManagedModule, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleByModuleName2(Name PSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(Flags), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleByModuleName2Wide(Name PWSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(Flags), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetModuleByOffset2(Offset uint64, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByOffset2, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(StartIndex), uintptr(Flags), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AddSyntheticModule(Base uint64, Size uint32, ImagePath PSTR, ModuleName PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticModule, uintptr(unsafe.Pointer(this)), uintptr(Base), uintptr(Size), uintptr(unsafe.Pointer(ImagePath)), uintptr(unsafe.Pointer(ModuleName)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AddSyntheticModuleWide(Base uint64, Size uint32, ImagePath PWSTR, ModuleName PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticModuleWide, uintptr(unsafe.Pointer(this)), uintptr(Base), uintptr(Size), uintptr(unsafe.Pointer(ImagePath)), uintptr(unsafe.Pointer(ModuleName)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) RemoveSyntheticModule(Base uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSyntheticModule, uintptr(unsafe.Pointer(this)), uintptr(Base))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetCurrentScopeFrameIndex(Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentScopeFrameIndex, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetScopeFrameByIndex(Index uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFrameByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetScopeFromJitDebugInfo(OutputControl uint32, InfoOffset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFromJitDebugInfo, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(InfoOffset))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetScopeFromStoredEvent() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFromStoredEvent, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) OutputSymbolByOffset(OutputControl uint32, Flags uint32, Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputSymbolByOffset, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetFunctionEntryByOffset(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BufferNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFunctionEntryByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BufferNeeded)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetFieldTypeAndOffset(Module uint64, ContainerTypeId uint32, Field PSTR, FieldTypeId *uint32, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldTypeAndOffset, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(ContainerTypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(FieldTypeId)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetFieldTypeAndOffsetWide(Module uint64, ContainerTypeId uint32, Field PWSTR, FieldTypeId *uint32, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldTypeAndOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(ContainerTypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(FieldTypeId)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AddSyntheticSymbol(Offset uint64, Size uint32, Name PSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticSymbol, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Size), uintptr(unsafe.Pointer(Name)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) AddSyntheticSymbolWide(Offset uint64, Size uint32, Name PWSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticSymbolWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Size), uintptr(unsafe.Pointer(Name)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) RemoveSyntheticSymbol(Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSyntheticSymbol, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolEntriesByOffset(Offset uint64, Flags uint32, Ids *DEBUG_MODULE_AND_ID, Displacements *uint64, IdsCount uint32, Entries *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntriesByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(Displacements)), uintptr(IdsCount), uintptr(unsafe.Pointer(Entries)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolEntriesByName(Symbol PSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntriesByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(Flags), uintptr(unsafe.Pointer(Ids)), uintptr(IdsCount), uintptr(unsafe.Pointer(Entries)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolEntriesByNameWide(Symbol PWSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntriesByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(Flags), uintptr(unsafe.Pointer(Ids)), uintptr(IdsCount), uintptr(unsafe.Pointer(Entries)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolEntryByToken(ModuleBase uint64, Token uint32, Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryByToken, uintptr(unsafe.Pointer(this)), uintptr(ModuleBase), uintptr(Token), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolEntryInformation(Id *DEBUG_MODULE_AND_ID, Info *DEBUG_SYMBOL_ENTRY) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(unsafe.Pointer(Info)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolEntryString(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolEntryStringWide(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolEntryOffsetRegions(Id *DEBUG_MODULE_AND_ID, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryOffsetRegions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(Flags), uintptr(unsafe.Pointer(Regions)), uintptr(RegionsCount), uintptr(unsafe.Pointer(RegionsAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSymbolEntryBySymbolEntry(FromId *DEBUG_MODULE_AND_ID, Flags uint32, ToId *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryBySymbolEntry, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FromId)), uintptr(Flags), uintptr(unsafe.Pointer(ToId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourceEntriesByOffset(Offset uint64, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntriesByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Entries)), uintptr(EntriesCount), uintptr(unsafe.Pointer(EntriesAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourceEntriesByLine(Line uint32, File PSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntriesByLine, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(Entries)), uintptr(EntriesCount), uintptr(unsafe.Pointer(EntriesAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourceEntriesByLineWide(Line uint32, File PWSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntriesByLineWide, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(Entries)), uintptr(EntriesCount), uintptr(unsafe.Pointer(EntriesAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourceEntryString(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Entry)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourceEntryStringWide(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Entry)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourceEntryOffsetRegions(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryOffsetRegions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Entry)), uintptr(Flags), uintptr(unsafe.Pointer(Regions)), uintptr(RegionsCount), uintptr(unsafe.Pointer(RegionsAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetSourceEntryBySourceEntry(FromEntry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, ToEntry *DEBUG_SYMBOL_SOURCE_ENTRY) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryBySourceEntry, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FromEntry)), uintptr(Flags), uintptr(unsafe.Pointer(ToEntry)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetScopeEx(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME_EX, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeEx, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InstructionOffset)), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) SetScopeEx(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME_EX, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeEx, uintptr(unsafe.Pointer(this)), uintptr(InstructionOffset), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetNameByInlineContext(Offset uint64, InlineContext uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByInlineContext, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(InlineContext), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetNameByInlineContextWide(Offset uint64, InlineContext uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByInlineContextWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(InlineContext), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetLineByInlineContext(Offset uint64, InlineContext uint32, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByInlineContext, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(InlineContext), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) GetLineByInlineContextWide(Offset uint64, InlineContext uint32, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByInlineContextWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(InlineContext), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols4) OutputSymbolByInlineContext(OutputControl uint32, Flags uint32, Offset uint64, InlineContext uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputSymbolByInlineContext, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(Offset), uintptr(InlineContext))
	return HRESULT(ret)
}

// C65FA83E-1E69-475E-8E0E-B5D79E9CC17E
var IID_IDebugSymbols5 = syscall.GUID{0xC65FA83E, 0x1E69, 0x475E,
	[8]byte{0x8E, 0x0E, 0xB5, 0xD7, 0x9E, 0x9C, 0xC1, 0x7E}}

type IDebugSymbols5Interface interface {
	IUnknownInterface
	GetSymbolOptions(Options *uint32) HRESULT
	AddSymbolOptions(Options uint32) HRESULT
	RemoveSymbolOptions(Options uint32) HRESULT
	SetSymbolOptions(Options uint32) HRESULT
	GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT
	GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT
	GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT
	GetModuleByIndex(Index uint32, Base *uint64) HRESULT
	GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT
	GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT
	GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT
	GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT
	GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT
	GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT
	GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT
	GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT
	ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT
	WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT
	OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT
	GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	ResetScope() HRESULT
	GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT
	CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT
	StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT
	GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT
	EndSymbolMatch(Handle uint64) HRESULT
	Reload(Module PSTR) HRESULT
	GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetSymbolPath(Path PSTR) HRESULT
	AppendSymbolPath(Addition PSTR) HRESULT
	GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetImagePath(Path PSTR) HRESULT
	AppendImagePath(Addition PSTR) HRESULT
	GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT
	GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT
	SetSourcePath(Path PSTR) HRESULT
	AppendSourcePath(Addition PSTR) HRESULT
	FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT
	GetModuleVersionInformation(Index uint32, Base uint64, Item PSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT
	GetModuleNameString(Which uint32, Index uint32, Base uint64, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetConstantName(Module uint64, TypeId uint32, Value uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetFieldName(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeOptions(Options *uint32) HRESULT
	AddTypeOptions(Options uint32) HRESULT
	RemoveTypeOptions(Options uint32) HRESULT
	SetTypeOptions(Options uint32) HRESULT
	GetNameByOffsetWide(Offset uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByNameWide(Symbol PWSTR, Offset *uint64) HRESULT
	GetNearNameByOffsetWide(Offset uint64, Delta int32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByOffsetWide(Offset uint64, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetOffsetByLineWide(Line uint32, File PWSTR, Offset *uint64) HRESULT
	GetModuleByModuleNameWide(Name PWSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT
	GetSymbolModuleWide(Symbol PWSTR, Base *uint64) HRESULT
	GetTypeNameWide(Module uint64, TypeId uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetTypeIdWide(Module uint64, Name PWSTR, TypeId *uint32) HRESULT
	GetFieldOffsetWide(Module uint64, TypeId uint32, Field PWSTR, Offset *uint32) HRESULT
	GetSymbolTypeIdWide(Symbol PWSTR, TypeId *uint32, Module *uint64) HRESULT
	GetScopeSymbolGroup2(Flags uint32, Update *IDebugSymbolGroup2, Symbols **IDebugSymbolGroup2) HRESULT
	CreateSymbolGroup2(Group **IDebugSymbolGroup2) HRESULT
	StartSymbolMatchWide(Pattern PWSTR, Handle *uint64) HRESULT
	GetNextSymbolMatchWide(Handle uint64, Buffer PWSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT
	ReloadWide(Module PWSTR) HRESULT
	GetSymbolPathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetSymbolPathWide(Path PWSTR) HRESULT
	AppendSymbolPathWide(Addition PWSTR) HRESULT
	GetImagePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT
	SetImagePathWide(Path PWSTR) HRESULT
	AppendImagePathWide(Addition PWSTR) HRESULT
	GetSourcePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT
	GetSourcePathElementWide(Index uint32, Buffer PWSTR, BufferSize uint32, ElementSize *uint32) HRESULT
	SetSourcePathWide(Path PWSTR) HRESULT
	AppendSourcePathWide(Addition PWSTR) HRESULT
	FindSourceFileWide(StartElement uint32, File PWSTR, Flags uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT
	GetSourceFileLineOffsetsWide(File PWSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT
	GetModuleVersionInformationWide(Index uint32, Base uint64, Item PWSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT
	GetModuleNameStringWide(Which uint32, Index uint32, Base uint64, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetConstantNameWide(Module uint64, TypeId uint32, Value uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	GetFieldNameWide(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT
	IsManagedModule(Index uint32, Base uint64) HRESULT
	GetModuleByModuleName2(Name PSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByModuleName2Wide(Name PWSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT
	GetModuleByOffset2(Offset uint64, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT
	AddSyntheticModule(Base uint64, Size uint32, ImagePath PSTR, ModuleName PSTR, Flags uint32) HRESULT
	AddSyntheticModuleWide(Base uint64, Size uint32, ImagePath PWSTR, ModuleName PWSTR, Flags uint32) HRESULT
	RemoveSyntheticModule(Base uint64) HRESULT
	GetCurrentScopeFrameIndex(Index *uint32) HRESULT
	SetScopeFrameByIndex(Index uint32) HRESULT
	SetScopeFromJitDebugInfo(OutputControl uint32, InfoOffset uint64) HRESULT
	SetScopeFromStoredEvent() HRESULT
	OutputSymbolByOffset(OutputControl uint32, Flags uint32, Offset uint64) HRESULT
	GetFunctionEntryByOffset(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BufferNeeded *uint32) HRESULT
	GetFieldTypeAndOffset(Module uint64, ContainerTypeId uint32, Field PSTR, FieldTypeId *uint32, Offset *uint32) HRESULT
	GetFieldTypeAndOffsetWide(Module uint64, ContainerTypeId uint32, Field PWSTR, FieldTypeId *uint32, Offset *uint32) HRESULT
	AddSyntheticSymbol(Offset uint64, Size uint32, Name PSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT
	AddSyntheticSymbolWide(Offset uint64, Size uint32, Name PWSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT
	RemoveSyntheticSymbol(Id *DEBUG_MODULE_AND_ID) HRESULT
	GetSymbolEntriesByOffset(Offset uint64, Flags uint32, Ids *DEBUG_MODULE_AND_ID, Displacements *uint64, IdsCount uint32, Entries *uint32) HRESULT
	GetSymbolEntriesByName(Symbol PSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT
	GetSymbolEntriesByNameWide(Symbol PWSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT
	GetSymbolEntryByToken(ModuleBase uint64, Token uint32, Id *DEBUG_MODULE_AND_ID) HRESULT
	GetSymbolEntryInformation(Id *DEBUG_MODULE_AND_ID, Info *DEBUG_SYMBOL_ENTRY) HRESULT
	GetSymbolEntryString(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSymbolEntryStringWide(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSymbolEntryOffsetRegions(Id *DEBUG_MODULE_AND_ID, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT
	GetSymbolEntryBySymbolEntry(FromId *DEBUG_MODULE_AND_ID, Flags uint32, ToId *DEBUG_MODULE_AND_ID) HRESULT
	GetSourceEntriesByOffset(Offset uint64, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT
	GetSourceEntriesByLine(Line uint32, File PSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT
	GetSourceEntriesByLineWide(Line uint32, File PWSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT
	GetSourceEntryString(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSourceEntryStringWide(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT
	GetSourceEntryOffsetRegions(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT
	GetSourceEntryBySourceEntry(FromEntry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, ToEntry *DEBUG_SYMBOL_SOURCE_ENTRY) HRESULT
	GetScopeEx(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME_EX, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	SetScopeEx(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME_EX, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT
	GetNameByInlineContext(Offset uint64, InlineContext uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetNameByInlineContextWide(Offset uint64, InlineContext uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT
	GetLineByInlineContext(Offset uint64, InlineContext uint32, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	GetLineByInlineContextWide(Offset uint64, InlineContext uint32, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT
	OutputSymbolByInlineContext(OutputControl uint32, Flags uint32, Offset uint64, InlineContext uint32) HRESULT
	GetCurrentScopeFrameIndexEx(Flags uint32, Index *uint32) HRESULT
	SetScopeFrameByIndexEx(Flags uint32, Index uint32) HRESULT
}

type IDebugSymbols5Vtbl struct {
	IUnknownVtbl
	GetSymbolOptions                uintptr
	AddSymbolOptions                uintptr
	RemoveSymbolOptions             uintptr
	SetSymbolOptions                uintptr
	GetNameByOffset                 uintptr
	GetOffsetByName                 uintptr
	GetNearNameByOffset             uintptr
	GetLineByOffset                 uintptr
	GetOffsetByLine                 uintptr
	GetNumberModules                uintptr
	GetModuleByIndex                uintptr
	GetModuleByModuleName           uintptr
	GetModuleByOffset               uintptr
	GetModuleNames                  uintptr
	GetModuleParameters             uintptr
	GetSymbolModule                 uintptr
	GetTypeName                     uintptr
	GetTypeId                       uintptr
	GetTypeSize                     uintptr
	GetFieldOffset                  uintptr
	GetSymbolTypeId                 uintptr
	GetOffsetTypeId                 uintptr
	ReadTypedDataVirtual            uintptr
	WriteTypedDataVirtual           uintptr
	OutputTypedDataVirtual          uintptr
	ReadTypedDataPhysical           uintptr
	WriteTypedDataPhysical          uintptr
	OutputTypedDataPhysical         uintptr
	GetScope                        uintptr
	SetScope                        uintptr
	ResetScope                      uintptr
	GetScopeSymbolGroup             uintptr
	CreateSymbolGroup               uintptr
	StartSymbolMatch                uintptr
	GetNextSymbolMatch              uintptr
	EndSymbolMatch                  uintptr
	Reload                          uintptr
	GetSymbolPath                   uintptr
	SetSymbolPath                   uintptr
	AppendSymbolPath                uintptr
	GetImagePath                    uintptr
	SetImagePath                    uintptr
	AppendImagePath                 uintptr
	GetSourcePath                   uintptr
	GetSourcePathElement            uintptr
	SetSourcePath                   uintptr
	AppendSourcePath                uintptr
	FindSourceFile                  uintptr
	GetSourceFileLineOffsets        uintptr
	GetModuleVersionInformation     uintptr
	GetModuleNameString             uintptr
	GetConstantName                 uintptr
	GetFieldName                    uintptr
	GetTypeOptions                  uintptr
	AddTypeOptions                  uintptr
	RemoveTypeOptions               uintptr
	SetTypeOptions                  uintptr
	GetNameByOffsetWide             uintptr
	GetOffsetByNameWide             uintptr
	GetNearNameByOffsetWide         uintptr
	GetLineByOffsetWide             uintptr
	GetOffsetByLineWide             uintptr
	GetModuleByModuleNameWide       uintptr
	GetSymbolModuleWide             uintptr
	GetTypeNameWide                 uintptr
	GetTypeIdWide                   uintptr
	GetFieldOffsetWide              uintptr
	GetSymbolTypeIdWide             uintptr
	GetScopeSymbolGroup2            uintptr
	CreateSymbolGroup2              uintptr
	StartSymbolMatchWide            uintptr
	GetNextSymbolMatchWide          uintptr
	ReloadWide                      uintptr
	GetSymbolPathWide               uintptr
	SetSymbolPathWide               uintptr
	AppendSymbolPathWide            uintptr
	GetImagePathWide                uintptr
	SetImagePathWide                uintptr
	AppendImagePathWide             uintptr
	GetSourcePathWide               uintptr
	GetSourcePathElementWide        uintptr
	SetSourcePathWide               uintptr
	AppendSourcePathWide            uintptr
	FindSourceFileWide              uintptr
	GetSourceFileLineOffsetsWide    uintptr
	GetModuleVersionInformationWide uintptr
	GetModuleNameStringWide         uintptr
	GetConstantNameWide             uintptr
	GetFieldNameWide                uintptr
	IsManagedModule                 uintptr
	GetModuleByModuleName2          uintptr
	GetModuleByModuleName2Wide      uintptr
	GetModuleByOffset2              uintptr
	AddSyntheticModule              uintptr
	AddSyntheticModuleWide          uintptr
	RemoveSyntheticModule           uintptr
	GetCurrentScopeFrameIndex       uintptr
	SetScopeFrameByIndex            uintptr
	SetScopeFromJitDebugInfo        uintptr
	SetScopeFromStoredEvent         uintptr
	OutputSymbolByOffset            uintptr
	GetFunctionEntryByOffset        uintptr
	GetFieldTypeAndOffset           uintptr
	GetFieldTypeAndOffsetWide       uintptr
	AddSyntheticSymbol              uintptr
	AddSyntheticSymbolWide          uintptr
	RemoveSyntheticSymbol           uintptr
	GetSymbolEntriesByOffset        uintptr
	GetSymbolEntriesByName          uintptr
	GetSymbolEntriesByNameWide      uintptr
	GetSymbolEntryByToken           uintptr
	GetSymbolEntryInformation       uintptr
	GetSymbolEntryString            uintptr
	GetSymbolEntryStringWide        uintptr
	GetSymbolEntryOffsetRegions     uintptr
	GetSymbolEntryBySymbolEntry     uintptr
	GetSourceEntriesByOffset        uintptr
	GetSourceEntriesByLine          uintptr
	GetSourceEntriesByLineWide      uintptr
	GetSourceEntryString            uintptr
	GetSourceEntryStringWide        uintptr
	GetSourceEntryOffsetRegions     uintptr
	GetSourceEntryBySourceEntry     uintptr
	GetScopeEx                      uintptr
	SetScopeEx                      uintptr
	GetNameByInlineContext          uintptr
	GetNameByInlineContextWide      uintptr
	GetLineByInlineContext          uintptr
	GetLineByInlineContextWide      uintptr
	OutputSymbolByInlineContext     uintptr
	GetCurrentScopeFrameIndexEx     uintptr
	SetScopeFrameByIndexEx          uintptr
}

type IDebugSymbols5 struct {
	IUnknown
}

func (this *IDebugSymbols5) Vtbl() *IDebugSymbols5Vtbl {
	return (*IDebugSymbols5Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSymbols5) GetSymbolOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AddSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) RemoveSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetSymbolOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetNameByOffset(Offset uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetOffsetByName(Symbol PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetNearNameByOffset(Offset uint64, Delta int32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearNameByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetLineByOffset(Offset uint64, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetOffsetByLine(Line uint32, File PSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByLine, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetNumberModules(Loaded *uint32, Unloaded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberModules, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Loaded)), uintptr(unsafe.Pointer(Unloaded)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleByIndex(Index uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleByModuleName(Name PSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleByOffset(Offset uint64, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleNames(Index uint32, Base uint64, ImageNameBuffer PSTR, ImageNameBufferSize uint32, ImageNameSize *uint32, ModuleNameBuffer PSTR, ModuleNameBufferSize uint32, ModuleNameSize *uint32, LoadedImageNameBuffer PSTR, LoadedImageNameBufferSize uint32, LoadedImageNameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNames, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(ImageNameBuffer)), uintptr(ImageNameBufferSize), uintptr(unsafe.Pointer(ImageNameSize)), uintptr(unsafe.Pointer(ModuleNameBuffer)), uintptr(ModuleNameBufferSize), uintptr(unsafe.Pointer(ModuleNameSize)), uintptr(unsafe.Pointer(LoadedImageNameBuffer)), uintptr(LoadedImageNameBufferSize), uintptr(unsafe.Pointer(LoadedImageNameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleParameters(Count uint32, Bases *uint64, Start uint32, Params *DEBUG_MODULE_PARAMETERS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleParameters, uintptr(unsafe.Pointer(this)), uintptr(Count), uintptr(unsafe.Pointer(Bases)), uintptr(Start), uintptr(unsafe.Pointer(Params)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolModule(Symbol PSTR, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolModule, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetTypeName(Module uint64, TypeId uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetTypeId(Module uint64, Name PSTR, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetTypeSize(Module uint64, TypeId uint32, Size *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeSize, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Size)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetFieldOffset(Module uint64, TypeId uint32, Field PSTR, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldOffset, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolTypeId(Symbol PSTR, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetOffsetTypeId(Offset uint64, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetTypeId, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) ReadTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) WriteTypedDataVirtual(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) OutputTypedDataVirtual(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataVirtual, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) ReadTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesRead)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) WriteTypedDataPhysical(Offset uint64, Module uint64, TypeId uint32, Buffer unsafe.Pointer, BufferSize uint32, BytesWritten *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) OutputTypedDataPhysical(OutputControl uint32, Offset uint64, Module uint64, TypeId uint32, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputTypedDataPhysical, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Offset), uintptr(Module), uintptr(TypeId), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetScope(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScope, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InstructionOffset)), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetScope(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScope, uintptr(unsafe.Pointer(this)), uintptr(InstructionOffset), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) ResetScope() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetScope, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetScopeSymbolGroup(Flags uint32, Update *IDebugSymbolGroup, Symbols **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Update)), uintptr(unsafe.Pointer(Symbols)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) CreateSymbolGroup(Group **IDebugSymbolGroup) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSymbolGroup, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Group)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) StartSymbolMatch(Pattern PSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Pattern)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetNextSymbolMatch(Handle uint64, Buffer PSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MatchSize)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) EndSymbolMatch(Handle uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EndSymbolMatch, uintptr(unsafe.Pointer(this)), uintptr(Handle))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) Reload(Module PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reload, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolPath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetSymbolPath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AppendSymbolPath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSymbolPath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetImagePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetImagePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AppendImagePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendImagePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourcePath(Buffer PSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourcePathElement(Index uint32, Buffer PSTR, BufferSize uint32, ElementSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathElement, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ElementSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetSourcePath(Path PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AppendSourcePath(Addition PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSourcePath, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) FindSourceFile(StartElement uint32, File PSTR, Flags uint32, FoundElement *uint32, Buffer PSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFile, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourceFileLineOffsets(File PSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileLineOffsets, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferLines), uintptr(unsafe.Pointer(FileLines)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleVersionInformation(Index uint32, Base uint64, Item PSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleVersionInformation, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Item)), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(VerInfoSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleNameString(Which uint32, Index uint32, Base uint64, Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNameString, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetConstantName(Module uint64, TypeId uint32, Value uint64, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetConstantName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(Value), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetFieldName(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldName, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(FieldIndex), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetTypeOptions(Options *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Options)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AddTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) RemoveTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetTypeOptions(Options uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTypeOptions, uintptr(unsafe.Pointer(this)), uintptr(Options))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetNameByOffsetWide(Offset uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetOffsetByNameWide(Symbol PWSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetNearNameByOffsetWide(Offset uint64, Delta int32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNearNameByOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Delta), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetLineByOffsetWide(Offset uint64, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetOffsetByLineWide(Line uint32, File PWSTR, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffsetByLineWide, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleByModuleNameWide(Name PWSTR, StartIndex uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolModuleWide(Symbol PWSTR, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolModuleWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetTypeNameWide(Module uint64, TypeId uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeNameWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetTypeIdWide(Module uint64, Name PWSTR, TypeId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeIdWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(unsafe.Pointer(Name)), uintptr(unsafe.Pointer(TypeId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetFieldOffsetWide(Module uint64, TypeId uint32, Field PWSTR, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolTypeIdWide(Symbol PWSTR, TypeId *uint32, Module *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolTypeIdWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(unsafe.Pointer(TypeId)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetScopeSymbolGroup2(Flags uint32, Update *IDebugSymbolGroup2, Symbols **IDebugSymbolGroup2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeSymbolGroup2, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Update)), uintptr(unsafe.Pointer(Symbols)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) CreateSymbolGroup2(Group **IDebugSymbolGroup2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSymbolGroup2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Group)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) StartSymbolMatchWide(Pattern PWSTR, Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartSymbolMatchWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Pattern)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetNextSymbolMatchWide(Handle uint64, Buffer PWSTR, BufferSize uint32, MatchSize *uint32, Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNextSymbolMatchWide, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(MatchSize)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) ReloadWide(Module PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReloadWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Module)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolPathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetSymbolPathWide(Path PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSymbolPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AppendSymbolPathWide(Addition PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSymbolPathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetImagePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImagePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetImagePathWide(Path PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImagePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AppendImagePathWide(Addition PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendImagePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourcePathWide(Buffer PWSTR, BufferSize uint32, PathSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(PathSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourcePathElementWide(Index uint32, Buffer PWSTR, BufferSize uint32, ElementSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePathElementWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ElementSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetSourcePathWide(Path PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSourcePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Path)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AppendSourcePathWide(Addition PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AppendSourcePathWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Addition)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) FindSourceFileWide(StartElement uint32, File PWSTR, Flags uint32, FoundElement *uint32, Buffer PWSTR, BufferSize uint32, FoundSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSourceFileWide, uintptr(unsafe.Pointer(this)), uintptr(StartElement), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(FoundElement)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(FoundSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourceFileLineOffsetsWide(File PWSTR, Buffer *uint64, BufferLines uint32, FileLines *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceFileLineOffsetsWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(File)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferLines), uintptr(unsafe.Pointer(FileLines)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleVersionInformationWide(Index uint32, Base uint64, Item PWSTR, Buffer unsafe.Pointer, BufferSize uint32, VerInfoSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleVersionInformationWide, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Item)), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(VerInfoSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleNameStringWide(Which uint32, Index uint32, Base uint64, Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleNameStringWide, uintptr(unsafe.Pointer(this)), uintptr(Which), uintptr(Index), uintptr(Base), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetConstantNameWide(Module uint64, TypeId uint32, Value uint64, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetConstantNameWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(Value), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetFieldNameWide(Module uint64, TypeId uint32, FieldIndex uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldNameWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(TypeId), uintptr(FieldIndex), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) IsManagedModule(Index uint32, Base uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsManagedModule, uintptr(unsafe.Pointer(this)), uintptr(Index), uintptr(Base))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleByModuleName2(Name PSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName2, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(Flags), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleByModuleName2Wide(Name PWSTR, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByModuleName2Wide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Name)), uintptr(StartIndex), uintptr(Flags), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetModuleByOffset2(Offset uint64, StartIndex uint32, Flags uint32, Index *uint32, Base *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModuleByOffset2, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(StartIndex), uintptr(Flags), uintptr(unsafe.Pointer(Index)), uintptr(unsafe.Pointer(Base)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AddSyntheticModule(Base uint64, Size uint32, ImagePath PSTR, ModuleName PSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticModule, uintptr(unsafe.Pointer(this)), uintptr(Base), uintptr(Size), uintptr(unsafe.Pointer(ImagePath)), uintptr(unsafe.Pointer(ModuleName)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AddSyntheticModuleWide(Base uint64, Size uint32, ImagePath PWSTR, ModuleName PWSTR, Flags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticModuleWide, uintptr(unsafe.Pointer(this)), uintptr(Base), uintptr(Size), uintptr(unsafe.Pointer(ImagePath)), uintptr(unsafe.Pointer(ModuleName)), uintptr(Flags))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) RemoveSyntheticModule(Base uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSyntheticModule, uintptr(unsafe.Pointer(this)), uintptr(Base))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetCurrentScopeFrameIndex(Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentScopeFrameIndex, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetScopeFrameByIndex(Index uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFrameByIndex, uintptr(unsafe.Pointer(this)), uintptr(Index))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetScopeFromJitDebugInfo(OutputControl uint32, InfoOffset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFromJitDebugInfo, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(InfoOffset))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetScopeFromStoredEvent() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFromStoredEvent, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) OutputSymbolByOffset(OutputControl uint32, Flags uint32, Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputSymbolByOffset, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetFunctionEntryByOffset(Offset uint64, Flags uint32, Buffer unsafe.Pointer, BufferSize uint32, BufferNeeded *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFunctionEntryByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(Buffer), uintptr(BufferSize), uintptr(unsafe.Pointer(BufferNeeded)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetFieldTypeAndOffset(Module uint64, ContainerTypeId uint32, Field PSTR, FieldTypeId *uint32, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldTypeAndOffset, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(ContainerTypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(FieldTypeId)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetFieldTypeAndOffsetWide(Module uint64, ContainerTypeId uint32, Field PWSTR, FieldTypeId *uint32, Offset *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFieldTypeAndOffsetWide, uintptr(unsafe.Pointer(this)), uintptr(Module), uintptr(ContainerTypeId), uintptr(unsafe.Pointer(Field)), uintptr(unsafe.Pointer(FieldTypeId)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AddSyntheticSymbol(Offset uint64, Size uint32, Name PSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticSymbol, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Size), uintptr(unsafe.Pointer(Name)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) AddSyntheticSymbolWide(Offset uint64, Size uint32, Name PWSTR, Flags uint32, Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddSyntheticSymbolWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Size), uintptr(unsafe.Pointer(Name)), uintptr(Flags), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) RemoveSyntheticSymbol(Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveSyntheticSymbol, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolEntriesByOffset(Offset uint64, Flags uint32, Ids *DEBUG_MODULE_AND_ID, Displacements *uint64, IdsCount uint32, Entries *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntriesByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(Displacements)), uintptr(IdsCount), uintptr(unsafe.Pointer(Entries)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolEntriesByName(Symbol PSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntriesByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(Flags), uintptr(unsafe.Pointer(Ids)), uintptr(IdsCount), uintptr(unsafe.Pointer(Entries)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolEntriesByNameWide(Symbol PWSTR, Flags uint32, Ids *DEBUG_MODULE_AND_ID, IdsCount uint32, Entries *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntriesByNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Symbol)), uintptr(Flags), uintptr(unsafe.Pointer(Ids)), uintptr(IdsCount), uintptr(unsafe.Pointer(Entries)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolEntryByToken(ModuleBase uint64, Token uint32, Id *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryByToken, uintptr(unsafe.Pointer(this)), uintptr(ModuleBase), uintptr(Token), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolEntryInformation(Id *DEBUG_MODULE_AND_ID, Info *DEBUG_SYMBOL_ENTRY) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryInformation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(unsafe.Pointer(Info)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolEntryString(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolEntryStringWide(Id *DEBUG_MODULE_AND_ID, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolEntryOffsetRegions(Id *DEBUG_MODULE_AND_ID, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryOffsetRegions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)), uintptr(Flags), uintptr(unsafe.Pointer(Regions)), uintptr(RegionsCount), uintptr(unsafe.Pointer(RegionsAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSymbolEntryBySymbolEntry(FromId *DEBUG_MODULE_AND_ID, Flags uint32, ToId *DEBUG_MODULE_AND_ID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolEntryBySymbolEntry, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FromId)), uintptr(Flags), uintptr(unsafe.Pointer(ToId)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourceEntriesByOffset(Offset uint64, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntriesByOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(Flags), uintptr(unsafe.Pointer(Entries)), uintptr(EntriesCount), uintptr(unsafe.Pointer(EntriesAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourceEntriesByLine(Line uint32, File PSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntriesByLine, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(Entries)), uintptr(EntriesCount), uintptr(unsafe.Pointer(EntriesAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourceEntriesByLineWide(Line uint32, File PWSTR, Flags uint32, Entries *DEBUG_SYMBOL_SOURCE_ENTRY, EntriesCount uint32, EntriesAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntriesByLineWide, uintptr(unsafe.Pointer(this)), uintptr(Line), uintptr(unsafe.Pointer(File)), uintptr(Flags), uintptr(unsafe.Pointer(Entries)), uintptr(EntriesCount), uintptr(unsafe.Pointer(EntriesAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourceEntryString(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Entry)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourceEntryStringWide(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Which uint32, Buffer PWSTR, BufferSize uint32, StringSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryStringWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Entry)), uintptr(Which), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(StringSize)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourceEntryOffsetRegions(Entry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, Regions *DEBUG_OFFSET_REGION, RegionsCount uint32, RegionsAvail *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryOffsetRegions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Entry)), uintptr(Flags), uintptr(unsafe.Pointer(Regions)), uintptr(RegionsCount), uintptr(unsafe.Pointer(RegionsAvail)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetSourceEntryBySourceEntry(FromEntry *DEBUG_SYMBOL_SOURCE_ENTRY, Flags uint32, ToEntry *DEBUG_SYMBOL_SOURCE_ENTRY) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceEntryBySourceEntry, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(FromEntry)), uintptr(Flags), uintptr(unsafe.Pointer(ToEntry)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetScopeEx(InstructionOffset *uint64, ScopeFrame *DEBUG_STACK_FRAME_EX, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScopeEx, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(InstructionOffset)), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetScopeEx(InstructionOffset uint64, ScopeFrame *DEBUG_STACK_FRAME_EX, ScopeContext unsafe.Pointer, ScopeContextSize uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeEx, uintptr(unsafe.Pointer(this)), uintptr(InstructionOffset), uintptr(unsafe.Pointer(ScopeFrame)), uintptr(ScopeContext), uintptr(ScopeContextSize))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetNameByInlineContext(Offset uint64, InlineContext uint32, NameBuffer PSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByInlineContext, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(InlineContext), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetNameByInlineContextWide(Offset uint64, InlineContext uint32, NameBuffer PWSTR, NameBufferSize uint32, NameSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameByInlineContextWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(InlineContext), uintptr(unsafe.Pointer(NameBuffer)), uintptr(NameBufferSize), uintptr(unsafe.Pointer(NameSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetLineByInlineContext(Offset uint64, InlineContext uint32, Line *uint32, FileBuffer PSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByInlineContext, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(InlineContext), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetLineByInlineContextWide(Offset uint64, InlineContext uint32, Line *uint32, FileBuffer PWSTR, FileBufferSize uint32, FileSize *uint32, Displacement *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineByInlineContextWide, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(InlineContext), uintptr(unsafe.Pointer(Line)), uintptr(unsafe.Pointer(FileBuffer)), uintptr(FileBufferSize), uintptr(unsafe.Pointer(FileSize)), uintptr(unsafe.Pointer(Displacement)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) OutputSymbolByInlineContext(OutputControl uint32, Flags uint32, Offset uint64, InlineContext uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OutputSymbolByInlineContext, uintptr(unsafe.Pointer(this)), uintptr(OutputControl), uintptr(Flags), uintptr(Offset), uintptr(InlineContext))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) GetCurrentScopeFrameIndexEx(Flags uint32, Index *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentScopeFrameIndexEx, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(unsafe.Pointer(Index)))
	return HRESULT(ret)
}

func (this *IDebugSymbols5) SetScopeFrameByIndexEx(Flags uint32, Index uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScopeFrameByIndexEx, uintptr(unsafe.Pointer(this)), uintptr(Flags), uintptr(Index))
	return HRESULT(ret)
}

// 6B86FE2C-2C4F-4F0C-9DA2-174311ACC327
var IID_IDebugSystemObjects = syscall.GUID{0x6B86FE2C, 0x2C4F, 0x4F0C,
	[8]byte{0x9D, 0xA2, 0x17, 0x43, 0x11, 0xAC, 0xC3, 0x27}}

type IDebugSystemObjectsInterface interface {
	IUnknownInterface
	GetEventThread(Id *uint32) HRESULT
	GetEventProcess(Id *uint32) HRESULT
	GetCurrentThreadId(Id *uint32) HRESULT
	SetCurrentThreadId(Id uint32) HRESULT
	GetCurrentProcessId(Id *uint32) HRESULT
	SetCurrentProcessId(Id uint32) HRESULT
	GetNumberThreads(Number *uint32) HRESULT
	GetTotalNumberThreads(Total *uint32, LargestProcess *uint32) HRESULT
	GetThreadIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT
	GetThreadIdByProcessor(Processor uint32, Id *uint32) HRESULT
	GetCurrentThreadDataOffset(Offset *uint64) HRESULT
	GetThreadIdByDataOffset(Offset uint64, Id *uint32) HRESULT
	GetCurrentThreadTeb(Offset *uint64) HRESULT
	GetThreadIdByTeb(Offset uint64, Id *uint32) HRESULT
	GetCurrentThreadSystemId(SysId *uint32) HRESULT
	GetThreadIdBySystemId(SysId uint32, Id *uint32) HRESULT
	GetCurrentThreadHandle(Handle *uint64) HRESULT
	GetThreadIdByHandle(Handle uint64, Id *uint32) HRESULT
	GetNumberProcesses(Number *uint32) HRESULT
	GetProcessIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT
	GetCurrentProcessDataOffset(Offset *uint64) HRESULT
	GetProcessIdByDataOffset(Offset uint64, Id *uint32) HRESULT
	GetCurrentProcessPeb(Offset *uint64) HRESULT
	GetProcessIdByPeb(Offset uint64, Id *uint32) HRESULT
	GetCurrentProcessSystemId(SysId *uint32) HRESULT
	GetProcessIdBySystemId(SysId uint32, Id *uint32) HRESULT
	GetCurrentProcessHandle(Handle *uint64) HRESULT
	GetProcessIdByHandle(Handle uint64, Id *uint32) HRESULT
	GetCurrentProcessExecutableName(Buffer PSTR, BufferSize uint32, ExeSize *uint32) HRESULT
}

type IDebugSystemObjectsVtbl struct {
	IUnknownVtbl
	GetEventThread                  uintptr
	GetEventProcess                 uintptr
	GetCurrentThreadId              uintptr
	SetCurrentThreadId              uintptr
	GetCurrentProcessId             uintptr
	SetCurrentProcessId             uintptr
	GetNumberThreads                uintptr
	GetTotalNumberThreads           uintptr
	GetThreadIdsByIndex             uintptr
	GetThreadIdByProcessor          uintptr
	GetCurrentThreadDataOffset      uintptr
	GetThreadIdByDataOffset         uintptr
	GetCurrentThreadTeb             uintptr
	GetThreadIdByTeb                uintptr
	GetCurrentThreadSystemId        uintptr
	GetThreadIdBySystemId           uintptr
	GetCurrentThreadHandle          uintptr
	GetThreadIdByHandle             uintptr
	GetNumberProcesses              uintptr
	GetProcessIdsByIndex            uintptr
	GetCurrentProcessDataOffset     uintptr
	GetProcessIdByDataOffset        uintptr
	GetCurrentProcessPeb            uintptr
	GetProcessIdByPeb               uintptr
	GetCurrentProcessSystemId       uintptr
	GetProcessIdBySystemId          uintptr
	GetCurrentProcessHandle         uintptr
	GetProcessIdByHandle            uintptr
	GetCurrentProcessExecutableName uintptr
}

type IDebugSystemObjects struct {
	IUnknown
}

func (this *IDebugSystemObjects) Vtbl() *IDebugSystemObjectsVtbl {
	return (*IDebugSystemObjectsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSystemObjects) GetEventThread(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetEventProcess(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventProcess, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentThreadId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) SetCurrentThreadId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentThreadId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentProcessId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) SetCurrentProcessId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentProcessId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetNumberThreads(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberThreads, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetTotalNumberThreads(Total *uint32, LargestProcess *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTotalNumberThreads, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Total)), uintptr(unsafe.Pointer(LargestProcess)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetThreadIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(SysIds)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetThreadIdByProcessor(Processor uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByProcessor, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentThreadDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetThreadIdByDataOffset(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentThreadTeb(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadTeb, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetThreadIdByTeb(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByTeb, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentThreadSystemId(SysId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SysId)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetThreadIdBySystemId(SysId uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdBySystemId, uintptr(unsafe.Pointer(this)), uintptr(SysId), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentThreadHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetThreadIdByHandle(Handle uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetNumberProcesses(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcesses, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetProcessIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(SysIds)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentProcessDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetProcessIdByDataOffset(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentProcessPeb(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessPeb, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetProcessIdByPeb(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByPeb, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentProcessSystemId(SysId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SysId)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetProcessIdBySystemId(SysId uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdBySystemId, uintptr(unsafe.Pointer(this)), uintptr(SysId), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentProcessHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetProcessIdByHandle(Handle uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects) GetCurrentProcessExecutableName(Buffer PSTR, BufferSize uint32, ExeSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessExecutableName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExeSize)))
	return HRESULT(ret)
}

// 0AE9F5FF-1852-4679-B055-494BEE6407EE
var IID_IDebugSystemObjects2 = syscall.GUID{0x0AE9F5FF, 0x1852, 0x4679,
	[8]byte{0xB0, 0x55, 0x49, 0x4B, 0xEE, 0x64, 0x07, 0xEE}}

type IDebugSystemObjects2Interface interface {
	IUnknownInterface
	GetEventThread(Id *uint32) HRESULT
	GetEventProcess(Id *uint32) HRESULT
	GetCurrentThreadId(Id *uint32) HRESULT
	SetCurrentThreadId(Id uint32) HRESULT
	GetCurrentProcessId(Id *uint32) HRESULT
	SetCurrentProcessId(Id uint32) HRESULT
	GetNumberThreads(Number *uint32) HRESULT
	GetTotalNumberThreads(Total *uint32, LargestProcess *uint32) HRESULT
	GetThreadIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT
	GetThreadIdByProcessor(Processor uint32, Id *uint32) HRESULT
	GetCurrentThreadDataOffset(Offset *uint64) HRESULT
	GetThreadIdByDataOffset(Offset uint64, Id *uint32) HRESULT
	GetCurrentThreadTeb(Offset *uint64) HRESULT
	GetThreadIdByTeb(Offset uint64, Id *uint32) HRESULT
	GetCurrentThreadSystemId(SysId *uint32) HRESULT
	GetThreadIdBySystemId(SysId uint32, Id *uint32) HRESULT
	GetCurrentThreadHandle(Handle *uint64) HRESULT
	GetThreadIdByHandle(Handle uint64, Id *uint32) HRESULT
	GetNumberProcesses(Number *uint32) HRESULT
	GetProcessIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT
	GetCurrentProcessDataOffset(Offset *uint64) HRESULT
	GetProcessIdByDataOffset(Offset uint64, Id *uint32) HRESULT
	GetCurrentProcessPeb(Offset *uint64) HRESULT
	GetProcessIdByPeb(Offset uint64, Id *uint32) HRESULT
	GetCurrentProcessSystemId(SysId *uint32) HRESULT
	GetProcessIdBySystemId(SysId uint32, Id *uint32) HRESULT
	GetCurrentProcessHandle(Handle *uint64) HRESULT
	GetProcessIdByHandle(Handle uint64, Id *uint32) HRESULT
	GetCurrentProcessExecutableName(Buffer PSTR, BufferSize uint32, ExeSize *uint32) HRESULT
	GetCurrentProcessUpTime(UpTime *uint32) HRESULT
	GetImplicitThreadDataOffset(Offset *uint64) HRESULT
	SetImplicitThreadDataOffset(Offset uint64) HRESULT
	GetImplicitProcessDataOffset(Offset *uint64) HRESULT
	SetImplicitProcessDataOffset(Offset uint64) HRESULT
}

type IDebugSystemObjects2Vtbl struct {
	IUnknownVtbl
	GetEventThread                  uintptr
	GetEventProcess                 uintptr
	GetCurrentThreadId              uintptr
	SetCurrentThreadId              uintptr
	GetCurrentProcessId             uintptr
	SetCurrentProcessId             uintptr
	GetNumberThreads                uintptr
	GetTotalNumberThreads           uintptr
	GetThreadIdsByIndex             uintptr
	GetThreadIdByProcessor          uintptr
	GetCurrentThreadDataOffset      uintptr
	GetThreadIdByDataOffset         uintptr
	GetCurrentThreadTeb             uintptr
	GetThreadIdByTeb                uintptr
	GetCurrentThreadSystemId        uintptr
	GetThreadIdBySystemId           uintptr
	GetCurrentThreadHandle          uintptr
	GetThreadIdByHandle             uintptr
	GetNumberProcesses              uintptr
	GetProcessIdsByIndex            uintptr
	GetCurrentProcessDataOffset     uintptr
	GetProcessIdByDataOffset        uintptr
	GetCurrentProcessPeb            uintptr
	GetProcessIdByPeb               uintptr
	GetCurrentProcessSystemId       uintptr
	GetProcessIdBySystemId          uintptr
	GetCurrentProcessHandle         uintptr
	GetProcessIdByHandle            uintptr
	GetCurrentProcessExecutableName uintptr
	GetCurrentProcessUpTime         uintptr
	GetImplicitThreadDataOffset     uintptr
	SetImplicitThreadDataOffset     uintptr
	GetImplicitProcessDataOffset    uintptr
	SetImplicitProcessDataOffset    uintptr
}

type IDebugSystemObjects2 struct {
	IUnknown
}

func (this *IDebugSystemObjects2) Vtbl() *IDebugSystemObjects2Vtbl {
	return (*IDebugSystemObjects2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSystemObjects2) GetEventThread(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetEventProcess(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventProcess, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentThreadId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) SetCurrentThreadId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentThreadId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentProcessId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) SetCurrentProcessId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentProcessId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetNumberThreads(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberThreads, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetTotalNumberThreads(Total *uint32, LargestProcess *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTotalNumberThreads, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Total)), uintptr(unsafe.Pointer(LargestProcess)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetThreadIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(SysIds)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetThreadIdByProcessor(Processor uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByProcessor, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentThreadDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetThreadIdByDataOffset(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentThreadTeb(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadTeb, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetThreadIdByTeb(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByTeb, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentThreadSystemId(SysId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SysId)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetThreadIdBySystemId(SysId uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdBySystemId, uintptr(unsafe.Pointer(this)), uintptr(SysId), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentThreadHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetThreadIdByHandle(Handle uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetNumberProcesses(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcesses, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetProcessIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(SysIds)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentProcessDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetProcessIdByDataOffset(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentProcessPeb(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessPeb, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetProcessIdByPeb(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByPeb, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentProcessSystemId(SysId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SysId)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetProcessIdBySystemId(SysId uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdBySystemId, uintptr(unsafe.Pointer(this)), uintptr(SysId), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentProcessHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetProcessIdByHandle(Handle uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentProcessExecutableName(Buffer PSTR, BufferSize uint32, ExeSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessExecutableName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExeSize)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetCurrentProcessUpTime(UpTime *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessUpTime, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(UpTime)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetImplicitThreadDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImplicitThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) SetImplicitThreadDataOffset(Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImplicitThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) GetImplicitProcessDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImplicitProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects2) SetImplicitProcessDataOffset(Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImplicitProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset))
	return HRESULT(ret)
}

// E9676E2F-E286-4EA3-B0F9-DFE5D9FC330E
var IID_IDebugSystemObjects3 = syscall.GUID{0xE9676E2F, 0xE286, 0x4EA3,
	[8]byte{0xB0, 0xF9, 0xDF, 0xE5, 0xD9, 0xFC, 0x33, 0x0E}}

type IDebugSystemObjects3Interface interface {
	IUnknownInterface
	GetEventThread(Id *uint32) HRESULT
	GetEventProcess(Id *uint32) HRESULT
	GetCurrentThreadId(Id *uint32) HRESULT
	SetCurrentThreadId(Id uint32) HRESULT
	GetCurrentProcessId(Id *uint32) HRESULT
	SetCurrentProcessId(Id uint32) HRESULT
	GetNumberThreads(Number *uint32) HRESULT
	GetTotalNumberThreads(Total *uint32, LargestProcess *uint32) HRESULT
	GetThreadIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT
	GetThreadIdByProcessor(Processor uint32, Id *uint32) HRESULT
	GetCurrentThreadDataOffset(Offset *uint64) HRESULT
	GetThreadIdByDataOffset(Offset uint64, Id *uint32) HRESULT
	GetCurrentThreadTeb(Offset *uint64) HRESULT
	GetThreadIdByTeb(Offset uint64, Id *uint32) HRESULT
	GetCurrentThreadSystemId(SysId *uint32) HRESULT
	GetThreadIdBySystemId(SysId uint32, Id *uint32) HRESULT
	GetCurrentThreadHandle(Handle *uint64) HRESULT
	GetThreadIdByHandle(Handle uint64, Id *uint32) HRESULT
	GetNumberProcesses(Number *uint32) HRESULT
	GetProcessIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT
	GetCurrentProcessDataOffset(Offset *uint64) HRESULT
	GetProcessIdByDataOffset(Offset uint64, Id *uint32) HRESULT
	GetCurrentProcessPeb(Offset *uint64) HRESULT
	GetProcessIdByPeb(Offset uint64, Id *uint32) HRESULT
	GetCurrentProcessSystemId(SysId *uint32) HRESULT
	GetProcessIdBySystemId(SysId uint32, Id *uint32) HRESULT
	GetCurrentProcessHandle(Handle *uint64) HRESULT
	GetProcessIdByHandle(Handle uint64, Id *uint32) HRESULT
	GetCurrentProcessExecutableName(Buffer PSTR, BufferSize uint32, ExeSize *uint32) HRESULT
	GetCurrentProcessUpTime(UpTime *uint32) HRESULT
	GetImplicitThreadDataOffset(Offset *uint64) HRESULT
	SetImplicitThreadDataOffset(Offset uint64) HRESULT
	GetImplicitProcessDataOffset(Offset *uint64) HRESULT
	SetImplicitProcessDataOffset(Offset uint64) HRESULT
	GetEventSystem(Id *uint32) HRESULT
	GetCurrentSystemId(Id *uint32) HRESULT
	SetCurrentSystemId(Id uint32) HRESULT
	GetNumberSystems(Number *uint32) HRESULT
	GetSystemIdsByIndex(Start uint32, Count uint32, Ids *uint32) HRESULT
	GetTotalNumberThreadsAndProcesses(TotalThreads *uint32, TotalProcesses *uint32, LargestProcessThreads *uint32, LargestSystemThreads *uint32, LargestSystemProcesses *uint32) HRESULT
	GetCurrentSystemServer(Server *uint64) HRESULT
	GetSystemByServer(Server uint64, Id *uint32) HRESULT
	GetCurrentSystemServerName(Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
}

type IDebugSystemObjects3Vtbl struct {
	IUnknownVtbl
	GetEventThread                    uintptr
	GetEventProcess                   uintptr
	GetCurrentThreadId                uintptr
	SetCurrentThreadId                uintptr
	GetCurrentProcessId               uintptr
	SetCurrentProcessId               uintptr
	GetNumberThreads                  uintptr
	GetTotalNumberThreads             uintptr
	GetThreadIdsByIndex               uintptr
	GetThreadIdByProcessor            uintptr
	GetCurrentThreadDataOffset        uintptr
	GetThreadIdByDataOffset           uintptr
	GetCurrentThreadTeb               uintptr
	GetThreadIdByTeb                  uintptr
	GetCurrentThreadSystemId          uintptr
	GetThreadIdBySystemId             uintptr
	GetCurrentThreadHandle            uintptr
	GetThreadIdByHandle               uintptr
	GetNumberProcesses                uintptr
	GetProcessIdsByIndex              uintptr
	GetCurrentProcessDataOffset       uintptr
	GetProcessIdByDataOffset          uintptr
	GetCurrentProcessPeb              uintptr
	GetProcessIdByPeb                 uintptr
	GetCurrentProcessSystemId         uintptr
	GetProcessIdBySystemId            uintptr
	GetCurrentProcessHandle           uintptr
	GetProcessIdByHandle              uintptr
	GetCurrentProcessExecutableName   uintptr
	GetCurrentProcessUpTime           uintptr
	GetImplicitThreadDataOffset       uintptr
	SetImplicitThreadDataOffset       uintptr
	GetImplicitProcessDataOffset      uintptr
	SetImplicitProcessDataOffset      uintptr
	GetEventSystem                    uintptr
	GetCurrentSystemId                uintptr
	SetCurrentSystemId                uintptr
	GetNumberSystems                  uintptr
	GetSystemIdsByIndex               uintptr
	GetTotalNumberThreadsAndProcesses uintptr
	GetCurrentSystemServer            uintptr
	GetSystemByServer                 uintptr
	GetCurrentSystemServerName        uintptr
}

type IDebugSystemObjects3 struct {
	IUnknown
}

func (this *IDebugSystemObjects3) Vtbl() *IDebugSystemObjects3Vtbl {
	return (*IDebugSystemObjects3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSystemObjects3) GetEventThread(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetEventProcess(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventProcess, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentThreadId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) SetCurrentThreadId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentThreadId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentProcessId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) SetCurrentProcessId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentProcessId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetNumberThreads(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberThreads, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetTotalNumberThreads(Total *uint32, LargestProcess *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTotalNumberThreads, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Total)), uintptr(unsafe.Pointer(LargestProcess)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetThreadIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(SysIds)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetThreadIdByProcessor(Processor uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByProcessor, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentThreadDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetThreadIdByDataOffset(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentThreadTeb(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadTeb, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetThreadIdByTeb(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByTeb, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentThreadSystemId(SysId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SysId)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetThreadIdBySystemId(SysId uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdBySystemId, uintptr(unsafe.Pointer(this)), uintptr(SysId), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentThreadHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetThreadIdByHandle(Handle uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetNumberProcesses(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcesses, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetProcessIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(SysIds)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentProcessDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetProcessIdByDataOffset(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentProcessPeb(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessPeb, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetProcessIdByPeb(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByPeb, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentProcessSystemId(SysId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SysId)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetProcessIdBySystemId(SysId uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdBySystemId, uintptr(unsafe.Pointer(this)), uintptr(SysId), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentProcessHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetProcessIdByHandle(Handle uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentProcessExecutableName(Buffer PSTR, BufferSize uint32, ExeSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessExecutableName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExeSize)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentProcessUpTime(UpTime *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessUpTime, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(UpTime)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetImplicitThreadDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImplicitThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) SetImplicitThreadDataOffset(Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImplicitThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetImplicitProcessDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImplicitProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) SetImplicitProcessDataOffset(Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImplicitProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetEventSystem(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventSystem, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentSystemId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) SetCurrentSystemId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentSystemId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetNumberSystems(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSystems, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetSystemIdsByIndex(Start uint32, Count uint32, Ids *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetTotalNumberThreadsAndProcesses(TotalThreads *uint32, TotalProcesses *uint32, LargestProcessThreads *uint32, LargestSystemThreads *uint32, LargestSystemProcesses *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTotalNumberThreadsAndProcesses, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(TotalThreads)), uintptr(unsafe.Pointer(TotalProcesses)), uintptr(unsafe.Pointer(LargestProcessThreads)), uintptr(unsafe.Pointer(LargestSystemThreads)), uintptr(unsafe.Pointer(LargestSystemProcesses)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentSystemServer(Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetSystemByServer(Server uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemByServer, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects3) GetCurrentSystemServerName(Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemServerName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

// 489468E6-7D0F-4AF5-87AB-25207454D553
var IID_IDebugSystemObjects4 = syscall.GUID{0x489468E6, 0x7D0F, 0x4AF5,
	[8]byte{0x87, 0xAB, 0x25, 0x20, 0x74, 0x54, 0xD5, 0x53}}

type IDebugSystemObjects4Interface interface {
	IUnknownInterface
	GetEventThread(Id *uint32) HRESULT
	GetEventProcess(Id *uint32) HRESULT
	GetCurrentThreadId(Id *uint32) HRESULT
	SetCurrentThreadId(Id uint32) HRESULT
	GetCurrentProcessId(Id *uint32) HRESULT
	SetCurrentProcessId(Id uint32) HRESULT
	GetNumberThreads(Number *uint32) HRESULT
	GetTotalNumberThreads(Total *uint32, LargestProcess *uint32) HRESULT
	GetThreadIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT
	GetThreadIdByProcessor(Processor uint32, Id *uint32) HRESULT
	GetCurrentThreadDataOffset(Offset *uint64) HRESULT
	GetThreadIdByDataOffset(Offset uint64, Id *uint32) HRESULT
	GetCurrentThreadTeb(Offset *uint64) HRESULT
	GetThreadIdByTeb(Offset uint64, Id *uint32) HRESULT
	GetCurrentThreadSystemId(SysId *uint32) HRESULT
	GetThreadIdBySystemId(SysId uint32, Id *uint32) HRESULT
	GetCurrentThreadHandle(Handle *uint64) HRESULT
	GetThreadIdByHandle(Handle uint64, Id *uint32) HRESULT
	GetNumberProcesses(Number *uint32) HRESULT
	GetProcessIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT
	GetCurrentProcessDataOffset(Offset *uint64) HRESULT
	GetProcessIdByDataOffset(Offset uint64, Id *uint32) HRESULT
	GetCurrentProcessPeb(Offset *uint64) HRESULT
	GetProcessIdByPeb(Offset uint64, Id *uint32) HRESULT
	GetCurrentProcessSystemId(SysId *uint32) HRESULT
	GetProcessIdBySystemId(SysId uint32, Id *uint32) HRESULT
	GetCurrentProcessHandle(Handle *uint64) HRESULT
	GetProcessIdByHandle(Handle uint64, Id *uint32) HRESULT
	GetCurrentProcessExecutableName(Buffer PSTR, BufferSize uint32, ExeSize *uint32) HRESULT
	GetCurrentProcessUpTime(UpTime *uint32) HRESULT
	GetImplicitThreadDataOffset(Offset *uint64) HRESULT
	SetImplicitThreadDataOffset(Offset uint64) HRESULT
	GetImplicitProcessDataOffset(Offset *uint64) HRESULT
	SetImplicitProcessDataOffset(Offset uint64) HRESULT
	GetEventSystem(Id *uint32) HRESULT
	GetCurrentSystemId(Id *uint32) HRESULT
	SetCurrentSystemId(Id uint32) HRESULT
	GetNumberSystems(Number *uint32) HRESULT
	GetSystemIdsByIndex(Start uint32, Count uint32, Ids *uint32) HRESULT
	GetTotalNumberThreadsAndProcesses(TotalThreads *uint32, TotalProcesses *uint32, LargestProcessThreads *uint32, LargestSystemThreads *uint32, LargestSystemProcesses *uint32) HRESULT
	GetCurrentSystemServer(Server *uint64) HRESULT
	GetSystemByServer(Server uint64, Id *uint32) HRESULT
	GetCurrentSystemServerName(Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT
	GetCurrentProcessExecutableNameWide(Buffer PWSTR, BufferSize uint32, ExeSize *uint32) HRESULT
	GetCurrentSystemServerNameWide(Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT
}

type IDebugSystemObjects4Vtbl struct {
	IUnknownVtbl
	GetEventThread                      uintptr
	GetEventProcess                     uintptr
	GetCurrentThreadId                  uintptr
	SetCurrentThreadId                  uintptr
	GetCurrentProcessId                 uintptr
	SetCurrentProcessId                 uintptr
	GetNumberThreads                    uintptr
	GetTotalNumberThreads               uintptr
	GetThreadIdsByIndex                 uintptr
	GetThreadIdByProcessor              uintptr
	GetCurrentThreadDataOffset          uintptr
	GetThreadIdByDataOffset             uintptr
	GetCurrentThreadTeb                 uintptr
	GetThreadIdByTeb                    uintptr
	GetCurrentThreadSystemId            uintptr
	GetThreadIdBySystemId               uintptr
	GetCurrentThreadHandle              uintptr
	GetThreadIdByHandle                 uintptr
	GetNumberProcesses                  uintptr
	GetProcessIdsByIndex                uintptr
	GetCurrentProcessDataOffset         uintptr
	GetProcessIdByDataOffset            uintptr
	GetCurrentProcessPeb                uintptr
	GetProcessIdByPeb                   uintptr
	GetCurrentProcessSystemId           uintptr
	GetProcessIdBySystemId              uintptr
	GetCurrentProcessHandle             uintptr
	GetProcessIdByHandle                uintptr
	GetCurrentProcessExecutableName     uintptr
	GetCurrentProcessUpTime             uintptr
	GetImplicitThreadDataOffset         uintptr
	SetImplicitThreadDataOffset         uintptr
	GetImplicitProcessDataOffset        uintptr
	SetImplicitProcessDataOffset        uintptr
	GetEventSystem                      uintptr
	GetCurrentSystemId                  uintptr
	SetCurrentSystemId                  uintptr
	GetNumberSystems                    uintptr
	GetSystemIdsByIndex                 uintptr
	GetTotalNumberThreadsAndProcesses   uintptr
	GetCurrentSystemServer              uintptr
	GetSystemByServer                   uintptr
	GetCurrentSystemServerName          uintptr
	GetCurrentProcessExecutableNameWide uintptr
	GetCurrentSystemServerNameWide      uintptr
}

type IDebugSystemObjects4 struct {
	IUnknown
}

func (this *IDebugSystemObjects4) Vtbl() *IDebugSystemObjects4Vtbl {
	return (*IDebugSystemObjects4Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSystemObjects4) GetEventThread(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetEventProcess(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventProcess, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentThreadId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) SetCurrentThreadId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentThreadId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentProcessId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) SetCurrentProcessId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentProcessId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetNumberThreads(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberThreads, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetTotalNumberThreads(Total *uint32, LargestProcess *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTotalNumberThreads, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Total)), uintptr(unsafe.Pointer(LargestProcess)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetThreadIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(SysIds)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetThreadIdByProcessor(Processor uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByProcessor, uintptr(unsafe.Pointer(this)), uintptr(Processor), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentThreadDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetThreadIdByDataOffset(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentThreadTeb(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadTeb, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetThreadIdByTeb(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByTeb, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentThreadSystemId(SysId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SysId)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetThreadIdBySystemId(SysId uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdBySystemId, uintptr(unsafe.Pointer(this)), uintptr(SysId), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentThreadHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThreadHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetThreadIdByHandle(Handle uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadIdByHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetNumberProcesses(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberProcesses, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetProcessIdsByIndex(Start uint32, Count uint32, Ids *uint32, SysIds *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)), uintptr(unsafe.Pointer(SysIds)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentProcessDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetProcessIdByDataOffset(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentProcessPeb(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessPeb, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetProcessIdByPeb(Offset uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByPeb, uintptr(unsafe.Pointer(this)), uintptr(Offset), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentProcessSystemId(SysId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(SysId)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetProcessIdBySystemId(SysId uint32, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdBySystemId, uintptr(unsafe.Pointer(this)), uintptr(SysId), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentProcessHandle(Handle *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessHandle, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Handle)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetProcessIdByHandle(Handle uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProcessIdByHandle, uintptr(unsafe.Pointer(this)), uintptr(Handle), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentProcessExecutableName(Buffer PSTR, BufferSize uint32, ExeSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessExecutableName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExeSize)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentProcessUpTime(UpTime *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessUpTime, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(UpTime)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetImplicitThreadDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImplicitThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) SetImplicitThreadDataOffset(Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImplicitThreadDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetImplicitProcessDataOffset(Offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImplicitProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Offset)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) SetImplicitProcessDataOffset(Offset uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetImplicitProcessDataOffset, uintptr(unsafe.Pointer(this)), uintptr(Offset))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetEventSystem(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventSystem, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentSystemId(Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) SetCurrentSystemId(Id uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetCurrentSystemId, uintptr(unsafe.Pointer(this)), uintptr(Id))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetNumberSystems(Number *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberSystems, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Number)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetSystemIdsByIndex(Start uint32, Count uint32, Ids *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemIdsByIndex, uintptr(unsafe.Pointer(this)), uintptr(Start), uintptr(Count), uintptr(unsafe.Pointer(Ids)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetTotalNumberThreadsAndProcesses(TotalThreads *uint32, TotalProcesses *uint32, LargestProcessThreads *uint32, LargestSystemThreads *uint32, LargestSystemProcesses *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTotalNumberThreadsAndProcesses, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(TotalThreads)), uintptr(unsafe.Pointer(TotalProcesses)), uintptr(unsafe.Pointer(LargestProcessThreads)), uintptr(unsafe.Pointer(LargestSystemThreads)), uintptr(unsafe.Pointer(LargestSystemProcesses)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentSystemServer(Server *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemServer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Server)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetSystemByServer(Server uint64, Id *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemByServer, uintptr(unsafe.Pointer(this)), uintptr(Server), uintptr(unsafe.Pointer(Id)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentSystemServerName(Buffer PSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemServerName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentProcessExecutableNameWide(Buffer PWSTR, BufferSize uint32, ExeSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentProcessExecutableNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(ExeSize)))
	return HRESULT(ret)
}

func (this *IDebugSystemObjects4) GetCurrentSystemServerNameWide(Buffer PWSTR, BufferSize uint32, NameSize *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentSystemServerNameWide, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(Buffer)), uintptr(BufferSize), uintptr(unsafe.Pointer(NameSize)))
	return HRESULT(ret)
}

// 00000000-0000-0000-0000-000000000000
var IID_DebugBaseEventCallbacks = syscall.GUID{0x00000000, 0x0000, 0x0000,
	[8]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}

type DebugBaseEventCallbacksInterface interface {
	IDebugEventCallbacksInterface
}

type DebugBaseEventCallbacksVtbl struct {
	IDebugEventCallbacksVtbl
}

type DebugBaseEventCallbacks struct {
	IDebugEventCallbacks
}

func (this *DebugBaseEventCallbacks) Vtbl() *DebugBaseEventCallbacksVtbl {
	return (*DebugBaseEventCallbacksVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

// 00000000-0000-0000-0000-000000000000
var IID_DebugBaseEventCallbacksWide = syscall.GUID{0x00000000, 0x0000, 0x0000,
	[8]byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}}

type DebugBaseEventCallbacksWideInterface interface {
	IDebugEventCallbacksWideInterface
}

type DebugBaseEventCallbacksWideVtbl struct {
	IDebugEventCallbacksWideVtbl
}

type DebugBaseEventCallbacksWide struct {
	IDebugEventCallbacksWide
}

func (this *DebugBaseEventCallbacksWide) Vtbl() *DebugBaseEventCallbacksWideVtbl {
	return (*DebugBaseEventCallbacksWideVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

// F2BCE54E-4835-4F8A-836E-7981E29904D1
var IID_IHostDataModelAccess = syscall.GUID{0xF2BCE54E, 0x4835, 0x4F8A,
	[8]byte{0x83, 0x6E, 0x79, 0x81, 0xE2, 0x99, 0x04, 0xD1}}

type IHostDataModelAccessInterface interface {
	IUnknownInterface
	GetDataModel(manager **IDataModelManager, host **IDebugHost) HRESULT
}

type IHostDataModelAccessVtbl struct {
	IUnknownVtbl
	GetDataModel uintptr
}

type IHostDataModelAccess struct {
	IUnknown
}

func (this *IHostDataModelAccess) Vtbl() *IHostDataModelAccessVtbl {
	return (*IHostDataModelAccessVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IHostDataModelAccess) GetDataModel(manager **IDataModelManager, host **IDebugHost) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDataModel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(manager)), uintptr(unsafe.Pointer(host)))
	return HRESULT(ret)
}

// 0FC7557D-401D-4FCA-9365-DA1E9850697C
var IID_IKeyStore = syscall.GUID{0x0FC7557D, 0x401D, 0x4FCA,
	[8]byte{0x93, 0x65, 0xDA, 0x1E, 0x98, 0x50, 0x69, 0x7C}}

type IKeyStoreInterface interface {
	IUnknownInterface
	GetKey(key PWSTR, object **IModelObject, metadata **IKeyStore) HRESULT
	SetKey(key PWSTR, object *IModelObject, metadata *IKeyStore) HRESULT
	GetKeyValue(key PWSTR, object **IModelObject, metadata **IKeyStore) HRESULT
	SetKeyValue(key PWSTR, object *IModelObject) HRESULT
	ClearKeys() HRESULT
}

type IKeyStoreVtbl struct {
	IUnknownVtbl
	GetKey      uintptr
	SetKey      uintptr
	GetKeyValue uintptr
	SetKeyValue uintptr
	ClearKeys   uintptr
}

type IKeyStore struct {
	IUnknown
}

func (this *IKeyStore) Vtbl() *IKeyStoreVtbl {
	return (*IKeyStoreVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IKeyStore) GetKey(key PWSTR, object **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKey, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IKeyStore) SetKey(key PWSTR, object *IModelObject, metadata *IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKey, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IKeyStore) GetKeyValue(key PWSTR, object **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKeyValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IKeyStore) SetKeyValue(key PWSTR, object *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKeyValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IKeyStore) ClearKeys() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ClearKeys, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// E28C7893-3F4B-4B96-BACA-293CDC55F45D
var IID_IModelObject = syscall.GUID{0xE28C7893, 0x3F4B, 0x4B96,
	[8]byte{0xBA, 0xCA, 0x29, 0x3C, 0xDC, 0x55, 0xF4, 0x5D}}

type IModelObjectInterface interface {
	IUnknownInterface
	GetContext(context **IDebugHostContext) HRESULT
	GetKind(kind *ModelObjectKind) HRESULT
	GetIntrinsicValue(intrinsicData *VARIANT) HRESULT
	GetIntrinsicValueAs(vt uint16, intrinsicData *VARIANT) HRESULT
	GetKeyValue(key PWSTR, object **IModelObject, metadata **IKeyStore) HRESULT
	SetKeyValue(key PWSTR, object *IModelObject) HRESULT
	EnumerateKeyValues(enumerator **IKeyEnumerator) HRESULT
	GetRawValue(kind SymbolKind, name PWSTR, searchFlags uint32, object **IModelObject) HRESULT
	EnumerateRawValues(kind SymbolKind, searchFlags uint32, enumerator **IRawEnumerator) HRESULT
	Dereference(object **IModelObject) HRESULT
	TryCastToRuntimeType(runtimeTypedObject **IModelObject) HRESULT
	GetConcept(conceptId *syscall.GUID, conceptInterface **IUnknown, conceptMetadata **IKeyStore) HRESULT
	GetLocation(location *Location) HRESULT
	GetTypeInfo(type_ **IDebugHostType) HRESULT
	GetTargetInfo(location *Location, type_ **IDebugHostType) HRESULT
	GetNumberOfParentModels(numModels *uint64) HRESULT
	GetParentModel(i uint64, model **IModelObject, contextObject **IModelObject) HRESULT
	AddParentModel(model *IModelObject, contextObject *IModelObject, override byte) HRESULT
	RemoveParentModel(model *IModelObject) HRESULT
	GetKey(key PWSTR, object **IModelObject, metadata **IKeyStore) HRESULT
	GetKeyReference(key PWSTR, objectReference **IModelObject, metadata **IKeyStore) HRESULT
	SetKey(key PWSTR, object *IModelObject, metadata *IKeyStore) HRESULT
	ClearKeys() HRESULT
	EnumerateKeys(enumerator **IKeyEnumerator) HRESULT
	EnumerateKeyReferences(enumerator **IKeyEnumerator) HRESULT
	SetConcept(conceptId *syscall.GUID, conceptInterface *IUnknown, conceptMetadata *IKeyStore) HRESULT
	ClearConcepts() HRESULT
	GetRawReference(kind SymbolKind, name PWSTR, searchFlags uint32, object **IModelObject) HRESULT
	EnumerateRawReferences(kind SymbolKind, searchFlags uint32, enumerator **IRawEnumerator) HRESULT
	SetContextForDataModel(dataModelObject *IModelObject, context *IUnknown) HRESULT
	GetContextForDataModel(dataModelObject *IModelObject, context **IUnknown) HRESULT
	Compare(other *IModelObject, ppResult **IModelObject) HRESULT
	IsEqualTo(other *IModelObject, equal *bool) HRESULT
}

type IModelObjectVtbl struct {
	IUnknownVtbl
	GetContext              uintptr
	GetKind                 uintptr
	GetIntrinsicValue       uintptr
	GetIntrinsicValueAs     uintptr
	GetKeyValue             uintptr
	SetKeyValue             uintptr
	EnumerateKeyValues      uintptr
	GetRawValue             uintptr
	EnumerateRawValues      uintptr
	Dereference             uintptr
	TryCastToRuntimeType    uintptr
	GetConcept              uintptr
	GetLocation             uintptr
	GetTypeInfo             uintptr
	GetTargetInfo           uintptr
	GetNumberOfParentModels uintptr
	GetParentModel          uintptr
	AddParentModel          uintptr
	RemoveParentModel       uintptr
	GetKey                  uintptr
	GetKeyReference         uintptr
	SetKey                  uintptr
	ClearKeys               uintptr
	EnumerateKeys           uintptr
	EnumerateKeyReferences  uintptr
	SetConcept              uintptr
	ClearConcepts           uintptr
	GetRawReference         uintptr
	EnumerateRawReferences  uintptr
	SetContextForDataModel  uintptr
	GetContextForDataModel  uintptr
	Compare                 uintptr
	IsEqualTo               uintptr
}

type IModelObject struct {
	IUnknown
}

func (this *IModelObject) Vtbl() *IModelObjectVtbl {
	return (*IModelObjectVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IModelObject) GetContext(context **IDebugHostContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)))
	return HRESULT(ret)
}

func (this *IModelObject) GetKind(kind *ModelObjectKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKind, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(kind)))
	return HRESULT(ret)
}

func (this *IModelObject) GetIntrinsicValue(intrinsicData *VARIANT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIntrinsicValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(intrinsicData)))
	return HRESULT(ret)
}

func (this *IModelObject) GetIntrinsicValueAs(vt uint16, intrinsicData *VARIANT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIntrinsicValueAs, uintptr(unsafe.Pointer(this)), uintptr(vt), uintptr(unsafe.Pointer(intrinsicData)))
	return HRESULT(ret)
}

func (this *IModelObject) GetKeyValue(key PWSTR, object **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKeyValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IModelObject) SetKeyValue(key PWSTR, object *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKeyValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IModelObject) EnumerateKeyValues(enumerator **IKeyEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateKeyValues, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(enumerator)))
	return HRESULT(ret)
}

func (this *IModelObject) GetRawValue(kind SymbolKind, name PWSTR, searchFlags uint32, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRawValue, uintptr(unsafe.Pointer(this)), uintptr(kind), uintptr(unsafe.Pointer(name)), uintptr(searchFlags), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IModelObject) EnumerateRawValues(kind SymbolKind, searchFlags uint32, enumerator **IRawEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateRawValues, uintptr(unsafe.Pointer(this)), uintptr(kind), uintptr(searchFlags), uintptr(unsafe.Pointer(enumerator)))
	return HRESULT(ret)
}

func (this *IModelObject) Dereference(object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Dereference, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IModelObject) TryCastToRuntimeType(runtimeTypedObject **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().TryCastToRuntimeType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(runtimeTypedObject)))
	return HRESULT(ret)
}

func (this *IModelObject) GetConcept(conceptId *syscall.GUID, conceptInterface **IUnknown, conceptMetadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetConcept, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(conceptId)), uintptr(unsafe.Pointer(conceptInterface)), uintptr(unsafe.Pointer(conceptMetadata)))
	return HRESULT(ret)
}

func (this *IModelObject) GetLocation(location *Location) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLocation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(location)))
	return HRESULT(ret)
}

func (this *IModelObject) GetTypeInfo(type_ **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeInfo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(type_)))
	return HRESULT(ret)
}

func (this *IModelObject) GetTargetInfo(location *Location, type_ **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTargetInfo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(location)), uintptr(unsafe.Pointer(type_)))
	return HRESULT(ret)
}

func (this *IModelObject) GetNumberOfParentModels(numModels *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberOfParentModels, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(numModels)))
	return HRESULT(ret)
}

func (this *IModelObject) GetParentModel(i uint64, model **IModelObject, contextObject **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetParentModel, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(unsafe.Pointer(model)), uintptr(unsafe.Pointer(contextObject)))
	return HRESULT(ret)
}

func (this *IModelObject) AddParentModel(model *IModelObject, contextObject *IModelObject, override byte) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddParentModel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(model)), uintptr(unsafe.Pointer(contextObject)), uintptr(override))
	return HRESULT(ret)
}

func (this *IModelObject) RemoveParentModel(model *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveParentModel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(model)))
	return HRESULT(ret)
}

func (this *IModelObject) GetKey(key PWSTR, object **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKey, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IModelObject) GetKeyReference(key PWSTR, objectReference **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKeyReference, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(objectReference)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IModelObject) SetKey(key PWSTR, object *IModelObject, metadata *IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKey, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IModelObject) ClearKeys() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ClearKeys, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IModelObject) EnumerateKeys(enumerator **IKeyEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateKeys, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(enumerator)))
	return HRESULT(ret)
}

func (this *IModelObject) EnumerateKeyReferences(enumerator **IKeyEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateKeyReferences, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(enumerator)))
	return HRESULT(ret)
}

func (this *IModelObject) SetConcept(conceptId *syscall.GUID, conceptInterface *IUnknown, conceptMetadata *IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetConcept, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(conceptId)), uintptr(unsafe.Pointer(conceptInterface)), uintptr(unsafe.Pointer(conceptMetadata)))
	return HRESULT(ret)
}

func (this *IModelObject) ClearConcepts() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ClearConcepts, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IModelObject) GetRawReference(kind SymbolKind, name PWSTR, searchFlags uint32, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRawReference, uintptr(unsafe.Pointer(this)), uintptr(kind), uintptr(unsafe.Pointer(name)), uintptr(searchFlags), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IModelObject) EnumerateRawReferences(kind SymbolKind, searchFlags uint32, enumerator **IRawEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateRawReferences, uintptr(unsafe.Pointer(this)), uintptr(kind), uintptr(searchFlags), uintptr(unsafe.Pointer(enumerator)))
	return HRESULT(ret)
}

func (this *IModelObject) SetContextForDataModel(dataModelObject *IModelObject, context *IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetContextForDataModel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(dataModelObject)), uintptr(unsafe.Pointer(context)))
	return HRESULT(ret)
}

func (this *IModelObject) GetContextForDataModel(dataModelObject *IModelObject, context **IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextForDataModel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(dataModelObject)), uintptr(unsafe.Pointer(context)))
	return HRESULT(ret)
}

func (this *IModelObject) Compare(other *IModelObject, ppResult **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Compare, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(other)), uintptr(unsafe.Pointer(ppResult)))
	return HRESULT(ret)
}

func (this *IModelObject) IsEqualTo(other *IModelObject, equal *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsEqualTo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(other)), uintptr(unsafe.Pointer(equal)))
	return HRESULT(ret)
}

// 73FE19F4-A110-4500-8ED9-3C28896F508C
var IID_IDataModelManager = syscall.GUID{0x73FE19F4, 0xA110, 0x4500,
	[8]byte{0x8E, 0xD9, 0x3C, 0x28, 0x89, 0x6F, 0x50, 0x8C}}

type IDataModelManagerInterface interface {
	IUnknownInterface
	Close() HRESULT
	CreateNoValue(object **IModelObject) HRESULT
	CreateErrorObject(hrError HRESULT, pwszMessage PWSTR, object **IModelObject) HRESULT
	CreateTypedObject(context *IDebugHostContext, objectLocation Location, objectType *IDebugHostType, object **IModelObject) HRESULT
	CreateTypedObjectReference(context *IDebugHostContext, objectLocation Location, objectType *IDebugHostType, object **IModelObject) HRESULT
	CreateSyntheticObject(context *IDebugHostContext, object **IModelObject) HRESULT
	CreateDataModelObject(dataModel *IDataModelConcept, object **IModelObject) HRESULT
	CreateIntrinsicObject(objectKind ModelObjectKind, intrinsicData *VARIANT, object **IModelObject) HRESULT
	CreateTypedIntrinsicObject(intrinsicData *VARIANT, type_ *IDebugHostType, object **IModelObject) HRESULT
	GetModelForTypeSignature(typeSignature *IDebugHostTypeSignature, dataModel **IModelObject) HRESULT
	GetModelForType(type_ *IDebugHostType, dataModel **IModelObject, typeSignature **IDebugHostTypeSignature, wildcardMatches **IDebugHostSymbolEnumerator) HRESULT
	RegisterModelForTypeSignature(typeSignature *IDebugHostTypeSignature, dataModel *IModelObject) HRESULT
	UnregisterModelForTypeSignature(dataModel *IModelObject, typeSignature *IDebugHostTypeSignature) HRESULT
	RegisterExtensionForTypeSignature(typeSignature *IDebugHostTypeSignature, dataModel *IModelObject) HRESULT
	UnregisterExtensionForTypeSignature(dataModel *IModelObject, typeSignature *IDebugHostTypeSignature) HRESULT
	CreateMetadataStore(parentStore *IKeyStore, metadataStore **IKeyStore) HRESULT
	GetRootNamespace(rootNamespace **IModelObject) HRESULT
	RegisterNamedModel(modelName PWSTR, modeObject *IModelObject) HRESULT
	UnregisterNamedModel(modelName PWSTR) HRESULT
	AcquireNamedModel(modelName PWSTR, modelObject **IModelObject) HRESULT
}

type IDataModelManagerVtbl struct {
	IUnknownVtbl
	Close                               uintptr
	CreateNoValue                       uintptr
	CreateErrorObject                   uintptr
	CreateTypedObject                   uintptr
	CreateTypedObjectReference          uintptr
	CreateSyntheticObject               uintptr
	CreateDataModelObject               uintptr
	CreateIntrinsicObject               uintptr
	CreateTypedIntrinsicObject          uintptr
	GetModelForTypeSignature            uintptr
	GetModelForType                     uintptr
	RegisterModelForTypeSignature       uintptr
	UnregisterModelForTypeSignature     uintptr
	RegisterExtensionForTypeSignature   uintptr
	UnregisterExtensionForTypeSignature uintptr
	CreateMetadataStore                 uintptr
	GetRootNamespace                    uintptr
	RegisterNamedModel                  uintptr
	UnregisterNamedModel                uintptr
	AcquireNamedModel                   uintptr
}

type IDataModelManager struct {
	IUnknown
}

func (this *IDataModelManager) Vtbl() *IDataModelManagerVtbl {
	return (*IDataModelManagerVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelManager) Close() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Close, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDataModelManager) CreateNoValue(object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateNoValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IDataModelManager) CreateErrorObject(hrError HRESULT, pwszMessage PWSTR, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateErrorObject, uintptr(unsafe.Pointer(this)), uintptr(hrError), uintptr(unsafe.Pointer(pwszMessage)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IDataModelManager) CreateTypedObject(context *IDebugHostContext, objectLocation Location, objectType *IDebugHostType, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateTypedObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(&objectLocation)), uintptr(unsafe.Pointer(objectType)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IDataModelManager) CreateTypedObjectReference(context *IDebugHostContext, objectLocation Location, objectType *IDebugHostType, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateTypedObjectReference, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(&objectLocation)), uintptr(unsafe.Pointer(objectType)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IDataModelManager) CreateSyntheticObject(context *IDebugHostContext, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSyntheticObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IDataModelManager) CreateDataModelObject(dataModel *IDataModelConcept, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateDataModelObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(dataModel)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IDataModelManager) CreateIntrinsicObject(objectKind ModelObjectKind, intrinsicData *VARIANT, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateIntrinsicObject, uintptr(unsafe.Pointer(this)), uintptr(objectKind), uintptr(unsafe.Pointer(intrinsicData)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IDataModelManager) CreateTypedIntrinsicObject(intrinsicData *VARIANT, type_ *IDebugHostType, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateTypedIntrinsicObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(intrinsicData)), uintptr(unsafe.Pointer(type_)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

func (this *IDataModelManager) GetModelForTypeSignature(typeSignature *IDebugHostTypeSignature, dataModel **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModelForTypeSignature, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(typeSignature)), uintptr(unsafe.Pointer(dataModel)))
	return HRESULT(ret)
}

func (this *IDataModelManager) GetModelForType(type_ *IDebugHostType, dataModel **IModelObject, typeSignature **IDebugHostTypeSignature, wildcardMatches **IDebugHostSymbolEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetModelForType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(type_)), uintptr(unsafe.Pointer(dataModel)), uintptr(unsafe.Pointer(typeSignature)), uintptr(unsafe.Pointer(wildcardMatches)))
	return HRESULT(ret)
}

func (this *IDataModelManager) RegisterModelForTypeSignature(typeSignature *IDebugHostTypeSignature, dataModel *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RegisterModelForTypeSignature, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(typeSignature)), uintptr(unsafe.Pointer(dataModel)))
	return HRESULT(ret)
}

func (this *IDataModelManager) UnregisterModelForTypeSignature(dataModel *IModelObject, typeSignature *IDebugHostTypeSignature) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().UnregisterModelForTypeSignature, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(dataModel)), uintptr(unsafe.Pointer(typeSignature)))
	return HRESULT(ret)
}

func (this *IDataModelManager) RegisterExtensionForTypeSignature(typeSignature *IDebugHostTypeSignature, dataModel *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RegisterExtensionForTypeSignature, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(typeSignature)), uintptr(unsafe.Pointer(dataModel)))
	return HRESULT(ret)
}

func (this *IDataModelManager) UnregisterExtensionForTypeSignature(dataModel *IModelObject, typeSignature *IDebugHostTypeSignature) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().UnregisterExtensionForTypeSignature, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(dataModel)), uintptr(unsafe.Pointer(typeSignature)))
	return HRESULT(ret)
}

func (this *IDataModelManager) CreateMetadataStore(parentStore *IKeyStore, metadataStore **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateMetadataStore, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(parentStore)), uintptr(unsafe.Pointer(metadataStore)))
	return HRESULT(ret)
}

func (this *IDataModelManager) GetRootNamespace(rootNamespace **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRootNamespace, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(rootNamespace)))
	return HRESULT(ret)
}

func (this *IDataModelManager) RegisterNamedModel(modelName PWSTR, modeObject *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RegisterNamedModel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(modelName)), uintptr(unsafe.Pointer(modeObject)))
	return HRESULT(ret)
}

func (this *IDataModelManager) UnregisterNamedModel(modelName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().UnregisterNamedModel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(modelName)))
	return HRESULT(ret)
}

func (this *IDataModelManager) AcquireNamedModel(modelName PWSTR, modelObject **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AcquireNamedModel, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(modelName)), uintptr(unsafe.Pointer(modelObject)))
	return HRESULT(ret)
}

// 5253DCF8-5AFF-4C62-B302-56A289E00998
var IID_IModelKeyReference = syscall.GUID{0x5253DCF8, 0x5AFF, 0x4C62,
	[8]byte{0xB3, 0x02, 0x56, 0xA2, 0x89, 0xE0, 0x09, 0x98}}

type IModelKeyReferenceInterface interface {
	IUnknownInterface
	GetKeyName(keyName *BSTR) HRESULT
	GetOriginalObject(originalObject **IModelObject) HRESULT
	GetContextObject(containingObject **IModelObject) HRESULT
	GetKey(object **IModelObject, metadata **IKeyStore) HRESULT
	GetKeyValue(object **IModelObject, metadata **IKeyStore) HRESULT
	SetKey(object *IModelObject, metadata *IKeyStore) HRESULT
	SetKeyValue(object *IModelObject) HRESULT
}

type IModelKeyReferenceVtbl struct {
	IUnknownVtbl
	GetKeyName        uintptr
	GetOriginalObject uintptr
	GetContextObject  uintptr
	GetKey            uintptr
	GetKeyValue       uintptr
	SetKey            uintptr
	SetKeyValue       uintptr
}

type IModelKeyReference struct {
	IUnknown
}

func (this *IModelKeyReference) Vtbl() *IModelKeyReferenceVtbl {
	return (*IModelKeyReferenceVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IModelKeyReference) GetKeyName(keyName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKeyName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(keyName)))
	return HRESULT(ret)
}

func (this *IModelKeyReference) GetOriginalObject(originalObject **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOriginalObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(originalObject)))
	return HRESULT(ret)
}

func (this *IModelKeyReference) GetContextObject(containingObject **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(containingObject)))
	return HRESULT(ret)
}

func (this *IModelKeyReference) GetKey(object **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKey, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IModelKeyReference) GetKeyValue(object **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKeyValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IModelKeyReference) SetKey(object *IModelObject, metadata *IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKey, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IModelKeyReference) SetKeyValue(object *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKeyValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

// 5A0C63D9-0526-42B8-960C-9516A3254C85
var IID_IModelPropertyAccessor = syscall.GUID{0x5A0C63D9, 0x0526, 0x42B8,
	[8]byte{0x96, 0x0C, 0x95, 0x16, 0xA3, 0x25, 0x4C, 0x85}}

type IModelPropertyAccessorInterface interface {
	IUnknownInterface
	GetValue(key PWSTR, contextObject *IModelObject, value **IModelObject) HRESULT
	SetValue(key PWSTR, contextObject *IModelObject, value *IModelObject) HRESULT
}

type IModelPropertyAccessorVtbl struct {
	IUnknownVtbl
	GetValue uintptr
	SetValue uintptr
}

type IModelPropertyAccessor struct {
	IUnknown
}

func (this *IModelPropertyAccessor) Vtbl() *IModelPropertyAccessorVtbl {
	return (*IModelPropertyAccessorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IModelPropertyAccessor) GetValue(key PWSTR, contextObject *IModelObject, value **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(value)))
	return HRESULT(ret)
}

func (this *IModelPropertyAccessor) SetValue(key PWSTR, contextObject *IModelObject, value *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(value)))
	return HRESULT(ret)
}

// 80600C1F-B90B-4896-82AD-1C00207909E8
var IID_IModelMethod = syscall.GUID{0x80600C1F, 0xB90B, 0x4896,
	[8]byte{0x82, 0xAD, 0x1C, 0x00, 0x20, 0x79, 0x09, 0xE8}}

type IModelMethodInterface interface {
	IUnknownInterface
	Call(pContextObject *IModelObject, argCount uint64, ppArguments **IModelObject, ppResult **IModelObject, ppMetadata **IKeyStore) HRESULT
}

type IModelMethodVtbl struct {
	IUnknownVtbl
	Call uintptr
}

type IModelMethod struct {
	IUnknown
}

func (this *IModelMethod) Vtbl() *IModelMethodVtbl {
	return (*IModelMethodVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IModelMethod) Call(pContextObject *IModelObject, argCount uint64, ppArguments **IModelObject, ppResult **IModelObject, ppMetadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Call, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pContextObject)), uintptr(argCount), uintptr(unsafe.Pointer(ppArguments)), uintptr(unsafe.Pointer(ppResult)), uintptr(unsafe.Pointer(ppMetadata)))
	return HRESULT(ret)
}

// 345FA92E-5E00-4319-9CAE-971F7601CDCF
var IID_IKeyEnumerator = syscall.GUID{0x345FA92E, 0x5E00, 0x4319,
	[8]byte{0x9C, 0xAE, 0x97, 0x1F, 0x76, 0x01, 0xCD, 0xCF}}

type IKeyEnumeratorInterface interface {
	IUnknownInterface
	Reset() HRESULT
	GetNext(key *BSTR, value **IModelObject, metadata **IKeyStore) HRESULT
}

type IKeyEnumeratorVtbl struct {
	IUnknownVtbl
	Reset   uintptr
	GetNext uintptr
}

type IKeyEnumerator struct {
	IUnknown
}

func (this *IKeyEnumerator) Vtbl() *IKeyEnumeratorVtbl {
	return (*IKeyEnumeratorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IKeyEnumerator) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IKeyEnumerator) GetNext(key *BSTR, value **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(value)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

// E13613F9-3A3C-40B5-8F48-1E5EBFB9B21B
var IID_IRawEnumerator = syscall.GUID{0xE13613F9, 0x3A3C, 0x40B5,
	[8]byte{0x8F, 0x48, 0x1E, 0x5E, 0xBF, 0xB9, 0xB2, 0x1B}}

type IRawEnumeratorInterface interface {
	IUnknownInterface
	Reset() HRESULT
	GetNext(name *BSTR, kind *SymbolKind, value **IModelObject) HRESULT
}

type IRawEnumeratorVtbl struct {
	IUnknownVtbl
	Reset   uintptr
	GetNext uintptr
}

type IRawEnumerator struct {
	IUnknown
}

func (this *IRawEnumerator) Vtbl() *IRawEnumeratorVtbl {
	return (*IRawEnumeratorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IRawEnumerator) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IRawEnumerator) GetNext(name *BSTR, kind *SymbolKind, value **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(name)), uintptr(unsafe.Pointer(kind)), uintptr(unsafe.Pointer(value)))
	return HRESULT(ret)
}

// FCB98D1D-1114-4FBF-B24C-EFFCB5DEF0D3
var IID_IDataModelConcept = syscall.GUID{0xFCB98D1D, 0x1114, 0x4FBF,
	[8]byte{0xB2, 0x4C, 0xEF, 0xFC, 0xB5, 0xDE, 0xF0, 0xD3}}

type IDataModelConceptInterface interface {
	IUnknownInterface
	InitializeObject(modelObject *IModelObject, matchingTypeSignature *IDebugHostTypeSignature, wildcardMatches *IDebugHostSymbolEnumerator) HRESULT
	GetName(modelName *BSTR) HRESULT
}

type IDataModelConceptVtbl struct {
	IUnknownVtbl
	InitializeObject uintptr
	GetName          uintptr
}

type IDataModelConcept struct {
	IUnknown
}

func (this *IDataModelConcept) Vtbl() *IDataModelConceptVtbl {
	return (*IDataModelConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelConcept) InitializeObject(modelObject *IModelObject, matchingTypeSignature *IDebugHostTypeSignature, wildcardMatches *IDebugHostSymbolEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InitializeObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(modelObject)), uintptr(unsafe.Pointer(matchingTypeSignature)), uintptr(unsafe.Pointer(wildcardMatches)))
	return HRESULT(ret)
}

func (this *IDataModelConcept) GetName(modelName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(modelName)))
	return HRESULT(ret)
}

// D28E8D70-6C00-4205-940D-501016601EA3
var IID_IStringDisplayableConcept = syscall.GUID{0xD28E8D70, 0x6C00, 0x4205,
	[8]byte{0x94, 0x0D, 0x50, 0x10, 0x16, 0x60, 0x1E, 0xA3}}

type IStringDisplayableConceptInterface interface {
	IUnknownInterface
	ToDisplayString(contextObject *IModelObject, metadata *IKeyStore, displayString *BSTR) HRESULT
}

type IStringDisplayableConceptVtbl struct {
	IUnknownVtbl
	ToDisplayString uintptr
}

type IStringDisplayableConcept struct {
	IUnknown
}

func (this *IStringDisplayableConcept) Vtbl() *IStringDisplayableConceptVtbl {
	return (*IStringDisplayableConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IStringDisplayableConcept) ToDisplayString(contextObject *IModelObject, metadata *IKeyStore, displayString *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ToDisplayString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(metadata)), uintptr(unsafe.Pointer(displayString)))
	return HRESULT(ret)
}

// C7371568-5C78-4A00-A4AB-6EF8823184CB
var IID_ICodeAddressConcept = syscall.GUID{0xC7371568, 0x5C78, 0x4A00,
	[8]byte{0xA4, 0xAB, 0x6E, 0xF8, 0x82, 0x31, 0x84, 0xCB}}

type ICodeAddressConceptInterface interface {
	IUnknownInterface
	GetContainingSymbol(pContextObject *IModelObject, ppSymbol **IDebugHostSymbol) HRESULT
}

type ICodeAddressConceptVtbl struct {
	IUnknownVtbl
	GetContainingSymbol uintptr
}

type ICodeAddressConcept struct {
	IUnknown
}

func (this *ICodeAddressConcept) Vtbl() *ICodeAddressConceptVtbl {
	return (*ICodeAddressConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *ICodeAddressConcept) GetContainingSymbol(pContextObject *IModelObject, ppSymbol **IDebugHostSymbol) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContainingSymbol, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pContextObject)), uintptr(unsafe.Pointer(ppSymbol)))
	return HRESULT(ret)
}

// E4622136-927D-4490-874F-581F3E4E3688
var IID_IModelIterator = syscall.GUID{0xE4622136, 0x927D, 0x4490,
	[8]byte{0x87, 0x4F, 0x58, 0x1F, 0x3E, 0x4E, 0x36, 0x88}}

type IModelIteratorInterface interface {
	IUnknownInterface
	Reset() HRESULT
	GetNext(object **IModelObject, dimensions uint64, indexers **IModelObject, metadata **IKeyStore) HRESULT
}

type IModelIteratorVtbl struct {
	IUnknownVtbl
	Reset   uintptr
	GetNext uintptr
}

type IModelIterator struct {
	IUnknown
}

func (this *IModelIterator) Vtbl() *IModelIteratorVtbl {
	return (*IModelIteratorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IModelIterator) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IModelIterator) GetNext(object **IModelObject, dimensions uint64, indexers **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(object)), uintptr(dimensions), uintptr(unsafe.Pointer(indexers)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

// F5D49D0C-0B02-4301-9C9B-B3A6037628F3
var IID_IIterableConcept = syscall.GUID{0xF5D49D0C, 0x0B02, 0x4301,
	[8]byte{0x9C, 0x9B, 0xB3, 0xA6, 0x03, 0x76, 0x28, 0xF3}}

type IIterableConceptInterface interface {
	IUnknownInterface
	GetDefaultIndexDimensionality(contextObject *IModelObject, dimensionality *uint64) HRESULT
	GetIterator(contextObject *IModelObject, iterator **IModelIterator) HRESULT
}

type IIterableConceptVtbl struct {
	IUnknownVtbl
	GetDefaultIndexDimensionality uintptr
	GetIterator                   uintptr
}

type IIterableConcept struct {
	IUnknown
}

func (this *IIterableConcept) Vtbl() *IIterableConceptVtbl {
	return (*IIterableConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IIterableConcept) GetDefaultIndexDimensionality(contextObject *IModelObject, dimensionality *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDefaultIndexDimensionality, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(dimensionality)))
	return HRESULT(ret)
}

func (this *IIterableConcept) GetIterator(contextObject *IModelObject, iterator **IModelIterator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIterator, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(iterator)))
	return HRESULT(ret)
}

// D1FAD99F-3F53-4457-850C-8051DF2D3FB5
var IID_IIndexableConcept = syscall.GUID{0xD1FAD99F, 0x3F53, 0x4457,
	[8]byte{0x85, 0x0C, 0x80, 0x51, 0xDF, 0x2D, 0x3F, 0xB5}}

type IIndexableConceptInterface interface {
	IUnknownInterface
	GetDimensionality(contextObject *IModelObject, dimensionality *uint64) HRESULT
	GetAt(contextObject *IModelObject, indexerCount uint64, indexers **IModelObject, object **IModelObject, metadata **IKeyStore) HRESULT
	SetAt(contextObject *IModelObject, indexerCount uint64, indexers **IModelObject, value *IModelObject) HRESULT
}

type IIndexableConceptVtbl struct {
	IUnknownVtbl
	GetDimensionality uintptr
	GetAt             uintptr
	SetAt             uintptr
}

type IIndexableConcept struct {
	IUnknown
}

func (this *IIndexableConcept) Vtbl() *IIndexableConceptVtbl {
	return (*IIndexableConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IIndexableConcept) GetDimensionality(contextObject *IModelObject, dimensionality *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDimensionality, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(dimensionality)))
	return HRESULT(ret)
}

func (this *IIndexableConcept) GetAt(contextObject *IModelObject, indexerCount uint64, indexers **IModelObject, object **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetAt, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(indexerCount), uintptr(unsafe.Pointer(indexers)), uintptr(unsafe.Pointer(object)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IIndexableConcept) SetAt(contextObject *IModelObject, indexerCount uint64, indexers **IModelObject, value *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetAt, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(indexerCount), uintptr(unsafe.Pointer(indexers)), uintptr(unsafe.Pointer(value)))
	return HRESULT(ret)
}

// 9D6C1D7B-A76F-4618-8068-5F76BD9A4E8A
var IID_IPreferredRuntimeTypeConcept = syscall.GUID{0x9D6C1D7B, 0xA76F, 0x4618,
	[8]byte{0x80, 0x68, 0x5F, 0x76, 0xBD, 0x9A, 0x4E, 0x8A}}

type IPreferredRuntimeTypeConceptInterface interface {
	IUnknownInterface
	CastToPreferredRuntimeType(contextObject *IModelObject, object **IModelObject) HRESULT
}

type IPreferredRuntimeTypeConceptVtbl struct {
	IUnknownVtbl
	CastToPreferredRuntimeType uintptr
}

type IPreferredRuntimeTypeConcept struct {
	IUnknown
}

func (this *IPreferredRuntimeTypeConcept) Vtbl() *IPreferredRuntimeTypeConceptVtbl {
	return (*IPreferredRuntimeTypeConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IPreferredRuntimeTypeConcept) CastToPreferredRuntimeType(contextObject *IModelObject, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CastToPreferredRuntimeType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

// B8C74943-6B2C-4EEB-B5C5-35D378A6D99D
var IID_IDebugHost = syscall.GUID{0xB8C74943, 0x6B2C, 0x4EEB,
	[8]byte{0xB5, 0xC5, 0x35, 0xD3, 0x78, 0xA6, 0xD9, 0x9D}}

type IDebugHostInterface interface {
	IUnknownInterface
	GetHostDefinedInterface(hostUnk **IUnknown) HRESULT
	GetCurrentContext(context **IDebugHostContext) HRESULT
	GetDefaultMetadata(defaultMetadataStore **IKeyStore) HRESULT
}

type IDebugHostVtbl struct {
	IUnknownVtbl
	GetHostDefinedInterface uintptr
	GetCurrentContext       uintptr
	GetDefaultMetadata      uintptr
}

type IDebugHost struct {
	IUnknown
}

func (this *IDebugHost) Vtbl() *IDebugHostVtbl {
	return (*IDebugHostVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHost) GetHostDefinedInterface(hostUnk **IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetHostDefinedInterface, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(hostUnk)))
	return HRESULT(ret)
}

func (this *IDebugHost) GetCurrentContext(context **IDebugHostContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)))
	return HRESULT(ret)
}

func (this *IDebugHost) GetDefaultMetadata(defaultMetadataStore **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDefaultMetadata, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(defaultMetadataStore)))
	return HRESULT(ret)
}

// A68C70D8-5EC0-46E5-B775-3134A48EA2E3
var IID_IDebugHostContext = syscall.GUID{0xA68C70D8, 0x5EC0, 0x46E5,
	[8]byte{0xB7, 0x75, 0x31, 0x34, 0xA4, 0x8E, 0xA2, 0xE3}}

type IDebugHostContextInterface interface {
	IUnknownInterface
	IsEqualTo(pContext *IDebugHostContext, pIsEqual *bool) HRESULT
}

type IDebugHostContextVtbl struct {
	IUnknownVtbl
	IsEqualTo uintptr
}

type IDebugHostContext struct {
	IUnknown
}

func (this *IDebugHostContext) Vtbl() *IDebugHostContextVtbl {
	return (*IDebugHostContextVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostContext) IsEqualTo(pContext *IDebugHostContext, pIsEqual *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsEqualTo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pContext)), uintptr(unsafe.Pointer(pIsEqual)))
	return HRESULT(ret)
}

// C8FF0F0B-FCE9-467E-8BB3-5D69EF109C00
var IID_IDebugHostErrorSink = syscall.GUID{0xC8FF0F0B, 0xFCE9, 0x467E,
	[8]byte{0x8B, 0xB3, 0x5D, 0x69, 0xEF, 0x10, 0x9C, 0x00}}

type IDebugHostErrorSinkInterface interface {
	IUnknownInterface
	ReportError(errClass ErrorClass, hrError HRESULT, message PWSTR) HRESULT
}

type IDebugHostErrorSinkVtbl struct {
	IUnknownVtbl
	ReportError uintptr
}

type IDebugHostErrorSink struct {
	IUnknown
}

func (this *IDebugHostErrorSink) Vtbl() *IDebugHostErrorSinkVtbl {
	return (*IDebugHostErrorSinkVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostErrorSink) ReportError(errClass ErrorClass, hrError HRESULT, message PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReportError, uintptr(unsafe.Pointer(this)), uintptr(errClass), uintptr(hrError), uintptr(unsafe.Pointer(message)))
	return HRESULT(ret)
}

// 0F819103-87DE-4E96-8277-E05CD441FB22
var IID_IDebugHostSymbol = syscall.GUID{0x0F819103, 0x87DE, 0x4E96,
	[8]byte{0x82, 0x77, 0xE0, 0x5C, 0xD4, 0x41, 0xFB, 0x22}}

type IDebugHostSymbolInterface interface {
	IUnknownInterface
	GetContext(context **IDebugHostContext) HRESULT
	EnumerateChildren(kind SymbolKind, name PWSTR, ppEnum **IDebugHostSymbolEnumerator) HRESULT
	GetSymbolKind(kind *SymbolKind) HRESULT
	GetName(symbolName *BSTR) HRESULT
	GetType(type_ **IDebugHostType) HRESULT
	GetContainingModule(containingModule **IDebugHostModule) HRESULT
	CompareAgainst(pComparisonSymbol *IDebugHostSymbol, comparisonFlags uint32, pMatches *bool) HRESULT
}

type IDebugHostSymbolVtbl struct {
	IUnknownVtbl
	GetContext          uintptr
	EnumerateChildren   uintptr
	GetSymbolKind       uintptr
	GetName             uintptr
	GetType             uintptr
	GetContainingModule uintptr
	CompareAgainst      uintptr
}

type IDebugHostSymbol struct {
	IUnknown
}

func (this *IDebugHostSymbol) Vtbl() *IDebugHostSymbolVtbl {
	return (*IDebugHostSymbolVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostSymbol) GetContext(context **IDebugHostContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbol) EnumerateChildren(kind SymbolKind, name PWSTR, ppEnum **IDebugHostSymbolEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateChildren, uintptr(unsafe.Pointer(this)), uintptr(kind), uintptr(unsafe.Pointer(name)), uintptr(unsafe.Pointer(ppEnum)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbol) GetSymbolKind(kind *SymbolKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSymbolKind, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(kind)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbol) GetName(symbolName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(symbolName)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbol) GetType(type_ **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(type_)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbol) GetContainingModule(containingModule **IDebugHostModule) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContainingModule, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(containingModule)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbol) CompareAgainst(pComparisonSymbol *IDebugHostSymbol, comparisonFlags uint32, pMatches *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CompareAgainst, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pComparisonSymbol)), uintptr(comparisonFlags), uintptr(unsafe.Pointer(pMatches)))
	return HRESULT(ret)
}

// 28D96C86-10A3-4976-B14E-EAEF4790AA1F
var IID_IDebugHostSymbolEnumerator = syscall.GUID{0x28D96C86, 0x10A3, 0x4976,
	[8]byte{0xB1, 0x4E, 0xEA, 0xEF, 0x47, 0x90, 0xAA, 0x1F}}

type IDebugHostSymbolEnumeratorInterface interface {
	IUnknownInterface
	Reset() HRESULT
	GetNext(symbol **IDebugHostSymbol) HRESULT
}

type IDebugHostSymbolEnumeratorVtbl struct {
	IUnknownVtbl
	Reset   uintptr
	GetNext uintptr
}

type IDebugHostSymbolEnumerator struct {
	IUnknown
}

func (this *IDebugHostSymbolEnumerator) Vtbl() *IDebugHostSymbolEnumeratorVtbl {
	return (*IDebugHostSymbolEnumeratorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostSymbolEnumerator) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbolEnumerator) GetNext(symbol **IDebugHostSymbol) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(symbol)))
	return HRESULT(ret)
}

// C9BA3E18-D070-4378-BBD0-34613B346E1E
var IID_IDebugHostModule = syscall.GUID{0xC9BA3E18, 0xD070, 0x4378,
	[8]byte{0xBB, 0xD0, 0x34, 0x61, 0x3B, 0x34, 0x6E, 0x1E}}

type IDebugHostModuleInterface interface {
	IDebugHostSymbolInterface
	GetImageName(allowPath byte, imageName *BSTR) HRESULT
	GetBaseLocation(moduleBaseLocation *Location) HRESULT
	GetVersion(fileVersion *uint64, productVersion *uint64) HRESULT
	FindTypeByName(typeName PWSTR, type_ **IDebugHostType) HRESULT
	FindSymbolByRVA(rva uint64, symbol **IDebugHostSymbol) HRESULT
	FindSymbolByName(symbolName PWSTR, symbol **IDebugHostSymbol) HRESULT
}

type IDebugHostModuleVtbl struct {
	IDebugHostSymbolVtbl
	GetImageName     uintptr
	GetBaseLocation  uintptr
	GetVersion       uintptr
	FindTypeByName   uintptr
	FindSymbolByRVA  uintptr
	FindSymbolByName uintptr
}

type IDebugHostModule struct {
	IDebugHostSymbol
}

func (this *IDebugHostModule) Vtbl() *IDebugHostModuleVtbl {
	return (*IDebugHostModuleVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostModule) GetImageName(allowPath byte, imageName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetImageName, uintptr(unsafe.Pointer(this)), uintptr(allowPath), uintptr(unsafe.Pointer(imageName)))
	return HRESULT(ret)
}

func (this *IDebugHostModule) GetBaseLocation(moduleBaseLocation *Location) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBaseLocation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(moduleBaseLocation)))
	return HRESULT(ret)
}

func (this *IDebugHostModule) GetVersion(fileVersion *uint64, productVersion *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetVersion, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(fileVersion)), uintptr(unsafe.Pointer(productVersion)))
	return HRESULT(ret)
}

func (this *IDebugHostModule) FindTypeByName(typeName PWSTR, type_ **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindTypeByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(typeName)), uintptr(unsafe.Pointer(type_)))
	return HRESULT(ret)
}

func (this *IDebugHostModule) FindSymbolByRVA(rva uint64, symbol **IDebugHostSymbol) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSymbolByRVA, uintptr(unsafe.Pointer(this)), uintptr(rva), uintptr(unsafe.Pointer(symbol)))
	return HRESULT(ret)
}

func (this *IDebugHostModule) FindSymbolByName(symbolName PWSTR, symbol **IDebugHostSymbol) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindSymbolByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(symbolName)), uintptr(unsafe.Pointer(symbol)))
	return HRESULT(ret)
}

// 3AADC353-2B14-4ABB-9893-5E03458E07EE
var IID_IDebugHostType = syscall.GUID{0x3AADC353, 0x2B14, 0x4ABB,
	[8]byte{0x98, 0x93, 0x5E, 0x03, 0x45, 0x8E, 0x07, 0xEE}}

type IDebugHostTypeInterface interface {
	IDebugHostSymbolInterface
	GetTypeKind(kind *TypeKind) HRESULT
	GetSize(size *uint64) HRESULT
	GetBaseType(baseType **IDebugHostType) HRESULT
	GetHashCode(hashCode *uint32) HRESULT
	GetIntrinsicType(intrinsicKind *IntrinsicKind, carrierType *uint16) HRESULT
	GetBitField(lsbOfField *uint32, lengthOfField *uint32) HRESULT
	GetPointerKind(pointerKind *PointerKind) HRESULT
	GetMemberType(memberType **IDebugHostType) HRESULT
	CreatePointerTo(kind PointerKind, newType **IDebugHostType) HRESULT
	GetArrayDimensionality(arrayDimensionality *uint64) HRESULT
	GetArrayDimensions(dimensions uint64, pDimensions *ArrayDimension) HRESULT
	CreateArrayOf(dimensions uint64, pDimensions *ArrayDimension, newType **IDebugHostType) HRESULT
	GetFunctionCallingConvention(conventionKind *CallingConventionKind) HRESULT
	GetFunctionReturnType(returnType **IDebugHostType) HRESULT
	GetFunctionParameterTypeCount(count *uint64) HRESULT
	GetFunctionParameterTypeAt(i uint64, parameterType **IDebugHostType) HRESULT
	IsGeneric(isGeneric *bool) HRESULT
	GetGenericArgumentCount(argCount *uint64) HRESULT
	GetGenericArgumentAt(i uint64, argument **IDebugHostSymbol) HRESULT
}

type IDebugHostTypeVtbl struct {
	IDebugHostSymbolVtbl
	GetTypeKind                   uintptr
	GetSize                       uintptr
	GetBaseType                   uintptr
	GetHashCode                   uintptr
	GetIntrinsicType              uintptr
	GetBitField                   uintptr
	GetPointerKind                uintptr
	GetMemberType                 uintptr
	CreatePointerTo               uintptr
	GetArrayDimensionality        uintptr
	GetArrayDimensions            uintptr
	CreateArrayOf                 uintptr
	GetFunctionCallingConvention  uintptr
	GetFunctionReturnType         uintptr
	GetFunctionParameterTypeCount uintptr
	GetFunctionParameterTypeAt    uintptr
	IsGeneric                     uintptr
	GetGenericArgumentCount       uintptr
	GetGenericArgumentAt          uintptr
}

type IDebugHostType struct {
	IDebugHostSymbol
}

func (this *IDebugHostType) Vtbl() *IDebugHostTypeVtbl {
	return (*IDebugHostTypeVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostType) GetTypeKind(kind *TypeKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypeKind, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(kind)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetSize(size *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(size)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetBaseType(baseType **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBaseType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(baseType)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetHashCode(hashCode *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetHashCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(hashCode)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetIntrinsicType(intrinsicKind *IntrinsicKind, carrierType *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIntrinsicType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(intrinsicKind)), uintptr(unsafe.Pointer(carrierType)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetBitField(lsbOfField *uint32, lengthOfField *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBitField, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(lsbOfField)), uintptr(unsafe.Pointer(lengthOfField)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetPointerKind(pointerKind *PointerKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPointerKind, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pointerKind)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetMemberType(memberType **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetMemberType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(memberType)))
	return HRESULT(ret)
}

func (this *IDebugHostType) CreatePointerTo(kind PointerKind, newType **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreatePointerTo, uintptr(unsafe.Pointer(this)), uintptr(kind), uintptr(unsafe.Pointer(newType)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetArrayDimensionality(arrayDimensionality *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetArrayDimensionality, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(arrayDimensionality)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetArrayDimensions(dimensions uint64, pDimensions *ArrayDimension) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetArrayDimensions, uintptr(unsafe.Pointer(this)), uintptr(dimensions), uintptr(unsafe.Pointer(pDimensions)))
	return HRESULT(ret)
}

func (this *IDebugHostType) CreateArrayOf(dimensions uint64, pDimensions *ArrayDimension, newType **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateArrayOf, uintptr(unsafe.Pointer(this)), uintptr(dimensions), uintptr(unsafe.Pointer(pDimensions)), uintptr(unsafe.Pointer(newType)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetFunctionCallingConvention(conventionKind *CallingConventionKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFunctionCallingConvention, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(conventionKind)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetFunctionReturnType(returnType **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFunctionReturnType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(returnType)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetFunctionParameterTypeCount(count *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFunctionParameterTypeCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(count)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetFunctionParameterTypeAt(i uint64, parameterType **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFunctionParameterTypeAt, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(unsafe.Pointer(parameterType)))
	return HRESULT(ret)
}

func (this *IDebugHostType) IsGeneric(isGeneric *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsGeneric, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(isGeneric)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetGenericArgumentCount(argCount *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetGenericArgumentCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(argCount)))
	return HRESULT(ret)
}

func (this *IDebugHostType) GetGenericArgumentAt(i uint64, argument **IDebugHostSymbol) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetGenericArgumentAt, uintptr(unsafe.Pointer(this)), uintptr(i), uintptr(unsafe.Pointer(argument)))
	return HRESULT(ret)
}

// 62787EDC-FA76-4690-BD71-5E8C3E2937EC
var IID_IDebugHostConstant = syscall.GUID{0x62787EDC, 0xFA76, 0x4690,
	[8]byte{0xBD, 0x71, 0x5E, 0x8C, 0x3E, 0x29, 0x37, 0xEC}}

type IDebugHostConstantInterface interface {
	IDebugHostSymbolInterface
	GetValue(value *VARIANT) HRESULT
}

type IDebugHostConstantVtbl struct {
	IDebugHostSymbolVtbl
	GetValue uintptr
}

type IDebugHostConstant struct {
	IDebugHostSymbol
}

func (this *IDebugHostConstant) Vtbl() *IDebugHostConstantVtbl {
	return (*IDebugHostConstantVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostConstant) GetValue(value *VARIANT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(value)))
	return HRESULT(ret)
}

// E06F6495-16BC-4CC9-B11D-2A6B23FA72F3
var IID_IDebugHostField = syscall.GUID{0xE06F6495, 0x16BC, 0x4CC9,
	[8]byte{0xB1, 0x1D, 0x2A, 0x6B, 0x23, 0xFA, 0x72, 0xF3}}

type IDebugHostFieldInterface interface {
	IDebugHostSymbolInterface
	GetLocationKind(locationKind *LocationKind) HRESULT
	GetOffset(offset *uint64) HRESULT
	GetLocation(location *Location) HRESULT
	GetValue(value *VARIANT) HRESULT
}

type IDebugHostFieldVtbl struct {
	IDebugHostSymbolVtbl
	GetLocationKind uintptr
	GetOffset       uintptr
	GetLocation     uintptr
	GetValue        uintptr
}

type IDebugHostField struct {
	IDebugHostSymbol
}

func (this *IDebugHostField) Vtbl() *IDebugHostFieldVtbl {
	return (*IDebugHostFieldVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostField) GetLocationKind(locationKind *LocationKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLocationKind, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(locationKind)))
	return HRESULT(ret)
}

func (this *IDebugHostField) GetOffset(offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(offset)))
	return HRESULT(ret)
}

func (this *IDebugHostField) GetLocation(location *Location) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLocation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(location)))
	return HRESULT(ret)
}

func (this *IDebugHostField) GetValue(value *VARIANT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(value)))
	return HRESULT(ret)
}

// A3D64993-826C-44FA-897D-926F2FE7AD0B
var IID_IDebugHostData = syscall.GUID{0xA3D64993, 0x826C, 0x44FA,
	[8]byte{0x89, 0x7D, 0x92, 0x6F, 0x2F, 0xE7, 0xAD, 0x0B}}

type IDebugHostDataInterface interface {
	IDebugHostSymbolInterface
	GetLocationKind(locationKind *LocationKind) HRESULT
	GetLocation(location *Location) HRESULT
	GetValue(value *VARIANT) HRESULT
}

type IDebugHostDataVtbl struct {
	IDebugHostSymbolVtbl
	GetLocationKind uintptr
	GetLocation     uintptr
	GetValue        uintptr
}

type IDebugHostData struct {
	IDebugHostSymbol
}

func (this *IDebugHostData) Vtbl() *IDebugHostDataVtbl {
	return (*IDebugHostDataVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostData) GetLocationKind(locationKind *LocationKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLocationKind, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(locationKind)))
	return HRESULT(ret)
}

func (this *IDebugHostData) GetLocation(location *Location) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLocation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(location)))
	return HRESULT(ret)
}

func (this *IDebugHostData) GetValue(value *VARIANT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(value)))
	return HRESULT(ret)
}

// 6C597AC9-FB4D-4F6D-9F39-22488539F8F4
var IID_IDebugHostPublic = syscall.GUID{0x6C597AC9, 0xFB4D, 0x4F6D,
	[8]byte{0x9F, 0x39, 0x22, 0x48, 0x85, 0x39, 0xF8, 0xF4}}

type IDebugHostPublicInterface interface {
	IDebugHostSymbolInterface
	GetLocationKind(locationKind *LocationKind) HRESULT
	GetLocation(location *Location) HRESULT
}

type IDebugHostPublicVtbl struct {
	IDebugHostSymbolVtbl
	GetLocationKind uintptr
	GetLocation     uintptr
}

type IDebugHostPublic struct {
	IDebugHostSymbol
}

func (this *IDebugHostPublic) Vtbl() *IDebugHostPublicVtbl {
	return (*IDebugHostPublicVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostPublic) GetLocationKind(locationKind *LocationKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLocationKind, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(locationKind)))
	return HRESULT(ret)
}

func (this *IDebugHostPublic) GetLocation(location *Location) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLocation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(location)))
	return HRESULT(ret)
}

// B94D57D2-390B-40F7-B5B4-B6DB897D974B
var IID_IDebugHostBaseClass = syscall.GUID{0xB94D57D2, 0x390B, 0x40F7,
	[8]byte{0xB5, 0xB4, 0xB6, 0xDB, 0x89, 0x7D, 0x97, 0x4B}}

type IDebugHostBaseClassInterface interface {
	IDebugHostSymbolInterface
	GetOffset(offset *uint64) HRESULT
}

type IDebugHostBaseClassVtbl struct {
	IDebugHostSymbolVtbl
	GetOffset uintptr
}

type IDebugHostBaseClass struct {
	IDebugHostSymbol
}

func (this *IDebugHostBaseClass) Vtbl() *IDebugHostBaseClassVtbl {
	return (*IDebugHostBaseClassVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostBaseClass) GetOffset(offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOffset, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(offset)))
	return HRESULT(ret)
}

// 854FD751-C2E1-4EB2-B525-6619CB97A588
var IID_IDebugHostSymbols = syscall.GUID{0x854FD751, 0xC2E1, 0x4EB2,
	[8]byte{0xB5, 0x25, 0x66, 0x19, 0xCB, 0x97, 0xA5, 0x88}}

type IDebugHostSymbolsInterface interface {
	IUnknownInterface
	CreateModuleSignature(pwszModuleName PWSTR, pwszMinVersion PWSTR, pwszMaxVersion PWSTR, ppModuleSignature **IDebugHostModuleSignature) HRESULT
	CreateTypeSignature(signatureSpecification PWSTR, module *IDebugHostModule, typeSignature **IDebugHostTypeSignature) HRESULT
	CreateTypeSignatureForModuleRange(signatureSpecification PWSTR, moduleName PWSTR, minVersion PWSTR, maxVersion PWSTR, typeSignature **IDebugHostTypeSignature) HRESULT
	EnumerateModules(context *IDebugHostContext, moduleEnum **IDebugHostSymbolEnumerator) HRESULT
	FindModuleByName(context *IDebugHostContext, moduleName PWSTR, module **IDebugHostModule) HRESULT
	FindModuleByLocation(context *IDebugHostContext, moduleLocation Location, module **IDebugHostModule) HRESULT
	GetMostDerivedObject(pContext *IDebugHostContext, location Location, objectType *IDebugHostType, derivedLocation *Location, derivedType **IDebugHostType) HRESULT
}

type IDebugHostSymbolsVtbl struct {
	IUnknownVtbl
	CreateModuleSignature             uintptr
	CreateTypeSignature               uintptr
	CreateTypeSignatureForModuleRange uintptr
	EnumerateModules                  uintptr
	FindModuleByName                  uintptr
	FindModuleByLocation              uintptr
	GetMostDerivedObject              uintptr
}

type IDebugHostSymbols struct {
	IUnknown
}

func (this *IDebugHostSymbols) Vtbl() *IDebugHostSymbolsVtbl {
	return (*IDebugHostSymbolsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostSymbols) CreateModuleSignature(pwszModuleName PWSTR, pwszMinVersion PWSTR, pwszMaxVersion PWSTR, ppModuleSignature **IDebugHostModuleSignature) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateModuleSignature, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pwszModuleName)), uintptr(unsafe.Pointer(pwszMinVersion)), uintptr(unsafe.Pointer(pwszMaxVersion)), uintptr(unsafe.Pointer(ppModuleSignature)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbols) CreateTypeSignature(signatureSpecification PWSTR, module *IDebugHostModule, typeSignature **IDebugHostTypeSignature) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateTypeSignature, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(signatureSpecification)), uintptr(unsafe.Pointer(module)), uintptr(unsafe.Pointer(typeSignature)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbols) CreateTypeSignatureForModuleRange(signatureSpecification PWSTR, moduleName PWSTR, minVersion PWSTR, maxVersion PWSTR, typeSignature **IDebugHostTypeSignature) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateTypeSignatureForModuleRange, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(signatureSpecification)), uintptr(unsafe.Pointer(moduleName)), uintptr(unsafe.Pointer(minVersion)), uintptr(unsafe.Pointer(maxVersion)), uintptr(unsafe.Pointer(typeSignature)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbols) EnumerateModules(context *IDebugHostContext, moduleEnum **IDebugHostSymbolEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateModules, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(moduleEnum)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbols) FindModuleByName(context *IDebugHostContext, moduleName PWSTR, module **IDebugHostModule) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindModuleByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(moduleName)), uintptr(unsafe.Pointer(module)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbols) FindModuleByLocation(context *IDebugHostContext, moduleLocation Location, module **IDebugHostModule) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindModuleByLocation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(&moduleLocation)), uintptr(unsafe.Pointer(module)))
	return HRESULT(ret)
}

func (this *IDebugHostSymbols) GetMostDerivedObject(pContext *IDebugHostContext, location Location, objectType *IDebugHostType, derivedLocation *Location, derivedType **IDebugHostType) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetMostDerivedObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pContext)), uintptr(unsafe.Pointer(&location)), uintptr(unsafe.Pointer(objectType)), uintptr(unsafe.Pointer(derivedLocation)), uintptr(unsafe.Pointer(derivedType)))
	return HRESULT(ret)
}

// 212149C9-9183-4A3E-B00E-4FD1DC95339B
var IID_IDebugHostMemory = syscall.GUID{0x212149C9, 0x9183, 0x4A3E,
	[8]byte{0xB0, 0x0E, 0x4F, 0xD1, 0xDC, 0x95, 0x33, 0x9B}}

type IDebugHostMemoryInterface interface {
	IUnknownInterface
	ReadBytes(context *IDebugHostContext, location Location, buffer unsafe.Pointer, bufferSize uint64, bytesRead *uint64) HRESULT
	WriteBytes(context *IDebugHostContext, location Location, buffer unsafe.Pointer, bufferSize uint64, bytesWritten *uint64) HRESULT
	ReadPointers(context *IDebugHostContext, location Location, count uint64, pointers *uint64) HRESULT
	WritePointers(context *IDebugHostContext, location Location, count uint64, pointers *uint64) HRESULT
	GetDisplayStringForLocation(context *IDebugHostContext, location Location, verbose byte, locationName *BSTR) HRESULT
}

type IDebugHostMemoryVtbl struct {
	IUnknownVtbl
	ReadBytes                   uintptr
	WriteBytes                  uintptr
	ReadPointers                uintptr
	WritePointers               uintptr
	GetDisplayStringForLocation uintptr
}

type IDebugHostMemory struct {
	IUnknown
}

func (this *IDebugHostMemory) Vtbl() *IDebugHostMemoryVtbl {
	return (*IDebugHostMemoryVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostMemory) ReadBytes(context *IDebugHostContext, location Location, buffer unsafe.Pointer, bufferSize uint64, bytesRead *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBytes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(&location)), uintptr(buffer), uintptr(bufferSize), uintptr(unsafe.Pointer(bytesRead)))
	return HRESULT(ret)
}

func (this *IDebugHostMemory) WriteBytes(context *IDebugHostContext, location Location, buffer unsafe.Pointer, bufferSize uint64, bytesWritten *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteBytes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(&location)), uintptr(buffer), uintptr(bufferSize), uintptr(unsafe.Pointer(bytesWritten)))
	return HRESULT(ret)
}

func (this *IDebugHostMemory) ReadPointers(context *IDebugHostContext, location Location, count uint64, pointers *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadPointers, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(&location)), uintptr(count), uintptr(unsafe.Pointer(pointers)))
	return HRESULT(ret)
}

func (this *IDebugHostMemory) WritePointers(context *IDebugHostContext, location Location, count uint64, pointers *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WritePointers, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(&location)), uintptr(count), uintptr(unsafe.Pointer(pointers)))
	return HRESULT(ret)
}

func (this *IDebugHostMemory) GetDisplayStringForLocation(context *IDebugHostContext, location Location, verbose byte, locationName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDisplayStringForLocation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(&location)), uintptr(verbose), uintptr(unsafe.Pointer(locationName)))
	return HRESULT(ret)
}

// 0FEF9A21-577E-4997-AC7B-1C4883241D99
var IID_IDebugHostEvaluator = syscall.GUID{0x0FEF9A21, 0x577E, 0x4997,
	[8]byte{0xAC, 0x7B, 0x1C, 0x48, 0x83, 0x24, 0x1D, 0x99}}

type IDebugHostEvaluatorInterface interface {
	IUnknownInterface
	EvaluateExpression(context *IDebugHostContext, expression PWSTR, bindingContext *IModelObject, result **IModelObject, metadata **IKeyStore) HRESULT
	EvaluateExtendedExpression(context *IDebugHostContext, expression PWSTR, bindingContext *IModelObject, result **IModelObject, metadata **IKeyStore) HRESULT
}

type IDebugHostEvaluatorVtbl struct {
	IUnknownVtbl
	EvaluateExpression         uintptr
	EvaluateExtendedExpression uintptr
}

type IDebugHostEvaluator struct {
	IUnknown
}

func (this *IDebugHostEvaluator) Vtbl() *IDebugHostEvaluatorVtbl {
	return (*IDebugHostEvaluatorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostEvaluator) EvaluateExpression(context *IDebugHostContext, expression PWSTR, bindingContext *IModelObject, result **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EvaluateExpression, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(expression)), uintptr(unsafe.Pointer(bindingContext)), uintptr(unsafe.Pointer(result)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IDebugHostEvaluator) EvaluateExtendedExpression(context *IDebugHostContext, expression PWSTR, bindingContext *IModelObject, result **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EvaluateExtendedExpression, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(expression)), uintptr(unsafe.Pointer(bindingContext)), uintptr(unsafe.Pointer(result)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

// 31E53A5A-01EE-4BBB-B899-4B46AE7D595C
var IID_IDebugHostModuleSignature = syscall.GUID{0x31E53A5A, 0x01EE, 0x4BBB,
	[8]byte{0xB8, 0x99, 0x4B, 0x46, 0xAE, 0x7D, 0x59, 0x5C}}

type IDebugHostModuleSignatureInterface interface {
	IUnknownInterface
	IsMatch(pModule *IDebugHostModule, isMatch *bool) HRESULT
}

type IDebugHostModuleSignatureVtbl struct {
	IUnknownVtbl
	IsMatch uintptr
}

type IDebugHostModuleSignature struct {
	IUnknown
}

func (this *IDebugHostModuleSignature) Vtbl() *IDebugHostModuleSignatureVtbl {
	return (*IDebugHostModuleSignatureVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostModuleSignature) IsMatch(pModule *IDebugHostModule, isMatch *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsMatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pModule)), uintptr(unsafe.Pointer(isMatch)))
	return HRESULT(ret)
}

// 3AADC353-2B14-4ABB-9893-5E03458E07EE
var IID_IDebugHostTypeSignature = syscall.GUID{0x3AADC353, 0x2B14, 0x4ABB,
	[8]byte{0x98, 0x93, 0x5E, 0x03, 0x45, 0x8E, 0x07, 0xEE}}

type IDebugHostTypeSignatureInterface interface {
	IUnknownInterface
	GetHashCode(hashCode *uint32) HRESULT
	IsMatch(type_ *IDebugHostType, isMatch *bool, wildcardMatches **IDebugHostSymbolEnumerator) HRESULT
	CompareAgainst(typeSignature *IDebugHostTypeSignature, result *SignatureComparison) HRESULT
}

type IDebugHostTypeSignatureVtbl struct {
	IUnknownVtbl
	GetHashCode    uintptr
	IsMatch        uintptr
	CompareAgainst uintptr
}

type IDebugHostTypeSignature struct {
	IUnknown
}

func (this *IDebugHostTypeSignature) Vtbl() *IDebugHostTypeSignatureVtbl {
	return (*IDebugHostTypeSignatureVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostTypeSignature) GetHashCode(hashCode *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetHashCode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(hashCode)))
	return HRESULT(ret)
}

func (this *IDebugHostTypeSignature) IsMatch(type_ *IDebugHostType, isMatch *bool, wildcardMatches **IDebugHostSymbolEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsMatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(type_)), uintptr(unsafe.Pointer(isMatch)), uintptr(unsafe.Pointer(wildcardMatches)))
	return HRESULT(ret)
}

func (this *IDebugHostTypeSignature) CompareAgainst(typeSignature *IDebugHostTypeSignature, result *SignatureComparison) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CompareAgainst, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(typeSignature)), uintptr(unsafe.Pointer(result)))
	return HRESULT(ret)
}

// 21515B67-6720-4257-8A68-077DC944471C
var IID_IDebugHostSymbol2 = syscall.GUID{0x21515B67, 0x6720, 0x4257,
	[8]byte{0x8A, 0x68, 0x07, 0x7D, 0xC9, 0x44, 0x47, 0x1C}}

type IDebugHostSymbol2Interface interface {
	IDebugHostSymbolInterface
	GetLanguage(pKind *LanguageKind) HRESULT
}

type IDebugHostSymbol2Vtbl struct {
	IDebugHostSymbolVtbl
	GetLanguage uintptr
}

type IDebugHostSymbol2 struct {
	IDebugHostSymbol
}

func (this *IDebugHostSymbol2) Vtbl() *IDebugHostSymbol2Vtbl {
	return (*IDebugHostSymbol2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostSymbol2) GetLanguage(pKind *LanguageKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLanguage, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pKind)))
	return HRESULT(ret)
}

// B28632B9-8506-4676-87CE-8F7E05E59876
var IID_IDebugHostType2 = syscall.GUID{0xB28632B9, 0x8506, 0x4676,
	[8]byte{0x87, 0xCE, 0x8F, 0x7E, 0x05, 0xE5, 0x98, 0x76}}

type IDebugHostType2Interface interface {
	IDebugHostTypeInterface
	IsTypedef(isTypedef *bool) HRESULT
	GetTypedefBaseType(baseType **IDebugHostType2) HRESULT
	GetTypedefFinalBaseType(finalBaseType **IDebugHostType2) HRESULT
	GetFunctionVarArgsKind(varArgsKind *VarArgsKind) HRESULT
	GetFunctionInstancePointerType(instancePointerType **IDebugHostType2) HRESULT
}

type IDebugHostType2Vtbl struct {
	IDebugHostTypeVtbl
	IsTypedef                      uintptr
	GetTypedefBaseType             uintptr
	GetTypedefFinalBaseType        uintptr
	GetFunctionVarArgsKind         uintptr
	GetFunctionInstancePointerType uintptr
}

type IDebugHostType2 struct {
	IDebugHostType
}

func (this *IDebugHostType2) Vtbl() *IDebugHostType2Vtbl {
	return (*IDebugHostType2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostType2) IsTypedef(isTypedef *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsTypedef, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(isTypedef)))
	return HRESULT(ret)
}

func (this *IDebugHostType2) GetTypedefBaseType(baseType **IDebugHostType2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypedefBaseType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(baseType)))
	return HRESULT(ret)
}

func (this *IDebugHostType2) GetTypedefFinalBaseType(finalBaseType **IDebugHostType2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTypedefFinalBaseType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(finalBaseType)))
	return HRESULT(ret)
}

func (this *IDebugHostType2) GetFunctionVarArgsKind(varArgsKind *VarArgsKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFunctionVarArgsKind, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(varArgsKind)))
	return HRESULT(ret)
}

func (this *IDebugHostType2) GetFunctionInstancePointerType(instancePointerType **IDebugHostType2) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFunctionInstancePointerType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(instancePointerType)))
	return HRESULT(ret)
}

// 4F3E1CE2-86B2-4C7A-9C65-D0A9D0EECF44
var IID_IDebugHostStatus = syscall.GUID{0x4F3E1CE2, 0x86B2, 0x4C7A,
	[8]byte{0x9C, 0x65, 0xD0, 0xA9, 0xD0, 0xEE, 0xCF, 0x44}}

type IDebugHostStatusInterface interface {
	IUnknownInterface
	PollUserInterrupt(interruptRequested *bool) HRESULT
}

type IDebugHostStatusVtbl struct {
	IUnknownVtbl
	PollUserInterrupt uintptr
}

type IDebugHostStatus struct {
	IUnknown
}

func (this *IDebugHostStatus) Vtbl() *IDebugHostStatusVtbl {
	return (*IDebugHostStatusVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostStatus) PollUserInterrupt(interruptRequested *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PollUserInterrupt, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(interruptRequested)))
	return HRESULT(ret)
}

// 3B362B0E-89F0-46C6-A663-DFDC95194AEF
var IID_IDataModelScriptClient = syscall.GUID{0x3B362B0E, 0x89F0, 0x46C6,
	[8]byte{0xA6, 0x63, 0xDF, 0xDC, 0x95, 0x19, 0x4A, 0xEF}}

type IDataModelScriptClientInterface interface {
	IUnknownInterface
	ReportError(errClass ErrorClass, hrFail HRESULT, message PWSTR, line uint32, position uint32) HRESULT
}

type IDataModelScriptClientVtbl struct {
	IUnknownVtbl
	ReportError uintptr
}

type IDataModelScriptClient struct {
	IUnknown
}

func (this *IDataModelScriptClient) Vtbl() *IDataModelScriptClientVtbl {
	return (*IDataModelScriptClientVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptClient) ReportError(errClass ErrorClass, hrFail HRESULT, message PWSTR, line uint32, position uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReportError, uintptr(unsafe.Pointer(this)), uintptr(errClass), uintptr(hrFail), uintptr(unsafe.Pointer(message)), uintptr(line), uintptr(position))
	return HRESULT(ret)
}

// 1303DEC4-FA3B-4F1B-9224-B953D16BABB5
var IID_IDataModelScriptTemplate = syscall.GUID{0x1303DEC4, 0xFA3B, 0x4F1B,
	[8]byte{0x92, 0x24, 0xB9, 0x53, 0xD1, 0x6B, 0xAB, 0xB5}}

type IDataModelScriptTemplateInterface interface {
	IUnknownInterface
	GetName(templateName *BSTR) HRESULT
	GetDescription(templateDescription *BSTR) HRESULT
	GetContent(contentStream **IStream) HRESULT
}

type IDataModelScriptTemplateVtbl struct {
	IUnknownVtbl
	GetName        uintptr
	GetDescription uintptr
	GetContent     uintptr
}

type IDataModelScriptTemplate struct {
	IUnknown
}

func (this *IDataModelScriptTemplate) Vtbl() *IDataModelScriptTemplateVtbl {
	return (*IDataModelScriptTemplateVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptTemplate) GetName(templateName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(templateName)))
	return HRESULT(ret)
}

func (this *IDataModelScriptTemplate) GetDescription(templateDescription *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDescription, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(templateDescription)))
	return HRESULT(ret)
}

func (this *IDataModelScriptTemplate) GetContent(contentStream **IStream) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contentStream)))
	return HRESULT(ret)
}

// 7B4D30FC-B14A-49F8-8D87-D9A1480C97F7
var IID_IDataModelScript = syscall.GUID{0x7B4D30FC, 0xB14A, 0x49F8,
	[8]byte{0x8D, 0x87, 0xD9, 0xA1, 0x48, 0x0C, 0x97, 0xF7}}

type IDataModelScriptInterface interface {
	IUnknownInterface
	GetName(scriptName *BSTR) HRESULT
	Rename(scriptName PWSTR) HRESULT
	Populate(contentStream *IStream) HRESULT
	Execute(client *IDataModelScriptClient) HRESULT
	Unlink() HRESULT
	IsInvocable(isInvocable *bool) HRESULT
	InvokeMain(client *IDataModelScriptClient) HRESULT
}

type IDataModelScriptVtbl struct {
	IUnknownVtbl
	GetName     uintptr
	Rename      uintptr
	Populate    uintptr
	Execute     uintptr
	Unlink      uintptr
	IsInvocable uintptr
	InvokeMain  uintptr
}

type IDataModelScript struct {
	IUnknown
}

func (this *IDataModelScript) Vtbl() *IDataModelScriptVtbl {
	return (*IDataModelScriptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScript) GetName(scriptName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(scriptName)))
	return HRESULT(ret)
}

func (this *IDataModelScript) Rename(scriptName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Rename, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(scriptName)))
	return HRESULT(ret)
}

func (this *IDataModelScript) Populate(contentStream *IStream) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Populate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contentStream)))
	return HRESULT(ret)
}

func (this *IDataModelScript) Execute(client *IDataModelScriptClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Execute, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(client)))
	return HRESULT(ret)
}

func (this *IDataModelScript) Unlink() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Unlink, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDataModelScript) IsInvocable(isInvocable *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsInvocable, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(isInvocable)))
	return HRESULT(ret)
}

func (this *IDataModelScript) InvokeMain(client *IDataModelScriptClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InvokeMain, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(client)))
	return HRESULT(ret)
}

// 69CE6AE2-2268-4E6F-B062-20CE62BFE677
var IID_IDataModelScriptTemplateEnumerator = syscall.GUID{0x69CE6AE2, 0x2268, 0x4E6F,
	[8]byte{0xB0, 0x62, 0x20, 0xCE, 0x62, 0xBF, 0xE6, 0x77}}

type IDataModelScriptTemplateEnumeratorInterface interface {
	IUnknownInterface
	Reset() HRESULT
	GetNext(templateContent **IDataModelScriptTemplate) HRESULT
}

type IDataModelScriptTemplateEnumeratorVtbl struct {
	IUnknownVtbl
	Reset   uintptr
	GetNext uintptr
}

type IDataModelScriptTemplateEnumerator struct {
	IUnknown
}

func (this *IDataModelScriptTemplateEnumerator) Vtbl() *IDataModelScriptTemplateEnumeratorVtbl {
	return (*IDataModelScriptTemplateEnumeratorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptTemplateEnumerator) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDataModelScriptTemplateEnumerator) GetNext(templateContent **IDataModelScriptTemplate) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(templateContent)))
	return HRESULT(ret)
}

// 513461E0-4FCA-48CE-8658-32F3E2056F3B
var IID_IDataModelScriptProvider = syscall.GUID{0x513461E0, 0x4FCA, 0x48CE,
	[8]byte{0x86, 0x58, 0x32, 0xF3, 0xE2, 0x05, 0x6F, 0x3B}}

type IDataModelScriptProviderInterface interface {
	IUnknownInterface
	GetName(name *BSTR) HRESULT
	GetExtension(extension *BSTR) HRESULT
	CreateScript(script **IDataModelScript) HRESULT
	GetDefaultTemplateContent(templateContent **IDataModelScriptTemplate) HRESULT
	EnumerateTemplates(enumerator **IDataModelScriptTemplateEnumerator) HRESULT
}

type IDataModelScriptProviderVtbl struct {
	IUnknownVtbl
	GetName                   uintptr
	GetExtension              uintptr
	CreateScript              uintptr
	GetDefaultTemplateContent uintptr
	EnumerateTemplates        uintptr
}

type IDataModelScriptProvider struct {
	IUnknown
}

func (this *IDataModelScriptProvider) Vtbl() *IDataModelScriptProviderVtbl {
	return (*IDataModelScriptProviderVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptProvider) GetName(name *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(name)))
	return HRESULT(ret)
}

func (this *IDataModelScriptProvider) GetExtension(extension *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtension, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(extension)))
	return HRESULT(ret)
}

func (this *IDataModelScriptProvider) CreateScript(script **IDataModelScript) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateScript, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(script)))
	return HRESULT(ret)
}

func (this *IDataModelScriptProvider) GetDefaultTemplateContent(templateContent **IDataModelScriptTemplate) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDefaultTemplateContent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(templateContent)))
	return HRESULT(ret)
}

func (this *IDataModelScriptProvider) EnumerateTemplates(enumerator **IDataModelScriptTemplateEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateTemplates, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(enumerator)))
	return HRESULT(ret)
}

// 95BA00E2-704A-4FE2-A8F1-A7E7D8FB0941
var IID_IDataModelScriptProviderEnumerator = syscall.GUID{0x95BA00E2, 0x704A, 0x4FE2,
	[8]byte{0xA8, 0xF1, 0xA7, 0xE7, 0xD8, 0xFB, 0x09, 0x41}}

type IDataModelScriptProviderEnumeratorInterface interface {
	IUnknownInterface
	Reset() HRESULT
	GetNext(provider **IDataModelScriptProvider) HRESULT
}

type IDataModelScriptProviderEnumeratorVtbl struct {
	IUnknownVtbl
	Reset   uintptr
	GetNext uintptr
}

type IDataModelScriptProviderEnumerator struct {
	IUnknown
}

func (this *IDataModelScriptProviderEnumerator) Vtbl() *IDataModelScriptProviderEnumeratorVtbl {
	return (*IDataModelScriptProviderEnumeratorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptProviderEnumerator) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDataModelScriptProviderEnumerator) GetNext(provider **IDataModelScriptProvider) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(provider)))
	return HRESULT(ret)
}

// 6FD11E33-E5AD-410B-8011-68C6BC4BF80D
var IID_IDataModelScriptManager = syscall.GUID{0x6FD11E33, 0xE5AD, 0x410B,
	[8]byte{0x80, 0x11, 0x68, 0xC6, 0xBC, 0x4B, 0xF8, 0x0D}}

type IDataModelScriptManagerInterface interface {
	IUnknownInterface
	GetDefaultNameBinder(ppNameBinder **IDataModelNameBinder) HRESULT
	RegisterScriptProvider(provider *IDataModelScriptProvider) HRESULT
	UnregisterScriptProvider(provider *IDataModelScriptProvider) HRESULT
	FindProviderForScriptType(scriptType PWSTR, provider **IDataModelScriptProvider) HRESULT
	FindProviderForScriptExtension(scriptExtension PWSTR, provider **IDataModelScriptProvider) HRESULT
	EnumerateScriptProviders(enumerator **IDataModelScriptProviderEnumerator) HRESULT
}

type IDataModelScriptManagerVtbl struct {
	IUnknownVtbl
	GetDefaultNameBinder           uintptr
	RegisterScriptProvider         uintptr
	UnregisterScriptProvider       uintptr
	FindProviderForScriptType      uintptr
	FindProviderForScriptExtension uintptr
	EnumerateScriptProviders       uintptr
}

type IDataModelScriptManager struct {
	IUnknown
}

func (this *IDataModelScriptManager) Vtbl() *IDataModelScriptManagerVtbl {
	return (*IDataModelScriptManagerVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptManager) GetDefaultNameBinder(ppNameBinder **IDataModelNameBinder) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDefaultNameBinder, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppNameBinder)))
	return HRESULT(ret)
}

func (this *IDataModelScriptManager) RegisterScriptProvider(provider *IDataModelScriptProvider) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RegisterScriptProvider, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(provider)))
	return HRESULT(ret)
}

func (this *IDataModelScriptManager) UnregisterScriptProvider(provider *IDataModelScriptProvider) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().UnregisterScriptProvider, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(provider)))
	return HRESULT(ret)
}

func (this *IDataModelScriptManager) FindProviderForScriptType(scriptType PWSTR, provider **IDataModelScriptProvider) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindProviderForScriptType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(scriptType)), uintptr(unsafe.Pointer(provider)))
	return HRESULT(ret)
}

func (this *IDataModelScriptManager) FindProviderForScriptExtension(scriptExtension PWSTR, provider **IDataModelScriptProvider) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindProviderForScriptExtension, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(scriptExtension)), uintptr(unsafe.Pointer(provider)))
	return HRESULT(ret)
}

func (this *IDataModelScriptManager) EnumerateScriptProviders(enumerator **IDataModelScriptProviderEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateScriptProviders, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(enumerator)))
	return HRESULT(ret)
}

// E7983FA1-80A7-498C-988F-518DDC5D4025
var IID_IDynamicKeyProviderConcept = syscall.GUID{0xE7983FA1, 0x80A7, 0x498C,
	[8]byte{0x98, 0x8F, 0x51, 0x8D, 0xDC, 0x5D, 0x40, 0x25}}

type IDynamicKeyProviderConceptInterface interface {
	IUnknownInterface
	GetKey(contextObject *IModelObject, key PWSTR, keyValue **IModelObject, metadata **IKeyStore, hasKey *bool) HRESULT
	SetKey(contextObject *IModelObject, key PWSTR, keyValue *IModelObject, metadata *IKeyStore) HRESULT
	EnumerateKeys(contextObject *IModelObject, ppEnumerator **IKeyEnumerator) HRESULT
}

type IDynamicKeyProviderConceptVtbl struct {
	IUnknownVtbl
	GetKey        uintptr
	SetKey        uintptr
	EnumerateKeys uintptr
}

type IDynamicKeyProviderConcept struct {
	IUnknown
}

func (this *IDynamicKeyProviderConcept) Vtbl() *IDynamicKeyProviderConceptVtbl {
	return (*IDynamicKeyProviderConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDynamicKeyProviderConcept) GetKey(contextObject *IModelObject, key PWSTR, keyValue **IModelObject, metadata **IKeyStore, hasKey *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetKey, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(keyValue)), uintptr(unsafe.Pointer(metadata)), uintptr(unsafe.Pointer(hasKey)))
	return HRESULT(ret)
}

func (this *IDynamicKeyProviderConcept) SetKey(contextObject *IModelObject, key PWSTR, keyValue *IModelObject, metadata *IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetKey, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(key)), uintptr(unsafe.Pointer(keyValue)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IDynamicKeyProviderConcept) EnumerateKeys(contextObject *IModelObject, ppEnumerator **IKeyEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateKeys, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(ppEnumerator)))
	return HRESULT(ret)
}

// 95A7F7DD-602E-483F-9D06-A15C0EE13174
var IID_IDynamicConceptProviderConcept = syscall.GUID{0x95A7F7DD, 0x602E, 0x483F,
	[8]byte{0x9D, 0x06, 0xA1, 0x5C, 0x0E, 0xE1, 0x31, 0x74}}

type IDynamicConceptProviderConceptInterface interface {
	IUnknownInterface
	GetConcept(contextObject *IModelObject, conceptId *syscall.GUID, conceptInterface **IUnknown, conceptMetadata **IKeyStore, hasConcept *bool) HRESULT
	SetConcept(contextObject *IModelObject, conceptId *syscall.GUID, conceptInterface *IUnknown, conceptMetadata *IKeyStore) HRESULT
	NotifyParent(parentModel *IModelObject) HRESULT
	NotifyParentChange(parentModel *IModelObject) HRESULT
	NotifyDestruct() HRESULT
}

type IDynamicConceptProviderConceptVtbl struct {
	IUnknownVtbl
	GetConcept         uintptr
	SetConcept         uintptr
	NotifyParent       uintptr
	NotifyParentChange uintptr
	NotifyDestruct     uintptr
}

type IDynamicConceptProviderConcept struct {
	IUnknown
}

func (this *IDynamicConceptProviderConcept) Vtbl() *IDynamicConceptProviderConceptVtbl {
	return (*IDynamicConceptProviderConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDynamicConceptProviderConcept) GetConcept(contextObject *IModelObject, conceptId *syscall.GUID, conceptInterface **IUnknown, conceptMetadata **IKeyStore, hasConcept *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetConcept, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(conceptId)), uintptr(unsafe.Pointer(conceptInterface)), uintptr(unsafe.Pointer(conceptMetadata)), uintptr(unsafe.Pointer(hasConcept)))
	return HRESULT(ret)
}

func (this *IDynamicConceptProviderConcept) SetConcept(contextObject *IModelObject, conceptId *syscall.GUID, conceptInterface *IUnknown, conceptMetadata *IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetConcept, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(conceptId)), uintptr(unsafe.Pointer(conceptInterface)), uintptr(unsafe.Pointer(conceptMetadata)))
	return HRESULT(ret)
}

func (this *IDynamicConceptProviderConcept) NotifyParent(parentModel *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().NotifyParent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(parentModel)))
	return HRESULT(ret)
}

func (this *IDynamicConceptProviderConcept) NotifyParentChange(parentModel *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().NotifyParentChange, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(parentModel)))
	return HRESULT(ret)
}

func (this *IDynamicConceptProviderConcept) NotifyDestruct() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().NotifyDestruct, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 014D366A-1F23-4981-9219-B2DB8B402054
var IID_IDataModelScriptHostContext = syscall.GUID{0x014D366A, 0x1F23, 0x4981,
	[8]byte{0x92, 0x19, 0xB2, 0xDB, 0x8B, 0x40, 0x20, 0x54}}

type IDataModelScriptHostContextInterface interface {
	IUnknownInterface
	NotifyScriptChange(script *IDataModelScript, changeKind ScriptChangeKind) HRESULT
	GetNamespaceObject(namespaceObject **IModelObject) HRESULT
}

type IDataModelScriptHostContextVtbl struct {
	IUnknownVtbl
	NotifyScriptChange uintptr
	GetNamespaceObject uintptr
}

type IDataModelScriptHostContext struct {
	IUnknown
}

func (this *IDataModelScriptHostContext) Vtbl() *IDataModelScriptHostContextVtbl {
	return (*IDataModelScriptHostContextVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptHostContext) NotifyScriptChange(script *IDataModelScript, changeKind ScriptChangeKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().NotifyScriptChange, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(script)), uintptr(changeKind))
	return HRESULT(ret)
}

func (this *IDataModelScriptHostContext) GetNamespaceObject(namespaceObject **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNamespaceObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(namespaceObject)))
	return HRESULT(ret)
}

// B70334A4-B92C-4570-93A1-D3EB686649A0
var IID_IDebugHostScriptHost = syscall.GUID{0xB70334A4, 0xB92C, 0x4570,
	[8]byte{0x93, 0xA1, 0xD3, 0xEB, 0x68, 0x66, 0x49, 0xA0}}

type IDebugHostScriptHostInterface interface {
	IUnknownInterface
	CreateContext(script *IDataModelScript, scriptContext **IDataModelScriptHostContext) HRESULT
}

type IDebugHostScriptHostVtbl struct {
	IUnknownVtbl
	CreateContext uintptr
}

type IDebugHostScriptHost struct {
	IUnknown
}

func (this *IDebugHostScriptHost) Vtbl() *IDebugHostScriptHostVtbl {
	return (*IDebugHostScriptHostVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostScriptHost) CreateContext(script *IDataModelScript, scriptContext **IDataModelScriptHostContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(script)), uintptr(unsafe.Pointer(scriptContext)))
	return HRESULT(ret)
}

// AF352B7B-8292-4C01-B360-2DC3696C65E7
var IID_IDataModelNameBinder = syscall.GUID{0xAF352B7B, 0x8292, 0x4C01,
	[8]byte{0xB3, 0x60, 0x2D, 0xC3, 0x69, 0x6C, 0x65, 0xE7}}

type IDataModelNameBinderInterface interface {
	IUnknownInterface
	BindValue(contextObject *IModelObject, name PWSTR, value **IModelObject, metadata **IKeyStore) HRESULT
	BindReference(contextObject *IModelObject, name PWSTR, reference **IModelObject, metadata **IKeyStore) HRESULT
	EnumerateValues(contextObject *IModelObject, enumerator **IKeyEnumerator) HRESULT
	EnumerateReferences(contextObject *IModelObject, enumerator **IKeyEnumerator) HRESULT
}

type IDataModelNameBinderVtbl struct {
	IUnknownVtbl
	BindValue           uintptr
	BindReference       uintptr
	EnumerateValues     uintptr
	EnumerateReferences uintptr
}

type IDataModelNameBinder struct {
	IUnknown
}

func (this *IDataModelNameBinder) Vtbl() *IDataModelNameBinderVtbl {
	return (*IDataModelNameBinderVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelNameBinder) BindValue(contextObject *IModelObject, name PWSTR, value **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().BindValue, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(name)), uintptr(unsafe.Pointer(value)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IDataModelNameBinder) BindReference(contextObject *IModelObject, name PWSTR, reference **IModelObject, metadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().BindReference, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(name)), uintptr(unsafe.Pointer(reference)), uintptr(unsafe.Pointer(metadata)))
	return HRESULT(ret)
}

func (this *IDataModelNameBinder) EnumerateValues(contextObject *IModelObject, enumerator **IKeyEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateValues, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(enumerator)))
	return HRESULT(ret)
}

func (this *IDataModelNameBinder) EnumerateReferences(contextObject *IModelObject, enumerator **IKeyEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateReferences, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(enumerator)))
	return HRESULT(ret)
}

// 80E2F7C5-7159-4E92-887E-7E0347E88406
var IID_IModelKeyReference2 = syscall.GUID{0x80E2F7C5, 0x7159, 0x4E92,
	[8]byte{0x88, 0x7E, 0x7E, 0x03, 0x47, 0xE8, 0x84, 0x06}}

type IModelKeyReference2Interface interface {
	IModelKeyReferenceInterface
	OverrideContextObject(newContextObject *IModelObject) HRESULT
}

type IModelKeyReference2Vtbl struct {
	IModelKeyReferenceVtbl
	OverrideContextObject uintptr
}

type IModelKeyReference2 struct {
	IModelKeyReference
}

func (this *IModelKeyReference2) Vtbl() *IModelKeyReference2Vtbl {
	return (*IModelKeyReference2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IModelKeyReference2) OverrideContextObject(newContextObject *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OverrideContextObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(newContextObject)))
	return HRESULT(ret)
}

// A117A435-1FB4-4092-A2AB-A929576C1E87
var IID_IDebugHostEvaluator2 = syscall.GUID{0xA117A435, 0x1FB4, 0x4092,
	[8]byte{0xA2, 0xAB, 0xA9, 0x29, 0x57, 0x6C, 0x1E, 0x87}}

type IDebugHostEvaluator2Interface interface {
	IDebugHostEvaluatorInterface
	AssignTo(assignmentReference *IModelObject, assignmentValue *IModelObject, assignmentResult **IModelObject, assignmentMetadata **IKeyStore) HRESULT
}

type IDebugHostEvaluator2Vtbl struct {
	IDebugHostEvaluatorVtbl
	AssignTo uintptr
}

type IDebugHostEvaluator2 struct {
	IDebugHostEvaluator
}

func (this *IDebugHostEvaluator2) Vtbl() *IDebugHostEvaluator2Vtbl {
	return (*IDebugHostEvaluator2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostEvaluator2) AssignTo(assignmentReference *IModelObject, assignmentValue *IModelObject, assignmentResult **IModelObject, assignmentMetadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AssignTo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(assignmentReference)), uintptr(unsafe.Pointer(assignmentValue)), uintptr(unsafe.Pointer(assignmentResult)), uintptr(unsafe.Pointer(assignmentMetadata)))
	return HRESULT(ret)
}

// F412C5EA-2284-4622-A660-A697160D3312
var IID_IDataModelManager2 = syscall.GUID{0xF412C5EA, 0x2284, 0x4622,
	[8]byte{0xA6, 0x60, 0xA6, 0x97, 0x16, 0x0D, 0x33, 0x12}}

type IDataModelManager2Interface interface {
	IDataModelManagerInterface
	AcquireSubNamespace(modelName PWSTR, subNamespaceModelName PWSTR, accessName PWSTR, metadata *IKeyStore, namespaceModelObject **IModelObject) HRESULT
	CreateTypedIntrinsicObjectEx(context *IDebugHostContext, intrinsicData *VARIANT, type_ *IDebugHostType, object **IModelObject) HRESULT
}

type IDataModelManager2Vtbl struct {
	IDataModelManagerVtbl
	AcquireSubNamespace          uintptr
	CreateTypedIntrinsicObjectEx uintptr
}

type IDataModelManager2 struct {
	IDataModelManager
}

func (this *IDataModelManager2) Vtbl() *IDataModelManager2Vtbl {
	return (*IDataModelManager2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelManager2) AcquireSubNamespace(modelName PWSTR, subNamespaceModelName PWSTR, accessName PWSTR, metadata *IKeyStore, namespaceModelObject **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AcquireSubNamespace, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(modelName)), uintptr(unsafe.Pointer(subNamespaceModelName)), uintptr(unsafe.Pointer(accessName)), uintptr(unsafe.Pointer(metadata)), uintptr(unsafe.Pointer(namespaceModelObject)))
	return HRESULT(ret)
}

func (this *IDataModelManager2) CreateTypedIntrinsicObjectEx(context *IDebugHostContext, intrinsicData *VARIANT, type_ *IDebugHostType, object **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateTypedIntrinsicObjectEx, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(intrinsicData)), uintptr(unsafe.Pointer(type_)), uintptr(unsafe.Pointer(object)))
	return HRESULT(ret)
}

// EEA033DE-38F6-416B-A251-1D3771001270
var IID_IDebugHostMemory2 = syscall.GUID{0xEEA033DE, 0x38F6, 0x416B,
	[8]byte{0xA2, 0x51, 0x1D, 0x37, 0x71, 0x00, 0x12, 0x70}}

type IDebugHostMemory2Interface interface {
	IDebugHostMemoryInterface
	LinearizeLocation(context *IDebugHostContext, location Location, pLinearizedLocation *Location) HRESULT
}

type IDebugHostMemory2Vtbl struct {
	IDebugHostMemoryVtbl
	LinearizeLocation uintptr
}

type IDebugHostMemory2 struct {
	IDebugHostMemory
}

func (this *IDebugHostMemory2) Vtbl() *IDebugHostMemory2Vtbl {
	return (*IDebugHostMemory2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostMemory2) LinearizeLocation(context *IDebugHostContext, location Location, pLinearizedLocation *Location) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().LinearizeLocation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(context)), uintptr(unsafe.Pointer(&location)), uintptr(unsafe.Pointer(pLinearizedLocation)))
	return HRESULT(ret)
}

// 3C2B24E1-11D0-4F86-8AE5-4DF166F73253
var IID_IDebugHostExtensibility = syscall.GUID{0x3C2B24E1, 0x11D0, 0x4F86,
	[8]byte{0x8A, 0xE5, 0x4D, 0xF1, 0x66, 0xF7, 0x32, 0x53}}

type IDebugHostExtensibilityInterface interface {
	IUnknownInterface
	CreateFunctionAlias(aliasName PWSTR, functionObject *IModelObject) HRESULT
	DestroyFunctionAlias(aliasName PWSTR) HRESULT
}

type IDebugHostExtensibilityVtbl struct {
	IUnknownVtbl
	CreateFunctionAlias  uintptr
	DestroyFunctionAlias uintptr
}

type IDebugHostExtensibility struct {
	IUnknown
}

func (this *IDebugHostExtensibility) Vtbl() *IDebugHostExtensibilityVtbl {
	return (*IDebugHostExtensibilityVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostExtensibility) CreateFunctionAlias(aliasName PWSTR, functionObject *IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateFunctionAlias, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(aliasName)), uintptr(unsafe.Pointer(functionObject)))
	return HRESULT(ret)
}

func (this *IDebugHostExtensibility) DestroyFunctionAlias(aliasName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DestroyFunctionAlias, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(aliasName)))
	return HRESULT(ret)
}

// 53159B6D-D4C4-471B-A863-5B110CA800CA
var IID_IDataModelScriptDebugClient = syscall.GUID{0x53159B6D, 0xD4C4, 0x471B,
	[8]byte{0xA8, 0x63, 0x5B, 0x11, 0x0C, 0xA8, 0x00, 0xCA}}

type IDataModelScriptDebugClientInterface interface {
	IUnknownInterface
	NotifyDebugEvent(pEventInfo *ScriptDebugEventInformation, pScript *IDataModelScript, pEventDataObject *IModelObject, resumeEventKind *ScriptExecutionKind) HRESULT
}

type IDataModelScriptDebugClientVtbl struct {
	IUnknownVtbl
	NotifyDebugEvent uintptr
}

type IDataModelScriptDebugClient struct {
	IUnknown
}

func (this *IDataModelScriptDebugClient) Vtbl() *IDataModelScriptDebugClientVtbl {
	return (*IDataModelScriptDebugClientVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptDebugClient) NotifyDebugEvent(pEventInfo *ScriptDebugEventInformation, pScript *IDataModelScript, pEventDataObject *IModelObject, resumeEventKind *ScriptExecutionKind) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().NotifyDebugEvent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pEventInfo)), uintptr(unsafe.Pointer(pScript)), uintptr(unsafe.Pointer(pEventDataObject)), uintptr(unsafe.Pointer(resumeEventKind)))
	return HRESULT(ret)
}

// 0F9FEED7-D045-4AC3-98A8-A98942CF6A35
var IID_IDataModelScriptDebugVariableSetEnumerator = syscall.GUID{0x0F9FEED7, 0xD045, 0x4AC3,
	[8]byte{0x98, 0xA8, 0xA9, 0x89, 0x42, 0xCF, 0x6A, 0x35}}

type IDataModelScriptDebugVariableSetEnumeratorInterface interface {
	IUnknownInterface
	Reset() HRESULT
	GetNext(variableName *BSTR, variableValue **IModelObject, variableMetadata **IKeyStore) HRESULT
}

type IDataModelScriptDebugVariableSetEnumeratorVtbl struct {
	IUnknownVtbl
	Reset   uintptr
	GetNext uintptr
}

type IDataModelScriptDebugVariableSetEnumerator struct {
	IUnknown
}

func (this *IDataModelScriptDebugVariableSetEnumerator) Vtbl() *IDataModelScriptDebugVariableSetEnumeratorVtbl {
	return (*IDataModelScriptDebugVariableSetEnumeratorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptDebugVariableSetEnumerator) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebugVariableSetEnumerator) GetNext(variableName *BSTR, variableValue **IModelObject, variableMetadata **IKeyStore) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(variableName)), uintptr(unsafe.Pointer(variableValue)), uintptr(unsafe.Pointer(variableMetadata)))
	return HRESULT(ret)
}

// DEC6ED5E-6360-4941-AB4C-A26409DE4F82
var IID_IDataModelScriptDebugStackFrame = syscall.GUID{0xDEC6ED5E, 0x6360, 0x4941,
	[8]byte{0xAB, 0x4C, 0xA2, 0x64, 0x09, 0xDE, 0x4F, 0x82}}

type IDataModelScriptDebugStackFrameInterface interface {
	IUnknownInterface
	GetName(name *BSTR) HRESULT
	GetPosition(position *ScriptDebugPosition, positionSpanEnd *ScriptDebugPosition, lineText *BSTR) HRESULT
	IsTransitionPoint(isTransitionPoint *bool) HRESULT
	GetTransition(transitionScript **IDataModelScript, isTransitionContiguous *bool) HRESULT
	Evaluate(pwszExpression PWSTR, ppResult **IModelObject) HRESULT
	EnumerateLocals(variablesEnum **IDataModelScriptDebugVariableSetEnumerator) HRESULT
	EnumerateArguments(variablesEnum **IDataModelScriptDebugVariableSetEnumerator) HRESULT
}

type IDataModelScriptDebugStackFrameVtbl struct {
	IUnknownVtbl
	GetName            uintptr
	GetPosition        uintptr
	IsTransitionPoint  uintptr
	GetTransition      uintptr
	Evaluate           uintptr
	EnumerateLocals    uintptr
	EnumerateArguments uintptr
}

type IDataModelScriptDebugStackFrame struct {
	IUnknown
}

func (this *IDataModelScriptDebugStackFrame) Vtbl() *IDataModelScriptDebugStackFrameVtbl {
	return (*IDataModelScriptDebugStackFrameVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptDebugStackFrame) GetName(name *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(name)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebugStackFrame) GetPosition(position *ScriptDebugPosition, positionSpanEnd *ScriptDebugPosition, lineText *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPosition, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(position)), uintptr(unsafe.Pointer(positionSpanEnd)), uintptr(unsafe.Pointer(lineText)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebugStackFrame) IsTransitionPoint(isTransitionPoint *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsTransitionPoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(isTransitionPoint)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebugStackFrame) GetTransition(transitionScript **IDataModelScript, isTransitionContiguous *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTransition, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(transitionScript)), uintptr(unsafe.Pointer(isTransitionContiguous)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebugStackFrame) Evaluate(pwszExpression PWSTR, ppResult **IModelObject) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Evaluate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pwszExpression)), uintptr(unsafe.Pointer(ppResult)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebugStackFrame) EnumerateLocals(variablesEnum **IDataModelScriptDebugVariableSetEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateLocals, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(variablesEnum)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebugStackFrame) EnumerateArguments(variablesEnum **IDataModelScriptDebugVariableSetEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateArguments, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(variablesEnum)))
	return HRESULT(ret)
}

// 051364DD-E449-443E-9762-FE578F4A5473
var IID_IDataModelScriptDebugStack = syscall.GUID{0x051364DD, 0xE449, 0x443E,
	[8]byte{0x97, 0x62, 0xFE, 0x57, 0x8F, 0x4A, 0x54, 0x73}}

type IDataModelScriptDebugStackInterface interface {
	IUnknownInterface
	GetFrameCount() uint64
	GetStackFrame(frameNumber uint64, stackFrame **IDataModelScriptDebugStackFrame) HRESULT
}

type IDataModelScriptDebugStackVtbl struct {
	IUnknownVtbl
	GetFrameCount uintptr
	GetStackFrame uintptr
}

type IDataModelScriptDebugStack struct {
	IUnknown
}

func (this *IDataModelScriptDebugStack) Vtbl() *IDataModelScriptDebugStackVtbl {
	return (*IDataModelScriptDebugStackVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptDebugStack) GetFrameCount() uint64 {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFrameCount, uintptr(unsafe.Pointer(this)))
	return uint64(ret)
}

func (this *IDataModelScriptDebugStack) GetStackFrame(frameNumber uint64, stackFrame **IDataModelScriptDebugStackFrame) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackFrame, uintptr(unsafe.Pointer(this)), uintptr(frameNumber), uintptr(unsafe.Pointer(stackFrame)))
	return HRESULT(ret)
}

// 6BB27B35-02E6-47CB-90A0-5371244032DE
var IID_IDataModelScriptDebugBreakpoint = syscall.GUID{0x6BB27B35, 0x02E6, 0x47CB,
	[8]byte{0x90, 0xA0, 0x53, 0x71, 0x24, 0x40, 0x32, 0xDE}}

type IDataModelScriptDebugBreakpointInterface interface {
	IUnknownInterface
	GetId() uint64
	IsEnabled() bool
	Enable()
	Disable()
	Remove()
	GetPosition(position *ScriptDebugPosition, positionSpanEnd *ScriptDebugPosition, lineText *BSTR) HRESULT
}

type IDataModelScriptDebugBreakpointVtbl struct {
	IUnknownVtbl
	GetId       uintptr
	IsEnabled   uintptr
	Enable      uintptr
	Disable     uintptr
	Remove      uintptr
	GetPosition uintptr
}

type IDataModelScriptDebugBreakpoint struct {
	IUnknown
}

func (this *IDataModelScriptDebugBreakpoint) Vtbl() *IDataModelScriptDebugBreakpointVtbl {
	return (*IDataModelScriptDebugBreakpointVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptDebugBreakpoint) GetId() uint64 {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetId, uintptr(unsafe.Pointer(this)))
	return uint64(ret)
}

func (this *IDataModelScriptDebugBreakpoint) IsEnabled() bool {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsEnabled, uintptr(unsafe.Pointer(this)))
	return ret != 0
}

func (this *IDataModelScriptDebugBreakpoint) Enable() {
	_, _, _ = syscall.SyscallN(this.Vtbl().Enable, uintptr(unsafe.Pointer(this)))
}

func (this *IDataModelScriptDebugBreakpoint) Disable() {
	_, _, _ = syscall.SyscallN(this.Vtbl().Disable, uintptr(unsafe.Pointer(this)))
}

func (this *IDataModelScriptDebugBreakpoint) Remove() {
	_, _, _ = syscall.SyscallN(this.Vtbl().Remove, uintptr(unsafe.Pointer(this)))
}

func (this *IDataModelScriptDebugBreakpoint) GetPosition(position *ScriptDebugPosition, positionSpanEnd *ScriptDebugPosition, lineText *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPosition, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(position)), uintptr(unsafe.Pointer(positionSpanEnd)), uintptr(unsafe.Pointer(lineText)))
	return HRESULT(ret)
}

// 39484A75-B4F3-4799-86DA-691AFA57B299
var IID_IDataModelScriptDebugBreakpointEnumerator = syscall.GUID{0x39484A75, 0xB4F3, 0x4799,
	[8]byte{0x86, 0xDA, 0x69, 0x1A, 0xFA, 0x57, 0xB2, 0x99}}

type IDataModelScriptDebugBreakpointEnumeratorInterface interface {
	IUnknownInterface
	Reset() HRESULT
	GetNext(breakpoint **IDataModelScriptDebugBreakpoint) HRESULT
}

type IDataModelScriptDebugBreakpointEnumeratorVtbl struct {
	IUnknownVtbl
	Reset   uintptr
	GetNext uintptr
}

type IDataModelScriptDebugBreakpointEnumerator struct {
	IUnknown
}

func (this *IDataModelScriptDebugBreakpointEnumerator) Vtbl() *IDataModelScriptDebugBreakpointEnumeratorVtbl {
	return (*IDataModelScriptDebugBreakpointEnumeratorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptDebugBreakpointEnumerator) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebugBreakpointEnumerator) GetNext(breakpoint **IDataModelScriptDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(breakpoint)))
	return HRESULT(ret)
}

// DE8E0945-9750-4471-AB76-A8F79D6EC350
var IID_IDataModelScriptDebug = syscall.GUID{0xDE8E0945, 0x9750, 0x4471,
	[8]byte{0xAB, 0x76, 0xA8, 0xF7, 0x9D, 0x6E, 0xC3, 0x50}}

type IDataModelScriptDebugInterface interface {
	IUnknownInterface
	GetDebugState() ScriptDebugState
	GetCurrentPosition(currentPosition *ScriptDebugPosition, positionSpanEnd *ScriptDebugPosition, lineText *BSTR) HRESULT
	GetStack(stack **IDataModelScriptDebugStack) HRESULT
	SetBreakpoint(linePosition uint32, columnPosition uint32, breakpoint **IDataModelScriptDebugBreakpoint) HRESULT
	FindBreakpointById(breakpointId uint64, breakpoint **IDataModelScriptDebugBreakpoint) HRESULT
	EnumerateBreakpoints(breakpointEnum **IDataModelScriptDebugBreakpointEnumerator) HRESULT
	GetEventFilter(eventFilter ScriptDebugEventFilter, isBreakEnabled *bool) HRESULT
	SetEventFilter(eventFilter ScriptDebugEventFilter, isBreakEnabled byte) HRESULT
	StartDebugging(debugClient *IDataModelScriptDebugClient) HRESULT
	StopDebugging(debugClient *IDataModelScriptDebugClient) HRESULT
}

type IDataModelScriptDebugVtbl struct {
	IUnknownVtbl
	GetDebugState        uintptr
	GetCurrentPosition   uintptr
	GetStack             uintptr
	SetBreakpoint        uintptr
	FindBreakpointById   uintptr
	EnumerateBreakpoints uintptr
	GetEventFilter       uintptr
	SetEventFilter       uintptr
	StartDebugging       uintptr
	StopDebugging        uintptr
}

type IDataModelScriptDebug struct {
	IUnknown
}

func (this *IDataModelScriptDebug) Vtbl() *IDataModelScriptDebugVtbl {
	return (*IDataModelScriptDebugVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptDebug) GetDebugState() ScriptDebugState {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebugState, uintptr(unsafe.Pointer(this)))
	return ScriptDebugState(ret)
}

func (this *IDataModelScriptDebug) GetCurrentPosition(currentPosition *ScriptDebugPosition, positionSpanEnd *ScriptDebugPosition, lineText *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentPosition, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(currentPosition)), uintptr(unsafe.Pointer(positionSpanEnd)), uintptr(unsafe.Pointer(lineText)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebug) GetStack(stack **IDataModelScriptDebugStack) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStack, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(stack)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebug) SetBreakpoint(linePosition uint32, columnPosition uint32, breakpoint **IDataModelScriptDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetBreakpoint, uintptr(unsafe.Pointer(this)), uintptr(linePosition), uintptr(columnPosition), uintptr(unsafe.Pointer(breakpoint)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebug) FindBreakpointById(breakpointId uint64, breakpoint **IDataModelScriptDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindBreakpointById, uintptr(unsafe.Pointer(this)), uintptr(breakpointId), uintptr(unsafe.Pointer(breakpoint)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebug) EnumerateBreakpoints(breakpointEnum **IDataModelScriptDebugBreakpointEnumerator) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumerateBreakpoints, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(breakpointEnum)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebug) GetEventFilter(eventFilter ScriptDebugEventFilter, isBreakEnabled *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventFilter, uintptr(unsafe.Pointer(this)), uintptr(eventFilter), uintptr(unsafe.Pointer(isBreakEnabled)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebug) SetEventFilter(eventFilter ScriptDebugEventFilter, isBreakEnabled byte) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventFilter, uintptr(unsafe.Pointer(this)), uintptr(eventFilter), uintptr(isBreakEnabled))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebug) StartDebugging(debugClient *IDataModelScriptDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartDebugging, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(debugClient)))
	return HRESULT(ret)
}

func (this *IDataModelScriptDebug) StopDebugging(debugClient *IDataModelScriptDebugClient) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StopDebugging, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(debugClient)))
	return HRESULT(ret)
}

// CBB10ED3-839E-426C-9243-E23535C1AE1A
var IID_IDataModelScriptDebug2 = syscall.GUID{0xCBB10ED3, 0x839E, 0x426C,
	[8]byte{0x92, 0x43, 0xE2, 0x35, 0x35, 0xC1, 0xAE, 0x1A}}

type IDataModelScriptDebug2Interface interface {
	IDataModelScriptDebugInterface
	SetBreakpointAtFunction(functionName PWSTR, breakpoint **IDataModelScriptDebugBreakpoint) HRESULT
}

type IDataModelScriptDebug2Vtbl struct {
	IDataModelScriptDebugVtbl
	SetBreakpointAtFunction uintptr
}

type IDataModelScriptDebug2 struct {
	IDataModelScriptDebug
}

func (this *IDataModelScriptDebug2) Vtbl() *IDataModelScriptDebug2Vtbl {
	return (*IDataModelScriptDebug2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDataModelScriptDebug2) SetBreakpointAtFunction(functionName PWSTR, breakpoint **IDataModelScriptDebugBreakpoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetBreakpointAtFunction, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(functionName)), uintptr(unsafe.Pointer(breakpoint)))
	return HRESULT(ret)
}

// B51887E8-BCD0-4E8F-A8C7-434398B78C37
var IID_IDebugHostModule2 = syscall.GUID{0xB51887E8, 0xBCD0, 0x4E8F,
	[8]byte{0xA8, 0xC7, 0x43, 0x43, 0x98, 0xB7, 0x8C, 0x37}}

type IDebugHostModule2Interface interface {
	IDebugHostModuleInterface
	FindContainingSymbolByRVA(rva uint64, symbol **IDebugHostSymbol, offset *uint64) HRESULT
}

type IDebugHostModule2Vtbl struct {
	IDebugHostModuleVtbl
	FindContainingSymbolByRVA uintptr
}

type IDebugHostModule2 struct {
	IDebugHostModule
}

func (this *IDebugHostModule2) Vtbl() *IDebugHostModule2Vtbl {
	return (*IDebugHostModule2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHostModule2) FindContainingSymbolByRVA(rva uint64, symbol **IDebugHostSymbol, offset *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FindContainingSymbolByRVA, uintptr(unsafe.Pointer(this)), uintptr(rva), uintptr(unsafe.Pointer(symbol)), uintptr(unsafe.Pointer(offset)))
	return HRESULT(ret)
}

// A7830646-9F0C-4A31-BA19-503F33E6C8A3
var IID_IComparableConcept = syscall.GUID{0xA7830646, 0x9F0C, 0x4A31,
	[8]byte{0xBA, 0x19, 0x50, 0x3F, 0x33, 0xE6, 0xC8, 0xA3}}

type IComparableConceptInterface interface {
	IUnknownInterface
	CompareObjects(contextObject *IModelObject, otherObject *IModelObject, comparisonResult *int32) HRESULT
}

type IComparableConceptVtbl struct {
	IUnknownVtbl
	CompareObjects uintptr
}

type IComparableConcept struct {
	IUnknown
}

func (this *IComparableConcept) Vtbl() *IComparableConceptVtbl {
	return (*IComparableConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IComparableConcept) CompareObjects(contextObject *IModelObject, otherObject *IModelObject, comparisonResult *int32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CompareObjects, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(otherObject)), uintptr(unsafe.Pointer(comparisonResult)))
	return HRESULT(ret)
}

// C52D5D3D-609D-4D5D-8A82-46B0ACDEC4F4
var IID_IEquatableConcept = syscall.GUID{0xC52D5D3D, 0x609D, 0x4D5D,
	[8]byte{0x8A, 0x82, 0x46, 0xB0, 0xAC, 0xDE, 0xC4, 0xF4}}

type IEquatableConceptInterface interface {
	IUnknownInterface
	AreObjectsEqual(contextObject *IModelObject, otherObject *IModelObject, isEqual *bool) HRESULT
}

type IEquatableConceptVtbl struct {
	IUnknownVtbl
	AreObjectsEqual uintptr
}

type IEquatableConcept struct {
	IUnknown
}

func (this *IEquatableConcept) Vtbl() *IEquatableConceptVtbl {
	return (*IEquatableConceptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEquatableConcept) AreObjectsEqual(contextObject *IModelObject, otherObject *IModelObject, isEqual *bool) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AreObjectsEqual, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(contextObject)), uintptr(unsafe.Pointer(otherObject)), uintptr(unsafe.Pointer(isEqual)))
	return HRESULT(ret)
}

// DB01A1E3-A42B-11CF-8F20-00805F2CD064
var IID_IActiveScriptSite = syscall.GUID{0xDB01A1E3, 0xA42B, 0x11CF,
	[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

type IActiveScriptSiteInterface interface {
	IUnknownInterface
	GetLCID(plcid *uint32) HRESULT
	GetItemInfo(pstrName PWSTR, dwReturnMask uint32, ppiunkItem **IUnknown, ppti **ITypeInfo) HRESULT
	GetDocVersionString(pbstrVersion *BSTR) HRESULT
	OnScriptTerminate(pvarResult *VARIANT, pexcepinfo *EXCEPINFO) HRESULT
	OnStateChange(ssScriptState SCRIPTSTATE) HRESULT
	OnScriptError(pscripterror *IActiveScriptError) HRESULT
	OnEnterScript() HRESULT
	OnLeaveScript() HRESULT
}

type IActiveScriptSiteVtbl struct {
	IUnknownVtbl
	GetLCID             uintptr
	GetItemInfo         uintptr
	GetDocVersionString uintptr
	OnScriptTerminate   uintptr
	OnStateChange       uintptr
	OnScriptError       uintptr
	OnEnterScript       uintptr
	OnLeaveScript       uintptr
}

type IActiveScriptSite struct {
	IUnknown
}

func (this *IActiveScriptSite) Vtbl() *IActiveScriptSiteVtbl {
	return (*IActiveScriptSiteVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptSite) GetLCID(plcid *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLCID, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(plcid)))
	return HRESULT(ret)
}

func (this *IActiveScriptSite) GetItemInfo(pstrName PWSTR, dwReturnMask uint32, ppiunkItem **IUnknown, ppti **ITypeInfo) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetItemInfo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrName)), uintptr(dwReturnMask), uintptr(unsafe.Pointer(ppiunkItem)), uintptr(unsafe.Pointer(ppti)))
	return HRESULT(ret)
}

func (this *IActiveScriptSite) GetDocVersionString(pbstrVersion *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocVersionString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrVersion)))
	return HRESULT(ret)
}

func (this *IActiveScriptSite) OnScriptTerminate(pvarResult *VARIANT, pexcepinfo *EXCEPINFO) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnScriptTerminate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pvarResult)), uintptr(unsafe.Pointer(pexcepinfo)))
	return HRESULT(ret)
}

func (this *IActiveScriptSite) OnStateChange(ssScriptState SCRIPTSTATE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnStateChange, uintptr(unsafe.Pointer(this)), uintptr(ssScriptState))
	return HRESULT(ret)
}

func (this *IActiveScriptSite) OnScriptError(pscripterror *IActiveScriptError) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnScriptError, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pscripterror)))
	return HRESULT(ret)
}

func (this *IActiveScriptSite) OnEnterScript() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnEnterScript, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IActiveScriptSite) OnLeaveScript() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnLeaveScript, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// EAE1BA61-A4ED-11CF-8F20-00805F2CD064
var IID_IActiveScriptError = syscall.GUID{0xEAE1BA61, 0xA4ED, 0x11CF,
	[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

type IActiveScriptErrorInterface interface {
	IUnknownInterface
	GetExceptionInfo(pexcepinfo *EXCEPINFO) HRESULT
	GetSourcePosition(pdwSourceContext *uint32, pulLineNumber *uint32, plCharacterPosition *int32) HRESULT
	GetSourceLineText(pbstrSourceLine *BSTR) HRESULT
}

type IActiveScriptErrorVtbl struct {
	IUnknownVtbl
	GetExceptionInfo  uintptr
	GetSourcePosition uintptr
	GetSourceLineText uintptr
}

type IActiveScriptError struct {
	IUnknown
}

func (this *IActiveScriptError) Vtbl() *IActiveScriptErrorVtbl {
	return (*IActiveScriptErrorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptError) GetExceptionInfo(pexcepinfo *EXCEPINFO) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionInfo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pexcepinfo)))
	return HRESULT(ret)
}

func (this *IActiveScriptError) GetSourcePosition(pdwSourceContext *uint32, pulLineNumber *uint32, plCharacterPosition *int32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePosition, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdwSourceContext)), uintptr(unsafe.Pointer(pulLineNumber)), uintptr(unsafe.Pointer(plCharacterPosition)))
	return HRESULT(ret)
}

func (this *IActiveScriptError) GetSourceLineText(pbstrSourceLine *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourceLineText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrSourceLine)))
	return HRESULT(ret)
}

// B21FB2A1-5B8F-4963-8C21-21450F84ED7F
var IID_IActiveScriptError64 = syscall.GUID{0xB21FB2A1, 0x5B8F, 0x4963,
	[8]byte{0x8C, 0x21, 0x21, 0x45, 0x0F, 0x84, 0xED, 0x7F}}

type IActiveScriptError64Interface interface {
	IActiveScriptErrorInterface
	GetSourcePosition64(pdwSourceContext *uint64, pulLineNumber *uint32, plCharacterPosition *int32) HRESULT
}

type IActiveScriptError64Vtbl struct {
	IActiveScriptErrorVtbl
	GetSourcePosition64 uintptr
}

type IActiveScriptError64 struct {
	IActiveScriptError
}

func (this *IActiveScriptError64) Vtbl() *IActiveScriptError64Vtbl {
	return (*IActiveScriptError64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptError64) GetSourcePosition64(pdwSourceContext *uint64, pulLineNumber *uint32, plCharacterPosition *int32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSourcePosition64, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdwSourceContext)), uintptr(unsafe.Pointer(pulLineNumber)), uintptr(unsafe.Pointer(plCharacterPosition)))
	return HRESULT(ret)
}

// D10F6761-83E9-11CF-8F20-00805F2CD064
var IID_IActiveScriptSiteWindow = syscall.GUID{0xD10F6761, 0x83E9, 0x11CF,
	[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

type IActiveScriptSiteWindowInterface interface {
	IUnknownInterface
	GetWindow(phwnd *HWND) HRESULT
	EnableModeless(fEnable BOOL) HRESULT
}

type IActiveScriptSiteWindowVtbl struct {
	IUnknownVtbl
	GetWindow      uintptr
	EnableModeless uintptr
}

type IActiveScriptSiteWindow struct {
	IUnknown
}

func (this *IActiveScriptSiteWindow) Vtbl() *IActiveScriptSiteWindowVtbl {
	return (*IActiveScriptSiteWindowVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptSiteWindow) GetWindow(phwnd *HWND) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetWindow, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(phwnd)))
	return HRESULT(ret)
}

func (this *IActiveScriptSiteWindow) EnableModeless(fEnable BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnableModeless, uintptr(unsafe.Pointer(this)), uintptr(fEnable))
	return HRESULT(ret)
}

// AEDAE97E-D7EE-4796-B960-7F092AE844AB
var IID_IActiveScriptSiteUIControl = syscall.GUID{0xAEDAE97E, 0xD7EE, 0x4796,
	[8]byte{0xB9, 0x60, 0x7F, 0x09, 0x2A, 0xE8, 0x44, 0xAB}}

type IActiveScriptSiteUIControlInterface interface {
	IUnknownInterface
	GetUIBehavior(UicItem SCRIPTUICITEM, pUicHandling *SCRIPTUICHANDLING) HRESULT
}

type IActiveScriptSiteUIControlVtbl struct {
	IUnknownVtbl
	GetUIBehavior uintptr
}

type IActiveScriptSiteUIControl struct {
	IUnknown
}

func (this *IActiveScriptSiteUIControl) Vtbl() *IActiveScriptSiteUIControlVtbl {
	return (*IActiveScriptSiteUIControlVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptSiteUIControl) GetUIBehavior(UicItem SCRIPTUICITEM, pUicHandling *SCRIPTUICHANDLING) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetUIBehavior, uintptr(unsafe.Pointer(this)), uintptr(UicItem), uintptr(unsafe.Pointer(pUicHandling)))
	return HRESULT(ret)
}

// 539698A0-CDCA-11CF-A5EB-00AA0047A063
var IID_IActiveScriptSiteInterruptPoll = syscall.GUID{0x539698A0, 0xCDCA, 0x11CF,
	[8]byte{0xA5, 0xEB, 0x00, 0xAA, 0x00, 0x47, 0xA0, 0x63}}

type IActiveScriptSiteInterruptPollInterface interface {
	IUnknownInterface
	QueryContinue() HRESULT
}

type IActiveScriptSiteInterruptPollVtbl struct {
	IUnknownVtbl
	QueryContinue uintptr
}

type IActiveScriptSiteInterruptPoll struct {
	IUnknown
}

func (this *IActiveScriptSiteInterruptPoll) Vtbl() *IActiveScriptSiteInterruptPollVtbl {
	return (*IActiveScriptSiteInterruptPollVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptSiteInterruptPoll) QueryContinue() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryContinue, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// BB1A2AE1-A4F9-11CF-8F20-00805F2CD064
var IID_IActiveScript = syscall.GUID{0xBB1A2AE1, 0xA4F9, 0x11CF,
	[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

type IActiveScriptInterface interface {
	IUnknownInterface
	SetScriptSite(pass *IActiveScriptSite) HRESULT
	GetScriptSite(riid *syscall.GUID, ppvObject unsafe.Pointer) HRESULT
	SetScriptState(ss SCRIPTSTATE) HRESULT
	GetScriptState(pssState *SCRIPTSTATE) HRESULT
	Close() HRESULT
	AddNamedItem(pstrName PWSTR, dwFlags uint32) HRESULT
	AddTypeLib(rguidTypeLib *syscall.GUID, dwMajor uint32, dwMinor uint32, dwFlags uint32) HRESULT
	GetScriptDispatch(pstrItemName PWSTR, ppdisp **IDispatch) HRESULT
	GetCurrentScriptThreadID(pstidThread *uint32) HRESULT
	GetScriptThreadID(dwWin32ThreadId uint32, pstidThread *uint32) HRESULT
	GetScriptThreadState(stidThread uint32, pstsState *SCRIPTTHREADSTATE) HRESULT
	InterruptScriptThread(stidThread uint32, pexcepinfo *EXCEPINFO, dwFlags uint32) HRESULT
	Clone(ppscript **IActiveScript) HRESULT
}

type IActiveScriptVtbl struct {
	IUnknownVtbl
	SetScriptSite            uintptr
	GetScriptSite            uintptr
	SetScriptState           uintptr
	GetScriptState           uintptr
	Close                    uintptr
	AddNamedItem             uintptr
	AddTypeLib               uintptr
	GetScriptDispatch        uintptr
	GetCurrentScriptThreadID uintptr
	GetScriptThreadID        uintptr
	GetScriptThreadState     uintptr
	InterruptScriptThread    uintptr
	Clone                    uintptr
}

type IActiveScript struct {
	IUnknown
}

func (this *IActiveScript) Vtbl() *IActiveScriptVtbl {
	return (*IActiveScriptVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScript) SetScriptSite(pass *IActiveScriptSite) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScriptSite, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pass)))
	return HRESULT(ret)
}

func (this *IActiveScript) GetScriptSite(riid *syscall.GUID, ppvObject unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptSite, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(riid)), uintptr(ppvObject))
	return HRESULT(ret)
}

func (this *IActiveScript) SetScriptState(ss SCRIPTSTATE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetScriptState, uintptr(unsafe.Pointer(this)), uintptr(ss))
	return HRESULT(ret)
}

func (this *IActiveScript) GetScriptState(pssState *SCRIPTSTATE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptState, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pssState)))
	return HRESULT(ret)
}

func (this *IActiveScript) Close() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Close, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IActiveScript) AddNamedItem(pstrName PWSTR, dwFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddNamedItem, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrName)), uintptr(dwFlags))
	return HRESULT(ret)
}

func (this *IActiveScript) AddTypeLib(rguidTypeLib *syscall.GUID, dwMajor uint32, dwMinor uint32, dwFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddTypeLib, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(rguidTypeLib)), uintptr(dwMajor), uintptr(dwMinor), uintptr(dwFlags))
	return HRESULT(ret)
}

func (this *IActiveScript) GetScriptDispatch(pstrItemName PWSTR, ppdisp **IDispatch) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptDispatch, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrItemName)), uintptr(unsafe.Pointer(ppdisp)))
	return HRESULT(ret)
}

func (this *IActiveScript) GetCurrentScriptThreadID(pstidThread *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentScriptThreadID, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstidThread)))
	return HRESULT(ret)
}

func (this *IActiveScript) GetScriptThreadID(dwWin32ThreadId uint32, pstidThread *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptThreadID, uintptr(unsafe.Pointer(this)), uintptr(dwWin32ThreadId), uintptr(unsafe.Pointer(pstidThread)))
	return HRESULT(ret)
}

func (this *IActiveScript) GetScriptThreadState(stidThread uint32, pstsState *SCRIPTTHREADSTATE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptThreadState, uintptr(unsafe.Pointer(this)), uintptr(stidThread), uintptr(unsafe.Pointer(pstsState)))
	return HRESULT(ret)
}

func (this *IActiveScript) InterruptScriptThread(stidThread uint32, pexcepinfo *EXCEPINFO, dwFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InterruptScriptThread, uintptr(unsafe.Pointer(this)), uintptr(stidThread), uintptr(unsafe.Pointer(pexcepinfo)), uintptr(dwFlags))
	return HRESULT(ret)
}

func (this *IActiveScript) Clone(ppscript **IActiveScript) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppscript)))
	return HRESULT(ret)
}

// BB1A2AE2-A4F9-11CF-8F20-00805F2CD064
var IID_IActiveScriptParse32 = syscall.GUID{0xBB1A2AE2, 0xA4F9, 0x11CF,
	[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

type IActiveScriptParse32Interface interface {
	IUnknownInterface
	InitNew() HRESULT
	AddScriptlet(pstrDefaultName PWSTR, pstrCode PWSTR, pstrItemName PWSTR, pstrSubItemName PWSTR, pstrEventName PWSTR, pstrDelimiter PWSTR, dwSourceContextCookie uint32, ulStartingLineNumber uint32, dwFlags uint32, pbstrName *BSTR, pexcepinfo *EXCEPINFO) HRESULT
	ParseScriptText(pstrCode PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint32, ulStartingLineNumber uint32, dwFlags uint32, pvarResult *VARIANT, pexcepinfo *EXCEPINFO) HRESULT
}

type IActiveScriptParse32Vtbl struct {
	IUnknownVtbl
	InitNew         uintptr
	AddScriptlet    uintptr
	ParseScriptText uintptr
}

type IActiveScriptParse32 struct {
	IUnknown
}

func (this *IActiveScriptParse32) Vtbl() *IActiveScriptParse32Vtbl {
	return (*IActiveScriptParse32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptParse32) InitNew() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InitNew, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IActiveScriptParse32) AddScriptlet(pstrDefaultName PWSTR, pstrCode PWSTR, pstrItemName PWSTR, pstrSubItemName PWSTR, pstrEventName PWSTR, pstrDelimiter PWSTR, dwSourceContextCookie uint32, ulStartingLineNumber uint32, dwFlags uint32, pbstrName *BSTR, pexcepinfo *EXCEPINFO) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddScriptlet, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrDefaultName)), uintptr(unsafe.Pointer(pstrCode)), uintptr(unsafe.Pointer(pstrItemName)), uintptr(unsafe.Pointer(pstrSubItemName)), uintptr(unsafe.Pointer(pstrEventName)), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwSourceContextCookie), uintptr(ulStartingLineNumber), uintptr(dwFlags), uintptr(unsafe.Pointer(pbstrName)), uintptr(unsafe.Pointer(pexcepinfo)))
	return HRESULT(ret)
}

func (this *IActiveScriptParse32) ParseScriptText(pstrCode PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint32, ulStartingLineNumber uint32, dwFlags uint32, pvarResult *VARIANT, pexcepinfo *EXCEPINFO) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ParseScriptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(unsafe.Pointer(pstrItemName)), uintptr(unsafe.Pointer(punkContext)), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwSourceContextCookie), uintptr(ulStartingLineNumber), uintptr(dwFlags), uintptr(unsafe.Pointer(pvarResult)), uintptr(unsafe.Pointer(pexcepinfo)))
	return HRESULT(ret)
}

// C7EF7658-E1EE-480E-97EA-D52CB4D76D17
var IID_IActiveScriptParse64 = syscall.GUID{0xC7EF7658, 0xE1EE, 0x480E,
	[8]byte{0x97, 0xEA, 0xD5, 0x2C, 0xB4, 0xD7, 0x6D, 0x17}}

type IActiveScriptParse64Interface interface {
	IUnknownInterface
	InitNew() HRESULT
	AddScriptlet(pstrDefaultName PWSTR, pstrCode PWSTR, pstrItemName PWSTR, pstrSubItemName PWSTR, pstrEventName PWSTR, pstrDelimiter PWSTR, dwSourceContextCookie uint64, ulStartingLineNumber uint32, dwFlags uint32, pbstrName *BSTR, pexcepinfo *EXCEPINFO) HRESULT
	ParseScriptText(pstrCode PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint64, ulStartingLineNumber uint32, dwFlags uint32, pvarResult *VARIANT, pexcepinfo *EXCEPINFO) HRESULT
}

type IActiveScriptParse64Vtbl struct {
	IUnknownVtbl
	InitNew         uintptr
	AddScriptlet    uintptr
	ParseScriptText uintptr
}

type IActiveScriptParse64 struct {
	IUnknown
}

func (this *IActiveScriptParse64) Vtbl() *IActiveScriptParse64Vtbl {
	return (*IActiveScriptParse64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptParse64) InitNew() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InitNew, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IActiveScriptParse64) AddScriptlet(pstrDefaultName PWSTR, pstrCode PWSTR, pstrItemName PWSTR, pstrSubItemName PWSTR, pstrEventName PWSTR, pstrDelimiter PWSTR, dwSourceContextCookie uint64, ulStartingLineNumber uint32, dwFlags uint32, pbstrName *BSTR, pexcepinfo *EXCEPINFO) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddScriptlet, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrDefaultName)), uintptr(unsafe.Pointer(pstrCode)), uintptr(unsafe.Pointer(pstrItemName)), uintptr(unsafe.Pointer(pstrSubItemName)), uintptr(unsafe.Pointer(pstrEventName)), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwSourceContextCookie), uintptr(ulStartingLineNumber), uintptr(dwFlags), uintptr(unsafe.Pointer(pbstrName)), uintptr(unsafe.Pointer(pexcepinfo)))
	return HRESULT(ret)
}

func (this *IActiveScriptParse64) ParseScriptText(pstrCode PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint64, ulStartingLineNumber uint32, dwFlags uint32, pvarResult *VARIANT, pexcepinfo *EXCEPINFO) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ParseScriptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(unsafe.Pointer(pstrItemName)), uintptr(unsafe.Pointer(punkContext)), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwSourceContextCookie), uintptr(ulStartingLineNumber), uintptr(dwFlags), uintptr(unsafe.Pointer(pvarResult)), uintptr(unsafe.Pointer(pexcepinfo)))
	return HRESULT(ret)
}

// 1CFF0050-6FDD-11D0-9328-00A0C90DCAA9
var IID_IActiveScriptParseProcedureOld32 = syscall.GUID{0x1CFF0050, 0x6FDD, 0x11D0,
	[8]byte{0x93, 0x28, 0x00, 0xA0, 0xC9, 0x0D, 0xCA, 0xA9}}

type IActiveScriptParseProcedureOld32Interface interface {
	IUnknownInterface
	ParseProcedureText(pstrCode PWSTR, pstrFormalParams PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint32, ulStartingLineNumber uint32, dwFlags uint32, ppdisp **IDispatch) HRESULT
}

type IActiveScriptParseProcedureOld32Vtbl struct {
	IUnknownVtbl
	ParseProcedureText uintptr
}

type IActiveScriptParseProcedureOld32 struct {
	IUnknown
}

func (this *IActiveScriptParseProcedureOld32) Vtbl() *IActiveScriptParseProcedureOld32Vtbl {
	return (*IActiveScriptParseProcedureOld32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptParseProcedureOld32) ParseProcedureText(pstrCode PWSTR, pstrFormalParams PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint32, ulStartingLineNumber uint32, dwFlags uint32, ppdisp **IDispatch) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ParseProcedureText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(unsafe.Pointer(pstrFormalParams)), uintptr(unsafe.Pointer(pstrItemName)), uintptr(unsafe.Pointer(punkContext)), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwSourceContextCookie), uintptr(ulStartingLineNumber), uintptr(dwFlags), uintptr(unsafe.Pointer(ppdisp)))
	return HRESULT(ret)
}

// 21F57128-08C9-4638-BA12-22D15D88DC5C
var IID_IActiveScriptParseProcedureOld64 = syscall.GUID{0x21F57128, 0x08C9, 0x4638,
	[8]byte{0xBA, 0x12, 0x22, 0xD1, 0x5D, 0x88, 0xDC, 0x5C}}

type IActiveScriptParseProcedureOld64Interface interface {
	IUnknownInterface
	ParseProcedureText(pstrCode PWSTR, pstrFormalParams PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint64, ulStartingLineNumber uint32, dwFlags uint32, ppdisp **IDispatch) HRESULT
}

type IActiveScriptParseProcedureOld64Vtbl struct {
	IUnknownVtbl
	ParseProcedureText uintptr
}

type IActiveScriptParseProcedureOld64 struct {
	IUnknown
}

func (this *IActiveScriptParseProcedureOld64) Vtbl() *IActiveScriptParseProcedureOld64Vtbl {
	return (*IActiveScriptParseProcedureOld64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptParseProcedureOld64) ParseProcedureText(pstrCode PWSTR, pstrFormalParams PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint64, ulStartingLineNumber uint32, dwFlags uint32, ppdisp **IDispatch) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ParseProcedureText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(unsafe.Pointer(pstrFormalParams)), uintptr(unsafe.Pointer(pstrItemName)), uintptr(unsafe.Pointer(punkContext)), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwSourceContextCookie), uintptr(ulStartingLineNumber), uintptr(dwFlags), uintptr(unsafe.Pointer(ppdisp)))
	return HRESULT(ret)
}

// AA5B6A80-B834-11D0-932F-00A0C90DCAA9
var IID_IActiveScriptParseProcedure32 = syscall.GUID{0xAA5B6A80, 0xB834, 0x11D0,
	[8]byte{0x93, 0x2F, 0x00, 0xA0, 0xC9, 0x0D, 0xCA, 0xA9}}

type IActiveScriptParseProcedure32Interface interface {
	IUnknownInterface
	ParseProcedureText(pstrCode PWSTR, pstrFormalParams PWSTR, pstrProcedureName PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint32, ulStartingLineNumber uint32, dwFlags uint32, ppdisp **IDispatch) HRESULT
}

type IActiveScriptParseProcedure32Vtbl struct {
	IUnknownVtbl
	ParseProcedureText uintptr
}

type IActiveScriptParseProcedure32 struct {
	IUnknown
}

func (this *IActiveScriptParseProcedure32) Vtbl() *IActiveScriptParseProcedure32Vtbl {
	return (*IActiveScriptParseProcedure32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptParseProcedure32) ParseProcedureText(pstrCode PWSTR, pstrFormalParams PWSTR, pstrProcedureName PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint32, ulStartingLineNumber uint32, dwFlags uint32, ppdisp **IDispatch) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ParseProcedureText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(unsafe.Pointer(pstrFormalParams)), uintptr(unsafe.Pointer(pstrProcedureName)), uintptr(unsafe.Pointer(pstrItemName)), uintptr(unsafe.Pointer(punkContext)), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwSourceContextCookie), uintptr(ulStartingLineNumber), uintptr(dwFlags), uintptr(unsafe.Pointer(ppdisp)))
	return HRESULT(ret)
}

// C64713B6-E029-4CC5-9200-438B72890B6A
var IID_IActiveScriptParseProcedure64 = syscall.GUID{0xC64713B6, 0xE029, 0x4CC5,
	[8]byte{0x92, 0x00, 0x43, 0x8B, 0x72, 0x89, 0x0B, 0x6A}}

type IActiveScriptParseProcedure64Interface interface {
	IUnknownInterface
	ParseProcedureText(pstrCode PWSTR, pstrFormalParams PWSTR, pstrProcedureName PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint64, ulStartingLineNumber uint32, dwFlags uint32, ppdisp **IDispatch) HRESULT
}

type IActiveScriptParseProcedure64Vtbl struct {
	IUnknownVtbl
	ParseProcedureText uintptr
}

type IActiveScriptParseProcedure64 struct {
	IUnknown
}

func (this *IActiveScriptParseProcedure64) Vtbl() *IActiveScriptParseProcedure64Vtbl {
	return (*IActiveScriptParseProcedure64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptParseProcedure64) ParseProcedureText(pstrCode PWSTR, pstrFormalParams PWSTR, pstrProcedureName PWSTR, pstrItemName PWSTR, punkContext *IUnknown, pstrDelimiter PWSTR, dwSourceContextCookie uint64, ulStartingLineNumber uint32, dwFlags uint32, ppdisp **IDispatch) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ParseProcedureText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(unsafe.Pointer(pstrFormalParams)), uintptr(unsafe.Pointer(pstrProcedureName)), uintptr(unsafe.Pointer(pstrItemName)), uintptr(unsafe.Pointer(punkContext)), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwSourceContextCookie), uintptr(ulStartingLineNumber), uintptr(dwFlags), uintptr(unsafe.Pointer(ppdisp)))
	return HRESULT(ret)
}

// 71EE5B20-FB04-11D1-B3A8-00A0C911E8B2
var IID_IActiveScriptParseProcedure2_32 = syscall.GUID{0x71EE5B20, 0xFB04, 0x11D1,
	[8]byte{0xB3, 0xA8, 0x00, 0xA0, 0xC9, 0x11, 0xE8, 0xB2}}

type IActiveScriptParseProcedure2_32Interface interface {
	IActiveScriptParseProcedure32Interface
}

type IActiveScriptParseProcedure2_32Vtbl struct {
	IActiveScriptParseProcedure32Vtbl
}

type IActiveScriptParseProcedure2_32 struct {
	IActiveScriptParseProcedure32
}

func (this *IActiveScriptParseProcedure2_32) Vtbl() *IActiveScriptParseProcedure2_32Vtbl {
	return (*IActiveScriptParseProcedure2_32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

// FE7C4271-210C-448D-9F54-76DAB7047B28
var IID_IActiveScriptParseProcedure2_64 = syscall.GUID{0xFE7C4271, 0x210C, 0x448D,
	[8]byte{0x9F, 0x54, 0x76, 0xDA, 0xB7, 0x04, 0x7B, 0x28}}

type IActiveScriptParseProcedure2_64Interface interface {
	IActiveScriptParseProcedure64Interface
}

type IActiveScriptParseProcedure2_64Vtbl struct {
	IActiveScriptParseProcedure64Vtbl
}

type IActiveScriptParseProcedure2_64 struct {
	IActiveScriptParseProcedure64
}

func (this *IActiveScriptParseProcedure2_64) Vtbl() *IActiveScriptParseProcedure2_64Vtbl {
	return (*IActiveScriptParseProcedure2_64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

// BB1A2AE3-A4F9-11CF-8F20-00805F2CD064
var IID_IActiveScriptEncode = syscall.GUID{0xBB1A2AE3, 0xA4F9, 0x11CF,
	[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

type IActiveScriptEncodeInterface interface {
	IUnknownInterface
	EncodeSection(pchIn PWSTR, cchIn uint32, pchOut PWSTR, cchOut uint32, pcchRet *uint32) HRESULT
	DecodeScript(pchIn PWSTR, cchIn uint32, pchOut PWSTR, cchOut uint32, pcchRet *uint32) HRESULT
	GetEncodeProgId(pbstrOut *BSTR) HRESULT
}

type IActiveScriptEncodeVtbl struct {
	IUnknownVtbl
	EncodeSection   uintptr
	DecodeScript    uintptr
	GetEncodeProgId uintptr
}

type IActiveScriptEncode struct {
	IUnknown
}

func (this *IActiveScriptEncode) Vtbl() *IActiveScriptEncodeVtbl {
	return (*IActiveScriptEncodeVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptEncode) EncodeSection(pchIn PWSTR, cchIn uint32, pchOut PWSTR, cchOut uint32, pcchRet *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EncodeSection, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pchIn)), uintptr(cchIn), uintptr(unsafe.Pointer(pchOut)), uintptr(cchOut), uintptr(unsafe.Pointer(pcchRet)))
	return HRESULT(ret)
}

func (this *IActiveScriptEncode) DecodeScript(pchIn PWSTR, cchIn uint32, pchOut PWSTR, cchOut uint32, pcchRet *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DecodeScript, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pchIn)), uintptr(cchIn), uintptr(unsafe.Pointer(pchOut)), uintptr(cchOut), uintptr(unsafe.Pointer(pcchRet)))
	return HRESULT(ret)
}

func (this *IActiveScriptEncode) GetEncodeProgId(pbstrOut *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEncodeProgId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrOut)))
	return HRESULT(ret)
}

// BEE9B76E-CFE3-11D1-B747-00C04FC2B085
var IID_IActiveScriptHostEncode = syscall.GUID{0xBEE9B76E, 0xCFE3, 0x11D1,
	[8]byte{0xB7, 0x47, 0x00, 0xC0, 0x4F, 0xC2, 0xB0, 0x85}}

type IActiveScriptHostEncodeInterface interface {
	IUnknownInterface
	EncodeScriptHostFile(bstrInFile BSTR, pbstrOutFile *BSTR, cFlags uint32, bstrDefaultLang BSTR) HRESULT
}

type IActiveScriptHostEncodeVtbl struct {
	IUnknownVtbl
	EncodeScriptHostFile uintptr
}

type IActiveScriptHostEncode struct {
	IUnknown
}

func (this *IActiveScriptHostEncode) Vtbl() *IActiveScriptHostEncodeVtbl {
	return (*IActiveScriptHostEncodeVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptHostEncode) EncodeScriptHostFile(bstrInFile BSTR, pbstrOutFile *BSTR, cFlags uint32, bstrDefaultLang BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EncodeScriptHostFile, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(bstrInFile)), uintptr(unsafe.Pointer(pbstrOutFile)), uintptr(cFlags), uintptr(unsafe.Pointer(bstrDefaultLang)))
	return HRESULT(ret)
}

// 63CDBCB0-C1B1-11D0-9336-00A0C90DCAA9
var IID_IBindEventHandler = syscall.GUID{0x63CDBCB0, 0xC1B1, 0x11D0,
	[8]byte{0x93, 0x36, 0x00, 0xA0, 0xC9, 0x0D, 0xCA, 0xA9}}

type IBindEventHandlerInterface interface {
	IUnknownInterface
	BindHandler(pstrEvent PWSTR, pdisp *IDispatch) HRESULT
}

type IBindEventHandlerVtbl struct {
	IUnknownVtbl
	BindHandler uintptr
}

type IBindEventHandler struct {
	IUnknown
}

func (this *IBindEventHandler) Vtbl() *IBindEventHandlerVtbl {
	return (*IBindEventHandlerVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IBindEventHandler) BindHandler(pstrEvent PWSTR, pdisp *IDispatch) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().BindHandler, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrEvent)), uintptr(unsafe.Pointer(pdisp)))
	return HRESULT(ret)
}

// B8DA6310-E19B-11D0-933C-00A0C90DCAA9
var IID_IActiveScriptStats = syscall.GUID{0xB8DA6310, 0xE19B, 0x11D0,
	[8]byte{0x93, 0x3C, 0x00, 0xA0, 0xC9, 0x0D, 0xCA, 0xA9}}

type IActiveScriptStatsInterface interface {
	IUnknownInterface
	GetStat(stid uint32, pluHi *uint32, pluLo *uint32) HRESULT
	GetStatEx(guid *syscall.GUID, pluHi *uint32, pluLo *uint32) HRESULT
	ResetStats() HRESULT
}

type IActiveScriptStatsVtbl struct {
	IUnknownVtbl
	GetStat    uintptr
	GetStatEx  uintptr
	ResetStats uintptr
}

type IActiveScriptStats struct {
	IUnknown
}

func (this *IActiveScriptStats) Vtbl() *IActiveScriptStatsVtbl {
	return (*IActiveScriptStatsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptStats) GetStat(stid uint32, pluHi *uint32, pluLo *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStat, uintptr(unsafe.Pointer(this)), uintptr(stid), uintptr(unsafe.Pointer(pluHi)), uintptr(unsafe.Pointer(pluLo)))
	return HRESULT(ret)
}

func (this *IActiveScriptStats) GetStatEx(guid *syscall.GUID, pluHi *uint32, pluLo *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStatEx, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(guid)), uintptr(unsafe.Pointer(pluHi)), uintptr(unsafe.Pointer(pluLo)))
	return HRESULT(ret)
}

func (this *IActiveScriptStats) ResetStats() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResetStats, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 4954E0D0-FBC7-11D1-8410-006008C3FBFC
var IID_IActiveScriptProperty = syscall.GUID{0x4954E0D0, 0xFBC7, 0x11D1,
	[8]byte{0x84, 0x10, 0x00, 0x60, 0x08, 0xC3, 0xFB, 0xFC}}

type IActiveScriptPropertyInterface interface {
	IUnknownInterface
	GetProperty(dwProperty uint32, pvarIndex *VARIANT, pvarValue *VARIANT) HRESULT
	SetProperty(dwProperty uint32, pvarIndex *VARIANT, pvarValue *VARIANT) HRESULT
}

type IActiveScriptPropertyVtbl struct {
	IUnknownVtbl
	GetProperty uintptr
	SetProperty uintptr
}

type IActiveScriptProperty struct {
	IUnknown
}

func (this *IActiveScriptProperty) Vtbl() *IActiveScriptPropertyVtbl {
	return (*IActiveScriptPropertyVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProperty) GetProperty(dwProperty uint32, pvarIndex *VARIANT, pvarValue *VARIANT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetProperty, uintptr(unsafe.Pointer(this)), uintptr(dwProperty), uintptr(unsafe.Pointer(pvarIndex)), uintptr(unsafe.Pointer(pvarValue)))
	return HRESULT(ret)
}

func (this *IActiveScriptProperty) SetProperty(dwProperty uint32, pvarIndex *VARIANT, pvarValue *VARIANT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProperty, uintptr(unsafe.Pointer(this)), uintptr(dwProperty), uintptr(unsafe.Pointer(pvarIndex)), uintptr(unsafe.Pointer(pvarValue)))
	return HRESULT(ret)
}

// 1DC9CA50-06EF-11D2-8415-006008C3FBFC
var IID_ITridentEventSink = syscall.GUID{0x1DC9CA50, 0x06EF, 0x11D2,
	[8]byte{0x84, 0x15, 0x00, 0x60, 0x08, 0xC3, 0xFB, 0xFC}}

type ITridentEventSinkInterface interface {
	IUnknownInterface
	FireEvent(pstrEvent PWSTR, pdp *DISPPARAMS, pvarRes *VARIANT, pei *EXCEPINFO) HRESULT
}

type ITridentEventSinkVtbl struct {
	IUnknownVtbl
	FireEvent uintptr
}

type ITridentEventSink struct {
	IUnknown
}

func (this *ITridentEventSink) Vtbl() *ITridentEventSinkVtbl {
	return (*ITridentEventSinkVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *ITridentEventSink) FireEvent(pstrEvent PWSTR, pdp *DISPPARAMS, pvarRes *VARIANT, pei *EXCEPINFO) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FireEvent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrEvent)), uintptr(unsafe.Pointer(pdp)), uintptr(unsafe.Pointer(pvarRes)), uintptr(unsafe.Pointer(pei)))
	return HRESULT(ret)
}

// 6AA2C4A0-2B53-11D4-A2A0-00104BD35090
var IID_IActiveScriptGarbageCollector = syscall.GUID{0x6AA2C4A0, 0x2B53, 0x11D4,
	[8]byte{0xA2, 0xA0, 0x00, 0x10, 0x4B, 0xD3, 0x50, 0x90}}

type IActiveScriptGarbageCollectorInterface interface {
	IUnknownInterface
	CollectGarbage(scriptgctype SCRIPTGCTYPE) HRESULT
}

type IActiveScriptGarbageCollectorVtbl struct {
	IUnknownVtbl
	CollectGarbage uintptr
}

type IActiveScriptGarbageCollector struct {
	IUnknown
}

func (this *IActiveScriptGarbageCollector) Vtbl() *IActiveScriptGarbageCollectorVtbl {
	return (*IActiveScriptGarbageCollectorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptGarbageCollector) CollectGarbage(scriptgctype SCRIPTGCTYPE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CollectGarbage, uintptr(unsafe.Pointer(this)), uintptr(scriptgctype))
	return HRESULT(ret)
}

// 764651D0-38DE-11D4-A2A3-00104BD35090
var IID_IActiveScriptSIPInfo = syscall.GUID{0x764651D0, 0x38DE, 0x11D4,
	[8]byte{0xA2, 0xA3, 0x00, 0x10, 0x4B, 0xD3, 0x50, 0x90}}

type IActiveScriptSIPInfoInterface interface {
	IUnknownInterface
	GetSIPOID(poid_sip *syscall.GUID) HRESULT
}

type IActiveScriptSIPInfoVtbl struct {
	IUnknownVtbl
	GetSIPOID uintptr
}

type IActiveScriptSIPInfo struct {
	IUnknown
}

func (this *IActiveScriptSIPInfo) Vtbl() *IActiveScriptSIPInfoVtbl {
	return (*IActiveScriptSIPInfoVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptSIPInfo) GetSIPOID(poid_sip *syscall.GUID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSIPOID, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(poid_sip)))
	return HRESULT(ret)
}

// 4B7272AE-1955-4BFE-98B0-780621888569
var IID_IActiveScriptSiteTraceInfo = syscall.GUID{0x4B7272AE, 0x1955, 0x4BFE,
	[8]byte{0x98, 0xB0, 0x78, 0x06, 0x21, 0x88, 0x85, 0x69}}

type IActiveScriptSiteTraceInfoInterface interface {
	IUnknownInterface
	SendScriptTraceInfo(stiEventType SCRIPTTRACEINFO, guidContextID syscall.GUID, dwScriptContextCookie uint32, lScriptStatementStart int32, lScriptStatementEnd int32, dwReserved uint64) HRESULT
}

type IActiveScriptSiteTraceInfoVtbl struct {
	IUnknownVtbl
	SendScriptTraceInfo uintptr
}

type IActiveScriptSiteTraceInfo struct {
	IUnknown
}

func (this *IActiveScriptSiteTraceInfo) Vtbl() *IActiveScriptSiteTraceInfoVtbl {
	return (*IActiveScriptSiteTraceInfoVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptSiteTraceInfo) SendScriptTraceInfo(stiEventType SCRIPTTRACEINFO, guidContextID syscall.GUID, dwScriptContextCookie uint32, lScriptStatementStart int32, lScriptStatementEnd int32, dwReserved uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SendScriptTraceInfo, uintptr(unsafe.Pointer(this)), uintptr(stiEventType), uintptr(unsafe.Pointer(&guidContextID)), uintptr(dwScriptContextCookie), uintptr(lScriptStatementStart), uintptr(lScriptStatementEnd), uintptr(dwReserved))
	return HRESULT(ret)
}

// C35456E7-BEBF-4A1B-86A9-24D56BE8B369
var IID_IActiveScriptTraceInfo = syscall.GUID{0xC35456E7, 0xBEBF, 0x4A1B,
	[8]byte{0x86, 0xA9, 0x24, 0xD5, 0x6B, 0xE8, 0xB3, 0x69}}

type IActiveScriptTraceInfoInterface interface {
	IUnknownInterface
	StartScriptTracing(pSiteTraceInfo *IActiveScriptSiteTraceInfo, guidContextID syscall.GUID) HRESULT
	StopScriptTracing() HRESULT
}

type IActiveScriptTraceInfoVtbl struct {
	IUnknownVtbl
	StartScriptTracing uintptr
	StopScriptTracing  uintptr
}

type IActiveScriptTraceInfo struct {
	IUnknown
}

func (this *IActiveScriptTraceInfo) Vtbl() *IActiveScriptTraceInfoVtbl {
	return (*IActiveScriptTraceInfoVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptTraceInfo) StartScriptTracing(pSiteTraceInfo *IActiveScriptSiteTraceInfo, guidContextID syscall.GUID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartScriptTracing, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pSiteTraceInfo)), uintptr(unsafe.Pointer(&guidContextID)))
	return HRESULT(ret)
}

func (this *IActiveScriptTraceInfo) StopScriptTracing() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StopScriptTracing, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 58562769-ED52-42F7-8403-4963514E1F11
var IID_IActiveScriptStringCompare = syscall.GUID{0x58562769, 0xED52, 0x42F7,
	[8]byte{0x84, 0x03, 0x49, 0x63, 0x51, 0x4E, 0x1F, 0x11}}

type IActiveScriptStringCompareInterface interface {
	IUnknownInterface
	StrComp(bszStr1 BSTR, bszStr2 BSTR, iRet *int32) HRESULT
}

type IActiveScriptStringCompareVtbl struct {
	IUnknownVtbl
	StrComp uintptr
}

type IActiveScriptStringCompare struct {
	IUnknown
}

func (this *IActiveScriptStringCompare) Vtbl() *IActiveScriptStringCompareVtbl {
	return (*IActiveScriptStringCompareVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptStringCompare) StrComp(bszStr1 BSTR, bszStr2 BSTR, iRet *int32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StrComp, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(bszStr1)), uintptr(unsafe.Pointer(bszStr2)), uintptr(unsafe.Pointer(iRet)))
	return HRESULT(ret)
}

// 51973C50-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugProperty = syscall.GUID{0x51973C50, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugPropertyInterface interface {
	IUnknownInterface
	GetPropertyInfo(dwFieldSpec uint32, nRadix uint32, pPropertyInfo *DebugPropertyInfo) HRESULT
	GetExtendedInfo(cInfos uint32, rgguidExtendedInfo *syscall.GUID, rgvar *VARIANT) HRESULT
	SetValueAsString(pszValue PWSTR, nRadix uint32) HRESULT
	EnumMembers(dwFieldSpec uint32, nRadix uint32, refiid *syscall.GUID, ppepi **IEnumDebugPropertyInfo) HRESULT
	GetParent(ppDebugProp **IDebugProperty) HRESULT
}

type IDebugPropertyVtbl struct {
	IUnknownVtbl
	GetPropertyInfo  uintptr
	GetExtendedInfo  uintptr
	SetValueAsString uintptr
	EnumMembers      uintptr
	GetParent        uintptr
}

type IDebugProperty struct {
	IUnknown
}

func (this *IDebugProperty) Vtbl() *IDebugPropertyVtbl {
	return (*IDebugPropertyVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugProperty) GetPropertyInfo(dwFieldSpec uint32, nRadix uint32, pPropertyInfo *DebugPropertyInfo) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPropertyInfo, uintptr(unsafe.Pointer(this)), uintptr(dwFieldSpec), uintptr(nRadix), uintptr(unsafe.Pointer(pPropertyInfo)))
	return HRESULT(ret)
}

func (this *IDebugProperty) GetExtendedInfo(cInfos uint32, rgguidExtendedInfo *syscall.GUID, rgvar *VARIANT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtendedInfo, uintptr(unsafe.Pointer(this)), uintptr(cInfos), uintptr(unsafe.Pointer(rgguidExtendedInfo)), uintptr(unsafe.Pointer(rgvar)))
	return HRESULT(ret)
}

func (this *IDebugProperty) SetValueAsString(pszValue PWSTR, nRadix uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetValueAsString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszValue)), uintptr(nRadix))
	return HRESULT(ret)
}

func (this *IDebugProperty) EnumMembers(dwFieldSpec uint32, nRadix uint32, refiid *syscall.GUID, ppepi **IEnumDebugPropertyInfo) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumMembers, uintptr(unsafe.Pointer(this)), uintptr(dwFieldSpec), uintptr(nRadix), uintptr(unsafe.Pointer(refiid)), uintptr(unsafe.Pointer(ppepi)))
	return HRESULT(ret)
}

func (this *IDebugProperty) GetParent(ppDebugProp **IDebugProperty) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetParent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppDebugProp)))
	return HRESULT(ret)
}

// 51973C51-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IEnumDebugPropertyInfo = syscall.GUID{0x51973C51, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IEnumDebugPropertyInfoInterface interface {
	IUnknownInterface
	Next(celt uint32, pi *DebugPropertyInfo, pcEltsfetched *uint32) HRESULT
	Skip(celt uint32) HRESULT
	Reset() HRESULT
	Clone(ppepi **IEnumDebugPropertyInfo) HRESULT
	GetCount(pcelt *uint32) HRESULT
}

type IEnumDebugPropertyInfoVtbl struct {
	IUnknownVtbl
	Next     uintptr
	Skip     uintptr
	Reset    uintptr
	Clone    uintptr
	GetCount uintptr
}

type IEnumDebugPropertyInfo struct {
	IUnknown
}

func (this *IEnumDebugPropertyInfo) Vtbl() *IEnumDebugPropertyInfoVtbl {
	return (*IEnumDebugPropertyInfoVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumDebugPropertyInfo) Next(celt uint32, pi *DebugPropertyInfo, pcEltsfetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(pi)), uintptr(unsafe.Pointer(pcEltsfetched)))
	return HRESULT(ret)
}

func (this *IEnumDebugPropertyInfo) Skip(celt uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Skip, uintptr(unsafe.Pointer(this)), uintptr(celt))
	return HRESULT(ret)
}

func (this *IEnumDebugPropertyInfo) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IEnumDebugPropertyInfo) Clone(ppepi **IEnumDebugPropertyInfo) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppepi)))
	return HRESULT(ret)
}

func (this *IEnumDebugPropertyInfo) GetCount(pcelt *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pcelt)))
	return HRESULT(ret)
}

// 51973C52-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugExtendedProperty = syscall.GUID{0x51973C52, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugExtendedPropertyInterface interface {
	IDebugPropertyInterface
	GetExtendedPropertyInfo(dwFieldSpec uint32, nRadix uint32, pExtendedPropertyInfo *ExtendedDebugPropertyInfo) HRESULT
	EnumExtendedMembers(dwFieldSpec uint32, nRadix uint32, ppeepi **IEnumDebugExtendedPropertyInfo) HRESULT
}

type IDebugExtendedPropertyVtbl struct {
	IDebugPropertyVtbl
	GetExtendedPropertyInfo uintptr
	EnumExtendedMembers     uintptr
}

type IDebugExtendedProperty struct {
	IDebugProperty
}

func (this *IDebugExtendedProperty) Vtbl() *IDebugExtendedPropertyVtbl {
	return (*IDebugExtendedPropertyVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugExtendedProperty) GetExtendedPropertyInfo(dwFieldSpec uint32, nRadix uint32, pExtendedPropertyInfo *ExtendedDebugPropertyInfo) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExtendedPropertyInfo, uintptr(unsafe.Pointer(this)), uintptr(dwFieldSpec), uintptr(nRadix), uintptr(unsafe.Pointer(pExtendedPropertyInfo)))
	return HRESULT(ret)
}

func (this *IDebugExtendedProperty) EnumExtendedMembers(dwFieldSpec uint32, nRadix uint32, ppeepi **IEnumDebugExtendedPropertyInfo) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumExtendedMembers, uintptr(unsafe.Pointer(this)), uintptr(dwFieldSpec), uintptr(nRadix), uintptr(unsafe.Pointer(ppeepi)))
	return HRESULT(ret)
}

// 51973C53-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IEnumDebugExtendedPropertyInfo = syscall.GUID{0x51973C53, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IEnumDebugExtendedPropertyInfoInterface interface {
	IUnknownInterface
	Next(celt uint32, rgExtendedPropertyInfo *ExtendedDebugPropertyInfo, pceltFetched *uint32) HRESULT
	Skip(celt uint32) HRESULT
	Reset() HRESULT
	Clone(pedpe **IEnumDebugExtendedPropertyInfo) HRESULT
	GetCount(pcelt *uint32) HRESULT
}

type IEnumDebugExtendedPropertyInfoVtbl struct {
	IUnknownVtbl
	Next     uintptr
	Skip     uintptr
	Reset    uintptr
	Clone    uintptr
	GetCount uintptr
}

type IEnumDebugExtendedPropertyInfo struct {
	IUnknown
}

func (this *IEnumDebugExtendedPropertyInfo) Vtbl() *IEnumDebugExtendedPropertyInfoVtbl {
	return (*IEnumDebugExtendedPropertyInfoVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumDebugExtendedPropertyInfo) Next(celt uint32, rgExtendedPropertyInfo *ExtendedDebugPropertyInfo, pceltFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(rgExtendedPropertyInfo)), uintptr(unsafe.Pointer(pceltFetched)))
	return HRESULT(ret)
}

func (this *IEnumDebugExtendedPropertyInfo) Skip(celt uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Skip, uintptr(unsafe.Pointer(this)), uintptr(celt))
	return HRESULT(ret)
}

func (this *IEnumDebugExtendedPropertyInfo) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IEnumDebugExtendedPropertyInfo) Clone(pedpe **IEnumDebugExtendedPropertyInfo) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pedpe)))
	return HRESULT(ret)
}

func (this *IEnumDebugExtendedPropertyInfo) GetCount(pcelt *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pcelt)))
	return HRESULT(ret)
}

// 51973C54-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IPerPropertyBrowsing2 = syscall.GUID{0x51973C54, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IPerPropertyBrowsing2Interface interface {
	IUnknownInterface
	GetDisplayString(dispid int32, pBstr *BSTR) HRESULT
	MapPropertyToPage(dispid int32, pClsidPropPage *syscall.GUID) HRESULT
	GetPredefinedStrings(dispid int32, pCaStrings *CALPOLESTR, pCaCookies *CADWORD) HRESULT
	SetPredefinedValue(dispid int32, dwCookie uint32) HRESULT
}

type IPerPropertyBrowsing2Vtbl struct {
	IUnknownVtbl
	GetDisplayString     uintptr
	MapPropertyToPage    uintptr
	GetPredefinedStrings uintptr
	SetPredefinedValue   uintptr
}

type IPerPropertyBrowsing2 struct {
	IUnknown
}

func (this *IPerPropertyBrowsing2) Vtbl() *IPerPropertyBrowsing2Vtbl {
	return (*IPerPropertyBrowsing2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IPerPropertyBrowsing2) GetDisplayString(dispid int32, pBstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDisplayString, uintptr(unsafe.Pointer(this)), uintptr(dispid), uintptr(unsafe.Pointer(pBstr)))
	return HRESULT(ret)
}

func (this *IPerPropertyBrowsing2) MapPropertyToPage(dispid int32, pClsidPropPage *syscall.GUID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().MapPropertyToPage, uintptr(unsafe.Pointer(this)), uintptr(dispid), uintptr(unsafe.Pointer(pClsidPropPage)))
	return HRESULT(ret)
}

func (this *IPerPropertyBrowsing2) GetPredefinedStrings(dispid int32, pCaStrings *CALPOLESTR, pCaCookies *CADWORD) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPredefinedStrings, uintptr(unsafe.Pointer(this)), uintptr(dispid), uintptr(unsafe.Pointer(pCaStrings)), uintptr(unsafe.Pointer(pCaCookies)))
	return HRESULT(ret)
}

func (this *IPerPropertyBrowsing2) SetPredefinedValue(dispid int32, dwCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetPredefinedValue, uintptr(unsafe.Pointer(this)), uintptr(dispid), uintptr(dwCookie))
	return HRESULT(ret)
}

// 51973C55-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugPropertyEnumType_All = syscall.GUID{0x51973C55, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugPropertyEnumType_AllInterface interface {
	IUnknownInterface
	GetName(__MIDL__IDebugPropertyEnumType_All0000 *BSTR) HRESULT
}

type IDebugPropertyEnumType_AllVtbl struct {
	IUnknownVtbl
	GetName uintptr
}

type IDebugPropertyEnumType_All struct {
	IUnknown
}

func (this *IDebugPropertyEnumType_All) Vtbl() *IDebugPropertyEnumType_AllVtbl {
	return (*IDebugPropertyEnumType_AllVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugPropertyEnumType_All) GetName(__MIDL__IDebugPropertyEnumType_All0000 *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(__MIDL__IDebugPropertyEnumType_All0000)))
	return HRESULT(ret)
}

// 51973C56-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugPropertyEnumType_Locals = syscall.GUID{0x51973C56, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugPropertyEnumType_LocalsInterface interface {
	IDebugPropertyEnumType_AllInterface
}

type IDebugPropertyEnumType_LocalsVtbl struct {
	IDebugPropertyEnumType_AllVtbl
}

type IDebugPropertyEnumType_Locals struct {
	IDebugPropertyEnumType_All
}

func (this *IDebugPropertyEnumType_Locals) Vtbl() *IDebugPropertyEnumType_LocalsVtbl {
	return (*IDebugPropertyEnumType_LocalsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

// 51973C57-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugPropertyEnumType_Arguments = syscall.GUID{0x51973C57, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugPropertyEnumType_ArgumentsInterface interface {
	IDebugPropertyEnumType_AllInterface
}

type IDebugPropertyEnumType_ArgumentsVtbl struct {
	IDebugPropertyEnumType_AllVtbl
}

type IDebugPropertyEnumType_Arguments struct {
	IDebugPropertyEnumType_All
}

func (this *IDebugPropertyEnumType_Arguments) Vtbl() *IDebugPropertyEnumType_ArgumentsVtbl {
	return (*IDebugPropertyEnumType_ArgumentsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

// 51973C58-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugPropertyEnumType_LocalsPlusArgs = syscall.GUID{0x51973C58, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugPropertyEnumType_LocalsPlusArgsInterface interface {
	IDebugPropertyEnumType_AllInterface
}

type IDebugPropertyEnumType_LocalsPlusArgsVtbl struct {
	IDebugPropertyEnumType_AllVtbl
}

type IDebugPropertyEnumType_LocalsPlusArgs struct {
	IDebugPropertyEnumType_All
}

func (this *IDebugPropertyEnumType_LocalsPlusArgs) Vtbl() *IDebugPropertyEnumType_LocalsPlusArgsVtbl {
	return (*IDebugPropertyEnumType_LocalsPlusArgsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

// 51973C59-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugPropertyEnumType_Registers = syscall.GUID{0x51973C59, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugPropertyEnumType_RegistersInterface interface {
	IDebugPropertyEnumType_AllInterface
}

type IDebugPropertyEnumType_RegistersVtbl struct {
	IDebugPropertyEnumType_AllVtbl
}

type IDebugPropertyEnumType_Registers struct {
	IDebugPropertyEnumType_All
}

func (this *IDebugPropertyEnumType_Registers) Vtbl() *IDebugPropertyEnumType_RegistersVtbl {
	return (*IDebugPropertyEnumType_RegistersVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

// 51973C10-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IActiveScriptDebug32 = syscall.GUID{0x51973C10, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IActiveScriptDebug32Interface interface {
	IUnknownInterface
	GetScriptTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT
	GetScriptletTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT
	EnumCodeContextsOfPosition(dwSourceContext uint32, uCharacterOffset uint32, uNumChars uint32, ppescc **IEnumDebugCodeContexts) HRESULT
}

type IActiveScriptDebug32Vtbl struct {
	IUnknownVtbl
	GetScriptTextAttributes    uintptr
	GetScriptletTextAttributes uintptr
	EnumCodeContextsOfPosition uintptr
}

type IActiveScriptDebug32 struct {
	IUnknown
}

func (this *IActiveScriptDebug32) Vtbl() *IActiveScriptDebug32Vtbl {
	return (*IActiveScriptDebug32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptDebug32) GetScriptTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(uNumCodeChars), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwFlags), uintptr(unsafe.Pointer(pattr)))
	return HRESULT(ret)
}

func (this *IActiveScriptDebug32) GetScriptletTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptletTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(uNumCodeChars), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwFlags), uintptr(unsafe.Pointer(pattr)))
	return HRESULT(ret)
}

func (this *IActiveScriptDebug32) EnumCodeContextsOfPosition(dwSourceContext uint32, uCharacterOffset uint32, uNumChars uint32, ppescc **IEnumDebugCodeContexts) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumCodeContextsOfPosition, uintptr(unsafe.Pointer(this)), uintptr(dwSourceContext), uintptr(uCharacterOffset), uintptr(uNumChars), uintptr(unsafe.Pointer(ppescc)))
	return HRESULT(ret)
}

// BC437E23-F5B8-47F4-BB79-7D1CE5483B86
var IID_IActiveScriptDebug64 = syscall.GUID{0xBC437E23, 0xF5B8, 0x47F4,
	[8]byte{0xBB, 0x79, 0x7D, 0x1C, 0xE5, 0x48, 0x3B, 0x86}}

type IActiveScriptDebug64Interface interface {
	IUnknownInterface
	GetScriptTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT
	GetScriptletTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT
	EnumCodeContextsOfPosition(dwSourceContext uint64, uCharacterOffset uint32, uNumChars uint32, ppescc **IEnumDebugCodeContexts) HRESULT
}

type IActiveScriptDebug64Vtbl struct {
	IUnknownVtbl
	GetScriptTextAttributes    uintptr
	GetScriptletTextAttributes uintptr
	EnumCodeContextsOfPosition uintptr
}

type IActiveScriptDebug64 struct {
	IUnknown
}

func (this *IActiveScriptDebug64) Vtbl() *IActiveScriptDebug64Vtbl {
	return (*IActiveScriptDebug64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptDebug64) GetScriptTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(uNumCodeChars), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwFlags), uintptr(unsafe.Pointer(pattr)))
	return HRESULT(ret)
}

func (this *IActiveScriptDebug64) GetScriptletTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptletTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(uNumCodeChars), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwFlags), uintptr(unsafe.Pointer(pattr)))
	return HRESULT(ret)
}

func (this *IActiveScriptDebug64) EnumCodeContextsOfPosition(dwSourceContext uint64, uCharacterOffset uint32, uNumChars uint32, ppescc **IEnumDebugCodeContexts) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumCodeContextsOfPosition, uintptr(unsafe.Pointer(this)), uintptr(dwSourceContext), uintptr(uCharacterOffset), uintptr(uNumChars), uintptr(unsafe.Pointer(ppescc)))
	return HRESULT(ret)
}

// 51973C11-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IActiveScriptSiteDebug32 = syscall.GUID{0x51973C11, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IActiveScriptSiteDebug32Interface interface {
	IUnknownInterface
	GetDocumentContextFromPosition(dwSourceContext uint32, uCharacterOffset uint32, uNumChars uint32, ppsc **IDebugDocumentContext) HRESULT
	GetApplication(ppda **IDebugApplication32) HRESULT
	GetRootApplicationNode(ppdanRoot **IDebugApplicationNode) HRESULT
	OnScriptErrorDebug(pErrorDebug *IActiveScriptErrorDebug, pfEnterDebugger *BOOL, pfCallOnScriptErrorWhenContinuing *BOOL) HRESULT
}

type IActiveScriptSiteDebug32Vtbl struct {
	IUnknownVtbl
	GetDocumentContextFromPosition uintptr
	GetApplication                 uintptr
	GetRootApplicationNode         uintptr
	OnScriptErrorDebug             uintptr
}

type IActiveScriptSiteDebug32 struct {
	IUnknown
}

func (this *IActiveScriptSiteDebug32) Vtbl() *IActiveScriptSiteDebug32Vtbl {
	return (*IActiveScriptSiteDebug32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptSiteDebug32) GetDocumentContextFromPosition(dwSourceContext uint32, uCharacterOffset uint32, uNumChars uint32, ppsc **IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocumentContextFromPosition, uintptr(unsafe.Pointer(this)), uintptr(dwSourceContext), uintptr(uCharacterOffset), uintptr(uNumChars), uintptr(unsafe.Pointer(ppsc)))
	return HRESULT(ret)
}

func (this *IActiveScriptSiteDebug32) GetApplication(ppda **IDebugApplication32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppda)))
	return HRESULT(ret)
}

func (this *IActiveScriptSiteDebug32) GetRootApplicationNode(ppdanRoot **IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRootApplicationNode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppdanRoot)))
	return HRESULT(ret)
}

func (this *IActiveScriptSiteDebug32) OnScriptErrorDebug(pErrorDebug *IActiveScriptErrorDebug, pfEnterDebugger *BOOL, pfCallOnScriptErrorWhenContinuing *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnScriptErrorDebug, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pErrorDebug)), uintptr(unsafe.Pointer(pfEnterDebugger)), uintptr(unsafe.Pointer(pfCallOnScriptErrorWhenContinuing)))
	return HRESULT(ret)
}

// D6B96B0A-7463-402C-92AC-89984226942F
var IID_IActiveScriptSiteDebug64 = syscall.GUID{0xD6B96B0A, 0x7463, 0x402C,
	[8]byte{0x92, 0xAC, 0x89, 0x98, 0x42, 0x26, 0x94, 0x2F}}

type IActiveScriptSiteDebug64Interface interface {
	IUnknownInterface
	GetDocumentContextFromPosition(dwSourceContext uint64, uCharacterOffset uint32, uNumChars uint32, ppsc **IDebugDocumentContext) HRESULT
	GetApplication(ppda **IDebugApplication64) HRESULT
	GetRootApplicationNode(ppdanRoot **IDebugApplicationNode) HRESULT
	OnScriptErrorDebug(pErrorDebug *IActiveScriptErrorDebug, pfEnterDebugger *BOOL, pfCallOnScriptErrorWhenContinuing *BOOL) HRESULT
}

type IActiveScriptSiteDebug64Vtbl struct {
	IUnknownVtbl
	GetDocumentContextFromPosition uintptr
	GetApplication                 uintptr
	GetRootApplicationNode         uintptr
	OnScriptErrorDebug             uintptr
}

type IActiveScriptSiteDebug64 struct {
	IUnknown
}

func (this *IActiveScriptSiteDebug64) Vtbl() *IActiveScriptSiteDebug64Vtbl {
	return (*IActiveScriptSiteDebug64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptSiteDebug64) GetDocumentContextFromPosition(dwSourceContext uint64, uCharacterOffset uint32, uNumChars uint32, ppsc **IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocumentContextFromPosition, uintptr(unsafe.Pointer(this)), uintptr(dwSourceContext), uintptr(uCharacterOffset), uintptr(uNumChars), uintptr(unsafe.Pointer(ppsc)))
	return HRESULT(ret)
}

func (this *IActiveScriptSiteDebug64) GetApplication(ppda **IDebugApplication64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppda)))
	return HRESULT(ret)
}

func (this *IActiveScriptSiteDebug64) GetRootApplicationNode(ppdanRoot **IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRootApplicationNode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppdanRoot)))
	return HRESULT(ret)
}

func (this *IActiveScriptSiteDebug64) OnScriptErrorDebug(pErrorDebug *IActiveScriptErrorDebug, pfEnterDebugger *BOOL, pfCallOnScriptErrorWhenContinuing *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnScriptErrorDebug, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pErrorDebug)), uintptr(unsafe.Pointer(pfEnterDebugger)), uintptr(unsafe.Pointer(pfCallOnScriptErrorWhenContinuing)))
	return HRESULT(ret)
}

// BB722CCB-6AD2-41C6-B780-AF9C03EE69F5
var IID_IActiveScriptSiteDebugEx = syscall.GUID{0xBB722CCB, 0x6AD2, 0x41C6,
	[8]byte{0xB7, 0x80, 0xAF, 0x9C, 0x03, 0xEE, 0x69, 0xF5}}

type IActiveScriptSiteDebugExInterface interface {
	IUnknownInterface
	OnCanNotJITScriptErrorDebug(pErrorDebug *IActiveScriptErrorDebug, pfCallOnScriptErrorWhenContinuing *BOOL) HRESULT
}

type IActiveScriptSiteDebugExVtbl struct {
	IUnknownVtbl
	OnCanNotJITScriptErrorDebug uintptr
}

type IActiveScriptSiteDebugEx struct {
	IUnknown
}

func (this *IActiveScriptSiteDebugEx) Vtbl() *IActiveScriptSiteDebugExVtbl {
	return (*IActiveScriptSiteDebugExVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptSiteDebugEx) OnCanNotJITScriptErrorDebug(pErrorDebug *IActiveScriptErrorDebug, pfCallOnScriptErrorWhenContinuing *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnCanNotJITScriptErrorDebug, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pErrorDebug)), uintptr(unsafe.Pointer(pfCallOnScriptErrorWhenContinuing)))
	return HRESULT(ret)
}

// 51973C12-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IActiveScriptErrorDebug = syscall.GUID{0x51973C12, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IActiveScriptErrorDebugInterface interface {
	IActiveScriptErrorInterface
	GetDocumentContext(ppssc **IDebugDocumentContext) HRESULT
	GetStackFrame(ppdsf **IDebugStackFrame) HRESULT
}

type IActiveScriptErrorDebugVtbl struct {
	IActiveScriptErrorVtbl
	GetDocumentContext uintptr
	GetStackFrame      uintptr
}

type IActiveScriptErrorDebug struct {
	IActiveScriptError
}

func (this *IActiveScriptErrorDebug) Vtbl() *IActiveScriptErrorDebugVtbl {
	return (*IActiveScriptErrorDebugVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptErrorDebug) GetDocumentContext(ppssc **IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocumentContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppssc)))
	return HRESULT(ret)
}

func (this *IActiveScriptErrorDebug) GetStackFrame(ppdsf **IDebugStackFrame) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackFrame, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppdsf)))
	return HRESULT(ret)
}

// 51973C13-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugCodeContext = syscall.GUID{0x51973C13, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugCodeContextInterface interface {
	IUnknownInterface
	GetDocumentContext(ppsc **IDebugDocumentContext) HRESULT
	SetBreakPoint(bps BREAKPOINT_STATE) HRESULT
}

type IDebugCodeContextVtbl struct {
	IUnknownVtbl
	GetDocumentContext uintptr
	SetBreakPoint      uintptr
}

type IDebugCodeContext struct {
	IUnknown
}

func (this *IDebugCodeContext) Vtbl() *IDebugCodeContextVtbl {
	return (*IDebugCodeContextVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugCodeContext) GetDocumentContext(ppsc **IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocumentContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppsc)))
	return HRESULT(ret)
}

func (this *IDebugCodeContext) SetBreakPoint(bps BREAKPOINT_STATE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(bps))
	return HRESULT(ret)
}

// 51973C14-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugExpression = syscall.GUID{0x51973C14, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugExpressionInterface interface {
	IUnknownInterface
	Start(pdecb *IDebugExpressionCallBack) HRESULT
	Abort() HRESULT
	QueryIsComplete() HRESULT
	GetResultAsString(phrResult *HRESULT, pbstrResult *BSTR) HRESULT
	GetResultAsDebugProperty(phrResult *HRESULT, ppdp **IDebugProperty) HRESULT
}

type IDebugExpressionVtbl struct {
	IUnknownVtbl
	Start                    uintptr
	Abort                    uintptr
	QueryIsComplete          uintptr
	GetResultAsString        uintptr
	GetResultAsDebugProperty uintptr
}

type IDebugExpression struct {
	IUnknown
}

func (this *IDebugExpression) Vtbl() *IDebugExpressionVtbl {
	return (*IDebugExpressionVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugExpression) Start(pdecb *IDebugExpressionCallBack) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Start, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdecb)))
	return HRESULT(ret)
}

func (this *IDebugExpression) Abort() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Abort, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugExpression) QueryIsComplete() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryIsComplete, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugExpression) GetResultAsString(phrResult *HRESULT, pbstrResult *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetResultAsString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(phrResult)), uintptr(unsafe.Pointer(pbstrResult)))
	return HRESULT(ret)
}

func (this *IDebugExpression) GetResultAsDebugProperty(phrResult *HRESULT, ppdp **IDebugProperty) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetResultAsDebugProperty, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(phrResult)), uintptr(unsafe.Pointer(ppdp)))
	return HRESULT(ret)
}

// 51973C15-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugExpressionContext = syscall.GUID{0x51973C15, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugExpressionContextInterface interface {
	IUnknownInterface
	ParseLanguageText(pstrCode PWSTR, nRadix uint32, pstrDelimiter PWSTR, dwFlags uint32, ppe **IDebugExpression) HRESULT
	GetLanguageInfo(pbstrLanguageName *BSTR, pLanguageID *syscall.GUID) HRESULT
}

type IDebugExpressionContextVtbl struct {
	IUnknownVtbl
	ParseLanguageText uintptr
	GetLanguageInfo   uintptr
}

type IDebugExpressionContext struct {
	IUnknown
}

func (this *IDebugExpressionContext) Vtbl() *IDebugExpressionContextVtbl {
	return (*IDebugExpressionContextVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugExpressionContext) ParseLanguageText(pstrCode PWSTR, nRadix uint32, pstrDelimiter PWSTR, dwFlags uint32, ppe **IDebugExpression) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ParseLanguageText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(nRadix), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwFlags), uintptr(unsafe.Pointer(ppe)))
	return HRESULT(ret)
}

func (this *IDebugExpressionContext) GetLanguageInfo(pbstrLanguageName *BSTR, pLanguageID *syscall.GUID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLanguageInfo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrLanguageName)), uintptr(unsafe.Pointer(pLanguageID)))
	return HRESULT(ret)
}

// 51973C16-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugExpressionCallBack = syscall.GUID{0x51973C16, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugExpressionCallBackInterface interface {
	IUnknownInterface
	OnComplete() HRESULT
}

type IDebugExpressionCallBackVtbl struct {
	IUnknownVtbl
	OnComplete uintptr
}

type IDebugExpressionCallBack struct {
	IUnknown
}

func (this *IDebugExpressionCallBack) Vtbl() *IDebugExpressionCallBackVtbl {
	return (*IDebugExpressionCallBackVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugExpressionCallBack) OnComplete() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnComplete, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 51973C17-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugStackFrame = syscall.GUID{0x51973C17, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugStackFrameInterface interface {
	IUnknownInterface
	GetCodeContext(ppcc **IDebugCodeContext) HRESULT
	GetDescriptionString(fLong BOOL, pbstrDescription *BSTR) HRESULT
	GetLanguageString(fLong BOOL, pbstrLanguage *BSTR) HRESULT
	GetThread(ppat **IDebugApplicationThread) HRESULT
	GetDebugProperty(ppDebugProp **IDebugProperty) HRESULT
}

type IDebugStackFrameVtbl struct {
	IUnknownVtbl
	GetCodeContext       uintptr
	GetDescriptionString uintptr
	GetLanguageString    uintptr
	GetThread            uintptr
	GetDebugProperty     uintptr
}

type IDebugStackFrame struct {
	IUnknown
}

func (this *IDebugStackFrame) Vtbl() *IDebugStackFrameVtbl {
	return (*IDebugStackFrameVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugStackFrame) GetCodeContext(ppcc **IDebugCodeContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCodeContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppcc)))
	return HRESULT(ret)
}

func (this *IDebugStackFrame) GetDescriptionString(fLong BOOL, pbstrDescription *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDescriptionString, uintptr(unsafe.Pointer(this)), uintptr(fLong), uintptr(unsafe.Pointer(pbstrDescription)))
	return HRESULT(ret)
}

func (this *IDebugStackFrame) GetLanguageString(fLong BOOL, pbstrLanguage *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLanguageString, uintptr(unsafe.Pointer(this)), uintptr(fLong), uintptr(unsafe.Pointer(pbstrLanguage)))
	return HRESULT(ret)
}

func (this *IDebugStackFrame) GetThread(ppat **IDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppat)))
	return HRESULT(ret)
}

func (this *IDebugStackFrame) GetDebugProperty(ppDebugProp **IDebugProperty) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebugProperty, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppDebugProp)))
	return HRESULT(ret)
}

// 51973C18-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugStackFrameSniffer = syscall.GUID{0x51973C18, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugStackFrameSnifferInterface interface {
	IUnknownInterface
	EnumStackFrames(ppedsf **IEnumDebugStackFrames) HRESULT
}

type IDebugStackFrameSnifferVtbl struct {
	IUnknownVtbl
	EnumStackFrames uintptr
}

type IDebugStackFrameSniffer struct {
	IUnknown
}

func (this *IDebugStackFrameSniffer) Vtbl() *IDebugStackFrameSnifferVtbl {
	return (*IDebugStackFrameSnifferVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugStackFrameSniffer) EnumStackFrames(ppedsf **IEnumDebugStackFrames) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumStackFrames, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppedsf)))
	return HRESULT(ret)
}

// 51973C19-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugStackFrameSnifferEx32 = syscall.GUID{0x51973C19, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugStackFrameSnifferEx32Interface interface {
	IDebugStackFrameSnifferInterface
	EnumStackFramesEx32(dwSpMin uint32, ppedsf **IEnumDebugStackFrames) HRESULT
}

type IDebugStackFrameSnifferEx32Vtbl struct {
	IDebugStackFrameSnifferVtbl
	EnumStackFramesEx32 uintptr
}

type IDebugStackFrameSnifferEx32 struct {
	IDebugStackFrameSniffer
}

func (this *IDebugStackFrameSnifferEx32) Vtbl() *IDebugStackFrameSnifferEx32Vtbl {
	return (*IDebugStackFrameSnifferEx32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugStackFrameSnifferEx32) EnumStackFramesEx32(dwSpMin uint32, ppedsf **IEnumDebugStackFrames) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumStackFramesEx32, uintptr(unsafe.Pointer(this)), uintptr(dwSpMin), uintptr(unsafe.Pointer(ppedsf)))
	return HRESULT(ret)
}

// 8CD12AF4-49C1-4D52-8D8A-C146F47581AA
var IID_IDebugStackFrameSnifferEx64 = syscall.GUID{0x8CD12AF4, 0x49C1, 0x4D52,
	[8]byte{0x8D, 0x8A, 0xC1, 0x46, 0xF4, 0x75, 0x81, 0xAA}}

type IDebugStackFrameSnifferEx64Interface interface {
	IDebugStackFrameSnifferInterface
	EnumStackFramesEx64(dwSpMin uint64, ppedsf **IEnumDebugStackFrames64) HRESULT
}

type IDebugStackFrameSnifferEx64Vtbl struct {
	IDebugStackFrameSnifferVtbl
	EnumStackFramesEx64 uintptr
}

type IDebugStackFrameSnifferEx64 struct {
	IDebugStackFrameSniffer
}

func (this *IDebugStackFrameSnifferEx64) Vtbl() *IDebugStackFrameSnifferEx64Vtbl {
	return (*IDebugStackFrameSnifferEx64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugStackFrameSnifferEx64) EnumStackFramesEx64(dwSpMin uint64, ppedsf **IEnumDebugStackFrames64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumStackFramesEx64, uintptr(unsafe.Pointer(this)), uintptr(dwSpMin), uintptr(unsafe.Pointer(ppedsf)))
	return HRESULT(ret)
}

// 51973C1A-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugSyncOperation = syscall.GUID{0x51973C1A, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugSyncOperationInterface interface {
	IUnknownInterface
	GetTargetThread(ppatTarget **IDebugApplicationThread) HRESULT
	Execute(ppunkResult **IUnknown) HRESULT
	InProgressAbort() HRESULT
}

type IDebugSyncOperationVtbl struct {
	IUnknownVtbl
	GetTargetThread uintptr
	Execute         uintptr
	InProgressAbort uintptr
}

type IDebugSyncOperation struct {
	IUnknown
}

func (this *IDebugSyncOperation) Vtbl() *IDebugSyncOperationVtbl {
	return (*IDebugSyncOperationVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSyncOperation) GetTargetThread(ppatTarget **IDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTargetThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppatTarget)))
	return HRESULT(ret)
}

func (this *IDebugSyncOperation) Execute(ppunkResult **IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Execute, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppunkResult)))
	return HRESULT(ret)
}

func (this *IDebugSyncOperation) InProgressAbort() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InProgressAbort, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 51973C1B-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugAsyncOperation = syscall.GUID{0x51973C1B, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugAsyncOperationInterface interface {
	IUnknownInterface
	GetSyncDebugOperation(ppsdo **IDebugSyncOperation) HRESULT
	Start(padocb *IDebugAsyncOperationCallBack) HRESULT
	Abort() HRESULT
	QueryIsComplete() HRESULT
	GetResult(phrResult *HRESULT, ppunkResult **IUnknown) HRESULT
}

type IDebugAsyncOperationVtbl struct {
	IUnknownVtbl
	GetSyncDebugOperation uintptr
	Start                 uintptr
	Abort                 uintptr
	QueryIsComplete       uintptr
	GetResult             uintptr
}

type IDebugAsyncOperation struct {
	IUnknown
}

func (this *IDebugAsyncOperation) Vtbl() *IDebugAsyncOperationVtbl {
	return (*IDebugAsyncOperationVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugAsyncOperation) GetSyncDebugOperation(ppsdo **IDebugSyncOperation) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSyncDebugOperation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppsdo)))
	return HRESULT(ret)
}

func (this *IDebugAsyncOperation) Start(padocb *IDebugAsyncOperationCallBack) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Start, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(padocb)))
	return HRESULT(ret)
}

func (this *IDebugAsyncOperation) Abort() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Abort, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugAsyncOperation) QueryIsComplete() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryIsComplete, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugAsyncOperation) GetResult(phrResult *HRESULT, ppunkResult **IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetResult, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(phrResult)), uintptr(unsafe.Pointer(ppunkResult)))
	return HRESULT(ret)
}

// 51973C1C-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugAsyncOperationCallBack = syscall.GUID{0x51973C1C, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugAsyncOperationCallBackInterface interface {
	IUnknownInterface
	OnComplete() HRESULT
}

type IDebugAsyncOperationCallBackVtbl struct {
	IUnknownVtbl
	OnComplete uintptr
}

type IDebugAsyncOperationCallBack struct {
	IUnknown
}

func (this *IDebugAsyncOperationCallBack) Vtbl() *IDebugAsyncOperationCallBackVtbl {
	return (*IDebugAsyncOperationCallBackVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugAsyncOperationCallBack) OnComplete() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnComplete, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 51973C1D-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IEnumDebugCodeContexts = syscall.GUID{0x51973C1D, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IEnumDebugCodeContextsInterface interface {
	IUnknownInterface
	Next(celt uint32, pscc **IDebugCodeContext, pceltFetched *uint32) HRESULT
	Skip(celt uint32) HRESULT
	Reset() HRESULT
	Clone(ppescc **IEnumDebugCodeContexts) HRESULT
}

type IEnumDebugCodeContextsVtbl struct {
	IUnknownVtbl
	Next  uintptr
	Skip  uintptr
	Reset uintptr
	Clone uintptr
}

type IEnumDebugCodeContexts struct {
	IUnknown
}

func (this *IEnumDebugCodeContexts) Vtbl() *IEnumDebugCodeContextsVtbl {
	return (*IEnumDebugCodeContextsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumDebugCodeContexts) Next(celt uint32, pscc **IDebugCodeContext, pceltFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(pscc)), uintptr(unsafe.Pointer(pceltFetched)))
	return HRESULT(ret)
}

func (this *IEnumDebugCodeContexts) Skip(celt uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Skip, uintptr(unsafe.Pointer(this)), uintptr(celt))
	return HRESULT(ret)
}

func (this *IEnumDebugCodeContexts) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IEnumDebugCodeContexts) Clone(ppescc **IEnumDebugCodeContexts) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppescc)))
	return HRESULT(ret)
}

// 51973C1E-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IEnumDebugStackFrames = syscall.GUID{0x51973C1E, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IEnumDebugStackFramesInterface interface {
	IUnknownInterface
	Next(celt uint32, prgdsfd *DebugStackFrameDescriptor, pceltFetched *uint32) HRESULT
	Skip(celt uint32) HRESULT
	Reset() HRESULT
	Clone(ppedsf **IEnumDebugStackFrames) HRESULT
}

type IEnumDebugStackFramesVtbl struct {
	IUnknownVtbl
	Next  uintptr
	Skip  uintptr
	Reset uintptr
	Clone uintptr
}

type IEnumDebugStackFrames struct {
	IUnknown
}

func (this *IEnumDebugStackFrames) Vtbl() *IEnumDebugStackFramesVtbl {
	return (*IEnumDebugStackFramesVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumDebugStackFrames) Next(celt uint32, prgdsfd *DebugStackFrameDescriptor, pceltFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(prgdsfd)), uintptr(unsafe.Pointer(pceltFetched)))
	return HRESULT(ret)
}

func (this *IEnumDebugStackFrames) Skip(celt uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Skip, uintptr(unsafe.Pointer(this)), uintptr(celt))
	return HRESULT(ret)
}

func (this *IEnumDebugStackFrames) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IEnumDebugStackFrames) Clone(ppedsf **IEnumDebugStackFrames) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppedsf)))
	return HRESULT(ret)
}

// 0DC38853-C1B0-4176-A984-B298361027AF
var IID_IEnumDebugStackFrames64 = syscall.GUID{0x0DC38853, 0xC1B0, 0x4176,
	[8]byte{0xA9, 0x84, 0xB2, 0x98, 0x36, 0x10, 0x27, 0xAF}}

type IEnumDebugStackFrames64Interface interface {
	IEnumDebugStackFramesInterface
	Next64(celt uint32, prgdsfd *DebugStackFrameDescriptor64, pceltFetched *uint32) HRESULT
}

type IEnumDebugStackFrames64Vtbl struct {
	IEnumDebugStackFramesVtbl
	Next64 uintptr
}

type IEnumDebugStackFrames64 struct {
	IEnumDebugStackFrames
}

func (this *IEnumDebugStackFrames64) Vtbl() *IEnumDebugStackFrames64Vtbl {
	return (*IEnumDebugStackFrames64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumDebugStackFrames64) Next64(celt uint32, prgdsfd *DebugStackFrameDescriptor64, pceltFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next64, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(prgdsfd)), uintptr(unsafe.Pointer(pceltFetched)))
	return HRESULT(ret)
}

// 51973C1F-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocumentInfo = syscall.GUID{0x51973C1F, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentInfoInterface interface {
	IUnknownInterface
	GetName(dnt DOCUMENTNAMETYPE, pbstrName *BSTR) HRESULT
	GetDocumentClassId(pclsidDocument *syscall.GUID) HRESULT
}

type IDebugDocumentInfoVtbl struct {
	IUnknownVtbl
	GetName            uintptr
	GetDocumentClassId uintptr
}

type IDebugDocumentInfo struct {
	IUnknown
}

func (this *IDebugDocumentInfo) Vtbl() *IDebugDocumentInfoVtbl {
	return (*IDebugDocumentInfoVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentInfo) GetName(dnt DOCUMENTNAMETYPE, pbstrName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(dnt), uintptr(unsafe.Pointer(pbstrName)))
	return HRESULT(ret)
}

func (this *IDebugDocumentInfo) GetDocumentClassId(pclsidDocument *syscall.GUID) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocumentClassId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pclsidDocument)))
	return HRESULT(ret)
}

// 51973C20-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocumentProvider = syscall.GUID{0x51973C20, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentProviderInterface interface {
	IDebugDocumentInfoInterface
	GetDocument(ppssd **IDebugDocument) HRESULT
}

type IDebugDocumentProviderVtbl struct {
	IDebugDocumentInfoVtbl
	GetDocument uintptr
}

type IDebugDocumentProvider struct {
	IDebugDocumentInfo
}

func (this *IDebugDocumentProvider) Vtbl() *IDebugDocumentProviderVtbl {
	return (*IDebugDocumentProviderVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentProvider) GetDocument(ppssd **IDebugDocument) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocument, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppssd)))
	return HRESULT(ret)
}

// 51973C21-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocument = syscall.GUID{0x51973C21, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentInterface interface {
	IDebugDocumentInfoInterface
}

type IDebugDocumentVtbl struct {
	IDebugDocumentInfoVtbl
}

type IDebugDocument struct {
	IDebugDocumentInfo
}

func (this *IDebugDocument) Vtbl() *IDebugDocumentVtbl {
	return (*IDebugDocumentVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

// 51973C22-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocumentText = syscall.GUID{0x51973C22, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentTextInterface interface {
	IDebugDocumentInterface
	GetDocumentAttributes(ptextdocattr *uint32) HRESULT
	GetSize(pcNumLines *uint32, pcNumChars *uint32) HRESULT
	GetPositionOfLine(cLineNumber uint32, pcCharacterPosition *uint32) HRESULT
	GetLineOfPosition(cCharacterPosition uint32, pcLineNumber *uint32, pcCharacterOffsetInLine *uint32) HRESULT
	GetText(cCharacterPosition uint32, pcharText PWSTR, pstaTextAttr *uint16, pcNumChars *uint32, cMaxChars uint32) HRESULT
	GetPositionOfContext(psc *IDebugDocumentContext, pcCharacterPosition *uint32, cNumChars *uint32) HRESULT
	GetContextOfPosition(cCharacterPosition uint32, cNumChars uint32, ppsc **IDebugDocumentContext) HRESULT
}

type IDebugDocumentTextVtbl struct {
	IDebugDocumentVtbl
	GetDocumentAttributes uintptr
	GetSize               uintptr
	GetPositionOfLine     uintptr
	GetLineOfPosition     uintptr
	GetText               uintptr
	GetPositionOfContext  uintptr
	GetContextOfPosition  uintptr
}

type IDebugDocumentText struct {
	IDebugDocument
}

func (this *IDebugDocumentText) Vtbl() *IDebugDocumentTextVtbl {
	return (*IDebugDocumentTextVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentText) GetDocumentAttributes(ptextdocattr *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocumentAttributes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ptextdocattr)))
	return HRESULT(ret)
}

func (this *IDebugDocumentText) GetSize(pcNumLines *uint32, pcNumChars *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSize, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pcNumLines)), uintptr(unsafe.Pointer(pcNumChars)))
	return HRESULT(ret)
}

func (this *IDebugDocumentText) GetPositionOfLine(cLineNumber uint32, pcCharacterPosition *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPositionOfLine, uintptr(unsafe.Pointer(this)), uintptr(cLineNumber), uintptr(unsafe.Pointer(pcCharacterPosition)))
	return HRESULT(ret)
}

func (this *IDebugDocumentText) GetLineOfPosition(cCharacterPosition uint32, pcLineNumber *uint32, pcCharacterOffsetInLine *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLineOfPosition, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(unsafe.Pointer(pcLineNumber)), uintptr(unsafe.Pointer(pcCharacterOffsetInLine)))
	return HRESULT(ret)
}

func (this *IDebugDocumentText) GetText(cCharacterPosition uint32, pcharText PWSTR, pstaTextAttr *uint16, pcNumChars *uint32, cMaxChars uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetText, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(unsafe.Pointer(pcharText)), uintptr(unsafe.Pointer(pstaTextAttr)), uintptr(unsafe.Pointer(pcNumChars)), uintptr(cMaxChars))
	return HRESULT(ret)
}

func (this *IDebugDocumentText) GetPositionOfContext(psc *IDebugDocumentContext, pcCharacterPosition *uint32, cNumChars *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPositionOfContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psc)), uintptr(unsafe.Pointer(pcCharacterPosition)), uintptr(unsafe.Pointer(cNumChars)))
	return HRESULT(ret)
}

func (this *IDebugDocumentText) GetContextOfPosition(cCharacterPosition uint32, cNumChars uint32, ppsc **IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextOfPosition, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(cNumChars), uintptr(unsafe.Pointer(ppsc)))
	return HRESULT(ret)
}

// 51973C23-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocumentTextEvents = syscall.GUID{0x51973C23, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentTextEventsInterface interface {
	IUnknownInterface
	OnDestroy() HRESULT
	OnInsertText(cCharacterPosition uint32, cNumToInsert uint32) HRESULT
	OnRemoveText(cCharacterPosition uint32, cNumToRemove uint32) HRESULT
	OnReplaceText(cCharacterPosition uint32, cNumToReplace uint32) HRESULT
	OnUpdateTextAttributes(cCharacterPosition uint32, cNumToUpdate uint32) HRESULT
	OnUpdateDocumentAttributes(textdocattr uint32) HRESULT
}

type IDebugDocumentTextEventsVtbl struct {
	IUnknownVtbl
	OnDestroy                  uintptr
	OnInsertText               uintptr
	OnRemoveText               uintptr
	OnReplaceText              uintptr
	OnUpdateTextAttributes     uintptr
	OnUpdateDocumentAttributes uintptr
}

type IDebugDocumentTextEvents struct {
	IUnknown
}

func (this *IDebugDocumentTextEvents) Vtbl() *IDebugDocumentTextEventsVtbl {
	return (*IDebugDocumentTextEventsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentTextEvents) OnDestroy() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnDestroy, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugDocumentTextEvents) OnInsertText(cCharacterPosition uint32, cNumToInsert uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnInsertText, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(cNumToInsert))
	return HRESULT(ret)
}

func (this *IDebugDocumentTextEvents) OnRemoveText(cCharacterPosition uint32, cNumToRemove uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnRemoveText, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(cNumToRemove))
	return HRESULT(ret)
}

func (this *IDebugDocumentTextEvents) OnReplaceText(cCharacterPosition uint32, cNumToReplace uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnReplaceText, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(cNumToReplace))
	return HRESULT(ret)
}

func (this *IDebugDocumentTextEvents) OnUpdateTextAttributes(cCharacterPosition uint32, cNumToUpdate uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnUpdateTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(cNumToUpdate))
	return HRESULT(ret)
}

func (this *IDebugDocumentTextEvents) OnUpdateDocumentAttributes(textdocattr uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnUpdateDocumentAttributes, uintptr(unsafe.Pointer(this)), uintptr(textdocattr))
	return HRESULT(ret)
}

// 51973C24-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocumentTextAuthor = syscall.GUID{0x51973C24, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentTextAuthorInterface interface {
	IDebugDocumentTextInterface
	InsertText(cCharacterPosition uint32, cNumToInsert uint32, pcharText PWSTR) HRESULT
	RemoveText(cCharacterPosition uint32, cNumToRemove uint32) HRESULT
	ReplaceText(cCharacterPosition uint32, cNumToReplace uint32, pcharText PWSTR) HRESULT
}

type IDebugDocumentTextAuthorVtbl struct {
	IDebugDocumentTextVtbl
	InsertText  uintptr
	RemoveText  uintptr
	ReplaceText uintptr
}

type IDebugDocumentTextAuthor struct {
	IDebugDocumentText
}

func (this *IDebugDocumentTextAuthor) Vtbl() *IDebugDocumentTextAuthorVtbl {
	return (*IDebugDocumentTextAuthorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentTextAuthor) InsertText(cCharacterPosition uint32, cNumToInsert uint32, pcharText PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().InsertText, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(cNumToInsert), uintptr(unsafe.Pointer(pcharText)))
	return HRESULT(ret)
}

func (this *IDebugDocumentTextAuthor) RemoveText(cCharacterPosition uint32, cNumToRemove uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveText, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(cNumToRemove))
	return HRESULT(ret)
}

func (this *IDebugDocumentTextAuthor) ReplaceText(cCharacterPosition uint32, cNumToReplace uint32, pcharText PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReplaceText, uintptr(unsafe.Pointer(this)), uintptr(cCharacterPosition), uintptr(cNumToReplace), uintptr(unsafe.Pointer(pcharText)))
	return HRESULT(ret)
}

// 51973C25-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocumentTextExternalAuthor = syscall.GUID{0x51973C25, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentTextExternalAuthorInterface interface {
	IUnknownInterface
	GetPathName(pbstrLongName *BSTR, pfIsOriginalFile *BOOL) HRESULT
	GetFileName(pbstrShortName *BSTR) HRESULT
	NotifyChanged() HRESULT
}

type IDebugDocumentTextExternalAuthorVtbl struct {
	IUnknownVtbl
	GetPathName   uintptr
	GetFileName   uintptr
	NotifyChanged uintptr
}

type IDebugDocumentTextExternalAuthor struct {
	IUnknown
}

func (this *IDebugDocumentTextExternalAuthor) Vtbl() *IDebugDocumentTextExternalAuthorVtbl {
	return (*IDebugDocumentTextExternalAuthorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentTextExternalAuthor) GetPathName(pbstrLongName *BSTR, pfIsOriginalFile *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPathName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrLongName)), uintptr(unsafe.Pointer(pfIsOriginalFile)))
	return HRESULT(ret)
}

func (this *IDebugDocumentTextExternalAuthor) GetFileName(pbstrShortName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFileName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrShortName)))
	return HRESULT(ret)
}

func (this *IDebugDocumentTextExternalAuthor) NotifyChanged() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().NotifyChanged, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 51973C26-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocumentHelper32 = syscall.GUID{0x51973C26, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentHelper32Interface interface {
	IUnknownInterface
	Init(pda *IDebugApplication32, pszShortName PWSTR, pszLongName PWSTR, docAttr uint32) HRESULT
	Attach(pddhParent *IDebugDocumentHelper32) HRESULT
	Detach() HRESULT
	AddUnicodeText(pszText PWSTR) HRESULT
	AddDBCSText(pszText PSTR) HRESULT
	SetDebugDocumentHost(pddh *IDebugDocumentHost) HRESULT
	AddDeferredText(cChars uint32, dwTextStartCookie uint32) HRESULT
	DefineScriptBlock(ulCharOffset uint32, cChars uint32, pas *IActiveScript, fScriptlet BOOL, pdwSourceContext *uint32) HRESULT
	SetDefaultTextAttr(staTextAttr uint16) HRESULT
	SetTextAttributes(ulCharOffset uint32, cChars uint32, pstaTextAttr *uint16) HRESULT
	SetLongName(pszLongName PWSTR) HRESULT
	SetShortName(pszShortName PWSTR) HRESULT
	SetDocumentAttr(pszAttributes uint32) HRESULT
	GetDebugApplicationNode(ppdan **IDebugApplicationNode) HRESULT
	GetScriptBlockInfo(dwSourceContext uint32, ppasd **IActiveScript, piCharPos *uint32, pcChars *uint32) HRESULT
	CreateDebugDocumentContext(iCharPos uint32, cChars uint32, ppddc **IDebugDocumentContext) HRESULT
	BringDocumentToTop() HRESULT
	BringDocumentContextToTop(pddc *IDebugDocumentContext) HRESULT
}

type IDebugDocumentHelper32Vtbl struct {
	IUnknownVtbl
	Init                       uintptr
	Attach                     uintptr
	Detach                     uintptr
	AddUnicodeText             uintptr
	AddDBCSText                uintptr
	SetDebugDocumentHost       uintptr
	AddDeferredText            uintptr
	DefineScriptBlock          uintptr
	SetDefaultTextAttr         uintptr
	SetTextAttributes          uintptr
	SetLongName                uintptr
	SetShortName               uintptr
	SetDocumentAttr            uintptr
	GetDebugApplicationNode    uintptr
	GetScriptBlockInfo         uintptr
	CreateDebugDocumentContext uintptr
	BringDocumentToTop         uintptr
	BringDocumentContextToTop  uintptr
}

type IDebugDocumentHelper32 struct {
	IUnknown
}

func (this *IDebugDocumentHelper32) Vtbl() *IDebugDocumentHelper32Vtbl {
	return (*IDebugDocumentHelper32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentHelper32) Init(pda *IDebugApplication32, pszShortName PWSTR, pszLongName PWSTR, docAttr uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Init, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pda)), uintptr(unsafe.Pointer(pszShortName)), uintptr(unsafe.Pointer(pszLongName)), uintptr(docAttr))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) Attach(pddhParent *IDebugDocumentHelper32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Attach, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pddhParent)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) Detach() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Detach, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) AddUnicodeText(pszText PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddUnicodeText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszText)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) AddDBCSText(pszText PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDBCSText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszText)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) SetDebugDocumentHost(pddh *IDebugDocumentHost) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDebugDocumentHost, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pddh)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) AddDeferredText(cChars uint32, dwTextStartCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDeferredText, uintptr(unsafe.Pointer(this)), uintptr(cChars), uintptr(dwTextStartCookie))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) DefineScriptBlock(ulCharOffset uint32, cChars uint32, pas *IActiveScript, fScriptlet BOOL, pdwSourceContext *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DefineScriptBlock, uintptr(unsafe.Pointer(this)), uintptr(ulCharOffset), uintptr(cChars), uintptr(unsafe.Pointer(pas)), uintptr(fScriptlet), uintptr(unsafe.Pointer(pdwSourceContext)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) SetDefaultTextAttr(staTextAttr uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDefaultTextAttr, uintptr(unsafe.Pointer(this)), uintptr(staTextAttr))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) SetTextAttributes(ulCharOffset uint32, cChars uint32, pstaTextAttr *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(ulCharOffset), uintptr(cChars), uintptr(unsafe.Pointer(pstaTextAttr)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) SetLongName(pszLongName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetLongName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszLongName)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) SetShortName(pszShortName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetShortName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszShortName)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) SetDocumentAttr(pszAttributes uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDocumentAttr, uintptr(unsafe.Pointer(this)), uintptr(pszAttributes))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) GetDebugApplicationNode(ppdan **IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebugApplicationNode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppdan)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) GetScriptBlockInfo(dwSourceContext uint32, ppasd **IActiveScript, piCharPos *uint32, pcChars *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptBlockInfo, uintptr(unsafe.Pointer(this)), uintptr(dwSourceContext), uintptr(unsafe.Pointer(ppasd)), uintptr(unsafe.Pointer(piCharPos)), uintptr(unsafe.Pointer(pcChars)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) CreateDebugDocumentContext(iCharPos uint32, cChars uint32, ppddc **IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateDebugDocumentContext, uintptr(unsafe.Pointer(this)), uintptr(iCharPos), uintptr(cChars), uintptr(unsafe.Pointer(ppddc)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) BringDocumentToTop() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().BringDocumentToTop, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper32) BringDocumentContextToTop(pddc *IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().BringDocumentContextToTop, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pddc)))
	return HRESULT(ret)
}

// C4C7363C-20FD-47F9-BD82-4855E0150871
var IID_IDebugDocumentHelper64 = syscall.GUID{0xC4C7363C, 0x20FD, 0x47F9,
	[8]byte{0xBD, 0x82, 0x48, 0x55, 0xE0, 0x15, 0x08, 0x71}}

type IDebugDocumentHelper64Interface interface {
	IUnknownInterface
	Init(pda *IDebugApplication64, pszShortName PWSTR, pszLongName PWSTR, docAttr uint32) HRESULT
	Attach(pddhParent *IDebugDocumentHelper64) HRESULT
	Detach() HRESULT
	AddUnicodeText(pszText PWSTR) HRESULT
	AddDBCSText(pszText PSTR) HRESULT
	SetDebugDocumentHost(pddh *IDebugDocumentHost) HRESULT
	AddDeferredText(cChars uint32, dwTextStartCookie uint32) HRESULT
	DefineScriptBlock(ulCharOffset uint32, cChars uint32, pas *IActiveScript, fScriptlet BOOL, pdwSourceContext *uint64) HRESULT
	SetDefaultTextAttr(staTextAttr uint16) HRESULT
	SetTextAttributes(ulCharOffset uint32, cChars uint32, pstaTextAttr *uint16) HRESULT
	SetLongName(pszLongName PWSTR) HRESULT
	SetShortName(pszShortName PWSTR) HRESULT
	SetDocumentAttr(pszAttributes uint32) HRESULT
	GetDebugApplicationNode(ppdan **IDebugApplicationNode) HRESULT
	GetScriptBlockInfo(dwSourceContext uint64, ppasd **IActiveScript, piCharPos *uint32, pcChars *uint32) HRESULT
	CreateDebugDocumentContext(iCharPos uint32, cChars uint32, ppddc **IDebugDocumentContext) HRESULT
	BringDocumentToTop() HRESULT
	BringDocumentContextToTop(pddc *IDebugDocumentContext) HRESULT
}

type IDebugDocumentHelper64Vtbl struct {
	IUnknownVtbl
	Init                       uintptr
	Attach                     uintptr
	Detach                     uintptr
	AddUnicodeText             uintptr
	AddDBCSText                uintptr
	SetDebugDocumentHost       uintptr
	AddDeferredText            uintptr
	DefineScriptBlock          uintptr
	SetDefaultTextAttr         uintptr
	SetTextAttributes          uintptr
	SetLongName                uintptr
	SetShortName               uintptr
	SetDocumentAttr            uintptr
	GetDebugApplicationNode    uintptr
	GetScriptBlockInfo         uintptr
	CreateDebugDocumentContext uintptr
	BringDocumentToTop         uintptr
	BringDocumentContextToTop  uintptr
}

type IDebugDocumentHelper64 struct {
	IUnknown
}

func (this *IDebugDocumentHelper64) Vtbl() *IDebugDocumentHelper64Vtbl {
	return (*IDebugDocumentHelper64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentHelper64) Init(pda *IDebugApplication64, pszShortName PWSTR, pszLongName PWSTR, docAttr uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Init, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pda)), uintptr(unsafe.Pointer(pszShortName)), uintptr(unsafe.Pointer(pszLongName)), uintptr(docAttr))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) Attach(pddhParent *IDebugDocumentHelper64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Attach, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pddhParent)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) Detach() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Detach, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) AddUnicodeText(pszText PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddUnicodeText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszText)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) AddDBCSText(pszText PSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDBCSText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszText)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) SetDebugDocumentHost(pddh *IDebugDocumentHost) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDebugDocumentHost, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pddh)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) AddDeferredText(cChars uint32, dwTextStartCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddDeferredText, uintptr(unsafe.Pointer(this)), uintptr(cChars), uintptr(dwTextStartCookie))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) DefineScriptBlock(ulCharOffset uint32, cChars uint32, pas *IActiveScript, fScriptlet BOOL, pdwSourceContext *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DefineScriptBlock, uintptr(unsafe.Pointer(this)), uintptr(ulCharOffset), uintptr(cChars), uintptr(unsafe.Pointer(pas)), uintptr(fScriptlet), uintptr(unsafe.Pointer(pdwSourceContext)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) SetDefaultTextAttr(staTextAttr uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDefaultTextAttr, uintptr(unsafe.Pointer(this)), uintptr(staTextAttr))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) SetTextAttributes(ulCharOffset uint32, cChars uint32, pstaTextAttr *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(ulCharOffset), uintptr(cChars), uintptr(unsafe.Pointer(pstaTextAttr)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) SetLongName(pszLongName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetLongName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszLongName)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) SetShortName(pszShortName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetShortName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszShortName)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) SetDocumentAttr(pszAttributes uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDocumentAttr, uintptr(unsafe.Pointer(this)), uintptr(pszAttributes))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) GetDebugApplicationNode(ppdan **IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebugApplicationNode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppdan)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) GetScriptBlockInfo(dwSourceContext uint64, ppasd **IActiveScript, piCharPos *uint32, pcChars *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptBlockInfo, uintptr(unsafe.Pointer(this)), uintptr(dwSourceContext), uintptr(unsafe.Pointer(ppasd)), uintptr(unsafe.Pointer(piCharPos)), uintptr(unsafe.Pointer(pcChars)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) CreateDebugDocumentContext(iCharPos uint32, cChars uint32, ppddc **IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateDebugDocumentContext, uintptr(unsafe.Pointer(this)), uintptr(iCharPos), uintptr(cChars), uintptr(unsafe.Pointer(ppddc)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) BringDocumentToTop() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().BringDocumentToTop, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHelper64) BringDocumentContextToTop(pddc *IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().BringDocumentContextToTop, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pddc)))
	return HRESULT(ret)
}

// 51973C27-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocumentHost = syscall.GUID{0x51973C27, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentHostInterface interface {
	IUnknownInterface
	GetDeferredText(dwTextStartCookie uint32, pcharText PWSTR, pstaTextAttr *uint16, pcNumChars *uint32, cMaxChars uint32) HRESULT
	GetScriptTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT
	OnCreateDocumentContext(ppunkOuter **IUnknown) HRESULT
	GetPathName(pbstrLongName *BSTR, pfIsOriginalFile *BOOL) HRESULT
	GetFileName(pbstrShortName *BSTR) HRESULT
	NotifyChanged() HRESULT
}

type IDebugDocumentHostVtbl struct {
	IUnknownVtbl
	GetDeferredText         uintptr
	GetScriptTextAttributes uintptr
	OnCreateDocumentContext uintptr
	GetPathName             uintptr
	GetFileName             uintptr
	NotifyChanged           uintptr
}

type IDebugDocumentHost struct {
	IUnknown
}

func (this *IDebugDocumentHost) Vtbl() *IDebugDocumentHostVtbl {
	return (*IDebugDocumentHostVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentHost) GetDeferredText(dwTextStartCookie uint32, pcharText PWSTR, pstaTextAttr *uint16, pcNumChars *uint32, cMaxChars uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDeferredText, uintptr(unsafe.Pointer(this)), uintptr(dwTextStartCookie), uintptr(unsafe.Pointer(pcharText)), uintptr(unsafe.Pointer(pstaTextAttr)), uintptr(unsafe.Pointer(pcNumChars)), uintptr(cMaxChars))
	return HRESULT(ret)
}

func (this *IDebugDocumentHost) GetScriptTextAttributes(pstrCode PWSTR, uNumCodeChars uint32, pstrDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrCode)), uintptr(uNumCodeChars), uintptr(unsafe.Pointer(pstrDelimiter)), uintptr(dwFlags), uintptr(unsafe.Pointer(pattr)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHost) OnCreateDocumentContext(ppunkOuter **IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnCreateDocumentContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppunkOuter)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHost) GetPathName(pbstrLongName *BSTR, pfIsOriginalFile *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPathName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrLongName)), uintptr(unsafe.Pointer(pfIsOriginalFile)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHost) GetFileName(pbstrShortName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetFileName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrShortName)))
	return HRESULT(ret)
}

func (this *IDebugDocumentHost) NotifyChanged() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().NotifyChanged, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 51973C28-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugDocumentContext = syscall.GUID{0x51973C28, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugDocumentContextInterface interface {
	IUnknownInterface
	GetDocument(ppsd **IDebugDocument) HRESULT
	EnumCodeContexts(ppescc **IEnumDebugCodeContexts) HRESULT
}

type IDebugDocumentContextVtbl struct {
	IUnknownVtbl
	GetDocument      uintptr
	EnumCodeContexts uintptr
}

type IDebugDocumentContext struct {
	IUnknown
}

func (this *IDebugDocumentContext) Vtbl() *IDebugDocumentContextVtbl {
	return (*IDebugDocumentContextVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugDocumentContext) GetDocument(ppsd **IDebugDocument) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocument, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppsd)))
	return HRESULT(ret)
}

func (this *IDebugDocumentContext) EnumCodeContexts(ppescc **IEnumDebugCodeContexts) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumCodeContexts, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppescc)))
	return HRESULT(ret)
}

// 51973C29-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugSessionProvider = syscall.GUID{0x51973C29, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugSessionProviderInterface interface {
	IUnknownInterface
	StartDebugSession(pda *IRemoteDebugApplication) HRESULT
}

type IDebugSessionProviderVtbl struct {
	IUnknownVtbl
	StartDebugSession uintptr
}

type IDebugSessionProvider struct {
	IUnknown
}

func (this *IDebugSessionProvider) Vtbl() *IDebugSessionProviderVtbl {
	return (*IDebugSessionProviderVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugSessionProvider) StartDebugSession(pda *IRemoteDebugApplication) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartDebugSession, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pda)))
	return HRESULT(ret)
}

// 51973C2A-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IApplicationDebugger = syscall.GUID{0x51973C2A, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IApplicationDebuggerInterface interface {
	IUnknownInterface
	QueryAlive() HRESULT
	CreateInstanceAtDebugger(rclsid *syscall.GUID, pUnkOuter *IUnknown, dwClsContext uint32, riid *syscall.GUID, ppvObject **IUnknown) HRESULT
	OnDebugOutput(pstr PWSTR) HRESULT
	OnHandleBreakPoint(prpt *IRemoteDebugApplicationThread, br BREAKREASON, pError *IActiveScriptErrorDebug) HRESULT
	OnClose() HRESULT
	OnDebuggerEvent(riid *syscall.GUID, punk *IUnknown) HRESULT
}

type IApplicationDebuggerVtbl struct {
	IUnknownVtbl
	QueryAlive               uintptr
	CreateInstanceAtDebugger uintptr
	OnDebugOutput            uintptr
	OnHandleBreakPoint       uintptr
	OnClose                  uintptr
	OnDebuggerEvent          uintptr
}

type IApplicationDebugger struct {
	IUnknown
}

func (this *IApplicationDebugger) Vtbl() *IApplicationDebuggerVtbl {
	return (*IApplicationDebuggerVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IApplicationDebugger) QueryAlive() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryAlive, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IApplicationDebugger) CreateInstanceAtDebugger(rclsid *syscall.GUID, pUnkOuter *IUnknown, dwClsContext uint32, riid *syscall.GUID, ppvObject **IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateInstanceAtDebugger, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(rclsid)), uintptr(unsafe.Pointer(pUnkOuter)), uintptr(dwClsContext), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(ppvObject)))
	return HRESULT(ret)
}

func (this *IApplicationDebugger) OnDebugOutput(pstr PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnDebugOutput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstr)))
	return HRESULT(ret)
}

func (this *IApplicationDebugger) OnHandleBreakPoint(prpt *IRemoteDebugApplicationThread, br BREAKREASON, pError *IActiveScriptErrorDebug) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnHandleBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prpt)), uintptr(br), uintptr(unsafe.Pointer(pError)))
	return HRESULT(ret)
}

func (this *IApplicationDebugger) OnClose() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnClose, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IApplicationDebugger) OnDebuggerEvent(riid *syscall.GUID, punk *IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnDebuggerEvent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(punk)))
	return HRESULT(ret)
}

// 51973C2B-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IApplicationDebuggerUI = syscall.GUID{0x51973C2B, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IApplicationDebuggerUIInterface interface {
	IUnknownInterface
	BringDocumentToTop(pddt *IDebugDocumentText) HRESULT
	BringDocumentContextToTop(pddc *IDebugDocumentContext) HRESULT
}

type IApplicationDebuggerUIVtbl struct {
	IUnknownVtbl
	BringDocumentToTop        uintptr
	BringDocumentContextToTop uintptr
}

type IApplicationDebuggerUI struct {
	IUnknown
}

func (this *IApplicationDebuggerUI) Vtbl() *IApplicationDebuggerUIVtbl {
	return (*IApplicationDebuggerUIVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IApplicationDebuggerUI) BringDocumentToTop(pddt *IDebugDocumentText) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().BringDocumentToTop, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pddt)))
	return HRESULT(ret)
}

func (this *IApplicationDebuggerUI) BringDocumentContextToTop(pddc *IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().BringDocumentContextToTop, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pddc)))
	return HRESULT(ret)
}

// 51973C2C-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IMachineDebugManager = syscall.GUID{0x51973C2C, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IMachineDebugManagerInterface interface {
	IUnknownInterface
	AddApplication(pda *IRemoteDebugApplication, pdwAppCookie *uint32) HRESULT
	RemoveApplication(dwAppCookie uint32) HRESULT
	EnumApplications(ppeda **IEnumRemoteDebugApplications) HRESULT
}

type IMachineDebugManagerVtbl struct {
	IUnknownVtbl
	AddApplication    uintptr
	RemoveApplication uintptr
	EnumApplications  uintptr
}

type IMachineDebugManager struct {
	IUnknown
}

func (this *IMachineDebugManager) Vtbl() *IMachineDebugManagerVtbl {
	return (*IMachineDebugManagerVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IMachineDebugManager) AddApplication(pda *IRemoteDebugApplication, pdwAppCookie *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pda)), uintptr(unsafe.Pointer(pdwAppCookie)))
	return HRESULT(ret)
}

func (this *IMachineDebugManager) RemoveApplication(dwAppCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveApplication, uintptr(unsafe.Pointer(this)), uintptr(dwAppCookie))
	return HRESULT(ret)
}

func (this *IMachineDebugManager) EnumApplications(ppeda **IEnumRemoteDebugApplications) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumApplications, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppeda)))
	return HRESULT(ret)
}

// 51973C2D-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IMachineDebugManagerCookie = syscall.GUID{0x51973C2D, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IMachineDebugManagerCookieInterface interface {
	IUnknownInterface
	AddApplication(pda *IRemoteDebugApplication, dwDebugAppCookie uint32, pdwAppCookie *uint32) HRESULT
	RemoveApplication(dwDebugAppCookie uint32, dwAppCookie uint32) HRESULT
	EnumApplications(ppeda **IEnumRemoteDebugApplications) HRESULT
}

type IMachineDebugManagerCookieVtbl struct {
	IUnknownVtbl
	AddApplication    uintptr
	RemoveApplication uintptr
	EnumApplications  uintptr
}

type IMachineDebugManagerCookie struct {
	IUnknown
}

func (this *IMachineDebugManagerCookie) Vtbl() *IMachineDebugManagerCookieVtbl {
	return (*IMachineDebugManagerCookieVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IMachineDebugManagerCookie) AddApplication(pda *IRemoteDebugApplication, dwDebugAppCookie uint32, pdwAppCookie *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pda)), uintptr(dwDebugAppCookie), uintptr(unsafe.Pointer(pdwAppCookie)))
	return HRESULT(ret)
}

func (this *IMachineDebugManagerCookie) RemoveApplication(dwDebugAppCookie uint32, dwAppCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveApplication, uintptr(unsafe.Pointer(this)), uintptr(dwDebugAppCookie), uintptr(dwAppCookie))
	return HRESULT(ret)
}

func (this *IMachineDebugManagerCookie) EnumApplications(ppeda **IEnumRemoteDebugApplications) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumApplications, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppeda)))
	return HRESULT(ret)
}

// 51973C2E-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IMachineDebugManagerEvents = syscall.GUID{0x51973C2E, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IMachineDebugManagerEventsInterface interface {
	IUnknownInterface
	OnAddApplication(pda *IRemoteDebugApplication, dwAppCookie uint32) HRESULT
	OnRemoveApplication(pda *IRemoteDebugApplication, dwAppCookie uint32) HRESULT
}

type IMachineDebugManagerEventsVtbl struct {
	IUnknownVtbl
	OnAddApplication    uintptr
	OnRemoveApplication uintptr
}

type IMachineDebugManagerEvents struct {
	IUnknown
}

func (this *IMachineDebugManagerEvents) Vtbl() *IMachineDebugManagerEventsVtbl {
	return (*IMachineDebugManagerEventsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IMachineDebugManagerEvents) OnAddApplication(pda *IRemoteDebugApplication, dwAppCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnAddApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pda)), uintptr(dwAppCookie))
	return HRESULT(ret)
}

func (this *IMachineDebugManagerEvents) OnRemoveApplication(pda *IRemoteDebugApplication, dwAppCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnRemoveApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pda)), uintptr(dwAppCookie))
	return HRESULT(ret)
}

// 51973C2F-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IProcessDebugManager32 = syscall.GUID{0x51973C2F, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IProcessDebugManager32Interface interface {
	IUnknownInterface
	CreateApplication(ppda **IDebugApplication32) HRESULT
	GetDefaultApplication(ppda **IDebugApplication32) HRESULT
	AddApplication(pda *IDebugApplication32, pdwAppCookie *uint32) HRESULT
	RemoveApplication(dwAppCookie uint32) HRESULT
	CreateDebugDocumentHelper(punkOuter *IUnknown, pddh **IDebugDocumentHelper32) HRESULT
}

type IProcessDebugManager32Vtbl struct {
	IUnknownVtbl
	CreateApplication         uintptr
	GetDefaultApplication     uintptr
	AddApplication            uintptr
	RemoveApplication         uintptr
	CreateDebugDocumentHelper uintptr
}

type IProcessDebugManager32 struct {
	IUnknown
}

func (this *IProcessDebugManager32) Vtbl() *IProcessDebugManager32Vtbl {
	return (*IProcessDebugManager32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IProcessDebugManager32) CreateApplication(ppda **IDebugApplication32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppda)))
	return HRESULT(ret)
}

func (this *IProcessDebugManager32) GetDefaultApplication(ppda **IDebugApplication32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDefaultApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppda)))
	return HRESULT(ret)
}

func (this *IProcessDebugManager32) AddApplication(pda *IDebugApplication32, pdwAppCookie *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pda)), uintptr(unsafe.Pointer(pdwAppCookie)))
	return HRESULT(ret)
}

func (this *IProcessDebugManager32) RemoveApplication(dwAppCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveApplication, uintptr(unsafe.Pointer(this)), uintptr(dwAppCookie))
	return HRESULT(ret)
}

func (this *IProcessDebugManager32) CreateDebugDocumentHelper(punkOuter *IUnknown, pddh **IDebugDocumentHelper32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateDebugDocumentHelper, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(punkOuter)), uintptr(unsafe.Pointer(pddh)))
	return HRESULT(ret)
}

// 56B9FC1C-63A9-4CC1-AC21-087D69A17FAB
var IID_IProcessDebugManager64 = syscall.GUID{0x56B9FC1C, 0x63A9, 0x4CC1,
	[8]byte{0xAC, 0x21, 0x08, 0x7D, 0x69, 0xA1, 0x7F, 0xAB}}

type IProcessDebugManager64Interface interface {
	IUnknownInterface
	CreateApplication(ppda **IDebugApplication64) HRESULT
	GetDefaultApplication(ppda **IDebugApplication64) HRESULT
	AddApplication(pda *IDebugApplication64, pdwAppCookie *uint32) HRESULT
	RemoveApplication(dwAppCookie uint32) HRESULT
	CreateDebugDocumentHelper(punkOuter *IUnknown, pddh **IDebugDocumentHelper64) HRESULT
}

type IProcessDebugManager64Vtbl struct {
	IUnknownVtbl
	CreateApplication         uintptr
	GetDefaultApplication     uintptr
	AddApplication            uintptr
	RemoveApplication         uintptr
	CreateDebugDocumentHelper uintptr
}

type IProcessDebugManager64 struct {
	IUnknown
}

func (this *IProcessDebugManager64) Vtbl() *IProcessDebugManager64Vtbl {
	return (*IProcessDebugManager64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IProcessDebugManager64) CreateApplication(ppda **IDebugApplication64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppda)))
	return HRESULT(ret)
}

func (this *IProcessDebugManager64) GetDefaultApplication(ppda **IDebugApplication64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDefaultApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppda)))
	return HRESULT(ret)
}

func (this *IProcessDebugManager64) AddApplication(pda *IDebugApplication64, pdwAppCookie *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pda)), uintptr(unsafe.Pointer(pdwAppCookie)))
	return HRESULT(ret)
}

func (this *IProcessDebugManager64) RemoveApplication(dwAppCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveApplication, uintptr(unsafe.Pointer(this)), uintptr(dwAppCookie))
	return HRESULT(ret)
}

func (this *IProcessDebugManager64) CreateDebugDocumentHelper(punkOuter *IUnknown, pddh **IDebugDocumentHelper64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateDebugDocumentHelper, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(punkOuter)), uintptr(unsafe.Pointer(pddh)))
	return HRESULT(ret)
}

// 51973C30-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IRemoteDebugApplication = syscall.GUID{0x51973C30, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IRemoteDebugApplicationInterface interface {
	IUnknownInterface
	ResumeFromBreakPoint(prptFocus *IRemoteDebugApplicationThread, bra BREAKRESUME_ACTION, era ERRORRESUMEACTION) HRESULT
	CauseBreak() HRESULT
	ConnectDebugger(pad *IApplicationDebugger) HRESULT
	DisconnectDebugger() HRESULT
	GetDebugger(pad **IApplicationDebugger) HRESULT
	CreateInstanceAtApplication(rclsid *syscall.GUID, pUnkOuter *IUnknown, dwClsContext uint32, riid *syscall.GUID, ppvObject **IUnknown) HRESULT
	QueryAlive() HRESULT
	EnumThreads(pperdat **IEnumRemoteDebugApplicationThreads) HRESULT
	GetName(pbstrName *BSTR) HRESULT
	GetRootNode(ppdanRoot **IDebugApplicationNode) HRESULT
	EnumGlobalExpressionContexts(ppedec **IEnumDebugExpressionContexts) HRESULT
}

type IRemoteDebugApplicationVtbl struct {
	IUnknownVtbl
	ResumeFromBreakPoint         uintptr
	CauseBreak                   uintptr
	ConnectDebugger              uintptr
	DisconnectDebugger           uintptr
	GetDebugger                  uintptr
	CreateInstanceAtApplication  uintptr
	QueryAlive                   uintptr
	EnumThreads                  uintptr
	GetName                      uintptr
	GetRootNode                  uintptr
	EnumGlobalExpressionContexts uintptr
}

type IRemoteDebugApplication struct {
	IUnknown
}

func (this *IRemoteDebugApplication) Vtbl() *IRemoteDebugApplicationVtbl {
	return (*IRemoteDebugApplicationVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IRemoteDebugApplication) ResumeFromBreakPoint(prptFocus *IRemoteDebugApplicationThread, bra BREAKRESUME_ACTION, era ERRORRESUMEACTION) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ResumeFromBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prptFocus)), uintptr(bra), uintptr(era))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) CauseBreak() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CauseBreak, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) ConnectDebugger(pad *IApplicationDebugger) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ConnectDebugger, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pad)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) DisconnectDebugger() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DisconnectDebugger, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) GetDebugger(pad **IApplicationDebugger) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebugger, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pad)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) CreateInstanceAtApplication(rclsid *syscall.GUID, pUnkOuter *IUnknown, dwClsContext uint32, riid *syscall.GUID, ppvObject **IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateInstanceAtApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(rclsid)), uintptr(unsafe.Pointer(pUnkOuter)), uintptr(dwClsContext), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(ppvObject)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) QueryAlive() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryAlive, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) EnumThreads(pperdat **IEnumRemoteDebugApplicationThreads) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumThreads, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pperdat)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) GetName(pbstrName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrName)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) GetRootNode(ppdanRoot **IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRootNode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppdanRoot)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication) EnumGlobalExpressionContexts(ppedec **IEnumDebugExpressionContexts) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumGlobalExpressionContexts, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppedec)))
	return HRESULT(ret)
}

// 51973C32-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugApplication32 = syscall.GUID{0x51973C32, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugApplication32Interface interface {
	IRemoteDebugApplicationInterface
	SetName(pstrName PWSTR) HRESULT
	StepOutComplete() HRESULT
	DebugOutput(pstr PWSTR) HRESULT
	StartDebugSession() HRESULT
	HandleBreakPoint(br BREAKREASON, pbra *BREAKRESUME_ACTION) HRESULT
	Close() HRESULT
	GetBreakFlags(pabf *uint32, pprdatSteppingThread **IRemoteDebugApplicationThread) HRESULT
	GetCurrentThread(pat **IDebugApplicationThread) HRESULT
	CreateAsyncDebugOperation(psdo *IDebugSyncOperation, ppado **IDebugAsyncOperation) HRESULT
	AddStackFrameSniffer(pdsfs *IDebugStackFrameSniffer, pdwCookie *uint32) HRESULT
	RemoveStackFrameSniffer(dwCookie uint32) HRESULT
	QueryCurrentThreadIsDebuggerThread() HRESULT
	SynchronousCallInDebuggerThread(pptc *IDebugThreadCall32, dwParam1 uint32, dwParam2 uint32, dwParam3 uint32) HRESULT
	CreateApplicationNode(ppdanNew **IDebugApplicationNode) HRESULT
	FireDebuggerEvent(riid *syscall.GUID, punk *IUnknown) HRESULT
	HandleRuntimeError(pErrorDebug *IActiveScriptErrorDebug, pScriptSite *IActiveScriptSite, pbra *BREAKRESUME_ACTION, perra *ERRORRESUMEACTION, pfCallOnScriptError *BOOL) HRESULT
	FCanJitDebug() BOOL
	FIsAutoJitDebugEnabled() BOOL
	AddGlobalExpressionContextProvider(pdsfs *IProvideExpressionContexts, pdwCookie *uint32) HRESULT
	RemoveGlobalExpressionContextProvider(dwCookie uint32) HRESULT
}

type IDebugApplication32Vtbl struct {
	IRemoteDebugApplicationVtbl
	SetName                               uintptr
	StepOutComplete                       uintptr
	DebugOutput                           uintptr
	StartDebugSession                     uintptr
	HandleBreakPoint                      uintptr
	Close                                 uintptr
	GetBreakFlags                         uintptr
	GetCurrentThread                      uintptr
	CreateAsyncDebugOperation             uintptr
	AddStackFrameSniffer                  uintptr
	RemoveStackFrameSniffer               uintptr
	QueryCurrentThreadIsDebuggerThread    uintptr
	SynchronousCallInDebuggerThread       uintptr
	CreateApplicationNode                 uintptr
	FireDebuggerEvent                     uintptr
	HandleRuntimeError                    uintptr
	FCanJitDebug                          uintptr
	FIsAutoJitDebugEnabled                uintptr
	AddGlobalExpressionContextProvider    uintptr
	RemoveGlobalExpressionContextProvider uintptr
}

type IDebugApplication32 struct {
	IRemoteDebugApplication
}

func (this *IDebugApplication32) Vtbl() *IDebugApplication32Vtbl {
	return (*IDebugApplication32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplication32) SetName(pstrName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrName)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) StepOutComplete() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StepOutComplete, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) DebugOutput(pstr PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DebugOutput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstr)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) StartDebugSession() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartDebugSession, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) HandleBreakPoint(br BREAKREASON, pbra *BREAKRESUME_ACTION) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().HandleBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(br), uintptr(unsafe.Pointer(pbra)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) Close() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Close, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) GetBreakFlags(pabf *uint32, pprdatSteppingThread **IRemoteDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pabf)), uintptr(unsafe.Pointer(pprdatSteppingThread)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) GetCurrentThread(pat **IDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pat)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) CreateAsyncDebugOperation(psdo *IDebugSyncOperation, ppado **IDebugAsyncOperation) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateAsyncDebugOperation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psdo)), uintptr(unsafe.Pointer(ppado)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) AddStackFrameSniffer(pdsfs *IDebugStackFrameSniffer, pdwCookie *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddStackFrameSniffer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdsfs)), uintptr(unsafe.Pointer(pdwCookie)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) RemoveStackFrameSniffer(dwCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveStackFrameSniffer, uintptr(unsafe.Pointer(this)), uintptr(dwCookie))
	return HRESULT(ret)
}

func (this *IDebugApplication32) QueryCurrentThreadIsDebuggerThread() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryCurrentThreadIsDebuggerThread, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) SynchronousCallInDebuggerThread(pptc *IDebugThreadCall32, dwParam1 uint32, dwParam2 uint32, dwParam3 uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SynchronousCallInDebuggerThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pptc)), uintptr(dwParam1), uintptr(dwParam2), uintptr(dwParam3))
	return HRESULT(ret)
}

func (this *IDebugApplication32) CreateApplicationNode(ppdanNew **IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateApplicationNode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppdanNew)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) FireDebuggerEvent(riid *syscall.GUID, punk *IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FireDebuggerEvent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(punk)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) HandleRuntimeError(pErrorDebug *IActiveScriptErrorDebug, pScriptSite *IActiveScriptSite, pbra *BREAKRESUME_ACTION, perra *ERRORRESUMEACTION, pfCallOnScriptError *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().HandleRuntimeError, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pErrorDebug)), uintptr(unsafe.Pointer(pScriptSite)), uintptr(unsafe.Pointer(pbra)), uintptr(unsafe.Pointer(perra)), uintptr(unsafe.Pointer(pfCallOnScriptError)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) FCanJitDebug() BOOL {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FCanJitDebug, uintptr(unsafe.Pointer(this)))
	return BOOL(ret)
}

func (this *IDebugApplication32) FIsAutoJitDebugEnabled() BOOL {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FIsAutoJitDebugEnabled, uintptr(unsafe.Pointer(this)))
	return BOOL(ret)
}

func (this *IDebugApplication32) AddGlobalExpressionContextProvider(pdsfs *IProvideExpressionContexts, pdwCookie *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddGlobalExpressionContextProvider, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdsfs)), uintptr(unsafe.Pointer(pdwCookie)))
	return HRESULT(ret)
}

func (this *IDebugApplication32) RemoveGlobalExpressionContextProvider(dwCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveGlobalExpressionContextProvider, uintptr(unsafe.Pointer(this)), uintptr(dwCookie))
	return HRESULT(ret)
}

// 4DEDC754-04C7-4F10-9E60-16A390FE6E62
var IID_IDebugApplication64 = syscall.GUID{0x4DEDC754, 0x04C7, 0x4F10,
	[8]byte{0x9E, 0x60, 0x16, 0xA3, 0x90, 0xFE, 0x6E, 0x62}}

type IDebugApplication64Interface interface {
	IRemoteDebugApplicationInterface
	SetName(pstrName PWSTR) HRESULT
	StepOutComplete() HRESULT
	DebugOutput(pstr PWSTR) HRESULT
	StartDebugSession() HRESULT
	HandleBreakPoint(br BREAKREASON, pbra *BREAKRESUME_ACTION) HRESULT
	Close() HRESULT
	GetBreakFlags(pabf *uint32, pprdatSteppingThread **IRemoteDebugApplicationThread) HRESULT
	GetCurrentThread(pat **IDebugApplicationThread) HRESULT
	CreateAsyncDebugOperation(psdo *IDebugSyncOperation, ppado **IDebugAsyncOperation) HRESULT
	AddStackFrameSniffer(pdsfs *IDebugStackFrameSniffer, pdwCookie *uint32) HRESULT
	RemoveStackFrameSniffer(dwCookie uint32) HRESULT
	QueryCurrentThreadIsDebuggerThread() HRESULT
	SynchronousCallInDebuggerThread(pptc *IDebugThreadCall64, dwParam1 uint64, dwParam2 uint64, dwParam3 uint64) HRESULT
	CreateApplicationNode(ppdanNew **IDebugApplicationNode) HRESULT
	FireDebuggerEvent(riid *syscall.GUID, punk *IUnknown) HRESULT
	HandleRuntimeError(pErrorDebug *IActiveScriptErrorDebug, pScriptSite *IActiveScriptSite, pbra *BREAKRESUME_ACTION, perra *ERRORRESUMEACTION, pfCallOnScriptError *BOOL) HRESULT
	FCanJitDebug() BOOL
	FIsAutoJitDebugEnabled() BOOL
	AddGlobalExpressionContextProvider(pdsfs *IProvideExpressionContexts, pdwCookie *uint64) HRESULT
	RemoveGlobalExpressionContextProvider(dwCookie uint64) HRESULT
}

type IDebugApplication64Vtbl struct {
	IRemoteDebugApplicationVtbl
	SetName                               uintptr
	StepOutComplete                       uintptr
	DebugOutput                           uintptr
	StartDebugSession                     uintptr
	HandleBreakPoint                      uintptr
	Close                                 uintptr
	GetBreakFlags                         uintptr
	GetCurrentThread                      uintptr
	CreateAsyncDebugOperation             uintptr
	AddStackFrameSniffer                  uintptr
	RemoveStackFrameSniffer               uintptr
	QueryCurrentThreadIsDebuggerThread    uintptr
	SynchronousCallInDebuggerThread       uintptr
	CreateApplicationNode                 uintptr
	FireDebuggerEvent                     uintptr
	HandleRuntimeError                    uintptr
	FCanJitDebug                          uintptr
	FIsAutoJitDebugEnabled                uintptr
	AddGlobalExpressionContextProvider    uintptr
	RemoveGlobalExpressionContextProvider uintptr
}

type IDebugApplication64 struct {
	IRemoteDebugApplication
}

func (this *IDebugApplication64) Vtbl() *IDebugApplication64Vtbl {
	return (*IDebugApplication64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplication64) SetName(pstrName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrName)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) StepOutComplete() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StepOutComplete, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) DebugOutput(pstr PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DebugOutput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstr)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) StartDebugSession() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartDebugSession, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) HandleBreakPoint(br BREAKREASON, pbra *BREAKRESUME_ACTION) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().HandleBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(br), uintptr(unsafe.Pointer(pbra)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) Close() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Close, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) GetBreakFlags(pabf *uint32, pprdatSteppingThread **IRemoteDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBreakFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pabf)), uintptr(unsafe.Pointer(pprdatSteppingThread)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) GetCurrentThread(pat **IDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pat)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) CreateAsyncDebugOperation(psdo *IDebugSyncOperation, ppado **IDebugAsyncOperation) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateAsyncDebugOperation, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psdo)), uintptr(unsafe.Pointer(ppado)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) AddStackFrameSniffer(pdsfs *IDebugStackFrameSniffer, pdwCookie *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddStackFrameSniffer, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdsfs)), uintptr(unsafe.Pointer(pdwCookie)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) RemoveStackFrameSniffer(dwCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveStackFrameSniffer, uintptr(unsafe.Pointer(this)), uintptr(dwCookie))
	return HRESULT(ret)
}

func (this *IDebugApplication64) QueryCurrentThreadIsDebuggerThread() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryCurrentThreadIsDebuggerThread, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) SynchronousCallInDebuggerThread(pptc *IDebugThreadCall64, dwParam1 uint64, dwParam2 uint64, dwParam3 uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SynchronousCallInDebuggerThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pptc)), uintptr(dwParam1), uintptr(dwParam2), uintptr(dwParam3))
	return HRESULT(ret)
}

func (this *IDebugApplication64) CreateApplicationNode(ppdanNew **IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateApplicationNode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppdanNew)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) FireDebuggerEvent(riid *syscall.GUID, punk *IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FireDebuggerEvent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(punk)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) HandleRuntimeError(pErrorDebug *IActiveScriptErrorDebug, pScriptSite *IActiveScriptSite, pbra *BREAKRESUME_ACTION, perra *ERRORRESUMEACTION, pfCallOnScriptError *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().HandleRuntimeError, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pErrorDebug)), uintptr(unsafe.Pointer(pScriptSite)), uintptr(unsafe.Pointer(pbra)), uintptr(unsafe.Pointer(perra)), uintptr(unsafe.Pointer(pfCallOnScriptError)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) FCanJitDebug() BOOL {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FCanJitDebug, uintptr(unsafe.Pointer(this)))
	return BOOL(ret)
}

func (this *IDebugApplication64) FIsAutoJitDebugEnabled() BOOL {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FIsAutoJitDebugEnabled, uintptr(unsafe.Pointer(this)))
	return BOOL(ret)
}

func (this *IDebugApplication64) AddGlobalExpressionContextProvider(pdsfs *IProvideExpressionContexts, pdwCookie *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddGlobalExpressionContextProvider, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdsfs)), uintptr(unsafe.Pointer(pdwCookie)))
	return HRESULT(ret)
}

func (this *IDebugApplication64) RemoveGlobalExpressionContextProvider(dwCookie uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveGlobalExpressionContextProvider, uintptr(unsafe.Pointer(this)), uintptr(dwCookie))
	return HRESULT(ret)
}

// 51973C33-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IRemoteDebugApplicationEvents = syscall.GUID{0x51973C33, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IRemoteDebugApplicationEventsInterface interface {
	IUnknownInterface
	OnConnectDebugger(pad *IApplicationDebugger) HRESULT
	OnDisconnectDebugger() HRESULT
	OnSetName(pstrName PWSTR) HRESULT
	OnDebugOutput(pstr PWSTR) HRESULT
	OnClose() HRESULT
	OnEnterBreakPoint(prdat *IRemoteDebugApplicationThread) HRESULT
	OnLeaveBreakPoint(prdat *IRemoteDebugApplicationThread) HRESULT
	OnCreateThread(prdat *IRemoteDebugApplicationThread) HRESULT
	OnDestroyThread(prdat *IRemoteDebugApplicationThread) HRESULT
	OnBreakFlagChange(abf uint32, prdatSteppingThread *IRemoteDebugApplicationThread) HRESULT
}

type IRemoteDebugApplicationEventsVtbl struct {
	IUnknownVtbl
	OnConnectDebugger    uintptr
	OnDisconnectDebugger uintptr
	OnSetName            uintptr
	OnDebugOutput        uintptr
	OnClose              uintptr
	OnEnterBreakPoint    uintptr
	OnLeaveBreakPoint    uintptr
	OnCreateThread       uintptr
	OnDestroyThread      uintptr
	OnBreakFlagChange    uintptr
}

type IRemoteDebugApplicationEvents struct {
	IUnknown
}

func (this *IRemoteDebugApplicationEvents) Vtbl() *IRemoteDebugApplicationEventsVtbl {
	return (*IRemoteDebugApplicationEventsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IRemoteDebugApplicationEvents) OnConnectDebugger(pad *IApplicationDebugger) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnConnectDebugger, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pad)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationEvents) OnDisconnectDebugger() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnDisconnectDebugger, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationEvents) OnSetName(pstrName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnSetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrName)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationEvents) OnDebugOutput(pstr PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnDebugOutput, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstr)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationEvents) OnClose() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnClose, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationEvents) OnEnterBreakPoint(prdat *IRemoteDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnEnterBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prdat)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationEvents) OnLeaveBreakPoint(prdat *IRemoteDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnLeaveBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prdat)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationEvents) OnCreateThread(prdat *IRemoteDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnCreateThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prdat)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationEvents) OnDestroyThread(prdat *IRemoteDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnDestroyThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prdat)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationEvents) OnBreakFlagChange(abf uint32, prdatSteppingThread *IRemoteDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnBreakFlagChange, uintptr(unsafe.Pointer(this)), uintptr(abf), uintptr(unsafe.Pointer(prdatSteppingThread)))
	return HRESULT(ret)
}

// 51973C34-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugApplicationNode = syscall.GUID{0x51973C34, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugApplicationNodeInterface interface {
	IDebugDocumentProviderInterface
	EnumChildren(pperddp **IEnumDebugApplicationNodes) HRESULT
	GetParent(pprddp **IDebugApplicationNode) HRESULT
	SetDocumentProvider(pddp *IDebugDocumentProvider) HRESULT
	Close() HRESULT
	Attach(pdanParent *IDebugApplicationNode) HRESULT
	Detach() HRESULT
}

type IDebugApplicationNodeVtbl struct {
	IDebugDocumentProviderVtbl
	EnumChildren        uintptr
	GetParent           uintptr
	SetDocumentProvider uintptr
	Close               uintptr
	Attach              uintptr
	Detach              uintptr
}

type IDebugApplicationNode struct {
	IDebugDocumentProvider
}

func (this *IDebugApplicationNode) Vtbl() *IDebugApplicationNodeVtbl {
	return (*IDebugApplicationNodeVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplicationNode) EnumChildren(pperddp **IEnumDebugApplicationNodes) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumChildren, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pperddp)))
	return HRESULT(ret)
}

func (this *IDebugApplicationNode) GetParent(pprddp **IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetParent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pprddp)))
	return HRESULT(ret)
}

func (this *IDebugApplicationNode) SetDocumentProvider(pddp *IDebugDocumentProvider) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDocumentProvider, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pddp)))
	return HRESULT(ret)
}

func (this *IDebugApplicationNode) Close() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Close, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplicationNode) Attach(pdanParent *IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Attach, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdanParent)))
	return HRESULT(ret)
}

func (this *IDebugApplicationNode) Detach() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Detach, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 51973C35-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugApplicationNodeEvents = syscall.GUID{0x51973C35, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugApplicationNodeEventsInterface interface {
	IUnknownInterface
	OnAddChild(prddpChild *IDebugApplicationNode) HRESULT
	OnRemoveChild(prddpChild *IDebugApplicationNode) HRESULT
	OnDetach() HRESULT
	OnAttach(prddpParent *IDebugApplicationNode) HRESULT
}

type IDebugApplicationNodeEventsVtbl struct {
	IUnknownVtbl
	OnAddChild    uintptr
	OnRemoveChild uintptr
	OnDetach      uintptr
	OnAttach      uintptr
}

type IDebugApplicationNodeEvents struct {
	IUnknown
}

func (this *IDebugApplicationNodeEvents) Vtbl() *IDebugApplicationNodeEventsVtbl {
	return (*IDebugApplicationNodeEventsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplicationNodeEvents) OnAddChild(prddpChild *IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnAddChild, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prddpChild)))
	return HRESULT(ret)
}

func (this *IDebugApplicationNodeEvents) OnRemoveChild(prddpChild *IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnRemoveChild, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prddpChild)))
	return HRESULT(ret)
}

func (this *IDebugApplicationNodeEvents) OnDetach() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnDetach, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplicationNodeEvents) OnAttach(prddpParent *IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnAttach, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prddpParent)))
	return HRESULT(ret)
}

// A2E3AA3B-AA8D-4EBF-84CD-648B737B8C13
var IID_AsyncIDebugApplicationNodeEvents = syscall.GUID{0xA2E3AA3B, 0xAA8D, 0x4EBF,
	[8]byte{0x84, 0xCD, 0x64, 0x8B, 0x73, 0x7B, 0x8C, 0x13}}

type AsyncIDebugApplicationNodeEventsInterface interface {
	IUnknownInterface
	Begin_onAddChild(prddpChild *IDebugApplicationNode) HRESULT
	Finish_onAddChild() HRESULT
	Begin_onRemoveChild(prddpChild *IDebugApplicationNode) HRESULT
	Finish_onRemoveChild() HRESULT
	Begin_onDetach() HRESULT
	Finish_onDetach() HRESULT
	Begin_onAttach(prddpParent *IDebugApplicationNode) HRESULT
	Finish_onAttach() HRESULT
}

type AsyncIDebugApplicationNodeEventsVtbl struct {
	IUnknownVtbl
	Begin_onAddChild     uintptr
	Finish_onAddChild    uintptr
	Begin_onRemoveChild  uintptr
	Finish_onRemoveChild uintptr
	Begin_onDetach       uintptr
	Finish_onDetach      uintptr
	Begin_onAttach       uintptr
	Finish_onAttach      uintptr
}

type AsyncIDebugApplicationNodeEvents struct {
	IUnknown
}

func (this *AsyncIDebugApplicationNodeEvents) Vtbl() *AsyncIDebugApplicationNodeEventsVtbl {
	return (*AsyncIDebugApplicationNodeEventsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *AsyncIDebugApplicationNodeEvents) Begin_onAddChild(prddpChild *IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Begin_onAddChild, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prddpChild)))
	return HRESULT(ret)
}

func (this *AsyncIDebugApplicationNodeEvents) Finish_onAddChild() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Finish_onAddChild, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *AsyncIDebugApplicationNodeEvents) Begin_onRemoveChild(prddpChild *IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Begin_onRemoveChild, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prddpChild)))
	return HRESULT(ret)
}

func (this *AsyncIDebugApplicationNodeEvents) Finish_onRemoveChild() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Finish_onRemoveChild, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *AsyncIDebugApplicationNodeEvents) Begin_onDetach() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Begin_onDetach, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *AsyncIDebugApplicationNodeEvents) Finish_onDetach() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Finish_onDetach, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *AsyncIDebugApplicationNodeEvents) Begin_onAttach(prddpParent *IDebugApplicationNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Begin_onAttach, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(prddpParent)))
	return HRESULT(ret)
}

func (this *AsyncIDebugApplicationNodeEvents) Finish_onAttach() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Finish_onAttach, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 51973C36-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugThreadCall32 = syscall.GUID{0x51973C36, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugThreadCall32Interface interface {
	IUnknownInterface
	ThreadCallHandler(dwParam1 uint32, dwParam2 uint32, dwParam3 uint32) HRESULT
}

type IDebugThreadCall32Vtbl struct {
	IUnknownVtbl
	ThreadCallHandler uintptr
}

type IDebugThreadCall32 struct {
	IUnknown
}

func (this *IDebugThreadCall32) Vtbl() *IDebugThreadCall32Vtbl {
	return (*IDebugThreadCall32Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugThreadCall32) ThreadCallHandler(dwParam1 uint32, dwParam2 uint32, dwParam3 uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ThreadCallHandler, uintptr(unsafe.Pointer(this)), uintptr(dwParam1), uintptr(dwParam2), uintptr(dwParam3))
	return HRESULT(ret)
}

// CB3FA335-E979-42FD-9FCF-A7546A0F3905
var IID_IDebugThreadCall64 = syscall.GUID{0xCB3FA335, 0xE979, 0x42FD,
	[8]byte{0x9F, 0xCF, 0xA7, 0x54, 0x6A, 0x0F, 0x39, 0x05}}

type IDebugThreadCall64Interface interface {
	IUnknownInterface
	ThreadCallHandler(dwParam1 uint64, dwParam2 uint64, dwParam3 uint64) HRESULT
}

type IDebugThreadCall64Vtbl struct {
	IUnknownVtbl
	ThreadCallHandler uintptr
}

type IDebugThreadCall64 struct {
	IUnknown
}

func (this *IDebugThreadCall64) Vtbl() *IDebugThreadCall64Vtbl {
	return (*IDebugThreadCall64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugThreadCall64) ThreadCallHandler(dwParam1 uint64, dwParam2 uint64, dwParam3 uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ThreadCallHandler, uintptr(unsafe.Pointer(this)), uintptr(dwParam1), uintptr(dwParam2), uintptr(dwParam3))
	return HRESULT(ret)
}

// 51973C37-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IRemoteDebugApplicationThread = syscall.GUID{0x51973C37, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IRemoteDebugApplicationThreadInterface interface {
	IUnknownInterface
	GetSystemThreadId(dwThreadId *uint32) HRESULT
	GetApplication(pprda **IRemoteDebugApplication) HRESULT
	EnumStackFrames(ppedsf **IEnumDebugStackFrames) HRESULT
	GetDescription(pbstrDescription *BSTR, pbstrState *BSTR) HRESULT
	SetNextStatement(pStackFrame *IDebugStackFrame, pCodeContext *IDebugCodeContext) HRESULT
	GetState(pState *uint32) HRESULT
	Suspend(pdwCount *uint32) HRESULT
	Resume(pdwCount *uint32) HRESULT
	GetSuspendCount(pdwCount *uint32) HRESULT
}

type IRemoteDebugApplicationThreadVtbl struct {
	IUnknownVtbl
	GetSystemThreadId uintptr
	GetApplication    uintptr
	EnumStackFrames   uintptr
	GetDescription    uintptr
	SetNextStatement  uintptr
	GetState          uintptr
	Suspend           uintptr
	Resume            uintptr
	GetSuspendCount   uintptr
}

type IRemoteDebugApplicationThread struct {
	IUnknown
}

func (this *IRemoteDebugApplicationThread) Vtbl() *IRemoteDebugApplicationThreadVtbl {
	return (*IRemoteDebugApplicationThreadVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IRemoteDebugApplicationThread) GetSystemThreadId(dwThreadId *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSystemThreadId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(dwThreadId)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationThread) GetApplication(pprda **IRemoteDebugApplication) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetApplication, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pprda)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationThread) EnumStackFrames(ppedsf **IEnumDebugStackFrames) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumStackFrames, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppedsf)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationThread) GetDescription(pbstrDescription *BSTR, pbstrState *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDescription, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrDescription)), uintptr(unsafe.Pointer(pbstrState)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationThread) SetNextStatement(pStackFrame *IDebugStackFrame, pCodeContext *IDebugCodeContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetNextStatement, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pStackFrame)), uintptr(unsafe.Pointer(pCodeContext)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationThread) GetState(pState *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetState, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pState)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationThread) Suspend(pdwCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Suspend, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdwCount)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationThread) Resume(pdwCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Resume, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdwCount)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplicationThread) GetSuspendCount(pdwCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSuspendCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdwCount)))
	return HRESULT(ret)
}

// 51973C38-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugApplicationThread = syscall.GUID{0x51973C38, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugApplicationThreadInterface interface {
	IRemoteDebugApplicationThreadInterface
	SynchronousCallIntoThread32(pstcb *IDebugThreadCall32, dwParam1 uint32, dwParam2 uint32, dwParam3 uint32) HRESULT
	QueryIsCurrentThread() HRESULT
	QueryIsDebuggerThread() HRESULT
	SetDescription(pstrDescription PWSTR) HRESULT
	SetStateString(pstrState PWSTR) HRESULT
}

type IDebugApplicationThreadVtbl struct {
	IRemoteDebugApplicationThreadVtbl
	SynchronousCallIntoThread32 uintptr
	QueryIsCurrentThread        uintptr
	QueryIsDebuggerThread       uintptr
	SetDescription              uintptr
	SetStateString              uintptr
}

type IDebugApplicationThread struct {
	IRemoteDebugApplicationThread
}

func (this *IDebugApplicationThread) Vtbl() *IDebugApplicationThreadVtbl {
	return (*IDebugApplicationThreadVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplicationThread) SynchronousCallIntoThread32(pstcb *IDebugThreadCall32, dwParam1 uint32, dwParam2 uint32, dwParam3 uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SynchronousCallIntoThread32, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstcb)), uintptr(dwParam1), uintptr(dwParam2), uintptr(dwParam3))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread) QueryIsCurrentThread() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryIsCurrentThread, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread) QueryIsDebuggerThread() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryIsDebuggerThread, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread) SetDescription(pstrDescription PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDescription, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrDescription)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread) SetStateString(pstrState PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetStateString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstrState)))
	return HRESULT(ret)
}

// 9DAC5886-DBAD-456D-9DEE-5DEC39AB3DDA
var IID_IDebugApplicationThread64 = syscall.GUID{0x9DAC5886, 0xDBAD, 0x456D,
	[8]byte{0x9D, 0xEE, 0x5D, 0xEC, 0x39, 0xAB, 0x3D, 0xDA}}

type IDebugApplicationThread64Interface interface {
	IDebugApplicationThreadInterface
	SynchronousCallIntoThread64(pstcb *IDebugThreadCall64, dwParam1 uint64, dwParam2 uint64, dwParam3 uint64) HRESULT
}

type IDebugApplicationThread64Vtbl struct {
	IDebugApplicationThreadVtbl
	SynchronousCallIntoThread64 uintptr
}

type IDebugApplicationThread64 struct {
	IDebugApplicationThread
}

func (this *IDebugApplicationThread64) Vtbl() *IDebugApplicationThread64Vtbl {
	return (*IDebugApplicationThread64Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplicationThread64) SynchronousCallIntoThread64(pstcb *IDebugThreadCall64, dwParam1 uint64, dwParam2 uint64, dwParam3 uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SynchronousCallIntoThread64, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pstcb)), uintptr(dwParam1), uintptr(dwParam2), uintptr(dwParam3))
	return HRESULT(ret)
}

// 51973C39-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugCookie = syscall.GUID{0x51973C39, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugCookieInterface interface {
	IUnknownInterface
	SetDebugCookie(dwDebugAppCookie uint32) HRESULT
}

type IDebugCookieVtbl struct {
	IUnknownVtbl
	SetDebugCookie uintptr
}

type IDebugCookie struct {
	IUnknown
}

func (this *IDebugCookie) Vtbl() *IDebugCookieVtbl {
	return (*IDebugCookieVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugCookie) SetDebugCookie(dwDebugAppCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDebugCookie, uintptr(unsafe.Pointer(this)), uintptr(dwDebugAppCookie))
	return HRESULT(ret)
}

// 51973C3A-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IEnumDebugApplicationNodes = syscall.GUID{0x51973C3A, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IEnumDebugApplicationNodesInterface interface {
	IUnknownInterface
	Next(celt uint32, pprddp **IDebugApplicationNode, pceltFetched *uint32) HRESULT
	Skip(celt uint32) HRESULT
	Reset() HRESULT
	Clone(pperddp **IEnumDebugApplicationNodes) HRESULT
}

type IEnumDebugApplicationNodesVtbl struct {
	IUnknownVtbl
	Next  uintptr
	Skip  uintptr
	Reset uintptr
	Clone uintptr
}

type IEnumDebugApplicationNodes struct {
	IUnknown
}

func (this *IEnumDebugApplicationNodes) Vtbl() *IEnumDebugApplicationNodesVtbl {
	return (*IEnumDebugApplicationNodesVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumDebugApplicationNodes) Next(celt uint32, pprddp **IDebugApplicationNode, pceltFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(pprddp)), uintptr(unsafe.Pointer(pceltFetched)))
	return HRESULT(ret)
}

func (this *IEnumDebugApplicationNodes) Skip(celt uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Skip, uintptr(unsafe.Pointer(this)), uintptr(celt))
	return HRESULT(ret)
}

func (this *IEnumDebugApplicationNodes) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IEnumDebugApplicationNodes) Clone(pperddp **IEnumDebugApplicationNodes) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pperddp)))
	return HRESULT(ret)
}

// 51973C3B-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IEnumRemoteDebugApplications = syscall.GUID{0x51973C3B, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IEnumRemoteDebugApplicationsInterface interface {
	IUnknownInterface
	Next(celt uint32, ppda **IRemoteDebugApplication, pceltFetched *uint32) HRESULT
	Skip(celt uint32) HRESULT
	Reset() HRESULT
	Clone(ppessd **IEnumRemoteDebugApplications) HRESULT
}

type IEnumRemoteDebugApplicationsVtbl struct {
	IUnknownVtbl
	Next  uintptr
	Skip  uintptr
	Reset uintptr
	Clone uintptr
}

type IEnumRemoteDebugApplications struct {
	IUnknown
}

func (this *IEnumRemoteDebugApplications) Vtbl() *IEnumRemoteDebugApplicationsVtbl {
	return (*IEnumRemoteDebugApplicationsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumRemoteDebugApplications) Next(celt uint32, ppda **IRemoteDebugApplication, pceltFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(ppda)), uintptr(unsafe.Pointer(pceltFetched)))
	return HRESULT(ret)
}

func (this *IEnumRemoteDebugApplications) Skip(celt uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Skip, uintptr(unsafe.Pointer(this)), uintptr(celt))
	return HRESULT(ret)
}

func (this *IEnumRemoteDebugApplications) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IEnumRemoteDebugApplications) Clone(ppessd **IEnumRemoteDebugApplications) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppessd)))
	return HRESULT(ret)
}

// 51973C3C-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IEnumRemoteDebugApplicationThreads = syscall.GUID{0x51973C3C, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IEnumRemoteDebugApplicationThreadsInterface interface {
	IUnknownInterface
	Next(celt uint32, pprdat **IRemoteDebugApplicationThread, pceltFetched *uint32) HRESULT
	Skip(celt uint32) HRESULT
	Reset() HRESULT
	Clone(pperdat **IEnumRemoteDebugApplicationThreads) HRESULT
}

type IEnumRemoteDebugApplicationThreadsVtbl struct {
	IUnknownVtbl
	Next  uintptr
	Skip  uintptr
	Reset uintptr
	Clone uintptr
}

type IEnumRemoteDebugApplicationThreads struct {
	IUnknown
}

func (this *IEnumRemoteDebugApplicationThreads) Vtbl() *IEnumRemoteDebugApplicationThreadsVtbl {
	return (*IEnumRemoteDebugApplicationThreadsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumRemoteDebugApplicationThreads) Next(celt uint32, pprdat **IRemoteDebugApplicationThread, pceltFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(pprdat)), uintptr(unsafe.Pointer(pceltFetched)))
	return HRESULT(ret)
}

func (this *IEnumRemoteDebugApplicationThreads) Skip(celt uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Skip, uintptr(unsafe.Pointer(this)), uintptr(celt))
	return HRESULT(ret)
}

func (this *IEnumRemoteDebugApplicationThreads) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IEnumRemoteDebugApplicationThreads) Clone(pperdat **IEnumRemoteDebugApplicationThreads) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pperdat)))
	return HRESULT(ret)
}

// 51973C05-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugFormatter = syscall.GUID{0x51973C05, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugFormatterInterface interface {
	IUnknownInterface
	GetStringForVariant(pvar *VARIANT, nRadix uint32, pbstrValue *BSTR) HRESULT
	GetVariantForString(pwstrValue PWSTR, pvar *VARIANT) HRESULT
	GetStringForVarType(vt uint16, ptdescArrayType *TYPEDESC, pbstr *BSTR) HRESULT
}

type IDebugFormatterVtbl struct {
	IUnknownVtbl
	GetStringForVariant uintptr
	GetVariantForString uintptr
	GetStringForVarType uintptr
}

type IDebugFormatter struct {
	IUnknown
}

func (this *IDebugFormatter) Vtbl() *IDebugFormatterVtbl {
	return (*IDebugFormatterVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugFormatter) GetStringForVariant(pvar *VARIANT, nRadix uint32, pbstrValue *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStringForVariant, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pvar)), uintptr(nRadix), uintptr(unsafe.Pointer(pbstrValue)))
	return HRESULT(ret)
}

func (this *IDebugFormatter) GetVariantForString(pwstrValue PWSTR, pvar *VARIANT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetVariantForString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pwstrValue)), uintptr(unsafe.Pointer(pvar)))
	return HRESULT(ret)
}

func (this *IDebugFormatter) GetStringForVarType(vt uint16, ptdescArrayType *TYPEDESC, pbstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStringForVarType, uintptr(unsafe.Pointer(this)), uintptr(vt), uintptr(unsafe.Pointer(ptdescArrayType)), uintptr(unsafe.Pointer(pbstr)))
	return HRESULT(ret)
}

// 51973C3E-CB0C-11D0-B5C9-00A0244A0E7A
var IID_ISimpleConnectionPoint = syscall.GUID{0x51973C3E, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type ISimpleConnectionPointInterface interface {
	IUnknownInterface
	GetEventCount(pulCount *uint32) HRESULT
	DescribeEvents(iEvent uint32, cEvents uint32, prgid *int32, prgbstr *BSTR, pcEventsFetched *uint32) HRESULT
	Advise(pdisp *IDispatch, pdwCookie *uint32) HRESULT
	Unadvise(dwCookie uint32) HRESULT
}

type ISimpleConnectionPointVtbl struct {
	IUnknownVtbl
	GetEventCount  uintptr
	DescribeEvents uintptr
	Advise         uintptr
	Unadvise       uintptr
}

type ISimpleConnectionPoint struct {
	IUnknown
}

func (this *ISimpleConnectionPoint) Vtbl() *ISimpleConnectionPointVtbl {
	return (*ISimpleConnectionPointVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *ISimpleConnectionPoint) GetEventCount(pulCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pulCount)))
	return HRESULT(ret)
}

func (this *ISimpleConnectionPoint) DescribeEvents(iEvent uint32, cEvents uint32, prgid *int32, prgbstr *BSTR, pcEventsFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DescribeEvents, uintptr(unsafe.Pointer(this)), uintptr(iEvent), uintptr(cEvents), uintptr(unsafe.Pointer(prgid)), uintptr(unsafe.Pointer(prgbstr)), uintptr(unsafe.Pointer(pcEventsFetched)))
	return HRESULT(ret)
}

func (this *ISimpleConnectionPoint) Advise(pdisp *IDispatch, pdwCookie *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Advise, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdisp)), uintptr(unsafe.Pointer(pdwCookie)))
	return HRESULT(ret)
}

func (this *ISimpleConnectionPoint) Unadvise(dwCookie uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Unadvise, uintptr(unsafe.Pointer(this)), uintptr(dwCookie))
	return HRESULT(ret)
}

// 51973C3F-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IDebugHelper = syscall.GUID{0x51973C3F, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IDebugHelperInterface interface {
	IUnknownInterface
	CreatePropertyBrowser(pvar *VARIANT, bstrName PWSTR, pdat *IDebugApplicationThread, ppdob **IDebugProperty) HRESULT
	CreatePropertyBrowserEx(pvar *VARIANT, bstrName PWSTR, pdat *IDebugApplicationThread, pdf *IDebugFormatter, ppdob **IDebugProperty) HRESULT
	CreateSimpleConnectionPoint(pdisp *IDispatch, ppscp **ISimpleConnectionPoint) HRESULT
}

type IDebugHelperVtbl struct {
	IUnknownVtbl
	CreatePropertyBrowser       uintptr
	CreatePropertyBrowserEx     uintptr
	CreateSimpleConnectionPoint uintptr
}

type IDebugHelper struct {
	IUnknown
}

func (this *IDebugHelper) Vtbl() *IDebugHelperVtbl {
	return (*IDebugHelperVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugHelper) CreatePropertyBrowser(pvar *VARIANT, bstrName PWSTR, pdat *IDebugApplicationThread, ppdob **IDebugProperty) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreatePropertyBrowser, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pvar)), uintptr(unsafe.Pointer(bstrName)), uintptr(unsafe.Pointer(pdat)), uintptr(unsafe.Pointer(ppdob)))
	return HRESULT(ret)
}

func (this *IDebugHelper) CreatePropertyBrowserEx(pvar *VARIANT, bstrName PWSTR, pdat *IDebugApplicationThread, pdf *IDebugFormatter, ppdob **IDebugProperty) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreatePropertyBrowserEx, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pvar)), uintptr(unsafe.Pointer(bstrName)), uintptr(unsafe.Pointer(pdat)), uintptr(unsafe.Pointer(pdf)), uintptr(unsafe.Pointer(ppdob)))
	return HRESULT(ret)
}

func (this *IDebugHelper) CreateSimpleConnectionPoint(pdisp *IDispatch, ppscp **ISimpleConnectionPoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateSimpleConnectionPoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdisp)), uintptr(unsafe.Pointer(ppscp)))
	return HRESULT(ret)
}

// 51973C40-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IEnumDebugExpressionContexts = syscall.GUID{0x51973C40, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IEnumDebugExpressionContextsInterface interface {
	IUnknownInterface
	Next(celt uint32, ppdec **IDebugExpressionContext, pceltFetched *uint32) HRESULT
	Skip(celt uint32) HRESULT
	Reset() HRESULT
	Clone(ppedec **IEnumDebugExpressionContexts) HRESULT
}

type IEnumDebugExpressionContextsVtbl struct {
	IUnknownVtbl
	Next  uintptr
	Skip  uintptr
	Reset uintptr
	Clone uintptr
}

type IEnumDebugExpressionContexts struct {
	IUnknown
}

func (this *IEnumDebugExpressionContexts) Vtbl() *IEnumDebugExpressionContextsVtbl {
	return (*IEnumDebugExpressionContextsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumDebugExpressionContexts) Next(celt uint32, ppdec **IDebugExpressionContext, pceltFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(ppdec)), uintptr(unsafe.Pointer(pceltFetched)))
	return HRESULT(ret)
}

func (this *IEnumDebugExpressionContexts) Skip(celt uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Skip, uintptr(unsafe.Pointer(this)), uintptr(celt))
	return HRESULT(ret)
}

func (this *IEnumDebugExpressionContexts) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IEnumDebugExpressionContexts) Clone(ppedec **IEnumDebugExpressionContexts) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Clone, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppedec)))
	return HRESULT(ret)
}

// 51973C41-CB0C-11D0-B5C9-00A0244A0E7A
var IID_IProvideExpressionContexts = syscall.GUID{0x51973C41, 0xCB0C, 0x11D0,
	[8]byte{0xB5, 0xC9, 0x00, 0xA0, 0x24, 0x4A, 0x0E, 0x7A}}

type IProvideExpressionContextsInterface interface {
	IUnknownInterface
	EnumExpressionContexts(ppedec **IEnumDebugExpressionContexts) HRESULT
}

type IProvideExpressionContextsVtbl struct {
	IUnknownVtbl
	EnumExpressionContexts uintptr
}

type IProvideExpressionContexts struct {
	IUnknown
}

func (this *IProvideExpressionContexts) Vtbl() *IProvideExpressionContextsVtbl {
	return (*IProvideExpressionContextsVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IProvideExpressionContexts) EnumExpressionContexts(ppedec **IEnumDebugExpressionContexts) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumExpressionContexts, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppedec)))
	return HRESULT(ret)
}

// 784B5FF0-69B0-47D1-A7DC-2518F4230E90
var IID_IActiveScriptProfilerControl = syscall.GUID{0x784B5FF0, 0x69B0, 0x47D1,
	[8]byte{0xA7, 0xDC, 0x25, 0x18, 0xF4, 0x23, 0x0E, 0x90}}

type IActiveScriptProfilerControlInterface interface {
	IUnknownInterface
	StartProfiling(clsidProfilerObject *syscall.GUID, dwEventMask uint32, dwContext uint32) HRESULT
	SetProfilerEventMask(dwEventMask uint32) HRESULT
	StopProfiling(hrShutdownReason HRESULT) HRESULT
}

type IActiveScriptProfilerControlVtbl struct {
	IUnknownVtbl
	StartProfiling       uintptr
	SetProfilerEventMask uintptr
	StopProfiling        uintptr
}

type IActiveScriptProfilerControl struct {
	IUnknown
}

func (this *IActiveScriptProfilerControl) Vtbl() *IActiveScriptProfilerControlVtbl {
	return (*IActiveScriptProfilerControlVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProfilerControl) StartProfiling(clsidProfilerObject *syscall.GUID, dwEventMask uint32, dwContext uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StartProfiling, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(clsidProfilerObject)), uintptr(dwEventMask), uintptr(dwContext))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerControl) SetProfilerEventMask(dwEventMask uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetProfilerEventMask, uintptr(unsafe.Pointer(this)), uintptr(dwEventMask))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerControl) StopProfiling(hrShutdownReason HRESULT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().StopProfiling, uintptr(unsafe.Pointer(this)), uintptr(hrShutdownReason))
	return HRESULT(ret)
}

// 47810165-498F-40BE-94F1-653557E9E7DA
var IID_IActiveScriptProfilerControl2 = syscall.GUID{0x47810165, 0x498F, 0x40BE,
	[8]byte{0x94, 0xF1, 0x65, 0x35, 0x57, 0xE9, 0xE7, 0xDA}}

type IActiveScriptProfilerControl2Interface interface {
	IActiveScriptProfilerControlInterface
	CompleteProfilerStart() HRESULT
	PrepareProfilerStop() HRESULT
}

type IActiveScriptProfilerControl2Vtbl struct {
	IActiveScriptProfilerControlVtbl
	CompleteProfilerStart uintptr
	PrepareProfilerStop   uintptr
}

type IActiveScriptProfilerControl2 struct {
	IActiveScriptProfilerControl
}

func (this *IActiveScriptProfilerControl2) Vtbl() *IActiveScriptProfilerControl2Vtbl {
	return (*IActiveScriptProfilerControl2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProfilerControl2) CompleteProfilerStart() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CompleteProfilerStart, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerControl2) PrepareProfilerStop() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PrepareProfilerStop, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 32E4694E-0D37-419B-B93D-FA20DED6E8EA
var IID_IActiveScriptProfilerHeapEnum = syscall.GUID{0x32E4694E, 0x0D37, 0x419B,
	[8]byte{0xB9, 0x3D, 0xFA, 0x20, 0xDE, 0xD6, 0xE8, 0xEA}}

type IActiveScriptProfilerHeapEnumInterface interface {
	IUnknownInterface
	Next(celt uint32, heapObjects **PROFILER_HEAP_OBJECT, pceltFetched *uint32) HRESULT
	GetOptionalInfo(heapObject *PROFILER_HEAP_OBJECT, celt uint32, optionalInfo *PROFILER_HEAP_OBJECT_OPTIONAL_INFO) HRESULT
	FreeObjectAndOptionalInfo(celt uint32, heapObjects **PROFILER_HEAP_OBJECT) HRESULT
	GetNameIdMap(pNameList ***PWSTR, pcelt *uint32) HRESULT
}

type IActiveScriptProfilerHeapEnumVtbl struct {
	IUnknownVtbl
	Next                      uintptr
	GetOptionalInfo           uintptr
	FreeObjectAndOptionalInfo uintptr
	GetNameIdMap              uintptr
}

type IActiveScriptProfilerHeapEnum struct {
	IUnknown
}

func (this *IActiveScriptProfilerHeapEnum) Vtbl() *IActiveScriptProfilerHeapEnumVtbl {
	return (*IActiveScriptProfilerHeapEnumVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProfilerHeapEnum) Next(celt uint32, heapObjects **PROFILER_HEAP_OBJECT, pceltFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(heapObjects)), uintptr(unsafe.Pointer(pceltFetched)))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerHeapEnum) GetOptionalInfo(heapObject *PROFILER_HEAP_OBJECT, celt uint32, optionalInfo *PROFILER_HEAP_OBJECT_OPTIONAL_INFO) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetOptionalInfo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(heapObject)), uintptr(celt), uintptr(unsafe.Pointer(optionalInfo)))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerHeapEnum) FreeObjectAndOptionalInfo(celt uint32, heapObjects **PROFILER_HEAP_OBJECT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FreeObjectAndOptionalInfo, uintptr(unsafe.Pointer(this)), uintptr(celt), uintptr(unsafe.Pointer(heapObjects)))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerHeapEnum) GetNameIdMap(pNameList ***PWSTR, pcelt *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNameIdMap, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pNameList)), uintptr(unsafe.Pointer(pcelt)))
	return HRESULT(ret)
}

// 0B403015-F381-4023-A5D0-6FED076DE716
var IID_IActiveScriptProfilerControl3 = syscall.GUID{0x0B403015, 0xF381, 0x4023,
	[8]byte{0xA5, 0xD0, 0x6F, 0xED, 0x07, 0x6D, 0xE7, 0x16}}

type IActiveScriptProfilerControl3Interface interface {
	IActiveScriptProfilerControl2Interface
	EnumHeap(ppEnum **IActiveScriptProfilerHeapEnum) HRESULT
}

type IActiveScriptProfilerControl3Vtbl struct {
	IActiveScriptProfilerControl2Vtbl
	EnumHeap uintptr
}

type IActiveScriptProfilerControl3 struct {
	IActiveScriptProfilerControl2
}

func (this *IActiveScriptProfilerControl3) Vtbl() *IActiveScriptProfilerControl3Vtbl {
	return (*IActiveScriptProfilerControl3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProfilerControl3) EnumHeap(ppEnum **IActiveScriptProfilerHeapEnum) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumHeap, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppEnum)))
	return HRESULT(ret)
}

// 160F94FD-9DBC-40D4-9EAC-2B71DB3132F4
var IID_IActiveScriptProfilerControl4 = syscall.GUID{0x160F94FD, 0x9DBC, 0x40D4,
	[8]byte{0x9E, 0xAC, 0x2B, 0x71, 0xDB, 0x31, 0x32, 0xF4}}

type IActiveScriptProfilerControl4Interface interface {
	IActiveScriptProfilerControl3Interface
	SummarizeHeap(heapSummary *PROFILER_HEAP_SUMMARY) HRESULT
}

type IActiveScriptProfilerControl4Vtbl struct {
	IActiveScriptProfilerControl3Vtbl
	SummarizeHeap uintptr
}

type IActiveScriptProfilerControl4 struct {
	IActiveScriptProfilerControl3
}

func (this *IActiveScriptProfilerControl4) Vtbl() *IActiveScriptProfilerControl4Vtbl {
	return (*IActiveScriptProfilerControl4Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProfilerControl4) SummarizeHeap(heapSummary *PROFILER_HEAP_SUMMARY) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SummarizeHeap, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(heapSummary)))
	return HRESULT(ret)
}

// 1C01A2D1-8F0F-46A5-9720-0D7ED2C62F0A
var IID_IActiveScriptProfilerControl5 = syscall.GUID{0x1C01A2D1, 0x8F0F, 0x46A5,
	[8]byte{0x97, 0x20, 0x0D, 0x7E, 0xD2, 0xC6, 0x2F, 0x0A}}

type IActiveScriptProfilerControl5Interface interface {
	IActiveScriptProfilerControl4Interface
	EnumHeap2(enumFlags PROFILER_HEAP_ENUM_FLAGS, ppEnum **IActiveScriptProfilerHeapEnum) HRESULT
}

type IActiveScriptProfilerControl5Vtbl struct {
	IActiveScriptProfilerControl4Vtbl
	EnumHeap2 uintptr
}

type IActiveScriptProfilerControl5 struct {
	IActiveScriptProfilerControl4
}

func (this *IActiveScriptProfilerControl5) Vtbl() *IActiveScriptProfilerControl5Vtbl {
	return (*IActiveScriptProfilerControl5Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProfilerControl5) EnumHeap2(enumFlags PROFILER_HEAP_ENUM_FLAGS, ppEnum **IActiveScriptProfilerHeapEnum) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().EnumHeap2, uintptr(unsafe.Pointer(this)), uintptr(enumFlags), uintptr(unsafe.Pointer(ppEnum)))
	return HRESULT(ret)
}

// 740ECA23-7D9D-42E5-BA9D-F8B24B1C7A9B
var IID_IActiveScriptProfilerCallback = syscall.GUID{0x740ECA23, 0x7D9D, 0x42E5,
	[8]byte{0xBA, 0x9D, 0xF8, 0xB2, 0x4B, 0x1C, 0x7A, 0x9B}}

type IActiveScriptProfilerCallbackInterface interface {
	IUnknownInterface
	Initialize(dwContext uint32) HRESULT
	Shutdown(hrReason HRESULT) HRESULT
	ScriptCompiled(scriptId int32, type_ PROFILER_SCRIPT_TYPE, pIDebugDocumentContext *IUnknown) HRESULT
	FunctionCompiled(functionId int32, scriptId int32, pwszFunctionName PWSTR, pwszFunctionNameHint PWSTR, pIDebugDocumentContext *IUnknown) HRESULT
	OnFunctionEnter(scriptId int32, functionId int32) HRESULT
	OnFunctionExit(scriptId int32, functionId int32) HRESULT
}

type IActiveScriptProfilerCallbackVtbl struct {
	IUnknownVtbl
	Initialize       uintptr
	Shutdown         uintptr
	ScriptCompiled   uintptr
	FunctionCompiled uintptr
	OnFunctionEnter  uintptr
	OnFunctionExit   uintptr
}

type IActiveScriptProfilerCallback struct {
	IUnknown
}

func (this *IActiveScriptProfilerCallback) Vtbl() *IActiveScriptProfilerCallbackVtbl {
	return (*IActiveScriptProfilerCallbackVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProfilerCallback) Initialize(dwContext uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Initialize, uintptr(unsafe.Pointer(this)), uintptr(dwContext))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerCallback) Shutdown(hrReason HRESULT) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Shutdown, uintptr(unsafe.Pointer(this)), uintptr(hrReason))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerCallback) ScriptCompiled(scriptId int32, type_ PROFILER_SCRIPT_TYPE, pIDebugDocumentContext *IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ScriptCompiled, uintptr(unsafe.Pointer(this)), uintptr(scriptId), uintptr(type_), uintptr(unsafe.Pointer(pIDebugDocumentContext)))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerCallback) FunctionCompiled(functionId int32, scriptId int32, pwszFunctionName PWSTR, pwszFunctionNameHint PWSTR, pIDebugDocumentContext *IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FunctionCompiled, uintptr(unsafe.Pointer(this)), uintptr(functionId), uintptr(scriptId), uintptr(unsafe.Pointer(pwszFunctionName)), uintptr(unsafe.Pointer(pwszFunctionNameHint)), uintptr(unsafe.Pointer(pIDebugDocumentContext)))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerCallback) OnFunctionEnter(scriptId int32, functionId int32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnFunctionEnter, uintptr(unsafe.Pointer(this)), uintptr(scriptId), uintptr(functionId))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerCallback) OnFunctionExit(scriptId int32, functionId int32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnFunctionExit, uintptr(unsafe.Pointer(this)), uintptr(scriptId), uintptr(functionId))
	return HRESULT(ret)
}

// 31B7F8AD-A637-409C-B22F-040995B6103D
var IID_IActiveScriptProfilerCallback2 = syscall.GUID{0x31B7F8AD, 0xA637, 0x409C,
	[8]byte{0xB2, 0x2F, 0x04, 0x09, 0x95, 0xB6, 0x10, 0x3D}}

type IActiveScriptProfilerCallback2Interface interface {
	IActiveScriptProfilerCallbackInterface
	OnFunctionEnterByName(pwszFunctionName PWSTR, type_ PROFILER_SCRIPT_TYPE) HRESULT
	OnFunctionExitByName(pwszFunctionName PWSTR, type_ PROFILER_SCRIPT_TYPE) HRESULT
}

type IActiveScriptProfilerCallback2Vtbl struct {
	IActiveScriptProfilerCallbackVtbl
	OnFunctionEnterByName uintptr
	OnFunctionExitByName  uintptr
}

type IActiveScriptProfilerCallback2 struct {
	IActiveScriptProfilerCallback
}

func (this *IActiveScriptProfilerCallback2) Vtbl() *IActiveScriptProfilerCallback2Vtbl {
	return (*IActiveScriptProfilerCallback2Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProfilerCallback2) OnFunctionEnterByName(pwszFunctionName PWSTR, type_ PROFILER_SCRIPT_TYPE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnFunctionEnterByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pwszFunctionName)), uintptr(type_))
	return HRESULT(ret)
}

func (this *IActiveScriptProfilerCallback2) OnFunctionExitByName(pwszFunctionName PWSTR, type_ PROFILER_SCRIPT_TYPE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnFunctionExitByName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pwszFunctionName)), uintptr(type_))
	return HRESULT(ret)
}

// 6AC5AD25-2037-4687-91DF-B59979D93D73
var IID_IActiveScriptProfilerCallback3 = syscall.GUID{0x6AC5AD25, 0x2037, 0x4687,
	[8]byte{0x91, 0xDF, 0xB5, 0x99, 0x79, 0xD9, 0x3D, 0x73}}

type IActiveScriptProfilerCallback3Interface interface {
	IActiveScriptProfilerCallback2Interface
	SetWebWorkerId(webWorkerId uint32) HRESULT
}

type IActiveScriptProfilerCallback3Vtbl struct {
	IActiveScriptProfilerCallback2Vtbl
	SetWebWorkerId uintptr
}

type IActiveScriptProfilerCallback3 struct {
	IActiveScriptProfilerCallback2
}

func (this *IActiveScriptProfilerCallback3) Vtbl() *IActiveScriptProfilerCallback3Vtbl {
	return (*IActiveScriptProfilerCallback3Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptProfilerCallback3) SetWebWorkerId(webWorkerId uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetWebWorkerId, uintptr(unsafe.Pointer(this)), uintptr(webWorkerId))
	return HRESULT(ret)
}

// 0AEE2A94-BCBB-11D0-8C72-00C04FC2B085
var IID_IScriptNode = syscall.GUID{0x0AEE2A94, 0xBCBB, 0x11D0,
	[8]byte{0x8C, 0x72, 0x00, 0xC0, 0x4F, 0xC2, 0xB0, 0x85}}

type IScriptNodeInterface interface {
	IUnknownInterface
	Alive() HRESULT
	Delete() HRESULT
	GetParent(ppsnParent **IScriptNode) HRESULT
	GetIndexInParent(pisn *uint32) HRESULT
	GetCookie(pdwCookie *uint32) HRESULT
	GetNumberOfChildren(pcsn *uint32) HRESULT
	GetChild(isn uint32, ppsn **IScriptNode) HRESULT
	GetLanguage(pbstr *BSTR) HRESULT
	CreateChildEntry(isn uint32, dwCookie uint32, pszDelimiter PWSTR, ppse **IScriptEntry) HRESULT
	CreateChildHandler(pszDefaultName PWSTR, prgpszNames *PWSTR, cpszNames uint32, pszEvent PWSTR, pszDelimiter PWSTR, ptiSignature *ITypeInfo, iMethodSignature uint32, isn uint32, dwCookie uint32, ppse **IScriptEntry) HRESULT
}

type IScriptNodeVtbl struct {
	IUnknownVtbl
	Alive               uintptr
	Delete              uintptr
	GetParent           uintptr
	GetIndexInParent    uintptr
	GetCookie           uintptr
	GetNumberOfChildren uintptr
	GetChild            uintptr
	GetLanguage         uintptr
	CreateChildEntry    uintptr
	CreateChildHandler  uintptr
}

type IScriptNode struct {
	IUnknown
}

func (this *IScriptNode) Vtbl() *IScriptNodeVtbl {
	return (*IScriptNodeVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IScriptNode) Alive() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Alive, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IScriptNode) Delete() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Delete, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IScriptNode) GetParent(ppsnParent **IScriptNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetParent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppsnParent)))
	return HRESULT(ret)
}

func (this *IScriptNode) GetIndexInParent(pisn *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetIndexInParent, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pisn)))
	return HRESULT(ret)
}

func (this *IScriptNode) GetCookie(pdwCookie *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCookie, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdwCookie)))
	return HRESULT(ret)
}

func (this *IScriptNode) GetNumberOfChildren(pcsn *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNumberOfChildren, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pcsn)))
	return HRESULT(ret)
}

func (this *IScriptNode) GetChild(isn uint32, ppsn **IScriptNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetChild, uintptr(unsafe.Pointer(this)), uintptr(isn), uintptr(unsafe.Pointer(ppsn)))
	return HRESULT(ret)
}

func (this *IScriptNode) GetLanguage(pbstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLanguage, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstr)))
	return HRESULT(ret)
}

func (this *IScriptNode) CreateChildEntry(isn uint32, dwCookie uint32, pszDelimiter PWSTR, ppse **IScriptEntry) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateChildEntry, uintptr(unsafe.Pointer(this)), uintptr(isn), uintptr(dwCookie), uintptr(unsafe.Pointer(pszDelimiter)), uintptr(unsafe.Pointer(ppse)))
	return HRESULT(ret)
}

func (this *IScriptNode) CreateChildHandler(pszDefaultName PWSTR, prgpszNames *PWSTR, cpszNames uint32, pszEvent PWSTR, pszDelimiter PWSTR, ptiSignature *ITypeInfo, iMethodSignature uint32, isn uint32, dwCookie uint32, ppse **IScriptEntry) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateChildHandler, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszDefaultName)), uintptr(unsafe.Pointer(prgpszNames)), uintptr(cpszNames), uintptr(unsafe.Pointer(pszEvent)), uintptr(unsafe.Pointer(pszDelimiter)), uintptr(unsafe.Pointer(ptiSignature)), uintptr(iMethodSignature), uintptr(isn), uintptr(dwCookie), uintptr(unsafe.Pointer(ppse)))
	return HRESULT(ret)
}

// 0AEE2A95-BCBB-11D0-8C72-00C04FC2B085
var IID_IScriptEntry = syscall.GUID{0x0AEE2A95, 0xBCBB, 0x11D0,
	[8]byte{0x8C, 0x72, 0x00, 0xC0, 0x4F, 0xC2, 0xB0, 0x85}}

type IScriptEntryInterface interface {
	IScriptNodeInterface
	GetText(pbstr *BSTR) HRESULT
	SetText(psz PWSTR) HRESULT
	GetBody(pbstr *BSTR) HRESULT
	SetBody(psz PWSTR) HRESULT
	GetName(pbstr *BSTR) HRESULT
	SetName(psz PWSTR) HRESULT
	GetItemName(pbstr *BSTR) HRESULT
	SetItemName(psz PWSTR) HRESULT
	GetSignature(ppti **ITypeInfo, piMethod *uint32) HRESULT
	SetSignature(pti *ITypeInfo, iMethod uint32) HRESULT
	GetRange(pichMin *uint32, pcch *uint32) HRESULT
}

type IScriptEntryVtbl struct {
	IScriptNodeVtbl
	GetText      uintptr
	SetText      uintptr
	GetBody      uintptr
	SetBody      uintptr
	GetName      uintptr
	SetName      uintptr
	GetItemName  uintptr
	SetItemName  uintptr
	GetSignature uintptr
	SetSignature uintptr
	GetRange     uintptr
}

type IScriptEntry struct {
	IScriptNode
}

func (this *IScriptEntry) Vtbl() *IScriptEntryVtbl {
	return (*IScriptEntryVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IScriptEntry) GetText(pbstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstr)))
	return HRESULT(ret)
}

func (this *IScriptEntry) SetText(psz PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psz)))
	return HRESULT(ret)
}

func (this *IScriptEntry) GetBody(pbstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetBody, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstr)))
	return HRESULT(ret)
}

func (this *IScriptEntry) SetBody(psz PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetBody, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psz)))
	return HRESULT(ret)
}

func (this *IScriptEntry) GetName(pbstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstr)))
	return HRESULT(ret)
}

func (this *IScriptEntry) SetName(psz PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psz)))
	return HRESULT(ret)
}

func (this *IScriptEntry) GetItemName(pbstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetItemName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstr)))
	return HRESULT(ret)
}

func (this *IScriptEntry) SetItemName(psz PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetItemName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psz)))
	return HRESULT(ret)
}

func (this *IScriptEntry) GetSignature(ppti **ITypeInfo, piMethod *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSignature, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppti)), uintptr(unsafe.Pointer(piMethod)))
	return HRESULT(ret)
}

func (this *IScriptEntry) SetSignature(pti *ITypeInfo, iMethod uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSignature, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pti)), uintptr(iMethod))
	return HRESULT(ret)
}

func (this *IScriptEntry) GetRange(pichMin *uint32, pcch *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRange, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pichMin)), uintptr(unsafe.Pointer(pcch)))
	return HRESULT(ret)
}

// 0AEE2A96-BCBB-11D0-8C72-00C04FC2B085
var IID_IScriptScriptlet = syscall.GUID{0x0AEE2A96, 0xBCBB, 0x11D0,
	[8]byte{0x8C, 0x72, 0x00, 0xC0, 0x4F, 0xC2, 0xB0, 0x85}}

type IScriptScriptletInterface interface {
	IScriptEntryInterface
	GetSubItemName(pbstr *BSTR) HRESULT
	SetSubItemName(psz PWSTR) HRESULT
	GetEventName(pbstr *BSTR) HRESULT
	SetEventName(psz PWSTR) HRESULT
	GetSimpleEventName(pbstr *BSTR) HRESULT
	SetSimpleEventName(psz PWSTR) HRESULT
}

type IScriptScriptletVtbl struct {
	IScriptEntryVtbl
	GetSubItemName     uintptr
	SetSubItemName     uintptr
	GetEventName       uintptr
	SetEventName       uintptr
	GetSimpleEventName uintptr
	SetSimpleEventName uintptr
}

type IScriptScriptlet struct {
	IScriptEntry
}

func (this *IScriptScriptlet) Vtbl() *IScriptScriptletVtbl {
	return (*IScriptScriptletVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IScriptScriptlet) GetSubItemName(pbstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSubItemName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstr)))
	return HRESULT(ret)
}

func (this *IScriptScriptlet) SetSubItemName(psz PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSubItemName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psz)))
	return HRESULT(ret)
}

func (this *IScriptScriptlet) GetEventName(pbstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstr)))
	return HRESULT(ret)
}

func (this *IScriptScriptlet) SetEventName(psz PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetEventName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psz)))
	return HRESULT(ret)
}

func (this *IScriptScriptlet) GetSimpleEventName(pbstr *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetSimpleEventName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstr)))
	return HRESULT(ret)
}

func (this *IScriptScriptlet) SetSimpleEventName(psz PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetSimpleEventName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(psz)))
	return HRESULT(ret)
}

// 9C109DA0-7006-11D1-B36C-00A0C911E8B2
var IID_IActiveScriptAuthor = syscall.GUID{0x9C109DA0, 0x7006, 0x11D1,
	[8]byte{0xB3, 0x6C, 0x00, 0xA0, 0xC9, 0x11, 0xE8, 0xB2}}

type IActiveScriptAuthorInterface interface {
	IUnknownInterface
	AddNamedItem(pszName PWSTR, dwFlags uint32, pdisp *IDispatch) HRESULT
	AddScriptlet(pszDefaultName PWSTR, pszCode PWSTR, pszItemName PWSTR, pszSubItemName PWSTR, pszEventName PWSTR, pszDelimiter PWSTR, dwCookie uint32, dwFlags uint32) HRESULT
	ParseScriptText(pszCode PWSTR, pszItemName PWSTR, pszDelimiter PWSTR, dwCookie uint32, dwFlags uint32) HRESULT
	GetScriptTextAttributes(pszCode PWSTR, cch uint32, pszDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT
	GetScriptletTextAttributes(pszCode PWSTR, cch uint32, pszDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT
	GetRoot(ppsp **IScriptNode) HRESULT
	GetLanguageFlags(pgrfasa *uint32) HRESULT
	GetEventHandler(pdisp *IDispatch, pszItem PWSTR, pszSubItem PWSTR, pszEvent PWSTR, ppse **IScriptEntry) HRESULT
	RemoveNamedItem(pszName PWSTR) HRESULT
	AddTypeLib(rguidTypeLib *syscall.GUID, dwMajor uint32, dwMinor uint32, dwFlags uint32) HRESULT
	RemoveTypeLib(rguidTypeLib *syscall.GUID, dwMajor uint32, dwMinor uint32) HRESULT
	GetChars(fRequestedList uint32, pbstrChars *BSTR) HRESULT
	GetInfoFromContext(pszCode PWSTR, cchCode uint32, ichCurrentPosition uint32, dwListTypesRequested uint32, pdwListTypesProvided *uint32, pichListAnchorPosition *uint32, pichFuncAnchorPosition *uint32, pmemid *int32, piCurrentParameter *int32, ppunk **IUnknown) HRESULT
	IsCommitChar(ch uint16, pfcommit *BOOL) HRESULT
}

type IActiveScriptAuthorVtbl struct {
	IUnknownVtbl
	AddNamedItem               uintptr
	AddScriptlet               uintptr
	ParseScriptText            uintptr
	GetScriptTextAttributes    uintptr
	GetScriptletTextAttributes uintptr
	GetRoot                    uintptr
	GetLanguageFlags           uintptr
	GetEventHandler            uintptr
	RemoveNamedItem            uintptr
	AddTypeLib                 uintptr
	RemoveTypeLib              uintptr
	GetChars                   uintptr
	GetInfoFromContext         uintptr
	IsCommitChar               uintptr
}

type IActiveScriptAuthor struct {
	IUnknown
}

func (this *IActiveScriptAuthor) Vtbl() *IActiveScriptAuthorVtbl {
	return (*IActiveScriptAuthorVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptAuthor) AddNamedItem(pszName PWSTR, dwFlags uint32, pdisp *IDispatch) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddNamedItem, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszName)), uintptr(dwFlags), uintptr(unsafe.Pointer(pdisp)))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) AddScriptlet(pszDefaultName PWSTR, pszCode PWSTR, pszItemName PWSTR, pszSubItemName PWSTR, pszEventName PWSTR, pszDelimiter PWSTR, dwCookie uint32, dwFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddScriptlet, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszDefaultName)), uintptr(unsafe.Pointer(pszCode)), uintptr(unsafe.Pointer(pszItemName)), uintptr(unsafe.Pointer(pszSubItemName)), uintptr(unsafe.Pointer(pszEventName)), uintptr(unsafe.Pointer(pszDelimiter)), uintptr(dwCookie), uintptr(dwFlags))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) ParseScriptText(pszCode PWSTR, pszItemName PWSTR, pszDelimiter PWSTR, dwCookie uint32, dwFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ParseScriptText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszCode)), uintptr(unsafe.Pointer(pszItemName)), uintptr(unsafe.Pointer(pszDelimiter)), uintptr(dwCookie), uintptr(dwFlags))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) GetScriptTextAttributes(pszCode PWSTR, cch uint32, pszDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszCode)), uintptr(cch), uintptr(unsafe.Pointer(pszDelimiter)), uintptr(dwFlags), uintptr(unsafe.Pointer(pattr)))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) GetScriptletTextAttributes(pszCode PWSTR, cch uint32, pszDelimiter PWSTR, dwFlags uint32, pattr *uint16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptletTextAttributes, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszCode)), uintptr(cch), uintptr(unsafe.Pointer(pszDelimiter)), uintptr(dwFlags), uintptr(unsafe.Pointer(pattr)))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) GetRoot(ppsp **IScriptNode) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRoot, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppsp)))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) GetLanguageFlags(pgrfasa *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetLanguageFlags, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pgrfasa)))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) GetEventHandler(pdisp *IDispatch, pszItem PWSTR, pszSubItem PWSTR, pszEvent PWSTR, ppse **IScriptEntry) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventHandler, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pdisp)), uintptr(unsafe.Pointer(pszItem)), uintptr(unsafe.Pointer(pszSubItem)), uintptr(unsafe.Pointer(pszEvent)), uintptr(unsafe.Pointer(ppse)))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) RemoveNamedItem(pszName PWSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveNamedItem, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszName)))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) AddTypeLib(rguidTypeLib *syscall.GUID, dwMajor uint32, dwMinor uint32, dwFlags uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AddTypeLib, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(rguidTypeLib)), uintptr(dwMajor), uintptr(dwMinor), uintptr(dwFlags))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) RemoveTypeLib(rguidTypeLib *syscall.GUID, dwMajor uint32, dwMinor uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().RemoveTypeLib, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(rguidTypeLib)), uintptr(dwMajor), uintptr(dwMinor))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) GetChars(fRequestedList uint32, pbstrChars *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetChars, uintptr(unsafe.Pointer(this)), uintptr(fRequestedList), uintptr(unsafe.Pointer(pbstrChars)))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) GetInfoFromContext(pszCode PWSTR, cchCode uint32, ichCurrentPosition uint32, dwListTypesRequested uint32, pdwListTypesProvided *uint32, pichListAnchorPosition *uint32, pichFuncAnchorPosition *uint32, pmemid *int32, piCurrentParameter *int32, ppunk **IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInfoFromContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszCode)), uintptr(cchCode), uintptr(ichCurrentPosition), uintptr(dwListTypesRequested), uintptr(unsafe.Pointer(pdwListTypesProvided)), uintptr(unsafe.Pointer(pichListAnchorPosition)), uintptr(unsafe.Pointer(pichFuncAnchorPosition)), uintptr(unsafe.Pointer(pmemid)), uintptr(unsafe.Pointer(piCurrentParameter)), uintptr(unsafe.Pointer(ppunk)))
	return HRESULT(ret)
}

func (this *IActiveScriptAuthor) IsCommitChar(ch uint16, pfcommit *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsCommitChar, uintptr(unsafe.Pointer(this)), uintptr(ch), uintptr(unsafe.Pointer(pfcommit)))
	return HRESULT(ret)
}

// 7E2D4B70-BD9A-11D0-9336-00A0C90DCAA9
var IID_IActiveScriptAuthorProcedure = syscall.GUID{0x7E2D4B70, 0xBD9A, 0x11D0,
	[8]byte{0x93, 0x36, 0x00, 0xA0, 0xC9, 0x0D, 0xCA, 0xA9}}

type IActiveScriptAuthorProcedureInterface interface {
	IUnknownInterface
	ParseProcedureText(pszCode PWSTR, pszFormalParams PWSTR, pszProcedureName PWSTR, pszItemName PWSTR, pszDelimiter PWSTR, dwCookie uint32, dwFlags uint32, pdispFor *IDispatch) HRESULT
}

type IActiveScriptAuthorProcedureVtbl struct {
	IUnknownVtbl
	ParseProcedureText uintptr
}

type IActiveScriptAuthorProcedure struct {
	IUnknown
}

func (this *IActiveScriptAuthorProcedure) Vtbl() *IActiveScriptAuthorProcedureVtbl {
	return (*IActiveScriptAuthorProcedureVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptAuthorProcedure) ParseProcedureText(pszCode PWSTR, pszFormalParams PWSTR, pszProcedureName PWSTR, pszItemName PWSTR, pszDelimiter PWSTR, dwCookie uint32, dwFlags uint32, pdispFor *IDispatch) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ParseProcedureText, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pszCode)), uintptr(unsafe.Pointer(pszFormalParams)), uintptr(unsafe.Pointer(pszProcedureName)), uintptr(unsafe.Pointer(pszItemName)), uintptr(unsafe.Pointer(pszDelimiter)), uintptr(dwCookie), uintptr(dwFlags), uintptr(unsafe.Pointer(pdispFor)))
	return HRESULT(ret)
}

// 90A7734E-841B-4F77-9384-A2891E76E7E2
var IID_IDebugApplicationNode100 = syscall.GUID{0x90A7734E, 0x841B, 0x4F77,
	[8]byte{0x93, 0x84, 0xA2, 0x89, 0x1E, 0x76, 0xE7, 0xE2}}

type IDebugApplicationNode100Interface interface {
	IUnknownInterface
	SetFilterForEventSink(dwCookie uint32, filter APPLICATION_NODE_EVENT_FILTER) HRESULT
	GetExcludedDocuments(filter APPLICATION_NODE_EVENT_FILTER, pDocuments *TEXT_DOCUMENT_ARRAY) HRESULT
	QueryIsChildNode(pSearchKey *IDebugDocument) HRESULT
}

type IDebugApplicationNode100Vtbl struct {
	IUnknownVtbl
	SetFilterForEventSink uintptr
	GetExcludedDocuments  uintptr
	QueryIsChildNode      uintptr
}

type IDebugApplicationNode100 struct {
	IUnknown
}

func (this *IDebugApplicationNode100) Vtbl() *IDebugApplicationNode100Vtbl {
	return (*IDebugApplicationNode100Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplicationNode100) SetFilterForEventSink(dwCookie uint32, filter APPLICATION_NODE_EVENT_FILTER) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetFilterForEventSink, uintptr(unsafe.Pointer(this)), uintptr(dwCookie), uintptr(filter))
	return HRESULT(ret)
}

func (this *IDebugApplicationNode100) GetExcludedDocuments(filter APPLICATION_NODE_EVENT_FILTER, pDocuments *TEXT_DOCUMENT_ARRAY) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExcludedDocuments, uintptr(unsafe.Pointer(this)), uintptr(filter), uintptr(unsafe.Pointer(pDocuments)))
	return HRESULT(ret)
}

func (this *IDebugApplicationNode100) QueryIsChildNode(pSearchKey *IDebugDocument) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().QueryIsChildNode, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pSearchKey)))
	return HRESULT(ret)
}

// 379BFBE1-C6C9-432A-93E1-6D17656C538C
var IID_IWebAppDiagnosticsSetup = syscall.GUID{0x379BFBE1, 0xC6C9, 0x432A,
	[8]byte{0x93, 0xE1, 0x6D, 0x17, 0x65, 0x6C, 0x53, 0x8C}}

type IWebAppDiagnosticsSetupInterface interface {
	IUnknownInterface
	DiagnosticsSupported(pRetVal *int16) HRESULT
	CreateObjectWithSiteAtWebApp(rclsid *syscall.GUID, dwClsContext uint32, riid *syscall.GUID, hPassToObject uintptr) HRESULT
}

type IWebAppDiagnosticsSetupVtbl struct {
	IUnknownVtbl
	DiagnosticsSupported         uintptr
	CreateObjectWithSiteAtWebApp uintptr
}

type IWebAppDiagnosticsSetup struct {
	IUnknown
}

func (this *IWebAppDiagnosticsSetup) Vtbl() *IWebAppDiagnosticsSetupVtbl {
	return (*IWebAppDiagnosticsSetupVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IWebAppDiagnosticsSetup) DiagnosticsSupported(pRetVal *int16) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().DiagnosticsSupported, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pRetVal)))
	return HRESULT(ret)
}

func (this *IWebAppDiagnosticsSetup) CreateObjectWithSiteAtWebApp(rclsid *syscall.GUID, dwClsContext uint32, riid *syscall.GUID, hPassToObject uintptr) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateObjectWithSiteAtWebApp, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(rclsid)), uintptr(dwClsContext), uintptr(unsafe.Pointer(riid)), hPassToObject)
	return HRESULT(ret)
}

// D5FE005B-2836-485E-B1F9-89D91AA24FD4
var IID_IRemoteDebugApplication110 = syscall.GUID{0xD5FE005B, 0x2836, 0x485E,
	[8]byte{0xB1, 0xF9, 0x89, 0xD9, 0x1A, 0xA2, 0x4F, 0xD4}}

type IRemoteDebugApplication110Interface interface {
	IUnknownInterface
	SetDebuggerOptions(mask SCRIPT_DEBUGGER_OPTIONS, value SCRIPT_DEBUGGER_OPTIONS) HRESULT
	GetCurrentDebuggerOptions(pCurrentOptions *SCRIPT_DEBUGGER_OPTIONS) HRESULT
	GetMainThread(ppThread **IRemoteDebugApplicationThread) HRESULT
}

type IRemoteDebugApplication110Vtbl struct {
	IUnknownVtbl
	SetDebuggerOptions        uintptr
	GetCurrentDebuggerOptions uintptr
	GetMainThread             uintptr
}

type IRemoteDebugApplication110 struct {
	IUnknown
}

func (this *IRemoteDebugApplication110) Vtbl() *IRemoteDebugApplication110Vtbl {
	return (*IRemoteDebugApplication110Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IRemoteDebugApplication110) SetDebuggerOptions(mask SCRIPT_DEBUGGER_OPTIONS, value SCRIPT_DEBUGGER_OPTIONS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetDebuggerOptions, uintptr(unsafe.Pointer(this)), uintptr(mask), uintptr(value))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication110) GetCurrentDebuggerOptions(pCurrentOptions *SCRIPT_DEBUGGER_OPTIONS) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCurrentDebuggerOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pCurrentOptions)))
	return HRESULT(ret)
}

func (this *IRemoteDebugApplication110) GetMainThread(ppThread **IRemoteDebugApplicationThread) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetMainThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppThread)))
	return HRESULT(ret)
}

// BDB3B5DE-89F2-4E11-84A5-97445F941C7D
var IID_IDebugApplication11032 = syscall.GUID{0xBDB3B5DE, 0x89F2, 0x4E11,
	[8]byte{0x84, 0xA5, 0x97, 0x44, 0x5F, 0x94, 0x1C, 0x7D}}

type IDebugApplication11032Interface interface {
	IRemoteDebugApplication110Interface
	SynchronousCallInMainThread(pptc *IDebugThreadCall32, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT
	AsynchronousCallInMainThread(pptc *IDebugThreadCall32, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT
	CallableWaitForHandles(handleCount uint32, pHandles *HANDLE, pIndex *uint32) HRESULT
}

type IDebugApplication11032Vtbl struct {
	IRemoteDebugApplication110Vtbl
	SynchronousCallInMainThread  uintptr
	AsynchronousCallInMainThread uintptr
	CallableWaitForHandles       uintptr
}

type IDebugApplication11032 struct {
	IRemoteDebugApplication110
}

func (this *IDebugApplication11032) Vtbl() *IDebugApplication11032Vtbl {
	return (*IDebugApplication11032Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplication11032) SynchronousCallInMainThread(pptc *IDebugThreadCall32, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SynchronousCallInMainThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pptc)), dwParam1, dwParam2, dwParam3)
	return HRESULT(ret)
}

func (this *IDebugApplication11032) AsynchronousCallInMainThread(pptc *IDebugThreadCall32, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AsynchronousCallInMainThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pptc)), dwParam1, dwParam2, dwParam3)
	return HRESULT(ret)
}

func (this *IDebugApplication11032) CallableWaitForHandles(handleCount uint32, pHandles *HANDLE, pIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallableWaitForHandles, uintptr(unsafe.Pointer(this)), uintptr(handleCount), uintptr(unsafe.Pointer(pHandles)), uintptr(unsafe.Pointer(pIndex)))
	return HRESULT(ret)
}

// 2039D958-4EEB-496A-87BB-2E5201EADEEF
var IID_IDebugApplication11064 = syscall.GUID{0x2039D958, 0x4EEB, 0x496A,
	[8]byte{0x87, 0xBB, 0x2E, 0x52, 0x01, 0xEA, 0xDE, 0xEF}}

type IDebugApplication11064Interface interface {
	IRemoteDebugApplication110Interface
	SynchronousCallInMainThread(pptc *IDebugThreadCall64, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT
	AsynchronousCallInMainThread(pptc *IDebugThreadCall64, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT
	CallableWaitForHandles(handleCount uint32, pHandles *HANDLE, pIndex *uint32) HRESULT
}

type IDebugApplication11064Vtbl struct {
	IRemoteDebugApplication110Vtbl
	SynchronousCallInMainThread  uintptr
	AsynchronousCallInMainThread uintptr
	CallableWaitForHandles       uintptr
}

type IDebugApplication11064 struct {
	IRemoteDebugApplication110
}

func (this *IDebugApplication11064) Vtbl() *IDebugApplication11064Vtbl {
	return (*IDebugApplication11064Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplication11064) SynchronousCallInMainThread(pptc *IDebugThreadCall64, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SynchronousCallInMainThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pptc)), dwParam1, dwParam2, dwParam3)
	return HRESULT(ret)
}

func (this *IDebugApplication11064) AsynchronousCallInMainThread(pptc *IDebugThreadCall64, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AsynchronousCallInMainThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pptc)), dwParam1, dwParam2, dwParam3)
	return HRESULT(ret)
}

func (this *IDebugApplication11064) CallableWaitForHandles(handleCount uint32, pHandles *HANDLE, pIndex *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CallableWaitForHandles, uintptr(unsafe.Pointer(this)), uintptr(handleCount), uintptr(unsafe.Pointer(pHandles)), uintptr(unsafe.Pointer(pIndex)))
	return HRESULT(ret)
}

// 16FF3A42-A5F5-432B-B625-8E8E16F57E15
var IID_IWebAppDiagnosticsObjectInitialization = syscall.GUID{0x16FF3A42, 0xA5F5, 0x432B,
	[8]byte{0xB6, 0x25, 0x8E, 0x8E, 0x16, 0xF5, 0x7E, 0x15}}

type IWebAppDiagnosticsObjectInitializationInterface interface {
	IUnknownInterface
	Initialize(hPassedHandle HANDLE_PTR, pDebugApplication *IUnknown) HRESULT
}

type IWebAppDiagnosticsObjectInitializationVtbl struct {
	IUnknownVtbl
	Initialize uintptr
}

type IWebAppDiagnosticsObjectInitialization struct {
	IUnknown
}

func (this *IWebAppDiagnosticsObjectInitialization) Vtbl() *IWebAppDiagnosticsObjectInitializationVtbl {
	return (*IWebAppDiagnosticsObjectInitializationVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IWebAppDiagnosticsObjectInitialization) Initialize(hPassedHandle HANDLE_PTR, pDebugApplication *IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Initialize, uintptr(unsafe.Pointer(this)), hPassedHandle, uintptr(unsafe.Pointer(pDebugApplication)))
	return HRESULT(ret)
}

// 73A3F82A-0FE9-4B33-BA3B-FE095F697E0A
var IID_IActiveScriptWinRTErrorDebug = syscall.GUID{0x73A3F82A, 0x0FE9, 0x4B33,
	[8]byte{0xBA, 0x3B, 0xFE, 0x09, 0x5F, 0x69, 0x7E, 0x0A}}

type IActiveScriptWinRTErrorDebugInterface interface {
	IActiveScriptErrorInterface
	GetRestrictedErrorString(errorString *BSTR) HRESULT
	GetRestrictedErrorReference(referenceString *BSTR) HRESULT
	GetCapabilitySid(capabilitySid *BSTR) HRESULT
}

type IActiveScriptWinRTErrorDebugVtbl struct {
	IActiveScriptErrorVtbl
	GetRestrictedErrorString    uintptr
	GetRestrictedErrorReference uintptr
	GetCapabilitySid            uintptr
}

type IActiveScriptWinRTErrorDebug struct {
	IActiveScriptError
}

func (this *IActiveScriptWinRTErrorDebug) Vtbl() *IActiveScriptWinRTErrorDebugVtbl {
	return (*IActiveScriptWinRTErrorDebugVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptWinRTErrorDebug) GetRestrictedErrorString(errorString *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRestrictedErrorString, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(errorString)))
	return HRESULT(ret)
}

func (this *IActiveScriptWinRTErrorDebug) GetRestrictedErrorReference(referenceString *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetRestrictedErrorReference, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(referenceString)))
	return HRESULT(ret)
}

func (this *IActiveScriptWinRTErrorDebug) GetCapabilitySid(capabilitySid *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCapabilitySid, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(capabilitySid)))
	return HRESULT(ret)
}

// 516E42B6-89A8-4530-937B-5F0708431442
var IID_IActiveScriptErrorDebug110 = syscall.GUID{0x516E42B6, 0x89A8, 0x4530,
	[8]byte{0x93, 0x7B, 0x5F, 0x07, 0x08, 0x43, 0x14, 0x42}}

type IActiveScriptErrorDebug110Interface interface {
	IUnknownInterface
	GetExceptionThrownKind(pExceptionKind *SCRIPT_ERROR_DEBUG_EXCEPTION_THROWN_KIND) HRESULT
}

type IActiveScriptErrorDebug110Vtbl struct {
	IUnknownVtbl
	GetExceptionThrownKind uintptr
}

type IActiveScriptErrorDebug110 struct {
	IUnknown
}

func (this *IActiveScriptErrorDebug110) Vtbl() *IActiveScriptErrorDebug110Vtbl {
	return (*IActiveScriptErrorDebug110Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IActiveScriptErrorDebug110) GetExceptionThrownKind(pExceptionKind *SCRIPT_ERROR_DEBUG_EXCEPTION_THROWN_KIND) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExceptionThrownKind, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pExceptionKind)))
	return HRESULT(ret)
}

// 84E5E468-D5DA-48A8-83F4-40366429007B
var IID_IDebugApplicationThreadEvents110 = syscall.GUID{0x84E5E468, 0xD5DA, 0x48A8,
	[8]byte{0x83, 0xF4, 0x40, 0x36, 0x64, 0x29, 0x00, 0x7B}}

type IDebugApplicationThreadEvents110Interface interface {
	IUnknownInterface
	OnSuspendForBreakPoint() HRESULT
	OnResumeFromBreakPoint() HRESULT
	OnThreadRequestComplete() HRESULT
	OnBeginThreadRequest() HRESULT
}

type IDebugApplicationThreadEvents110Vtbl struct {
	IUnknownVtbl
	OnSuspendForBreakPoint  uintptr
	OnResumeFromBreakPoint  uintptr
	OnThreadRequestComplete uintptr
	OnBeginThreadRequest    uintptr
}

type IDebugApplicationThreadEvents110 struct {
	IUnknown
}

func (this *IDebugApplicationThreadEvents110) Vtbl() *IDebugApplicationThreadEvents110Vtbl {
	return (*IDebugApplicationThreadEvents110Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplicationThreadEvents110) OnSuspendForBreakPoint() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnSuspendForBreakPoint, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThreadEvents110) OnResumeFromBreakPoint() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnResumeFromBreakPoint, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThreadEvents110) OnThreadRequestComplete() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnThreadRequestComplete, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThreadEvents110) OnBeginThreadRequest() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OnBeginThreadRequest, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 2194AC5C-6561-404A-A2E9-F57D72DE3702
var IID_IDebugApplicationThread11032 = syscall.GUID{0x2194AC5C, 0x6561, 0x404A,
	[8]byte{0xA2, 0xE9, 0xF5, 0x7D, 0x72, 0xDE, 0x37, 0x02}}

type IDebugApplicationThread11032Interface interface {
	IUnknownInterface
	GetActiveThreadRequestCount(puiThreadRequests *uint32) HRESULT
	IsSuspendedForBreakPoint(pfIsSuspended *BOOL) HRESULT
	IsThreadCallable(pfIsCallable *BOOL) HRESULT
	AsynchronousCallIntoThread(pptc *IDebugThreadCall32, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT
}

type IDebugApplicationThread11032Vtbl struct {
	IUnknownVtbl
	GetActiveThreadRequestCount uintptr
	IsSuspendedForBreakPoint    uintptr
	IsThreadCallable            uintptr
	AsynchronousCallIntoThread  uintptr
}

type IDebugApplicationThread11032 struct {
	IUnknown
}

func (this *IDebugApplicationThread11032) Vtbl() *IDebugApplicationThread11032Vtbl {
	return (*IDebugApplicationThread11032Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplicationThread11032) GetActiveThreadRequestCount(puiThreadRequests *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetActiveThreadRequestCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(puiThreadRequests)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread11032) IsSuspendedForBreakPoint(pfIsSuspended *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsSuspendedForBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pfIsSuspended)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread11032) IsThreadCallable(pfIsCallable *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsThreadCallable, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pfIsCallable)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread11032) AsynchronousCallIntoThread(pptc *IDebugThreadCall32, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AsynchronousCallIntoThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pptc)), dwParam1, dwParam2, dwParam3)
	return HRESULT(ret)
}

// 420AA4CC-EFD8-4DAC-983B-47127826917D
var IID_IDebugApplicationThread11064 = syscall.GUID{0x420AA4CC, 0xEFD8, 0x4DAC,
	[8]byte{0x98, 0x3B, 0x47, 0x12, 0x78, 0x26, 0x91, 0x7D}}

type IDebugApplicationThread11064Interface interface {
	IUnknownInterface
	GetActiveThreadRequestCount(puiThreadRequests *uint32) HRESULT
	IsSuspendedForBreakPoint(pfIsSuspended *BOOL) HRESULT
	IsThreadCallable(pfIsCallable *BOOL) HRESULT
	AsynchronousCallIntoThread(pptc *IDebugThreadCall64, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT
}

type IDebugApplicationThread11064Vtbl struct {
	IUnknownVtbl
	GetActiveThreadRequestCount uintptr
	IsSuspendedForBreakPoint    uintptr
	IsThreadCallable            uintptr
	AsynchronousCallIntoThread  uintptr
}

type IDebugApplicationThread11064 struct {
	IUnknown
}

func (this *IDebugApplicationThread11064) Vtbl() *IDebugApplicationThread11064Vtbl {
	return (*IDebugApplicationThread11064Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugApplicationThread11064) GetActiveThreadRequestCount(puiThreadRequests *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetActiveThreadRequestCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(puiThreadRequests)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread11064) IsSuspendedForBreakPoint(pfIsSuspended *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsSuspendedForBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pfIsSuspended)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread11064) IsThreadCallable(pfIsCallable *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsThreadCallable, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pfIsCallable)))
	return HRESULT(ret)
}

func (this *IDebugApplicationThread11064) AsynchronousCallIntoThread(pptc *IDebugThreadCall64, dwParam1 uintptr, dwParam2 uintptr, dwParam3 uintptr) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AsynchronousCallIntoThread, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pptc)), dwParam1, dwParam2, dwParam3)
	return HRESULT(ret)
}

// 2F69C611-6B14-47E8-9260-4BB7C52F504B
var IID_IRemoteDebugCriticalErrorEvent110 = syscall.GUID{0x2F69C611, 0x6B14, 0x47E8,
	[8]byte{0x92, 0x60, 0x4B, 0xB7, 0xC5, 0x2F, 0x50, 0x4B}}

type IRemoteDebugCriticalErrorEvent110Interface interface {
	IUnknownInterface
	GetErrorInfo(pbstrSource *BSTR, pMessageId *int32, pbstrMessage *BSTR, ppLocation **IDebugDocumentContext) HRESULT
}

type IRemoteDebugCriticalErrorEvent110Vtbl struct {
	IUnknownVtbl
	GetErrorInfo uintptr
}

type IRemoteDebugCriticalErrorEvent110 struct {
	IUnknown
}

func (this *IRemoteDebugCriticalErrorEvent110) Vtbl() *IRemoteDebugCriticalErrorEvent110Vtbl {
	return (*IRemoteDebugCriticalErrorEvent110Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IRemoteDebugCriticalErrorEvent110) GetErrorInfo(pbstrSource *BSTR, pMessageId *int32, pbstrMessage *BSTR, ppLocation **IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetErrorInfo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pbstrSource)), uintptr(unsafe.Pointer(pMessageId)), uintptr(unsafe.Pointer(pbstrMessage)), uintptr(unsafe.Pointer(ppLocation)))
	return HRESULT(ret)
}

// 5D7741B7-AF7E-4A2A-85E5-C77F4D0659FB
var IID_IScriptInvocationContext = syscall.GUID{0x5D7741B7, 0xAF7E, 0x4A2A,
	[8]byte{0x85, 0xE5, 0xC7, 0x7F, 0x4D, 0x06, 0x59, 0xFB}}

type IScriptInvocationContextInterface interface {
	IUnknownInterface
	GetContextType(pInvocationContextType *SCRIPT_INVOCATION_CONTEXT_TYPE) HRESULT
	GetContextDescription(pDescription *BSTR) HRESULT
	GetContextObject(ppContextObject **IUnknown) HRESULT
}

type IScriptInvocationContextVtbl struct {
	IUnknownVtbl
	GetContextType        uintptr
	GetContextDescription uintptr
	GetContextObject      uintptr
}

type IScriptInvocationContext struct {
	IUnknown
}

func (this *IScriptInvocationContext) Vtbl() *IScriptInvocationContextVtbl {
	return (*IScriptInvocationContextVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IScriptInvocationContext) GetContextType(pInvocationContextType *SCRIPT_INVOCATION_CONTEXT_TYPE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pInvocationContextType)))
	return HRESULT(ret)
}

func (this *IScriptInvocationContext) GetContextDescription(pDescription *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextDescription, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pDescription)))
	return HRESULT(ret)
}

func (this *IScriptInvocationContext) GetContextObject(ppContextObject **IUnknown) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetContextObject, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppContextObject)))
	return HRESULT(ret)
}

// 4B509611-B6EA-4B24-ADCB-D0CCFD1A7E33
var IID_IDebugStackFrame110 = syscall.GUID{0x4B509611, 0xB6EA, 0x4B24,
	[8]byte{0xAD, 0xCB, 0xD0, 0xCC, 0xFD, 0x1A, 0x7E, 0x33}}

type IDebugStackFrame110Interface interface {
	IDebugStackFrameInterface
	GetStackFrameType(pStackFrameKind *DEBUG_STACKFRAME_TYPE) HRESULT
	GetScriptInvocationContext(ppInvocationContext **IScriptInvocationContext) HRESULT
}

type IDebugStackFrame110Vtbl struct {
	IDebugStackFrameVtbl
	GetStackFrameType          uintptr
	GetScriptInvocationContext uintptr
}

type IDebugStackFrame110 struct {
	IDebugStackFrame
}

func (this *IDebugStackFrame110) Vtbl() *IDebugStackFrame110Vtbl {
	return (*IDebugStackFrame110Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IDebugStackFrame110) GetStackFrameType(pStackFrameKind *DEBUG_STACKFRAME_TYPE) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackFrameType, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pStackFrameKind)))
	return HRESULT(ret)
}

func (this *IDebugStackFrame110) GetScriptInvocationContext(ppInvocationContext **IScriptInvocationContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetScriptInvocationContext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppInvocationContext)))
	return HRESULT(ret)
}

// 9FF56BB6-EB89-4C0F-8823-CC2A4C0B7F26
var IID_IRemoteDebugInfoEvent110 = syscall.GUID{0x9FF56BB6, 0xEB89, 0x4C0F,
	[8]byte{0x88, 0x23, 0xCC, 0x2A, 0x4C, 0x0B, 0x7F, 0x26}}

type IRemoteDebugInfoEvent110Interface interface {
	IUnknownInterface
	GetEventInfo(pMessageType *DEBUG_EVENT_INFO_TYPE, pbstrMessage *BSTR, pbstrUrl *BSTR, ppLocation **IDebugDocumentContext) HRESULT
}

type IRemoteDebugInfoEvent110Vtbl struct {
	IUnknownVtbl
	GetEventInfo uintptr
}

type IRemoteDebugInfoEvent110 struct {
	IUnknown
}

func (this *IRemoteDebugInfoEvent110) Vtbl() *IRemoteDebugInfoEvent110Vtbl {
	return (*IRemoteDebugInfoEvent110Vtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IRemoteDebugInfoEvent110) GetEventInfo(pMessageType *DEBUG_EVENT_INFO_TYPE, pbstrMessage *BSTR, pbstrUrl *BSTR, ppLocation **IDebugDocumentContext) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetEventInfo, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pMessageType)), uintptr(unsafe.Pointer(pbstrMessage)), uintptr(unsafe.Pointer(pbstrUrl)), uintptr(unsafe.Pointer(ppLocation)))
	return HRESULT(ret)
}

// BE0E89DA-2AC5-4C04-AC5E-59956AAE3613
var IID_IJsDebug = syscall.GUID{0xBE0E89DA, 0x2AC5, 0x4C04,
	[8]byte{0xAC, 0x5E, 0x59, 0x95, 0x6A, 0xAE, 0x36, 0x13}}

type IJsDebugInterface interface {
	IUnknownInterface
	OpenVirtualProcess(processId uint32, runtimeJsBaseAddress uint64, pDataTarget *IJsDebugDataTarget, ppProcess **IJsDebugProcess) HRESULT
}

type IJsDebugVtbl struct {
	IUnknownVtbl
	OpenVirtualProcess uintptr
}

type IJsDebug struct {
	IUnknown
}

func (this *IJsDebug) Vtbl() *IJsDebugVtbl {
	return (*IJsDebugVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IJsDebug) OpenVirtualProcess(processId uint32, runtimeJsBaseAddress uint64, pDataTarget *IJsDebugDataTarget, ppProcess **IJsDebugProcess) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().OpenVirtualProcess, uintptr(unsafe.Pointer(this)), uintptr(processId), uintptr(runtimeJsBaseAddress), uintptr(unsafe.Pointer(pDataTarget)), uintptr(unsafe.Pointer(ppProcess)))
	return HRESULT(ret)
}

// 3D587168-6A2D-4041-BD3B-0DE674502862
var IID_IJsDebugProcess = syscall.GUID{0x3D587168, 0x6A2D, 0x4041,
	[8]byte{0xBD, 0x3B, 0x0D, 0xE6, 0x74, 0x50, 0x28, 0x62}}

type IJsDebugProcessInterface interface {
	IUnknownInterface
	CreateStackWalker(threadId uint32, ppStackWalker **IJsDebugStackWalker) HRESULT
	CreateBreakPoint(documentId uint64, characterOffset uint32, characterCount uint32, isEnabled BOOL, ppDebugBreakPoint **IJsDebugBreakPoint) HRESULT
	PerformAsyncBreak(threadId uint32) HRESULT
	GetExternalStepAddress(pCodeAddress *uint64) HRESULT
}

type IJsDebugProcessVtbl struct {
	IUnknownVtbl
	CreateStackWalker      uintptr
	CreateBreakPoint       uintptr
	PerformAsyncBreak      uintptr
	GetExternalStepAddress uintptr
}

type IJsDebugProcess struct {
	IUnknown
}

func (this *IJsDebugProcess) Vtbl() *IJsDebugProcessVtbl {
	return (*IJsDebugProcessVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IJsDebugProcess) CreateStackWalker(threadId uint32, ppStackWalker **IJsDebugStackWalker) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateStackWalker, uintptr(unsafe.Pointer(this)), uintptr(threadId), uintptr(unsafe.Pointer(ppStackWalker)))
	return HRESULT(ret)
}

func (this *IJsDebugProcess) CreateBreakPoint(documentId uint64, characterOffset uint32, characterCount uint32, isEnabled BOOL, ppDebugBreakPoint **IJsDebugBreakPoint) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateBreakPoint, uintptr(unsafe.Pointer(this)), uintptr(documentId), uintptr(characterOffset), uintptr(characterCount), uintptr(isEnabled), uintptr(unsafe.Pointer(ppDebugBreakPoint)))
	return HRESULT(ret)
}

func (this *IJsDebugProcess) PerformAsyncBreak(threadId uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().PerformAsyncBreak, uintptr(unsafe.Pointer(this)), uintptr(threadId))
	return HRESULT(ret)
}

func (this *IJsDebugProcess) GetExternalStepAddress(pCodeAddress *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetExternalStepAddress, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pCodeAddress)))
	return HRESULT(ret)
}

// DB24B094-73C4-456C-A4EC-E90EA00BDFE3
var IID_IJsDebugStackWalker = syscall.GUID{0xDB24B094, 0x73C4, 0x456C,
	[8]byte{0xA4, 0xEC, 0xE9, 0x0E, 0xA0, 0x0B, 0xDF, 0xE3}}

type IJsDebugStackWalkerInterface interface {
	IUnknownInterface
	GetNext(ppFrame **IJsDebugFrame) HRESULT
}

type IJsDebugStackWalkerVtbl struct {
	IUnknownVtbl
	GetNext uintptr
}

type IJsDebugStackWalker struct {
	IUnknown
}

func (this *IJsDebugStackWalker) Vtbl() *IJsDebugStackWalkerVtbl {
	return (*IJsDebugStackWalkerVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IJsDebugStackWalker) GetNext(ppFrame **IJsDebugFrame) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetNext, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppFrame)))
	return HRESULT(ret)
}

// C9196637-AB9D-44B2-BAD2-13B95B3F390E
var IID_IJsDebugFrame = syscall.GUID{0xC9196637, 0xAB9D, 0x44B2,
	[8]byte{0xBA, 0xD2, 0x13, 0xB9, 0x5B, 0x3F, 0x39, 0x0E}}

type IJsDebugFrameInterface interface {
	IUnknownInterface
	GetStackRange(pStart *uint64, pEnd *uint64) HRESULT
	GetName(pName *BSTR) HRESULT
	GetDocumentPositionWithId(pDocumentId *uint64, pCharacterOffset *uint32, pStatementCharCount *uint32) HRESULT
	GetDocumentPositionWithName(pDocumentName *BSTR, pLine *uint32, pColumn *uint32) HRESULT
	GetDebugProperty(ppDebugProperty **IJsDebugProperty) HRESULT
	GetReturnAddress(pReturnAddress *uint64) HRESULT
	Evaluate(pExpressionText PWSTR, ppDebugProperty **IJsDebugProperty, pError *BSTR) HRESULT
}

type IJsDebugFrameVtbl struct {
	IUnknownVtbl
	GetStackRange               uintptr
	GetName                     uintptr
	GetDocumentPositionWithId   uintptr
	GetDocumentPositionWithName uintptr
	GetDebugProperty            uintptr
	GetReturnAddress            uintptr
	Evaluate                    uintptr
}

type IJsDebugFrame struct {
	IUnknown
}

func (this *IJsDebugFrame) Vtbl() *IJsDebugFrameVtbl {
	return (*IJsDebugFrameVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IJsDebugFrame) GetStackRange(pStart *uint64, pEnd *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetStackRange, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pStart)), uintptr(unsafe.Pointer(pEnd)))
	return HRESULT(ret)
}

func (this *IJsDebugFrame) GetName(pName *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pName)))
	return HRESULT(ret)
}

func (this *IJsDebugFrame) GetDocumentPositionWithId(pDocumentId *uint64, pCharacterOffset *uint32, pStatementCharCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocumentPositionWithId, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pDocumentId)), uintptr(unsafe.Pointer(pCharacterOffset)), uintptr(unsafe.Pointer(pStatementCharCount)))
	return HRESULT(ret)
}

func (this *IJsDebugFrame) GetDocumentPositionWithName(pDocumentName *BSTR, pLine *uint32, pColumn *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocumentPositionWithName, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pDocumentName)), uintptr(unsafe.Pointer(pLine)), uintptr(unsafe.Pointer(pColumn)))
	return HRESULT(ret)
}

func (this *IJsDebugFrame) GetDebugProperty(ppDebugProperty **IJsDebugProperty) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDebugProperty, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(ppDebugProperty)))
	return HRESULT(ret)
}

func (this *IJsDebugFrame) GetReturnAddress(pReturnAddress *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetReturnAddress, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pReturnAddress)))
	return HRESULT(ret)
}

func (this *IJsDebugFrame) Evaluate(pExpressionText PWSTR, ppDebugProperty **IJsDebugProperty, pError *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Evaluate, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pExpressionText)), uintptr(unsafe.Pointer(ppDebugProperty)), uintptr(unsafe.Pointer(pError)))
	return HRESULT(ret)
}

// F8FFCF2B-3AA4-4320-85C3-52A312BA9633
var IID_IJsDebugProperty = syscall.GUID{0xF8FFCF2B, 0x3AA4, 0x4320,
	[8]byte{0x85, 0xC3, 0x52, 0xA3, 0x12, 0xBA, 0x96, 0x33}}

type IJsDebugPropertyInterface interface {
	IUnknownInterface
	GetPropertyInfo(nRadix uint32, pPropertyInfo *JsDebugPropertyInfo) HRESULT
	GetMembers(members JS_PROPERTY_MEMBERS, ppEnum **IJsEnumDebugProperty) HRESULT
}

type IJsDebugPropertyVtbl struct {
	IUnknownVtbl
	GetPropertyInfo uintptr
	GetMembers      uintptr
}

type IJsDebugProperty struct {
	IUnknown
}

func (this *IJsDebugProperty) Vtbl() *IJsDebugPropertyVtbl {
	return (*IJsDebugPropertyVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IJsDebugProperty) GetPropertyInfo(nRadix uint32, pPropertyInfo *JsDebugPropertyInfo) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetPropertyInfo, uintptr(unsafe.Pointer(this)), uintptr(nRadix), uintptr(unsafe.Pointer(pPropertyInfo)))
	return HRESULT(ret)
}

func (this *IJsDebugProperty) GetMembers(members JS_PROPERTY_MEMBERS, ppEnum **IJsEnumDebugProperty) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetMembers, uintptr(unsafe.Pointer(this)), uintptr(members), uintptr(unsafe.Pointer(ppEnum)))
	return HRESULT(ret)
}

// 4092432F-2F0F-4FE1-B638-5B74A52CDCBE
var IID_IJsEnumDebugProperty = syscall.GUID{0x4092432F, 0x2F0F, 0x4FE1,
	[8]byte{0xB6, 0x38, 0x5B, 0x74, 0xA5, 0x2C, 0xDC, 0xBE}}

type IJsEnumDebugPropertyInterface interface {
	IUnknownInterface
	Next(count uint32, ppDebugProperty **IJsDebugProperty, pActualCount *uint32) HRESULT
	GetCount(pCount *uint32) HRESULT
}

type IJsEnumDebugPropertyVtbl struct {
	IUnknownVtbl
	Next     uintptr
	GetCount uintptr
}

type IJsEnumDebugProperty struct {
	IUnknown
}

func (this *IJsEnumDebugProperty) Vtbl() *IJsEnumDebugPropertyVtbl {
	return (*IJsEnumDebugPropertyVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IJsEnumDebugProperty) Next(count uint32, ppDebugProperty **IJsDebugProperty, pActualCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(count), uintptr(unsafe.Pointer(ppDebugProperty)), uintptr(unsafe.Pointer(pActualCount)))
	return HRESULT(ret)
}

func (this *IJsEnumDebugProperty) GetCount(pCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetCount, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pCount)))
	return HRESULT(ret)
}

// DF6773E3-ED8D-488B-8A3E-5812577D1542
var IID_IJsDebugBreakPoint = syscall.GUID{0xDF6773E3, 0xED8D, 0x488B,
	[8]byte{0x8A, 0x3E, 0x58, 0x12, 0x57, 0x7D, 0x15, 0x42}}

type IJsDebugBreakPointInterface interface {
	IUnknownInterface
	IsEnabled(pIsEnabled *BOOL) HRESULT
	Enable() HRESULT
	Disable() HRESULT
	Delete() HRESULT
	GetDocumentPosition(pDocumentId *uint64, pCharacterOffset *uint32, pStatementCharCount *uint32) HRESULT
}

type IJsDebugBreakPointVtbl struct {
	IUnknownVtbl
	IsEnabled           uintptr
	Enable              uintptr
	Disable             uintptr
	Delete              uintptr
	GetDocumentPosition uintptr
}

type IJsDebugBreakPoint struct {
	IUnknown
}

func (this *IJsDebugBreakPoint) Vtbl() *IJsDebugBreakPointVtbl {
	return (*IJsDebugBreakPointVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IJsDebugBreakPoint) IsEnabled(pIsEnabled *BOOL) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().IsEnabled, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pIsEnabled)))
	return HRESULT(ret)
}

func (this *IJsDebugBreakPoint) Enable() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Enable, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IJsDebugBreakPoint) Disable() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Disable, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IJsDebugBreakPoint) Delete() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Delete, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

func (this *IJsDebugBreakPoint) GetDocumentPosition(pDocumentId *uint64, pCharacterOffset *uint32, pStatementCharCount *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetDocumentPosition, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(pDocumentId)), uintptr(unsafe.Pointer(pCharacterOffset)), uintptr(unsafe.Pointer(pStatementCharCount)))
	return HRESULT(ret)
}

// 5E7DA34B-FB51-4791-ABE7-CB5BDF419755
var IID_IEnumJsStackFrames = syscall.GUID{0x5E7DA34B, 0xFB51, 0x4791,
	[8]byte{0xAB, 0xE7, 0xCB, 0x5B, 0xDF, 0x41, 0x97, 0x55}}

type IEnumJsStackFramesInterface interface {
	IUnknownInterface
	Next(cFrameCount uint32, pFrames *MIDL___MIDL_itf_jscript9diag_0000_0007_0001__, pcFetched *uint32) HRESULT
	Reset() HRESULT
}

type IEnumJsStackFramesVtbl struct {
	IUnknownVtbl
	Next  uintptr
	Reset uintptr
}

type IEnumJsStackFrames struct {
	IUnknown
}

func (this *IEnumJsStackFrames) Vtbl() *IEnumJsStackFramesVtbl {
	return (*IEnumJsStackFramesVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IEnumJsStackFrames) Next(cFrameCount uint32, pFrames *MIDL___MIDL_itf_jscript9diag_0000_0007_0001__, pcFetched *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Next, uintptr(unsafe.Pointer(this)), uintptr(cFrameCount), uintptr(unsafe.Pointer(pFrames)), uintptr(unsafe.Pointer(pcFetched)))
	return HRESULT(ret)
}

func (this *IEnumJsStackFrames) Reset() HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().Reset, uintptr(unsafe.Pointer(this)))
	return HRESULT(ret)
}

// 53B28977-53A1-48E5-9000-5D0DFA893931
var IID_IJsDebugDataTarget = syscall.GUID{0x53B28977, 0x53A1, 0x48E5,
	[8]byte{0x90, 0x00, 0x5D, 0x0D, 0xFA, 0x89, 0x39, 0x31}}

type IJsDebugDataTargetInterface interface {
	IUnknownInterface
	ReadMemory(address uint64, flags JsDebugReadMemoryFlags, pBuffer *byte, size uint32, pBytesRead *uint32) HRESULT
	WriteMemory(address uint64, pMemory *byte, size uint32) HRESULT
	AllocateVirtualMemory(address uint64, size uint32, allocationType uint32, pageProtection uint32, pAllocatedAddress *uint64) HRESULT
	FreeVirtualMemory(address uint64, size uint32, freeType uint32) HRESULT
	GetTlsValue(threadId uint32, tlsIndex uint32, pValue *uint64) HRESULT
	ReadBSTR(address uint64, pString *BSTR) HRESULT
	ReadNullTerminatedString(address uint64, characterSize uint16, maxCharacters uint32, pString *BSTR) HRESULT
	CreateStackFrameEnumerator(threadId uint32, ppEnumerator **IEnumJsStackFrames) HRESULT
	GetThreadContext(threadId uint32, contextFlags uint32, contextSize uint32, pContext unsafe.Pointer) HRESULT
}

type IJsDebugDataTargetVtbl struct {
	IUnknownVtbl
	ReadMemory                 uintptr
	WriteMemory                uintptr
	AllocateVirtualMemory      uintptr
	FreeVirtualMemory          uintptr
	GetTlsValue                uintptr
	ReadBSTR                   uintptr
	ReadNullTerminatedString   uintptr
	CreateStackFrameEnumerator uintptr
	GetThreadContext           uintptr
}

type IJsDebugDataTarget struct {
	IUnknown
}

func (this *IJsDebugDataTarget) Vtbl() *IJsDebugDataTargetVtbl {
	return (*IJsDebugDataTargetVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IJsDebugDataTarget) ReadMemory(address uint64, flags JsDebugReadMemoryFlags, pBuffer *byte, size uint32, pBytesRead *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadMemory, uintptr(unsafe.Pointer(this)), uintptr(address), uintptr(flags), uintptr(unsafe.Pointer(pBuffer)), uintptr(size), uintptr(unsafe.Pointer(pBytesRead)))
	return HRESULT(ret)
}

func (this *IJsDebugDataTarget) WriteMemory(address uint64, pMemory *byte, size uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().WriteMemory, uintptr(unsafe.Pointer(this)), uintptr(address), uintptr(unsafe.Pointer(pMemory)), uintptr(size))
	return HRESULT(ret)
}

func (this *IJsDebugDataTarget) AllocateVirtualMemory(address uint64, size uint32, allocationType uint32, pageProtection uint32, pAllocatedAddress *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().AllocateVirtualMemory, uintptr(unsafe.Pointer(this)), uintptr(address), uintptr(size), uintptr(allocationType), uintptr(pageProtection), uintptr(unsafe.Pointer(pAllocatedAddress)))
	return HRESULT(ret)
}

func (this *IJsDebugDataTarget) FreeVirtualMemory(address uint64, size uint32, freeType uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().FreeVirtualMemory, uintptr(unsafe.Pointer(this)), uintptr(address), uintptr(size), uintptr(freeType))
	return HRESULT(ret)
}

func (this *IJsDebugDataTarget) GetTlsValue(threadId uint32, tlsIndex uint32, pValue *uint64) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetTlsValue, uintptr(unsafe.Pointer(this)), uintptr(threadId), uintptr(tlsIndex), uintptr(unsafe.Pointer(pValue)))
	return HRESULT(ret)
}

func (this *IJsDebugDataTarget) ReadBSTR(address uint64, pString *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadBSTR, uintptr(unsafe.Pointer(this)), uintptr(address), uintptr(unsafe.Pointer(pString)))
	return HRESULT(ret)
}

func (this *IJsDebugDataTarget) ReadNullTerminatedString(address uint64, characterSize uint16, maxCharacters uint32, pString *BSTR) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().ReadNullTerminatedString, uintptr(unsafe.Pointer(this)), uintptr(address), uintptr(characterSize), uintptr(maxCharacters), uintptr(unsafe.Pointer(pString)))
	return HRESULT(ret)
}

func (this *IJsDebugDataTarget) CreateStackFrameEnumerator(threadId uint32, ppEnumerator **IEnumJsStackFrames) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().CreateStackFrameEnumerator, uintptr(unsafe.Pointer(this)), uintptr(threadId), uintptr(unsafe.Pointer(ppEnumerator)))
	return HRESULT(ret)
}

func (this *IJsDebugDataTarget) GetThreadContext(threadId uint32, contextFlags uint32, contextSize uint32, pContext unsafe.Pointer) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetThreadContext, uintptr(unsafe.Pointer(this)), uintptr(threadId), uintptr(contextFlags), uintptr(contextSize), uintptr(pContext))
	return HRESULT(ret)
}

// CB5BDC81-93C1-11CF-8F20-00805F2CD064
var IID_IObjectSafety = syscall.GUID{0xCB5BDC81, 0x93C1, 0x11CF,
	[8]byte{0x8F, 0x20, 0x00, 0x80, 0x5F, 0x2C, 0xD0, 0x64}}

type IObjectSafetyInterface interface {
	IUnknownInterface
	GetInterfaceSafetyOptions(riid *syscall.GUID, pdwSupportedOptions *uint32, pdwEnabledOptions *uint32) HRESULT
	SetInterfaceSafetyOptions(riid *syscall.GUID, dwOptionSetMask uint32, dwEnabledOptions uint32) HRESULT
}

type IObjectSafetyVtbl struct {
	IUnknownVtbl
	GetInterfaceSafetyOptions uintptr
	SetInterfaceSafetyOptions uintptr
}

type IObjectSafety struct {
	IUnknown
}

func (this *IObjectSafety) Vtbl() *IObjectSafetyVtbl {
	return (*IObjectSafetyVtbl)(unsafe.Pointer(this.IUnknown.LpVtbl))
}

func (this *IObjectSafety) GetInterfaceSafetyOptions(riid *syscall.GUID, pdwSupportedOptions *uint32, pdwEnabledOptions *uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().GetInterfaceSafetyOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(pdwSupportedOptions)), uintptr(unsafe.Pointer(pdwEnabledOptions)))
	return HRESULT(ret)
}

func (this *IObjectSafety) SetInterfaceSafetyOptions(riid *syscall.GUID, dwOptionSetMask uint32, dwEnabledOptions uint32) HRESULT {
	ret, _, _ := syscall.SyscallN(this.Vtbl().SetInterfaceSafetyOptions, uintptr(unsafe.Pointer(this)), uintptr(unsafe.Pointer(riid)), uintptr(dwOptionSetMask), uintptr(dwEnabledOptions))
	return HRESULT(ret)
}

var (
	pReadProcessMemory               uintptr
	pWriteProcessMemory              uintptr
	pGetThreadContext                uintptr
	pSetThreadContext                uintptr
	pFlushInstructionCache           uintptr
	pWow64GetThreadContext           uintptr
	pWow64SetThreadContext           uintptr
	pRtlCaptureStackBackTrace        uintptr
	pRtlCaptureContext               uintptr
	pRtlCaptureContext2              uintptr
	pRtlUnwind                       uintptr
	pRtlAddFunctionTable             uintptr
	pRtlDeleteFunctionTable          uintptr
	pRtlInstallFunctionTableCallback uintptr
	pRtlLookupFunctionEntry          uintptr
	pRtlRestoreContext               uintptr
	pRtlUnwindEx                     uintptr
	pRtlVirtualUnwind                uintptr
	pRtlRaiseException               uintptr
	pRtlPcToFileHeader               uintptr
	pIsDebuggerPresent               uintptr
	pDebugBreak                      uintptr
	pOutputDebugStringA              uintptr
	pOutputDebugStringW              uintptr
	pContinueDebugEvent              uintptr
	pWaitForDebugEvent               uintptr
	pDebugActiveProcess              uintptr
	pDebugActiveProcessStop          uintptr
	pCheckRemoteDebuggerPresent      uintptr
	pWaitForDebugEventEx             uintptr
	pEncodePointer                   uintptr
	pDecodePointer                   uintptr
	pEncodeSystemPointer             uintptr
	pDecodeSystemPointer             uintptr
	pBeep                            uintptr
	pRaiseException                  uintptr
	pUnhandledExceptionFilter        uintptr
	pSetUnhandledExceptionFilter     uintptr
	pGetErrorMode                    uintptr
	pSetErrorMode                    uintptr
	pAddVectoredExceptionHandler     uintptr
	pRemoveVectoredExceptionHandler  uintptr
	pAddVectoredContinueHandler      uintptr
	pRemoveVectoredContinueHandler   uintptr
	pRaiseFailFastException          uintptr
	pFatalAppExitA                   uintptr
	pFatalAppExitW                   uintptr
	pGetThreadErrorMode              uintptr
	pSetThreadErrorMode              uintptr
	pOpenThreadWaitChainSession      uintptr
	pCloseThreadWaitChainSession     uintptr
	pGetThreadWaitChain              uintptr
	pRegisterWaitChainCOMCallback    uintptr
	pMessageBeep                     uintptr
	pFatalExit                       uintptr
	pGetThreadSelectorEntry          uintptr
	pWow64GetThreadSelectorEntry     uintptr
	pDebugSetProcessKillOnExit       uintptr
	pDebugBreakProcess               uintptr
	pFormatMessageA                  uintptr
	pFormatMessageW                  uintptr
	pCopyContext                     uintptr
	pInitializeContext               uintptr
	pInitializeContext2              uintptr
	pGetEnabledXStateFeatures        uintptr
	pGetXStateFeaturesMask           uintptr
	pLocateXStateFeature             uintptr
	pSetXStateFeaturesMask           uintptr
)

func ReadProcessMemory(hProcess HANDLE, lpBaseAddress unsafe.Pointer, lpBuffer unsafe.Pointer, nSize uintptr, lpNumberOfBytesRead *uintptr) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pReadProcessMemory, libKernel32, "ReadProcessMemory")
	ret, _, err := syscall.SyscallN(addr, hProcess, uintptr(lpBaseAddress), uintptr(lpBuffer), nSize, uintptr(unsafe.Pointer(lpNumberOfBytesRead)))
	return BOOL(ret), WIN32_ERROR(err)
}

func WriteProcessMemory(hProcess HANDLE, lpBaseAddress unsafe.Pointer, lpBuffer unsafe.Pointer, nSize uintptr, lpNumberOfBytesWritten *uintptr) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pWriteProcessMemory, libKernel32, "WriteProcessMemory")
	ret, _, err := syscall.SyscallN(addr, hProcess, uintptr(lpBaseAddress), uintptr(lpBuffer), nSize, uintptr(unsafe.Pointer(lpNumberOfBytesWritten)))
	return BOOL(ret), WIN32_ERROR(err)
}

func GetThreadContext(hThread HANDLE, lpContext *CONTEXT) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pGetThreadContext, libKernel32, "GetThreadContext")
	ret, _, err := syscall.SyscallN(addr, hThread, uintptr(unsafe.Pointer(lpContext)))
	return BOOL(ret), WIN32_ERROR(err)
}

func SetThreadContext(hThread HANDLE, lpContext *CONTEXT) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pSetThreadContext, libKernel32, "SetThreadContext")
	ret, _, err := syscall.SyscallN(addr, hThread, uintptr(unsafe.Pointer(lpContext)))
	return BOOL(ret), WIN32_ERROR(err)
}

func FlushInstructionCache(hProcess HANDLE, lpBaseAddress unsafe.Pointer, dwSize uintptr) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pFlushInstructionCache, libKernel32, "FlushInstructionCache")
	ret, _, err := syscall.SyscallN(addr, hProcess, uintptr(lpBaseAddress), dwSize)
	return BOOL(ret), WIN32_ERROR(err)
}

func Wow64GetThreadContext(hThread HANDLE, lpContext *WOW64_CONTEXT) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pWow64GetThreadContext, libKernel32, "Wow64GetThreadContext")
	ret, _, err := syscall.SyscallN(addr, hThread, uintptr(unsafe.Pointer(lpContext)))
	return BOOL(ret), WIN32_ERROR(err)
}

func Wow64SetThreadContext(hThread HANDLE, lpContext *WOW64_CONTEXT) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pWow64SetThreadContext, libKernel32, "Wow64SetThreadContext")
	ret, _, err := syscall.SyscallN(addr, hThread, uintptr(unsafe.Pointer(lpContext)))
	return BOOL(ret), WIN32_ERROR(err)
}

func RtlCaptureStackBackTrace(FramesToSkip uint32, FramesToCapture uint32, BackTrace unsafe.Pointer, BackTraceHash *uint32) uint16 {
	addr := lazyAddr(&pRtlCaptureStackBackTrace, libKernel32, "RtlCaptureStackBackTrace")
	ret, _, _ := syscall.SyscallN(addr, uintptr(FramesToSkip), uintptr(FramesToCapture), uintptr(BackTrace), uintptr(unsafe.Pointer(BackTraceHash)))
	return uint16(ret)
}

func RtlCaptureContext(ContextRecord *CONTEXT) {
	addr := lazyAddr(&pRtlCaptureContext, libKernel32, "RtlCaptureContext")
	syscall.SyscallN(addr, uintptr(unsafe.Pointer(ContextRecord)))
}

func RtlCaptureContext2(ContextRecord *CONTEXT) {
	addr := lazyAddr(&pRtlCaptureContext2, libKernel32, "RtlCaptureContext2")
	syscall.SyscallN(addr, uintptr(unsafe.Pointer(ContextRecord)))
}

func RtlUnwind(TargetFrame unsafe.Pointer, TargetIp unsafe.Pointer, ExceptionRecord *EXCEPTION_RECORD, ReturnValue unsafe.Pointer) {
	addr := lazyAddr(&pRtlUnwind, libKernel32, "RtlUnwind")
	syscall.SyscallN(addr, uintptr(TargetFrame), uintptr(TargetIp), uintptr(unsafe.Pointer(ExceptionRecord)), uintptr(ReturnValue))
}

func RtlAddFunctionTable(FunctionTable *IMAGE_RUNTIME_FUNCTION_ENTRY, EntryCount uint32, BaseAddress uint64) BOOLEAN {
	addr := lazyAddr(&pRtlAddFunctionTable, libKernel32, "RtlAddFunctionTable")
	ret, _, _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(FunctionTable)), uintptr(EntryCount), uintptr(BaseAddress))
	return BOOLEAN(ret)
}

func RtlDeleteFunctionTable(FunctionTable *IMAGE_RUNTIME_FUNCTION_ENTRY) BOOLEAN {
	addr := lazyAddr(&pRtlDeleteFunctionTable, libKernel32, "RtlDeleteFunctionTable")
	ret, _, _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(FunctionTable)))
	return BOOLEAN(ret)
}

func RtlInstallFunctionTableCallback(TableIdentifier uint64, BaseAddress uint64, Length uint32, Callback PGET_RUNTIME_FUNCTION_CALLBACK, Context unsafe.Pointer, OutOfProcessCallbackDll PWSTR) BOOLEAN {
	addr := lazyAddr(&pRtlInstallFunctionTableCallback, libKernel32, "RtlInstallFunctionTableCallback")
	ret, _, _ := syscall.SyscallN(addr, uintptr(TableIdentifier), uintptr(BaseAddress), uintptr(Length), Callback, uintptr(Context), uintptr(unsafe.Pointer(OutOfProcessCallbackDll)))
	return BOOLEAN(ret)
}

func RtlLookupFunctionEntry(ControlPc uint64, ImageBase *uint64, HistoryTable *UNWIND_HISTORY_TABLE) *IMAGE_RUNTIME_FUNCTION_ENTRY {
	addr := lazyAddr(&pRtlLookupFunctionEntry, libKernel32, "RtlLookupFunctionEntry")
	ret, _, _ := syscall.SyscallN(addr, uintptr(ControlPc), uintptr(unsafe.Pointer(ImageBase)), uintptr(unsafe.Pointer(HistoryTable)))
	return (*IMAGE_RUNTIME_FUNCTION_ENTRY)(unsafe.Pointer(ret))
}

func RtlRestoreContext(ContextRecord *CONTEXT, ExceptionRecord *EXCEPTION_RECORD) {
	addr := lazyAddr(&pRtlRestoreContext, libKernel32, "RtlRestoreContext")
	syscall.SyscallN(addr, uintptr(unsafe.Pointer(ContextRecord)), uintptr(unsafe.Pointer(ExceptionRecord)))
}

func RtlUnwindEx(TargetFrame unsafe.Pointer, TargetIp unsafe.Pointer, ExceptionRecord *EXCEPTION_RECORD, ReturnValue unsafe.Pointer, ContextRecord *CONTEXT, HistoryTable *UNWIND_HISTORY_TABLE) {
	addr := lazyAddr(&pRtlUnwindEx, libKernel32, "RtlUnwindEx")
	syscall.SyscallN(addr, uintptr(TargetFrame), uintptr(TargetIp), uintptr(unsafe.Pointer(ExceptionRecord)), uintptr(ReturnValue), uintptr(unsafe.Pointer(ContextRecord)), uintptr(unsafe.Pointer(HistoryTable)))
}

func RtlVirtualUnwind(HandlerType RTL_VIRTUAL_UNWIND_HANDLER_TYPE, ImageBase uint64, ControlPc uint64, FunctionEntry *IMAGE_RUNTIME_FUNCTION_ENTRY, ContextRecord *CONTEXT, HandlerData unsafe.Pointer, EstablisherFrame *uint64, ContextPointers *KNONVOLATILE_CONTEXT_POINTERS) EXCEPTION_ROUTINE {
	addr := lazyAddr(&pRtlVirtualUnwind, libKernel32, "RtlVirtualUnwind")
	ret, _, _ := syscall.SyscallN(addr, uintptr(HandlerType), uintptr(ImageBase), uintptr(ControlPc), uintptr(unsafe.Pointer(FunctionEntry)), uintptr(unsafe.Pointer(ContextRecord)), uintptr(HandlerData), uintptr(unsafe.Pointer(EstablisherFrame)), uintptr(unsafe.Pointer(ContextPointers)))
	return EXCEPTION_ROUTINE(ret)
}

func RtlRaiseException(ExceptionRecord *EXCEPTION_RECORD) {
	addr := lazyAddr(&pRtlRaiseException, libKernel32, "RtlRaiseException")
	syscall.SyscallN(addr, uintptr(unsafe.Pointer(ExceptionRecord)))
}

func RtlPcToFileHeader(PcValue unsafe.Pointer, BaseOfImage unsafe.Pointer) unsafe.Pointer {
	addr := lazyAddr(&pRtlPcToFileHeader, libKernel32, "RtlPcToFileHeader")
	ret, _, _ := syscall.SyscallN(addr, uintptr(PcValue), uintptr(BaseOfImage))
	return (unsafe.Pointer)(ret)
}

func IsDebuggerPresent() BOOL {
	addr := lazyAddr(&pIsDebuggerPresent, libKernel32, "IsDebuggerPresent")
	ret, _, _ := syscall.SyscallN(addr)
	return BOOL(ret)
}

func DebugBreak() {
	addr := lazyAddr(&pDebugBreak, libKernel32, "DebugBreak")
	syscall.SyscallN(addr)
}

func OutputDebugStringA(lpOutputString PSTR) {
	addr := lazyAddr(&pOutputDebugStringA, libKernel32, "OutputDebugStringA")
	syscall.SyscallN(addr, uintptr(unsafe.Pointer(lpOutputString)))
}

var OutputDebugString = OutputDebugStringW

func OutputDebugStringW(lpOutputString PWSTR) {
	addr := lazyAddr(&pOutputDebugStringW, libKernel32, "OutputDebugStringW")
	syscall.SyscallN(addr, uintptr(unsafe.Pointer(lpOutputString)))
}

func ContinueDebugEvent(dwProcessId uint32, dwThreadId uint32, dwContinueStatus uint32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pContinueDebugEvent, libKernel32, "ContinueDebugEvent")
	ret, _, err := syscall.SyscallN(addr, uintptr(dwProcessId), uintptr(dwThreadId), uintptr(dwContinueStatus))
	return BOOL(ret), WIN32_ERROR(err)
}

func WaitForDebugEvent(lpDebugEvent *DEBUG_EVENT, dwMilliseconds uint32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pWaitForDebugEvent, libKernel32, "WaitForDebugEvent")
	ret, _, err := syscall.SyscallN(addr, uintptr(unsafe.Pointer(lpDebugEvent)), uintptr(dwMilliseconds))
	return BOOL(ret), WIN32_ERROR(err)
}

func DebugActiveProcess(dwProcessId uint32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pDebugActiveProcess, libKernel32, "DebugActiveProcess")
	ret, _, err := syscall.SyscallN(addr, uintptr(dwProcessId))
	return BOOL(ret), WIN32_ERROR(err)
}

func DebugActiveProcessStop(dwProcessId uint32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pDebugActiveProcessStop, libKernel32, "DebugActiveProcessStop")
	ret, _, err := syscall.SyscallN(addr, uintptr(dwProcessId))
	return BOOL(ret), WIN32_ERROR(err)
}

func CheckRemoteDebuggerPresent(hProcess HANDLE, pbDebuggerPresent *BOOL) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pCheckRemoteDebuggerPresent, libKernel32, "CheckRemoteDebuggerPresent")
	ret, _, err := syscall.SyscallN(addr, hProcess, uintptr(unsafe.Pointer(pbDebuggerPresent)))
	return BOOL(ret), WIN32_ERROR(err)
}

func WaitForDebugEventEx(lpDebugEvent *DEBUG_EVENT, dwMilliseconds uint32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pWaitForDebugEventEx, libKernel32, "WaitForDebugEventEx")
	ret, _, err := syscall.SyscallN(addr, uintptr(unsafe.Pointer(lpDebugEvent)), uintptr(dwMilliseconds))
	return BOOL(ret), WIN32_ERROR(err)
}

func EncodePointer(Ptr unsafe.Pointer) unsafe.Pointer {
	addr := lazyAddr(&pEncodePointer, libKernel32, "EncodePointer")
	ret, _, _ := syscall.SyscallN(addr, uintptr(Ptr))
	return (unsafe.Pointer)(ret)
}

func DecodePointer(Ptr unsafe.Pointer) unsafe.Pointer {
	addr := lazyAddr(&pDecodePointer, libKernel32, "DecodePointer")
	ret, _, _ := syscall.SyscallN(addr, uintptr(Ptr))
	return (unsafe.Pointer)(ret)
}

func EncodeSystemPointer(Ptr unsafe.Pointer) unsafe.Pointer {
	addr := lazyAddr(&pEncodeSystemPointer, libKernel32, "EncodeSystemPointer")
	ret, _, _ := syscall.SyscallN(addr, uintptr(Ptr))
	return (unsafe.Pointer)(ret)
}

func DecodeSystemPointer(Ptr unsafe.Pointer) unsafe.Pointer {
	addr := lazyAddr(&pDecodeSystemPointer, libKernel32, "DecodeSystemPointer")
	ret, _, _ := syscall.SyscallN(addr, uintptr(Ptr))
	return (unsafe.Pointer)(ret)
}

func Beep(dwFreq uint32, dwDuration uint32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pBeep, libKernel32, "Beep")
	ret, _, err := syscall.SyscallN(addr, uintptr(dwFreq), uintptr(dwDuration))
	return BOOL(ret), WIN32_ERROR(err)
}

func RaiseException(dwExceptionCode uint32, dwExceptionFlags uint32, nNumberOfArguments uint32, lpArguments *uintptr) {
	addr := lazyAddr(&pRaiseException, libKernel32, "RaiseException")
	syscall.SyscallN(addr, uintptr(dwExceptionCode), uintptr(dwExceptionFlags), uintptr(nNumberOfArguments), uintptr(unsafe.Pointer(lpArguments)))
}

func UnhandledExceptionFilter(ExceptionInfo *EXCEPTION_POINTERS) int32 {
	addr := lazyAddr(&pUnhandledExceptionFilter, libKernel32, "UnhandledExceptionFilter")
	ret, _, _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(ExceptionInfo)))
	return int32(ret)
}

func SetUnhandledExceptionFilter(lpTopLevelExceptionFilter LPTOP_LEVEL_EXCEPTION_FILTER) LPTOP_LEVEL_EXCEPTION_FILTER {
	addr := lazyAddr(&pSetUnhandledExceptionFilter, libKernel32, "SetUnhandledExceptionFilter")
	ret, _, _ := syscall.SyscallN(addr, lpTopLevelExceptionFilter)
	return LPTOP_LEVEL_EXCEPTION_FILTER(ret)
}

func GetErrorMode() uint32 {
	addr := lazyAddr(&pGetErrorMode, libKernel32, "GetErrorMode")
	ret, _, _ := syscall.SyscallN(addr)
	return uint32(ret)
}

func SetErrorMode(uMode THREAD_ERROR_MODE) uint32 {
	addr := lazyAddr(&pSetErrorMode, libKernel32, "SetErrorMode")
	ret, _, _ := syscall.SyscallN(addr, uintptr(uMode))
	return uint32(ret)
}

func AddVectoredExceptionHandler(First uint32, Handler PVECTORED_EXCEPTION_HANDLER) unsafe.Pointer {
	addr := lazyAddr(&pAddVectoredExceptionHandler, libKernel32, "AddVectoredExceptionHandler")
	ret, _, _ := syscall.SyscallN(addr, uintptr(First), Handler)
	return (unsafe.Pointer)(ret)
}

func RemoveVectoredExceptionHandler(Handle unsafe.Pointer) uint32 {
	addr := lazyAddr(&pRemoveVectoredExceptionHandler, libKernel32, "RemoveVectoredExceptionHandler")
	ret, _, _ := syscall.SyscallN(addr, uintptr(Handle))
	return uint32(ret)
}

func AddVectoredContinueHandler(First uint32, Handler PVECTORED_EXCEPTION_HANDLER) unsafe.Pointer {
	addr := lazyAddr(&pAddVectoredContinueHandler, libKernel32, "AddVectoredContinueHandler")
	ret, _, _ := syscall.SyscallN(addr, uintptr(First), Handler)
	return (unsafe.Pointer)(ret)
}

func RemoveVectoredContinueHandler(Handle unsafe.Pointer) uint32 {
	addr := lazyAddr(&pRemoveVectoredContinueHandler, libKernel32, "RemoveVectoredContinueHandler")
	ret, _, _ := syscall.SyscallN(addr, uintptr(Handle))
	return uint32(ret)
}

func RaiseFailFastException(pExceptionRecord *EXCEPTION_RECORD, pContextRecord *CONTEXT, dwFlags uint32) {
	addr := lazyAddr(&pRaiseFailFastException, libKernel32, "RaiseFailFastException")
	syscall.SyscallN(addr, uintptr(unsafe.Pointer(pExceptionRecord)), uintptr(unsafe.Pointer(pContextRecord)), uintptr(dwFlags))
}

func FatalAppExitA(uAction uint32, lpMessageText PSTR) {
	addr := lazyAddr(&pFatalAppExitA, libKernel32, "FatalAppExitA")
	syscall.SyscallN(addr, uintptr(uAction), uintptr(unsafe.Pointer(lpMessageText)))
}

var FatalAppExit = FatalAppExitW

func FatalAppExitW(uAction uint32, lpMessageText PWSTR) {
	addr := lazyAddr(&pFatalAppExitW, libKernel32, "FatalAppExitW")
	syscall.SyscallN(addr, uintptr(uAction), uintptr(unsafe.Pointer(lpMessageText)))
}

func GetThreadErrorMode() uint32 {
	addr := lazyAddr(&pGetThreadErrorMode, libKernel32, "GetThreadErrorMode")
	ret, _, _ := syscall.SyscallN(addr)
	return uint32(ret)
}

func SetThreadErrorMode(dwNewMode THREAD_ERROR_MODE, lpOldMode *THREAD_ERROR_MODE) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pSetThreadErrorMode, libKernel32, "SetThreadErrorMode")
	ret, _, err := syscall.SyscallN(addr, uintptr(dwNewMode), uintptr(unsafe.Pointer(lpOldMode)))
	return BOOL(ret), WIN32_ERROR(err)
}

func OpenThreadWaitChainSession(Flags OPEN_THREAD_WAIT_CHAIN_SESSION_FLAGS, callback PWAITCHAINCALLBACK) (unsafe.Pointer, WIN32_ERROR) {
	addr := lazyAddr(&pOpenThreadWaitChainSession, libAdvapi32, "OpenThreadWaitChainSession")
	ret, _, err := syscall.SyscallN(addr, uintptr(Flags), callback)
	return (unsafe.Pointer)(ret), WIN32_ERROR(err)
}

func CloseThreadWaitChainSession(WctHandle unsafe.Pointer) {
	addr := lazyAddr(&pCloseThreadWaitChainSession, libAdvapi32, "CloseThreadWaitChainSession")
	syscall.SyscallN(addr, uintptr(WctHandle))
}

func GetThreadWaitChain(WctHandle unsafe.Pointer, Context uintptr, Flags WAIT_CHAIN_THREAD_OPTIONS, ThreadId uint32, NodeCount *uint32, NodeInfoArray *WAITCHAIN_NODE_INFO, IsCycle *int32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pGetThreadWaitChain, libAdvapi32, "GetThreadWaitChain")
	ret, _, err := syscall.SyscallN(addr, uintptr(WctHandle), Context, uintptr(Flags), uintptr(ThreadId), uintptr(unsafe.Pointer(NodeCount)), uintptr(unsafe.Pointer(NodeInfoArray)), uintptr(unsafe.Pointer(IsCycle)))
	return BOOL(ret), WIN32_ERROR(err)
}

func RegisterWaitChainCOMCallback(CallStateCallback PCOGETCALLSTATE, ActivationStateCallback PCOGETACTIVATIONSTATE) {
	addr := lazyAddr(&pRegisterWaitChainCOMCallback, libAdvapi32, "RegisterWaitChainCOMCallback")
	syscall.SyscallN(addr, CallStateCallback, ActivationStateCallback)
}

func MessageBeep(uType uint32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pMessageBeep, libUser32, "MessageBeep")
	ret, _, err := syscall.SyscallN(addr, uintptr(uType))
	return BOOL(ret), WIN32_ERROR(err)
}

func FatalExit(ExitCode int32) {
	addr := lazyAddr(&pFatalExit, libKernel32, "FatalExit")
	syscall.SyscallN(addr, uintptr(ExitCode))
}

func GetThreadSelectorEntry(hThread HANDLE, dwSelector uint32, lpSelectorEntry *LDT_ENTRY) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pGetThreadSelectorEntry, libKernel32, "GetThreadSelectorEntry")
	ret, _, err := syscall.SyscallN(addr, hThread, uintptr(dwSelector), uintptr(unsafe.Pointer(lpSelectorEntry)))
	return BOOL(ret), WIN32_ERROR(err)
}

func Wow64GetThreadSelectorEntry(hThread HANDLE, dwSelector uint32, lpSelectorEntry *WOW64_LDT_ENTRY) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pWow64GetThreadSelectorEntry, libKernel32, "Wow64GetThreadSelectorEntry")
	ret, _, err := syscall.SyscallN(addr, hThread, uintptr(dwSelector), uintptr(unsafe.Pointer(lpSelectorEntry)))
	return BOOL(ret), WIN32_ERROR(err)
}

func DebugSetProcessKillOnExit(KillOnExit BOOL) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pDebugSetProcessKillOnExit, libKernel32, "DebugSetProcessKillOnExit")
	ret, _, err := syscall.SyscallN(addr, uintptr(KillOnExit))
	return BOOL(ret), WIN32_ERROR(err)
}

func DebugBreakProcess(Process HANDLE) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pDebugBreakProcess, libKernel32, "DebugBreakProcess")
	ret, _, err := syscall.SyscallN(addr, Process)
	return BOOL(ret), WIN32_ERROR(err)
}

func FormatMessageA(dwFlags FORMAT_MESSAGE_OPTIONS, lpSource unsafe.Pointer, dwMessageId uint32, dwLanguageId uint32, lpBuffer PSTR, nSize uint32, Arguments **int8) (uint32, WIN32_ERROR) {
	addr := lazyAddr(&pFormatMessageA, libKernel32, "FormatMessageA")
	ret, _, err := syscall.SyscallN(addr, uintptr(dwFlags), uintptr(lpSource), uintptr(dwMessageId), uintptr(dwLanguageId), uintptr(unsafe.Pointer(lpBuffer)), uintptr(nSize), uintptr(unsafe.Pointer(Arguments)))
	return uint32(ret), WIN32_ERROR(err)
}

var FormatMessage = FormatMessageW

func FormatMessageW(dwFlags FORMAT_MESSAGE_OPTIONS, lpSource unsafe.Pointer, dwMessageId uint32, dwLanguageId uint32, lpBuffer PWSTR, nSize uint32, Arguments **int8) (uint32, WIN32_ERROR) {
	addr := lazyAddr(&pFormatMessageW, libKernel32, "FormatMessageW")
	ret, _, err := syscall.SyscallN(addr, uintptr(dwFlags), uintptr(lpSource), uintptr(dwMessageId), uintptr(dwLanguageId), uintptr(unsafe.Pointer(lpBuffer)), uintptr(nSize), uintptr(unsafe.Pointer(Arguments)))
	return uint32(ret), WIN32_ERROR(err)
}

func CopyContext(Destination *CONTEXT, ContextFlags uint32, Source *CONTEXT) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pCopyContext, libKernel32, "CopyContext")
	ret, _, err := syscall.SyscallN(addr, uintptr(unsafe.Pointer(Destination)), uintptr(ContextFlags), uintptr(unsafe.Pointer(Source)))
	return BOOL(ret), WIN32_ERROR(err)
}

func InitializeContext(Buffer unsafe.Pointer, ContextFlags uint32, Context **CONTEXT, ContextLength *uint32) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pInitializeContext, libKernel32, "InitializeContext")
	ret, _, err := syscall.SyscallN(addr, uintptr(Buffer), uintptr(ContextFlags), uintptr(unsafe.Pointer(Context)), uintptr(unsafe.Pointer(ContextLength)))
	return BOOL(ret), WIN32_ERROR(err)
}

func InitializeContext2(Buffer unsafe.Pointer, ContextFlags uint32, Context **CONTEXT, ContextLength *uint32, XStateCompactionMask uint64) (BOOL, WIN32_ERROR) {
	addr := lazyAddr(&pInitializeContext2, libKernel32, "InitializeContext2")
	ret, _, err := syscall.SyscallN(addr, uintptr(Buffer), uintptr(ContextFlags), uintptr(unsafe.Pointer(Context)), uintptr(unsafe.Pointer(ContextLength)), uintptr(XStateCompactionMask))
	return BOOL(ret), WIN32_ERROR(err)
}

func GetEnabledXStateFeatures() uint64 {
	addr := lazyAddr(&pGetEnabledXStateFeatures, libKernel32, "GetEnabledXStateFeatures")
	ret, _, _ := syscall.SyscallN(addr)
	return uint64(ret)
}

func GetXStateFeaturesMask(Context *CONTEXT, FeatureMask *uint64) BOOL {
	addr := lazyAddr(&pGetXStateFeaturesMask, libKernel32, "GetXStateFeaturesMask")
	ret, _, _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(Context)), uintptr(unsafe.Pointer(FeatureMask)))
	return BOOL(ret)
}

func LocateXStateFeature(Context *CONTEXT, FeatureId uint32, Length *uint32) unsafe.Pointer {
	addr := lazyAddr(&pLocateXStateFeature, libKernel32, "LocateXStateFeature")
	ret, _, _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(Context)), uintptr(FeatureId), uintptr(unsafe.Pointer(Length)))
	return (unsafe.Pointer)(ret)
}

func SetXStateFeaturesMask(Context *CONTEXT, FeatureMask uint64) BOOL {
	addr := lazyAddr(&pSetXStateFeaturesMask, libKernel32, "SetXStateFeaturesMask")
	ret, _, _ := syscall.SyscallN(addr, uintptr(unsafe.Pointer(Context)), uintptr(FeatureMask))
	return BOOL(ret)
}
